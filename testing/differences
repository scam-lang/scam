OLD vs. NEW
adders.s
------------------------------------------
112,132c112,3365
< a       b       c
< 0       0       0
< 0       1       0
< 1       0       0
< 1       1       1
< 
< a       b       sum     carry
< 0       0       0       0
< 0       1       1       0
< 1       0       1       0
< 1       1       0       1
< 
< a       b       c-in    sum     c-out
< 0       0       0       0       0
< 0       0       1       1       0
< 0       1       0       1       0
< 0       1       1       0       1
< 1       0       0       1       0
< 1       0       1       0       1
< 1       1       0       0       1
< 1       1       1       1       1
---
> def args: : (<object 4799> (else #t))
> def args: : (<object 4799> (__builtin __context))
> def args: : (<object 4799> (__main-lib this))
> def args: : (<object 4799> (nil? null?))
> def args: : (<object 4799> ((valid? x) (not (null? x))))
> def args: : (<object 4799> ((head x) (car x)))
> def args: : (<object 4799> ((tail x) (cdr x)))
> def args: : (<object 4799> ((join x y) (cons x y)))
> def args: : (<object 4799> (^ expt))
> def args: : (<object 4799> (** expt))
> def args: : (<object 4799> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4799> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4799> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4799> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4799> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4799> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4799> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4799> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4799> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4799> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4799> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4799> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4799> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4799> (__type type))
> def args: : (<object 4799> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4799> ((class x) (get (quote __label) x)))
> def args: : (<object 4799> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4799> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4799> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4799> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4799> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4799> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4799> (function? closure?))
> def args: : (<object 4799> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4799> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4799> ((dec x) (- x 1)))
> def args: : (<object 4799> ((inc x) (+ x 1)))
> def args: : (<object 4799> (__display display))
> def args: : (<object 4799> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4799> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4799> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4799> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4799> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4799> ((negative? n) (< n 0)))
> def args: : (<object 4799> ((positive? n) (> n 0)))
> def args: : (<object 4799> ((newline) (println)))
> def args: : (<object 4799> (remainder %))
> def args: : (<object 4799> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4799> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4799> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4799> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4799> (integer int))
> def args: : (<object 4799> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4799> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4799> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4799> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4799> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4799> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4799> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4799> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4799> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4799> ((true? x) x))
> def args: : (<object 4799> ((false? x) (not x)))
> def args: : (<object 4799> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4799> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4799> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4799> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4799> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4799> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4799> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4799> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4799> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4799> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4799> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4799> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4799> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4799> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4799> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4799> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4799> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4799> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4799> ((stream-car s) (car s)))
> def args: : (<object 4799> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4799> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4799> ((stream-null? s) (null? s)))
> def args: : (<object 4799> ((code $s) $s))
> def args: : (<object 4799> ((member? x items) (valid? (member x items))))
> def args: : (<object 4799> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4799> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4799> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4799> (__string+ string+))
> def args: : (<object 4799> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4799> (__string string))
> def args: : (<object 4799> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4799> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4799> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4799> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4799> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4799> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4799> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4799> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4799> ((localNames env) (cadr env)))
> def args: : (<object 4799> ((localValues env) (caddr env)))
> def args: : (<object 4799> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4799> ((dot obj $name) (get $name obj)))
> def args: : (<object 4799> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4799> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12466> ((wire) (define oldSet set) (define value 0) (define downstream ) (define (register object) (oldSet (quote downstream) (cons object downstream)) ((object (quote recalculate)))) (define (inform object) ((object (quote recalculate)))) (define (set newValue) (define d) (if (!= newValue value) (begin (oldSet (quote value) newValue) (map inform downstream)))) (define (get) value) this))
> def args: : (<object 12466> ((AND in1 in2 out agenda) (define delay 4) (define (recalculate) (if (and (== ((in1 (quote get))) 1) (== ((in2 (quote get))) 1)) ((agenda (quote schedule)) ((out (quote set)) 1) delay) ((agenda (quote schedule)) ((out (quote set)) 0) delay))) ((in1 (quote register)) this) ((in2 (quote register)) this) (recalculate) this))
> def args: : (<object 12466> ((OR in1 in2 out agenda) (define delay 3) (define (recalculate) (if (or (== ((in1 (quote get))) 1) (== ((in2 (quote get))) 1)) ((agenda (quote schedule)) ((out (quote set)) 1) delay) ((agenda (quote schedule)) ((out (quote set)) 0) delay))) ((in1 (quote register)) this) ((in2 (quote register)) this) this))
> def args: : (<object 12466> ((NOT in out agenda) (define delay 1) (define (recalculate) (if (== ((in (quote get))) 0) ((agenda (quote schedule)) ((out (quote set)) 1) delay) ((agenda (quote schedule)) ((out (quote set)) 0) delay))) ((in (quote register)) this) this))
> def args: : (<object 12466> ((priorityQueue) (define items) (define (bundle data rank next) this) (define (dequeue) (define item) (set (quote item) (items (quote next) (quote data))) (set* items (quote next) (items (quote next) (quote next))) item) (define (enqueue item rank) (define prefix items) (define suffix (items (quote next))) (define package (bundle item rank )) (while (and (valid? suffix) (>= rank (suffix (quote rank)))) (set (quote prefix) suffix) (set (quote suffix) (suffix (quote next)))) (set* prefix (quote next) package) (set* package (quote next) suffix)) (define (peekItem) (items (quote next) (quote data))) (define (peekRank) (items (quote next) (quote rank))) (define (empty) (null? (items (quote next)))) (set (quote items) (bundle   )) this))
> def args: : (<object 12466> ((agenda) (define time 0) (define actions (priorityQueue)) (define (schedule # $action delay) (define result (thunk $action #)) ((actions (quote enqueue)) result (+ time delay))) (define (run) (while (not ((actions (quote empty)))) (set (quote time) ((actions (quote peekRank)))) (define result ((actions (quote dequeue)))) (force result)) (set (quote time) 0)) this))
> def args: : (<object 12466> ((half-adder a b sum carry simulator) (define or->and (wire)) (define not->and (wire)) (AND a b carry simulator) (OR a b or->and simulator) (NOT carry not->and simulator) (AND or->and not->and sum simulator)))
> def args: : (<object 12466> ((full-adder a b carry-in sum carry-out agenda) (define ha1->ha2 (wire)) (define ha1->or (wire)) (define ha2->or (wire)) (half-adder b carry-in ha1->ha2 ha1->or agenda) (half-adder a ha1->ha2 sum ha2->or agenda) (OR ha1->or ha2->or carry-out agenda)))
> def args: : (<object 12466> ((simulateAND) (define i) (define a (wire)) (define b (wire)) (define c (wire)) (define simulator (agenda)) (define inputs (array (array 0 0) (array 0 1) (array 1 0) (array 1 1))) (println "a     b       c") (AND a b c simulator) (for (set (quote i) 0) (< i (length inputs)) (set (quote i) (+ i 1)) ((a (quote set)) (getElement inputs i 0)) ((b (quote set)) (getElement inputs i 1)) ((simulator (quote run))) (println (getElement inputs i 0) " " (getElement inputs i 1) "     " ((c (quote get)))))))
> def args: : (<object 12466> ((simulateHalfAdder) (define i) (define a (wire)) (define b (wire)) (define sum (wire)) (define carry (wire)) (define simulator (agenda)) (define inputs (array (array 0 0) (array 0 1) (array 1 0) (array 1 1))) (println "a       b       sum     carry") (half-adder a b sum carry simulator) (for (set (quote i) 0) (< i (length inputs)) (set (quote i) (+ i 1)) ((a (quote set)) (getElement inputs i 0)) ((b (quote set)) (getElement inputs i 1)) ((simulator (quote run))) (println (getElement inputs i 0) "      " (getElement inputs i 1) "     " ((sum (quote get))) " " ((carry (quote get)))))))
> def args: : (<object 12466> ((simulateFullAdder) (define i) (define a (wire)) (define b (wire)) (define carry-in (wire)) (define sum (wire)) (define carry-out (wire)) (define simulator (agenda)) (define inputs (array (array 0 0 0) (array 0 0 1) (array 0 1 0) (array 0 1 1) (array 1 0 0) (array 1 0 1) (array 1 1 0) (array 1 1 1))) (println "a  b       c-in    sum     c-out") (full-adder a b carry-in sum carry-out simulator) (for (set (quote i) 0) (< i (length inputs)) (set (quote i) (+ i 1)) ((a (quote set)) (getElement inputs i 0)) ((b (quote set)) (getElement inputs i 1)) ((carry-in (quote set)) (getElement inputs i 2)) ((simulator (quote run))) (println (getElement inputs i 0) "        " (getElement inputs i 1) "     " (getElement inputs i 2) "     " ((sum (quote get))) " " ((carry-out (quote get)))))))
> def args: : (<object 15454> (i))
> def args: : (<object 15454> (a (wire)))
> def args: : (<object 15497> (oldSet set))
> def args: : (<object 15497> (value 0))
> def args: : (<object 15497> (downstream ))
> def args: : (<object 15497> ((register object) (oldSet (quote downstream) (cons object downstream)) ((object (quote recalculate)))))
> def args: : (<object 15497> ((inform object) ((object (quote recalculate)))))
> def args: : (<object 15497> ((set newValue) (define d) (if (!= newValue value) (begin (oldSet (quote value) newValue) (map inform downstream)))))
> def args: : (<object 15497> ((get) value))
> def args: : (<object 15454> (b (wire)))
> def args: : (<object 15645> (oldSet set))
> def args: : (<object 15645> (value 0))
> def args: : (<object 15645> (downstream ))
> def args: : (<object 15645> ((register object) (oldSet (quote downstream) (cons object downstream)) ((object (quote recalculate)))))
> def args: : (<object 15645> ((inform object) ((object (quote recalculate)))))
> def args: : (<object 15645> ((set newValue) (define d) (if (!= newValue value) (begin (oldSet (quote value) newValue) (map inform downstream)))))
> def args: : (<object 15645> ((get) value))
> def args: : (<object 15454> (c (wire)))
> def args: : (<object 15793> (oldSet set))
> def args: : (<object 15793> (value 0))
> def args: : (<object 15793> (downstream ))
> def args: : (<object 15793> ((register object) (oldSet (quote downstream) (cons object downstream)) ((object (quote recalculate)))))
> def args: : (<object 15793> ((inform object) ((object (quote recalculate)))))
> def args: : (<object 15793> ((set newValue) (define d) (if (!= newValue value) (begin (oldSet (quote value) newValue) (map inform downstream)))))
> def args: : (<object 15793> ((get) value))
> def args: : (<object 15454> (simulator (agenda)))
> def args: : (<object 15941> (time 0))
> def args: : (<object 15941> (actions (priorityQueue)))
> def args: : (<object 15981> (items))
> def args: : (<object 15981> ((bundle data rank next) this))
> def args: : (<object 15981> ((dequeue) (define item) (set (quote item) (items (quote next) (quote data))) (set* items (quote next) (items (quote next) (quote next))) item))
> def args: : (<object 15981> ((enqueue item rank) (define prefix items) (define suffix (items (quote next))) (define package (bundle item rank )) (while (and (valid? suffix) (>= rank (suffix (quote rank)))) (set (quote prefix) suffix) (set (quote suffix) (suffix (quote next)))) (set* prefix (quote next) package) (set* package (quote next) suffix)))
> def args: : (<object 15981> ((peekItem) (items (quote next) (quote data))))
> def args: : (<object 15981> ((peekRank) (items (quote next) (quote rank))))
> def args: : (<object 15981> ((empty) (null? (items (quote next)))))
> def args: : (<object 15941> ((schedule # $action delay) (define result (thunk $action #)) ((actions (quote enqueue)) result (+ time delay))))
> def args: : (<object 15941> ((run) (while (not ((actions (quote empty)))) (set (quote time) ((actions (quote peekRank)))) (define result ((actions (quote dequeue)))) (force result)) (set (quote time) 0)))
> def args: : (<object 15454> (inputs (array (array 0 0) (array 0 1) (array 1 0) (array 1 1))))
> a       b       cdef args: : (<object 16401> (env (if (null? @) # (car @))))
> 
> def args: : (<object 16599> (env (if (null? @) # (car @))))
> def args: : (<object 16713> (delay 4))
> def args: : (<object 16713> ((recalculate) (if (and (== ((in1 (quote get))) 1) (== ((in2 (quote get))) 1)) ((agenda (quote schedule)) ((out (quote set)) 1) delay) ((agenda (quote schedule)) ((out (quote set)) 0) delay))))
> def args: : (<object 16858> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 17036> (result (thunk $action #)))
> def args: : (<object 17069> (memo #f))
> def args: : (<object 17130> (prefix items))
> def args: : (<object 17130> (suffix (items (quote next))))
> def args: : (<object 17130> (package (bundle item rank )))
> def args: : (<object 17228> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 17390> (obj (car @)))
> def args: : (<object 17390> (fields (cdr @)))
> def args: : (<object 18011> (obj (car @)))
> def args: : (<object 18011> (fields (cdr @)))
> def args: : (<object 18706> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 18884> (result (thunk $action #)))
> def args: : (<object 18917> (memo #f))
> def args: : (<object 18978> (prefix items))
> def args: : (<object 18978> (suffix (items (quote next))))
> def args: : (<object 18978> (package (bundle item rank )))
> def args: : (<object 19076> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 19370> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 19532> (obj (car @)))
> def args: : (<object 19532> (fields (cdr @)))
> def args: : (<object 20153> (obj (car @)))
> def args: : (<object 20153> (fields (cdr @)))
> def args: : (<object 20799> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 20977> (result (thunk $action #)))
> def args: : (<object 21010> (memo #f))
> def args: : (<object 21071> (prefix items))
> def args: : (<object 21071> (suffix (items (quote next))))
> def args: : (<object 21071> (package (bundle item rank )))
> def args: : (<object 21169> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 21463> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 21757> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 21919> (obj (car @)))
> def args: : (<object 21919> (fields (cdr @)))
> def args: : (<object 22540> (obj (car @)))
> def args: : (<object 22540> (fields (cdr @)))
> def args: : (<object 23179> (forresult ))
> def args: : (<object 23326> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 23527> (d))
> def args: : (<object 23638> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 23839> (d))
> def args: : (<object 23946> (result ((actions (quote dequeue)))))
> def args: : (<object 24072> (item))
> def args: : (<object 24124> (obj (car @)))
> def args: : (<object 24124> (fields (cdr @)))
> def args: : (<object 24802> (d))
> def args: : (<object 23946> (result ((actions (quote dequeue)))))
> def args: : (<object 24943> (item))
> def args: : (<object 24995> (obj (car @)))
> def args: : (<object 24995> (fields (cdr @)))
> def args: : (<object 25673> (d))
> def args: : (<object 23946> (result ((actions (quote dequeue)))))
> def args: : (<object 25814> (item))
> def args: : (<object 25866> (obj (car @)))
> def args: : (<object 25866> (fields (cdr @)))
> def args: : (<object 26544> (d))
> def args: : (<object 26717> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 26921> (__getElement (get (quote getElement) (get (quote __context) __context))))
> 0def args: : (<object 27277> (env (if (null? @) # (car @))))
>         def args: : (<object 27384> (env (if (null? @) # (car @))))
> 0def args: : (<object 27491> (env (if (null? @) # (car @))))
>         def args: : (<object 27598> (env (if (null? @) # (car @))))
> 0def args: : (<object 27705> (env (if (null? @) # (car @))))
> 
> def args: : (<object 27903> (env (if (null? @) # (car @))))
> def args: : (<object 28145> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 28346> (d))
> def args: : (<object 28457> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 28658> (d))
> def args: : (<object 28736> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 28736> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 28960> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 29138> (result (thunk $action #)))
> def args: : (<object 29171> (memo #f))
> def args: : (<object 29232> (prefix items))
> def args: : (<object 29232> (suffix (items (quote next))))
> def args: : (<object 29232> (package (bundle item rank )))
> def args: : (<object 29330> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 29492> (obj (car @)))
> def args: : (<object 29492> (fields (cdr @)))
> def args: : (<object 30113> (obj (car @)))
> def args: : (<object 30113> (fields (cdr @)))
> def args: : (<object 30833> (result ((actions (quote dequeue)))))
> def args: : (<object 30959> (item))
> def args: : (<object 31011> (obj (car @)))
> def args: : (<object 31011> (fields (cdr @)))
> def args: : (<object 31689> (d))
> def args: : (<object 31862> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 32066> (__getElement (get (quote getElement) (get (quote __context) __context))))
> 0def args: : (<object 32422> (env (if (null? @) # (car @))))
>         def args: : (<object 32529> (env (if (null? @) # (car @))))
> 1def args: : (<object 32636> (env (if (null? @) # (car @))))
>         def args: : (<object 32743> (env (if (null? @) # (car @))))
> 0def args: : (<object 32850> (env (if (null? @) # (car @))))
> 
> def args: : (<object 33048> (env (if (null? @) # (car @))))
> def args: : (<object 33290> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 33491> (d))
> def args: : (<object 33569> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 33569> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 33793> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 34127> (result (thunk $action #)))
> def args: : (<object 34160> (memo #f))
> def args: : (<object 34221> (prefix items))
> def args: : (<object 34221> (suffix (items (quote next))))
> def args: : (<object 34221> (package (bundle item rank )))
> def args: : (<object 34319> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 34481> (obj (car @)))
> def args: : (<object 34481> (fields (cdr @)))
> def args: : (<object 35102> (obj (car @)))
> def args: : (<object 35102> (fields (cdr @)))
> def args: : (<object 35826> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 36027> (d))
> def args: : (<object 36105> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 36105> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 36329> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 36611> (result (thunk $action #)))
> def args: : (<object 36644> (memo #f))
> def args: : (<object 36705> (prefix items))
> def args: : (<object 36705> (suffix (items (quote next))))
> def args: : (<object 36705> (package (bundle item rank )))
> def args: : (<object 36803> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 37097> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 37259> (obj (car @)))
> def args: : (<object 37259> (fields (cdr @)))
> def args: : (<object 37880> (obj (car @)))
> def args: : (<object 37880> (fields (cdr @)))
> def args: : (<object 38600> (result ((actions (quote dequeue)))))
> def args: : (<object 38726> (item))
> def args: : (<object 38778> (obj (car @)))
> def args: : (<object 38778> (fields (cdr @)))
> def args: : (<object 39456> (d))
> def args: : (<object 39534> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 39534> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 38600> (result ((actions (quote dequeue)))))
> def args: : (<object 39773> (item))
> def args: : (<object 39825> (obj (car @)))
> def args: : (<object 39825> (fields (cdr @)))
> def args: : (<object 40503> (d))
> def args: : (<object 40581> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 40581> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 40852> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 41056> (__getElement (get (quote getElement) (get (quote __context) __context))))
> 1def args: : (<object 41412> (env (if (null? @) # (car @))))
>         def args: : (<object 41519> (env (if (null? @) # (car @))))
> 0def args: : (<object 41626> (env (if (null? @) # (car @))))
>         def args: : (<object 41733> (env (if (null? @) # (car @))))
> 0def args: : (<object 41840> (env (if (null? @) # (car @))))
> 
> def args: : (<object 42038> (env (if (null? @) # (car @))))
> def args: : (<object 42280> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 42481> (d))
> def args: : (<object 42592> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 42793> (d))
> def args: : (<object 42871> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 42871> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 43095> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 43429> (result (thunk $action #)))
> def args: : (<object 43462> (memo #f))
> def args: : (<object 43523> (prefix items))
> def args: : (<object 43523> (suffix (items (quote next))))
> def args: : (<object 43523> (package (bundle item rank )))
> def args: : (<object 43621> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 43783> (obj (car @)))
> def args: : (<object 43783> (fields (cdr @)))
> def args: : (<object 44404> (obj (car @)))
> def args: : (<object 44404> (fields (cdr @)))
> def args: : (<object 45124> (result ((actions (quote dequeue)))))
> def args: : (<object 45250> (item))
> def args: : (<object 45302> (obj (car @)))
> def args: : (<object 45302> (fields (cdr @)))
> def args: : (<object 45980> (d))
> def args: : (<object 46058> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 46058> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 46329> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 46533> (__getElement (get (quote getElement) (get (quote __context) __context))))
> 1def args: : (<object 46889> (env (if (null? @) # (car @))))
>         def args: : (<object 46996> (env (if (null? @) # (car @))))
> 1def args: : (<object 47103> (env (if (null? @) # (car @))))
>         def args: : (<object 47210> (env (if (null? @) # (car @))))
> 1def args: : (<object 47317> (env (if (null? @) # (car @))))
> 
> def args: : (<object 47515> (env (if (null? @) # (car @))))
> 
> def args: : (<object 47874> (env (if (null? @) # (car @))))
> def args: : (<object 47984> (i))
> def args: : (<object 47984> (a (wire)))
> def args: : (<object 48028> (oldSet set))
> def args: : (<object 48028> (value 0))
> def args: : (<object 48028> (downstream ))
> def args: : (<object 48028> ((register object) (oldSet (quote downstream) (cons object downstream)) ((object (quote recalculate)))))
> def args: : (<object 48028> ((inform object) ((object (quote recalculate)))))
> def args: : (<object 48028> ((set newValue) (define d) (if (!= newValue value) (begin (oldSet (quote value) newValue) (map inform downstream)))))
> def args: : (<object 48028> ((get) value))
> def args: : (<object 47984> (b (wire)))
> def args: : (<object 48176> (oldSet set))
> def args: : (<object 48176> (value 0))
> def args: : (<object 48176> (downstream ))
> def args: : (<object 48176> ((register object) (oldSet (quote downstream) (cons object downstream)) ((object (quote recalculate)))))
> def args: : (<object 48176> ((inform object) ((object (quote recalculate)))))
> def args: : (<object 48176> ((set newValue) (define d) (if (!= newValue value) (begin (oldSet (quote value) newValue) (map inform downstream)))))
> def args: : (<object 48176> ((get) value))
> def args: : (<object 47984> (sum (wire)))
> def args: : (<object 48324> (oldSet set))
> def args: : (<object 48324> (value 0))
> def args: : (<object 48324> (downstream ))
> def args: : (<object 48324> ((register object) (oldSet (quote downstream) (cons object downstream)) ((object (quote recalculate)))))
> def args: : (<object 48324> ((inform object) ((object (quote recalculate)))))
> def args: : (<object 48324> ((set newValue) (define d) (if (!= newValue value) (begin (oldSet (quote value) newValue) (map inform downstream)))))
> def args: : (<object 48324> ((get) value))
> def args: : (<object 47984> (carry (wire)))
> def args: : (<object 48472> (oldSet set))
> def args: : (<object 48472> (value 0))
> def args: : (<object 48472> (downstream ))
> def args: : (<object 48472> ((register object) (oldSet (quote downstream) (cons object downstream)) ((object (quote recalculate)))))
> def args: : (<object 48472> ((inform object) ((object (quote recalculate)))))
> def args: : (<object 48472> ((set newValue) (define d) (if (!= newValue value) (begin (oldSet (quote value) newValue) (map inform downstream)))))
> def args: : (<object 48472> ((get) value))
> def args: : (<object 47984> (simulator (agenda)))
> def args: : (<object 48620> (time 0))
> def args: : (<object 48620> (actions (priorityQueue)))
> def args: : (<object 48660> (items))
> def args: : (<object 48660> ((bundle data rank next) this))
> def args: : (<object 48660> ((dequeue) (define item) (set (quote item) (items (quote next) (quote data))) (set* items (quote next) (items (quote next) (quote next))) item))
> def args: : (<object 48660> ((enqueue item rank) (define prefix items) (define suffix (items (quote next))) (define package (bundle item rank )) (while (and (valid? suffix) (>= rank (suffix (quote rank)))) (set (quote prefix) suffix) (set (quote suffix) (suffix (quote next)))) (set* prefix (quote next) package) (set* package (quote next) suffix)))
> def args: : (<object 48660> ((peekItem) (items (quote next) (quote data))))
> def args: : (<object 48660> ((peekRank) (items (quote next) (quote rank))))
> def args: : (<object 48660> ((empty) (null? (items (quote next)))))
> def args: : (<object 48620> ((schedule # $action delay) (define result (thunk $action #)) ((actions (quote enqueue)) result (+ time delay))))
> def args: : (<object 48620> ((run) (while (not ((actions (quote empty)))) (set (quote time) ((actions (quote peekRank)))) (define result ((actions (quote dequeue)))) (force result)) (set (quote time) 0)))
> def args: : (<object 47984> (inputs (array (array 0 0) (array 0 1) (array 1 0) (array 1 1))))
> a       b       sum     carrydef args: : (<object 49080> (env (if (null? @) # (car @))))
> 
> def args: : (<object 49278> (env (if (null? @) # (car @))))
> def args: : (<object 49393> (or->and (wire)))
> def args: : (<object 49428> (oldSet set))
> def args: : (<object 49428> (value 0))
> def args: : (<object 49428> (downstream ))
> def args: : (<object 49428> ((register object) (oldSet (quote downstream) (cons object downstream)) ((object (quote recalculate)))))
> def args: : (<object 49428> ((inform object) ((object (quote recalculate)))))
> def args: : (<object 49428> ((set newValue) (define d) (if (!= newValue value) (begin (oldSet (quote value) newValue) (map inform downstream)))))
> def args: : (<object 49428> ((get) value))
> def args: : (<object 49393> (not->and (wire)))
> def args: : (<object 49576> (oldSet set))
> def args: : (<object 49576> (value 0))
> def args: : (<object 49576> (downstream ))
> def args: : (<object 49576> ((register object) (oldSet (quote downstream) (cons object downstream)) ((object (quote recalculate)))))
> def args: : (<object 49576> ((inform object) ((object (quote recalculate)))))
> def args: : (<object 49576> ((set newValue) (define d) (if (!= newValue value) (begin (oldSet (quote value) newValue) (map inform downstream)))))
> def args: : (<object 49576> ((get) value))
> def args: : (<object 49724> (delay 4))
> def args: : (<object 49724> ((recalculate) (if (and (== ((in1 (quote get))) 1) (== ((in2 (quote get))) 1)) ((agenda (quote schedule)) ((out (quote set)) 1) delay) ((agenda (quote schedule)) ((out (quote set)) 0) delay))))
> def args: : (<object 49869> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 50047> (result (thunk $action #)))
> def args: : (<object 50080> (memo #f))
> def args: : (<object 50141> (prefix items))
> def args: : (<object 50141> (suffix (items (quote next))))
> def args: : (<object 50141> (package (bundle item rank )))
> def args: : (<object 50239> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 50401> (obj (car @)))
> def args: : (<object 50401> (fields (cdr @)))
> def args: : (<object 51022> (obj (car @)))
> def args: : (<object 51022> (fields (cdr @)))
> def args: : (<object 51717> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 51895> (result (thunk $action #)))
> def args: : (<object 51928> (memo #f))
> def args: : (<object 51989> (prefix items))
> def args: : (<object 51989> (suffix (items (quote next))))
> def args: : (<object 51989> (package (bundle item rank )))
> def args: : (<object 52087> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 52381> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 52543> (obj (car @)))
> def args: : (<object 52543> (fields (cdr @)))
> def args: : (<object 53164> (obj (car @)))
> def args: : (<object 53164> (fields (cdr @)))
> def args: : (<object 53810> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 53988> (result (thunk $action #)))
> def args: : (<object 54021> (memo #f))
> def args: : (<object 54082> (prefix items))
> def args: : (<object 54082> (suffix (items (quote next))))
> def args: : (<object 54082> (package (bundle item rank )))
> def args: : (<object 54180> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 54474> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 54768> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 54930> (obj (car @)))
> def args: : (<object 54930> (fields (cdr @)))
> def args: : (<object 55551> (obj (car @)))
> def args: : (<object 55551> (fields (cdr @)))
> def args: : (<object 56171> (delay 3))
> def args: : (<object 56171> ((recalculate) (if (or (== ((in1 (quote get))) 1) (== ((in2 (quote get))) 1)) ((agenda (quote schedule)) ((out (quote set)) 1) delay) ((agenda (quote schedule)) ((out (quote set)) 0) delay))))
> def args: : (<object 56315> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 56649> (result (thunk $action #)))
> def args: : (<object 56682> (memo #f))
> def args: : (<object 56743> (prefix items))
> def args: : (<object 56743> (suffix (items (quote next))))
> def args: : (<object 56743> (package (bundle item rank )))
> def args: : (<object 56841> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 57072> (obj (car @)))
> def args: : (<object 57072> (fields (cdr @)))
> def args: : (<object 57693> (obj (car @)))
> def args: : (<object 57693> (fields (cdr @)))
> def args: : (<object 58388> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 58722> (result (thunk $action #)))
> def args: : (<object 58755> (memo #f))
> def args: : (<object 58816> (prefix items))
> def args: : (<object 58816> (suffix (items (quote next))))
> def args: : (<object 58816> (package (bundle item rank )))
> def args: : (<object 58914> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 59208> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 59439> (obj (car @)))
> def args: : (<object 59439> (fields (cdr @)))
> def args: : (<object 60060> (obj (car @)))
> def args: : (<object 60060> (fields (cdr @)))
> def args: : (<object 60679> (delay 1))
> def args: : (<object 60679> ((recalculate) (if (== ((in (quote get))) 0) ((agenda (quote schedule)) ((out (quote set)) 1) delay) ((agenda (quote schedule)) ((out (quote set)) 0) delay))))
> def args: : (<object 60877> (result (thunk $action #)))
> def args: : (<object 60910> (memo #f))
> def args: : (<object 60971> (prefix items))
> def args: : (<object 60971> (suffix (items (quote next))))
> def args: : (<object 60971> (package (bundle item rank )))
> def args: : (<object 61069> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 61300> (obj (car @)))
> def args: : (<object 61300> (fields (cdr @)))
> def args: : (<object 61921> (obj (car @)))
> def args: : (<object 61921> (fields (cdr @)))
> def args: : (<object 62550> (delay 4))
> def args: : (<object 62550> ((recalculate) (if (and (== ((in1 (quote get))) 1) (== ((in2 (quote get))) 1)) ((agenda (quote schedule)) ((out (quote set)) 1) delay) ((agenda (quote schedule)) ((out (quote set)) 0) delay))))
> def args: : (<object 62695> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 62873> (result (thunk $action #)))
> def args: : (<object 62906> (memo #f))
> def args: : (<object 62967> (prefix items))
> def args: : (<object 62967> (suffix (items (quote next))))
> def args: : (<object 62967> (package (bundle item rank )))
> def args: : (<object 63065> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 63359> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 63653> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 63947> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 64241> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 64535> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 64829> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 64991> (obj (car @)))
> def args: : (<object 64991> (fields (cdr @)))
> def args: : (<object 65612> (obj (car @)))
> def args: : (<object 65612> (fields (cdr @)))
> def args: : (<object 66307> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 66485> (result (thunk $action #)))
> def args: : (<object 66518> (memo #f))
> def args: : (<object 66579> (prefix items))
> def args: : (<object 66579> (suffix (items (quote next))))
> def args: : (<object 66579> (package (bundle item rank )))
> def args: : (<object 66677> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 66971> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 67265> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 67559> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 67853> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 68147> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 68441> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 68735> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 68897> (obj (car @)))
> def args: : (<object 68897> (fields (cdr @)))
> def args: : (<object 69518> (obj (car @)))
> def args: : (<object 69518> (fields (cdr @)))
> def args: : (<object 70164> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 70342> (result (thunk $action #)))
> def args: : (<object 70375> (memo #f))
> def args: : (<object 70436> (prefix items))
> def args: : (<object 70436> (suffix (items (quote next))))
> def args: : (<object 70436> (package (bundle item rank )))
> def args: : (<object 70534> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 70828> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 71122> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 71416> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 71710> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 72004> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 72298> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 72592> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 72886> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 73048> (obj (car @)))
> def args: : (<object 73048> (fields (cdr @)))
> def args: : (<object 73669> (obj (car @)))
> def args: : (<object 73669> (fields (cdr @)))
> def args: : (<object 74308> (forresult ))
> def args: : (<object 74455> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 74656> (d))
> def args: : (<object 74767> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 74968> (d))
> def args: : (<object 75075> (result ((actions (quote dequeue)))))
> def args: : (<object 75201> (item))
> def args: : (<object 75253> (obj (car @)))
> def args: : (<object 75253> (fields (cdr @)))
> def args: : (<object 75931> (d))
> def args: : (<object 76009> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 76009> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 76233> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 76411> (result (thunk $action #)))
> def args: : (<object 76444> (memo #f))
> def args: : (<object 76505> (prefix items))
> def args: : (<object 76505> (suffix (items (quote next))))
> def args: : (<object 76505> (package (bundle item rank )))
> def args: : (<object 76603> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 76897> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 77191> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 77485> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 77779> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 78073> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 78367> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 78661> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 78955> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 79117> (obj (car @)))
> def args: : (<object 79117> (fields (cdr @)))
> def args: : (<object 79738> (obj (car @)))
> def args: : (<object 79738> (fields (cdr @)))
> def args: : (<object 75075> (result ((actions (quote dequeue)))))
> def args: : (<object 80492> (item))
> def args: : (<object 80544> (obj (car @)))
> def args: : (<object 80544> (fields (cdr @)))
> def args: : (<object 81222> (d))
> def args: : (<object 75075> (result ((actions (quote dequeue)))))
> def args: : (<object 81363> (item))
> def args: : (<object 81415> (obj (car @)))
> def args: : (<object 81415> (fields (cdr @)))
> def args: : (<object 82093> (d))
> def args: : (<object 75075> (result ((actions (quote dequeue)))))
> def args: : (<object 82234> (item))
> def args: : (<object 82286> (obj (car @)))
> def args: : (<object 82286> (fields (cdr @)))
> def args: : (<object 82964> (d))
> def args: : (<object 75075> (result ((actions (quote dequeue)))))
> def args: : (<object 83105> (item))
> def args: : (<object 83157> (obj (car @)))
> def args: : (<object 83157> (fields (cdr @)))
> def args: : (<object 83835> (d))
> def args: : (<object 75075> (result ((actions (quote dequeue)))))
> def args: : (<object 83976> (item))
> def args: : (<object 84028> (obj (car @)))
> def args: : (<object 84028> (fields (cdr @)))
> def args: : (<object 84706> (d))
> def args: : (<object 75075> (result ((actions (quote dequeue)))))
> def args: : (<object 84847> (item))
> def args: : (<object 84899> (obj (car @)))
> def args: : (<object 84899> (fields (cdr @)))
> def args: : (<object 85577> (d))
> def args: : (<object 75075> (result ((actions (quote dequeue)))))
> def args: : (<object 85718> (item))
> def args: : (<object 85770> (obj (car @)))
> def args: : (<object 85770> (fields (cdr @)))
> def args: : (<object 86448> (d))
> def args: : (<object 75075> (result ((actions (quote dequeue)))))
> def args: : (<object 86589> (item))
> def args: : (<object 86641> (obj (car @)))
> def args: : (<object 86641> (fields (cdr @)))
> def args: : (<object 87319> (d))
> def args: : (<object 75075> (result ((actions (quote dequeue)))))
> def args: : (<object 87460> (item))
> def args: : (<object 87512> (obj (car @)))
> def args: : (<object 87512> (fields (cdr @)))
> def args: : (<object 88190> (d))
> def args: : (<object 88363> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 88567> (__getElement (get (quote getElement) (get (quote __context) __context))))
> 0def args: : (<object 88964> (env (if (null? @) # (car @))))
>         def args: : (<object 89071> (env (if (null? @) # (car @))))
> 0def args: : (<object 89178> (env (if (null? @) # (car @))))
>         def args: : (<object 89285> (env (if (null? @) # (car @))))
> 0def args: : (<object 89392> (env (if (null? @) # (car @))))
>         def args: : (<object 89499> (env (if (null? @) # (car @))))
> 0def args: : (<object 89606> (env (if (null? @) # (car @))))
> 
> def args: : (<object 89804> (env (if (null? @) # (car @))))
> def args: : (<object 90046> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 90247> (d))
> def args: : (<object 90358> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 90559> (d))
> def args: : (<object 90637> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 90637> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 90861> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 91143> (result (thunk $action #)))
> def args: : (<object 91176> (memo #f))
> def args: : (<object 91237> (prefix items))
> def args: : (<object 91237> (suffix (items (quote next))))
> def args: : (<object 91237> (package (bundle item rank )))
> def args: : (<object 91335> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 91497> (obj (car @)))
> def args: : (<object 91497> (fields (cdr @)))
> def args: : (<object 92118> (obj (car @)))
> def args: : (<object 92118> (fields (cdr @)))
> def args: : (<object 92854> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 93032> (result (thunk $action #)))
> def args: : (<object 93065> (memo #f))
> def args: : (<object 93126> (prefix items))
> def args: : (<object 93126> (suffix (items (quote next))))
> def args: : (<object 93126> (package (bundle item rank )))
> def args: : (<object 93224> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 93518> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 93680> (obj (car @)))
> def args: : (<object 93680> (fields (cdr @)))
> def args: : (<object 94301> (obj (car @)))
> def args: : (<object 94301> (fields (cdr @)))
> def args: : (<object 95024> (result ((actions (quote dequeue)))))
> def args: : (<object 95150> (item))
> def args: : (<object 95202> (obj (car @)))
> def args: : (<object 95202> (fields (cdr @)))
> def args: : (<object 95880> (d))
> def args: : (<object 95958> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 95958> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 96182> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 96516> (result (thunk $action #)))
> def args: : (<object 96549> (memo #f))
> def args: : (<object 96610> (prefix items))
> def args: : (<object 96610> (suffix (items (quote next))))
> def args: : (<object 96610> (package (bundle item rank )))
> def args: : (<object 96708> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 97002> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 97164> (obj (car @)))
> def args: : (<object 97164> (fields (cdr @)))
> def args: : (<object 97785> (obj (car @)))
> def args: : (<object 97785> (fields (cdr @)))
> def args: : (<object 95024> (result ((actions (quote dequeue)))))
> def args: : (<object 98539> (item))
> def args: : (<object 98591> (obj (car @)))
> def args: : (<object 98591> (fields (cdr @)))
> def args: : (<object 99269> (d))
> def args: : (<object 95024> (result ((actions (quote dequeue)))))
> def args: : (<object 99410> (item))
> def args: : (<object 99462> (obj (car @)))
> def args: : (<object 99462> (fields (cdr @)))
> def args: : (<object 100140> (d))
> def args: : (<object 100218> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 100218> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 100489> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 100693> (__getElement (get (quote getElement) (get (quote __context) __context))))
> 0def args: : (<object 101090> (env (if (null? @) # (car @))))
>         def args: : (<object 101197> (env (if (null? @) # (car @))))
> 1def args: : (<object 101304> (env (if (null? @) # (car @))))
>         def args: : (<object 101411> (env (if (null? @) # (car @))))
> 1def args: : (<object 101518> (env (if (null? @) # (car @))))
>         def args: : (<object 101625> (env (if (null? @) # (car @))))
> 0def args: : (<object 101732> (env (if (null? @) # (car @))))
> 
> def args: : (<object 101930> (env (if (null? @) # (car @))))
> def args: : (<object 102172> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 102373> (d))
> def args: : (<object 102451> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 102451> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 102675> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 102853> (result (thunk $action #)))
> def args: : (<object 102886> (memo #f))
> def args: : (<object 102947> (prefix items))
> def args: : (<object 102947> (suffix (items (quote next))))
> def args: : (<object 102947> (package (bundle item rank )))
> def args: : (<object 103045> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 103207> (obj (car @)))
> def args: : (<object 103207> (fields (cdr @)))
> def args: : (<object 103828> (obj (car @)))
> def args: : (<object 103828> (fields (cdr @)))
> def args: : (<object 104564> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 104898> (result (thunk $action #)))
> def args: : (<object 104931> (memo #f))
> def args: : (<object 104992> (prefix items))
> def args: : (<object 104992> (suffix (items (quote next))))
> def args: : (<object 104992> (package (bundle item rank )))
> def args: : (<object 105090> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 105384> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 105546> (obj (car @)))
> def args: : (<object 105546> (fields (cdr @)))
> def args: : (<object 106167> (obj (car @)))
> def args: : (<object 106167> (fields (cdr @)))
> def args: : (<object 106894> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 107095> (d))
> def args: : (<object 107173> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 107173> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 107397> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 107575> (result (thunk $action #)))
> def args: : (<object 107608> (memo #f))
> def args: : (<object 107669> (prefix items))
> def args: : (<object 107669> (suffix (items (quote next))))
> def args: : (<object 107669> (package (bundle item rank )))
> def args: : (<object 107767> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 108061> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 108292> (obj (car @)))
> def args: : (<object 108292> (fields (cdr @)))
> def args: : (<object 108913> (obj (car @)))
> def args: : (<object 108913> (fields (cdr @)))
> def args: : (<object 109649> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 109931> (result (thunk $action #)))
> def args: : (<object 109964> (memo #f))
> def args: : (<object 110025> (prefix items))
> def args: : (<object 110025> (suffix (items (quote next))))
> def args: : (<object 110025> (package (bundle item rank )))
> def args: : (<object 110123> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 110417> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 110711> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 111005> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 111167> (obj (car @)))
> def args: : (<object 111167> (fields (cdr @)))
> def args: : (<object 111788> (obj (car @)))
> def args: : (<object 111788> (fields (cdr @)))
> def args: : (<object 112511> (result ((actions (quote dequeue)))))
> def args: : (<object 112637> (item))
> def args: : (<object 112689> (obj (car @)))
> def args: : (<object 112689> (fields (cdr @)))
> def args: : (<object 113367> (d))
> def args: : (<object 112511> (result ((actions (quote dequeue)))))
> def args: : (<object 113508> (item))
> def args: : (<object 113560> (obj (car @)))
> def args: : (<object 113560> (fields (cdr @)))
> def args: : (<object 114238> (d))
> def args: : (<object 112511> (result ((actions (quote dequeue)))))
> def args: : (<object 114379> (item))
> def args: : (<object 114431> (obj (car @)))
> def args: : (<object 114431> (fields (cdr @)))
> def args: : (<object 115109> (d))
> def args: : (<object 115187> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 115187> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 115466> (result (thunk $action #)))
> def args: : (<object 115499> (memo #f))
> def args: : (<object 115560> (prefix items))
> def args: : (<object 115560> (suffix (items (quote next))))
> def args: : (<object 115560> (package (bundle item rank )))
> def args: : (<object 115658> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 115952> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 116114> (obj (car @)))
> def args: : (<object 116114> (fields (cdr @)))
> def args: : (<object 116735> (obj (car @)))
> def args: : (<object 116735> (fields (cdr @)))
> def args: : (<object 112511> (result ((actions (quote dequeue)))))
> def args: : (<object 117489> (item))
> def args: : (<object 117541> (obj (car @)))
> def args: : (<object 117541> (fields (cdr @)))
> def args: : (<object 118219> (d))
> def args: : (<object 118297> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 118297> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 118576> (result (thunk $action #)))
> def args: : (<object 118609> (memo #f))
> def args: : (<object 118670> (prefix items))
> def args: : (<object 118670> (suffix (items (quote next))))
> def args: : (<object 118670> (package (bundle item rank )))
> def args: : (<object 118768> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 119062> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 119224> (obj (car @)))
> def args: : (<object 119224> (fields (cdr @)))
> def args: : (<object 119845> (obj (car @)))
> def args: : (<object 119845> (fields (cdr @)))
> def args: : (<object 112511> (result ((actions (quote dequeue)))))
> def args: : (<object 120599> (item))
> def args: : (<object 120651> (obj (car @)))
> def args: : (<object 120651> (fields (cdr @)))
> def args: : (<object 121329> (d))
> def args: : (<object 121407> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 121407> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 121631> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 121913> (result (thunk $action #)))
> def args: : (<object 121946> (memo #f))
> def args: : (<object 122007> (prefix items))
> def args: : (<object 122007> (suffix (items (quote next))))
> def args: : (<object 122007> (package (bundle item rank )))
> def args: : (<object 122105> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 122399> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 122561> (obj (car @)))
> def args: : (<object 122561> (fields (cdr @)))
> def args: : (<object 123182> (obj (car @)))
> def args: : (<object 123182> (fields (cdr @)))
> def args: : (<object 112511> (result ((actions (quote dequeue)))))
> def args: : (<object 123936> (item))
> def args: : (<object 123988> (obj (car @)))
> def args: : (<object 123988> (fields (cdr @)))
> def args: : (<object 124666> (d))
> def args: : (<object 124744> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 124744> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 124968> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 125302> (result (thunk $action #)))
> def args: : (<object 125335> (memo #f))
> def args: : (<object 125396> (prefix items))
> def args: : (<object 125396> (suffix (items (quote next))))
> def args: : (<object 125396> (package (bundle item rank )))
> def args: : (<object 125494> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 125788> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 125950> (obj (car @)))
> def args: : (<object 125950> (fields (cdr @)))
> def args: : (<object 126571> (obj (car @)))
> def args: : (<object 126571> (fields (cdr @)))
> def args: : (<object 112511> (result ((actions (quote dequeue)))))
> def args: : (<object 127325> (item))
> def args: : (<object 127377> (obj (car @)))
> def args: : (<object 127377> (fields (cdr @)))
> def args: : (<object 128055> (d))
> def args: : (<object 128133> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 128133> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 112511> (result ((actions (quote dequeue)))))
> def args: : (<object 128372> (item))
> def args: : (<object 128424> (obj (car @)))
> def args: : (<object 128424> (fields (cdr @)))
> def args: : (<object 129102> (d))
> def args: : (<object 129180> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 129180> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 129451> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 129655> (__getElement (get (quote getElement) (get (quote __context) __context))))
> 1def args: : (<object 130052> (env (if (null? @) # (car @))))
>         def args: : (<object 130159> (env (if (null? @) # (car @))))
> 0def args: : (<object 130266> (env (if (null? @) # (car @))))
>         def args: : (<object 130373> (env (if (null? @) # (car @))))
> 1def args: : (<object 130480> (env (if (null? @) # (car @))))
>         def args: : (<object 130587> (env (if (null? @) # (car @))))
> 0def args: : (<object 130694> (env (if (null? @) # (car @))))
> 
> def args: : (<object 130892> (env (if (null? @) # (car @))))
> def args: : (<object 131134> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 131335> (d))
> def args: : (<object 131446> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 131647> (d))
> def args: : (<object 131725> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 131725> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 131949> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 132127> (result (thunk $action #)))
> def args: : (<object 132160> (memo #f))
> def args: : (<object 132221> (prefix items))
> def args: : (<object 132221> (suffix (items (quote next))))
> def args: : (<object 132221> (package (bundle item rank )))
> def args: : (<object 132319> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 132481> (obj (car @)))
> def args: : (<object 132481> (fields (cdr @)))
> def args: : (<object 133102> (obj (car @)))
> def args: : (<object 133102> (fields (cdr @)))
> def args: : (<object 133838> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 134172> (result (thunk $action #)))
> def args: : (<object 134205> (memo #f))
> def args: : (<object 134266> (prefix items))
> def args: : (<object 134266> (suffix (items (quote next))))
> def args: : (<object 134266> (package (bundle item rank )))
> def args: : (<object 134364> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 134658> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 134820> (obj (car @)))
> def args: : (<object 134820> (fields (cdr @)))
> def args: : (<object 135441> (obj (car @)))
> def args: : (<object 135441> (fields (cdr @)))
> def args: : (<object 136164> (result ((actions (quote dequeue)))))
> def args: : (<object 136290> (item))
> def args: : (<object 136342> (obj (car @)))
> def args: : (<object 136342> (fields (cdr @)))
> def args: : (<object 137020> (d))
> def args: : (<object 136164> (result ((actions (quote dequeue)))))
> def args: : (<object 137161> (item))
> def args: : (<object 137213> (obj (car @)))
> def args: : (<object 137213> (fields (cdr @)))
> def args: : (<object 137891> (d))
> def args: : (<object 137969> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 137969> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 138248> (result (thunk $action #)))
> def args: : (<object 138281> (memo #f))
> def args: : (<object 138342> (prefix items))
> def args: : (<object 138342> (suffix (items (quote next))))
> def args: : (<object 138342> (package (bundle item rank )))
> def args: : (<object 138440> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 138602> (obj (car @)))
> def args: : (<object 138602> (fields (cdr @)))
> def args: : (<object 139223> (obj (car @)))
> def args: : (<object 139223> (fields (cdr @)))
> def args: : (<object 136164> (result ((actions (quote dequeue)))))
> def args: : (<object 139977> (item))
> def args: : (<object 140029> (obj (car @)))
> def args: : (<object 140029> (fields (cdr @)))
> def args: : (<object 140707> (d))
> def args: : (<object 140785> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 140785> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 141009> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 141291> (result (thunk $action #)))
> def args: : (<object 141324> (memo #f))
> def args: : (<object 141385> (prefix items))
> def args: : (<object 141385> (suffix (items (quote next))))
> def args: : (<object 141385> (package (bundle item rank )))
> def args: : (<object 141483> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 141645> (obj (car @)))
> def args: : (<object 141645> (fields (cdr @)))
> def args: : (<object 142266> (obj (car @)))
> def args: : (<object 142266> (fields (cdr @)))
> def args: : (<object 136164> (result ((actions (quote dequeue)))))
> def args: : (<object 143020> (item))
> def args: : (<object 143072> (obj (car @)))
> def args: : (<object 143072> (fields (cdr @)))
> def args: : (<object 143750> (d))
> def args: : (<object 143828> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 143828> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 144099> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 144303> (__getElement (get (quote getElement) (get (quote __context) __context))))
> 1def args: : (<object 144700> (env (if (null? @) # (car @))))
>         def args: : (<object 144807> (env (if (null? @) # (car @))))
> 1def args: : (<object 144914> (env (if (null? @) # (car @))))
>         def args: : (<object 145021> (env (if (null? @) # (car @))))
> 0def args: : (<object 145128> (env (if (null? @) # (car @))))
>         def args: : (<object 145235> (env (if (null? @) # (car @))))
> 1def args: : (<object 145342> (env (if (null? @) # (car @))))
> 
> def args: : (<object 145540> (env (if (null? @) # (car @))))
> 
> def args: : (<object 145899> (env (if (null? @) # (car @))))
> def args: : (<object 146018> (i))
> def args: : (<object 146018> (a (wire)))
> def args: : (<object 146063> (oldSet set))
> def args: : (<object 146063> (value 0))
> def args: : (<object 146063> (downstream ))
> def args: : (<object 146063> ((register object) (oldSet (quote downstream) (cons object downstream)) ((object (quote recalculate)))))
> def args: : (<object 146063> ((inform object) ((object (quote recalculate)))))
> def args: : (<object 146063> ((set newValue) (define d) (if (!= newValue value) (begin (oldSet (quote value) newValue) (map inform downstream)))))
> def args: : (<object 146063> ((get) value))
> def args: : (<object 146018> (b (wire)))
> def args: : (<object 146211> (oldSet set))
> def args: : (<object 146211> (value 0))
> def args: : (<object 146211> (downstream ))
> def args: : (<object 146211> ((register object) (oldSet (quote downstream) (cons object downstream)) ((object (quote recalculate)))))
> def args: : (<object 146211> ((inform object) ((object (quote recalculate)))))
> def args: : (<object 146211> ((set newValue) (define d) (if (!= newValue value) (begin (oldSet (quote value) newValue) (map inform downstream)))))
> def args: : (<object 146211> ((get) value))
> def args: : (<object 146018> (carry-in (wire)))
> def args: : (<object 146359> (oldSet set))
> def args: : (<object 146359> (value 0))
> def args: : (<object 146359> (downstream ))
> def args: : (<object 146359> ((register object) (oldSet (quote downstream) (cons object downstream)) ((object (quote recalculate)))))
> def args: : (<object 146359> ((inform object) ((object (quote recalculate)))))
> def args: : (<object 146359> ((set newValue) (define d) (if (!= newValue value) (begin (oldSet (quote value) newValue) (map inform downstream)))))
> def args: : (<object 146359> ((get) value))
> def args: : (<object 146018> (sum (wire)))
> def args: : (<object 146507> (oldSet set))
> def args: : (<object 146507> (value 0))
> def args: : (<object 146507> (downstream ))
> def args: : (<object 146507> ((register object) (oldSet (quote downstream) (cons object downstream)) ((object (quote recalculate)))))
> def args: : (<object 146507> ((inform object) ((object (quote recalculate)))))
> def args: : (<object 146507> ((set newValue) (define d) (if (!= newValue value) (begin (oldSet (quote value) newValue) (map inform downstream)))))
> def args: : (<object 146507> ((get) value))
> def args: : (<object 146018> (carry-out (wire)))
> def args: : (<object 146655> (oldSet set))
> def args: : (<object 146655> (value 0))
> def args: : (<object 146655> (downstream ))
> def args: : (<object 146655> ((register object) (oldSet (quote downstream) (cons object downstream)) ((object (quote recalculate)))))
> def args: : (<object 146655> ((inform object) ((object (quote recalculate)))))
> def args: : (<object 146655> ((set newValue) (define d) (if (!= newValue value) (begin (oldSet (quote value) newValue) (map inform downstream)))))
> def args: : (<object 146655> ((get) value))
> def args: : (<object 146018> (simulator (agenda)))
> def args: : (<object 146803> (time 0))
> def args: : (<object 146803> (actions (priorityQueue)))
> def args: : (<object 146843> (items))
> def args: : (<object 146843> ((bundle data rank next) this))
> def args: : (<object 146843> ((dequeue) (define item) (set (quote item) (items (quote next) (quote data))) (set* items (quote next) (items (quote next) (quote next))) item))
> def args: : (<object 146843> ((enqueue item rank) (define prefix items) (define suffix (items (quote next))) (define package (bundle item rank )) (while (and (valid? suffix) (>= rank (suffix (quote rank)))) (set (quote prefix) suffix) (set (quote suffix) (suffix (quote next)))) (set* prefix (quote next) package) (set* package (quote next) suffix)))
> def args: : (<object 146843> ((peekItem) (items (quote next) (quote data))))
> def args: : (<object 146843> ((peekRank) (items (quote next) (quote rank))))
> def args: : (<object 146843> ((empty) (null? (items (quote next)))))
> def args: : (<object 146803> ((schedule # $action delay) (define result (thunk $action #)) ((actions (quote enqueue)) result (+ time delay))))
> def args: : (<object 146803> ((run) (while (not ((actions (quote empty)))) (set (quote time) ((actions (quote peekRank)))) (define result ((actions (quote dequeue)))) (force result)) (set (quote time) 0)))
> def args: : (<object 146018> (inputs (array (array 0 0 0) (array 0 0 1) (array 0 1 0) (array 0 1 1) (array 1 0 0) (array 1 0 1) (array 1 1 0) (array 1 1 1))))
> a       b       c-in    sum     c-outdef args: : (<object 147307> (env (if (null? @) # (car @))))
> 
> def args: : (<object 147505> (env (if (null? @) # (car @))))
> def args: : (<object 147621> (ha1->ha2 (wire)))
> def args: : (<object 147656> (oldSet set))
> def args: : (<object 147656> (value 0))
> def args: : (<object 147656> (downstream ))
> def args: : (<object 147656> ((register object) (oldSet (quote downstream) (cons object downstream)) ((object (quote recalculate)))))
> def args: : (<object 147656> ((inform object) ((object (quote recalculate)))))
> def args: : (<object 147656> ((set newValue) (define d) (if (!= newValue value) (begin (oldSet (quote value) newValue) (map inform downstream)))))
> def args: : (<object 147656> ((get) value))
> def args: : (<object 147621> (ha1->or (wire)))
> def args: : (<object 147804> (oldSet set))
> def args: : (<object 147804> (value 0))
> def args: : (<object 147804> (downstream ))
> def args: : (<object 147804> ((register object) (oldSet (quote downstream) (cons object downstream)) ((object (quote recalculate)))))
> def args: : (<object 147804> ((inform object) ((object (quote recalculate)))))
> def args: : (<object 147804> ((set newValue) (define d) (if (!= newValue value) (begin (oldSet (quote value) newValue) (map inform downstream)))))
> def args: : (<object 147804> ((get) value))
> def args: : (<object 147621> (ha2->or (wire)))
> def args: : (<object 147952> (oldSet set))
> def args: : (<object 147952> (value 0))
> def args: : (<object 147952> (downstream ))
> def args: : (<object 147952> ((register object) (oldSet (quote downstream) (cons object downstream)) ((object (quote recalculate)))))
> def args: : (<object 147952> ((inform object) ((object (quote recalculate)))))
> def args: : (<object 147952> ((set newValue) (define d) (if (!= newValue value) (begin (oldSet (quote value) newValue) (map inform downstream)))))
> def args: : (<object 147952> ((get) value))
> def args: : (<object 148101> (or->and (wire)))
> def args: : (<object 148136> (oldSet set))
> def args: : (<object 148136> (value 0))
> def args: : (<object 148136> (downstream ))
> def args: : (<object 148136> ((register object) (oldSet (quote downstream) (cons object downstream)) ((object (quote recalculate)))))
> def args: : (<object 148136> ((inform object) ((object (quote recalculate)))))
> def args: : (<object 148136> ((set newValue) (define d) (if (!= newValue value) (begin (oldSet (quote value) newValue) (map inform downstream)))))
> def args: : (<object 148136> ((get) value))
> def args: : (<object 148101> (not->and (wire)))
> def args: : (<object 148284> (oldSet set))
> def args: : (<object 148284> (value 0))
> def args: : (<object 148284> (downstream ))
> def args: : (<object 148284> ((register object) (oldSet (quote downstream) (cons object downstream)) ((object (quote recalculate)))))
> def args: : (<object 148284> ((inform object) ((object (quote recalculate)))))
> def args: : (<object 148284> ((set newValue) (define d) (if (!= newValue value) (begin (oldSet (quote value) newValue) (map inform downstream)))))
> def args: : (<object 148284> ((get) value))
> def args: : (<object 148432> (delay 4))
> def args: : (<object 148432> ((recalculate) (if (and (== ((in1 (quote get))) 1) (== ((in2 (quote get))) 1)) ((agenda (quote schedule)) ((out (quote set)) 1) delay) ((agenda (quote schedule)) ((out (quote set)) 0) delay))))
> def args: : (<object 148577> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 148755> (result (thunk $action #)))
> def args: : (<object 148788> (memo #f))
> def args: : (<object 148849> (prefix items))
> def args: : (<object 148849> (suffix (items (quote next))))
> def args: : (<object 148849> (package (bundle item rank )))
> def args: : (<object 148947> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 149109> (obj (car @)))
> def args: : (<object 149109> (fields (cdr @)))
> def args: : (<object 149730> (obj (car @)))
> def args: : (<object 149730> (fields (cdr @)))
> def args: : (<object 150425> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 150603> (result (thunk $action #)))
> def args: : (<object 150636> (memo #f))
> def args: : (<object 150697> (prefix items))
> def args: : (<object 150697> (suffix (items (quote next))))
> def args: : (<object 150697> (package (bundle item rank )))
> def args: : (<object 150795> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 151089> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 151251> (obj (car @)))
> def args: : (<object 151251> (fields (cdr @)))
> def args: : (<object 151872> (obj (car @)))
> def args: : (<object 151872> (fields (cdr @)))
> def args: : (<object 152518> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 152696> (result (thunk $action #)))
> def args: : (<object 152729> (memo #f))
> def args: : (<object 152790> (prefix items))
> def args: : (<object 152790> (suffix (items (quote next))))
> def args: : (<object 152790> (package (bundle item rank )))
> def args: : (<object 152888> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 153182> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 153476> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 153638> (obj (car @)))
> def args: : (<object 153638> (fields (cdr @)))
> def args: : (<object 154259> (obj (car @)))
> def args: : (<object 154259> (fields (cdr @)))
> def args: : (<object 154879> (delay 3))
> def args: : (<object 154879> ((recalculate) (if (or (== ((in1 (quote get))) 1) (== ((in2 (quote get))) 1)) ((agenda (quote schedule)) ((out (quote set)) 1) delay) ((agenda (quote schedule)) ((out (quote set)) 0) delay))))
> def args: : (<object 155023> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 155357> (result (thunk $action #)))
> def args: : (<object 155390> (memo #f))
> def args: : (<object 155451> (prefix items))
> def args: : (<object 155451> (suffix (items (quote next))))
> def args: : (<object 155451> (package (bundle item rank )))
> def args: : (<object 155549> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 155780> (obj (car @)))
> def args: : (<object 155780> (fields (cdr @)))
> def args: : (<object 156401> (obj (car @)))
> def args: : (<object 156401> (fields (cdr @)))
> def args: : (<object 157096> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 157430> (result (thunk $action #)))
> def args: : (<object 157463> (memo #f))
> def args: : (<object 157524> (prefix items))
> def args: : (<object 157524> (suffix (items (quote next))))
> def args: : (<object 157524> (package (bundle item rank )))
> def args: : (<object 157622> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 157916> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 158147> (obj (car @)))
> def args: : (<object 158147> (fields (cdr @)))
> def args: : (<object 158768> (obj (car @)))
> def args: : (<object 158768> (fields (cdr @)))
> def args: : (<object 159387> (delay 1))
> def args: : (<object 159387> ((recalculate) (if (== ((in (quote get))) 0) ((agenda (quote schedule)) ((out (quote set)) 1) delay) ((agenda (quote schedule)) ((out (quote set)) 0) delay))))
> def args: : (<object 159585> (result (thunk $action #)))
> def args: : (<object 159618> (memo #f))
> def args: : (<object 159679> (prefix items))
> def args: : (<object 159679> (suffix (items (quote next))))
> def args: : (<object 159679> (package (bundle item rank )))
> def args: : (<object 159777> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 160008> (obj (car @)))
> def args: : (<object 160008> (fields (cdr @)))
> def args: : (<object 160629> (obj (car @)))
> def args: : (<object 160629> (fields (cdr @)))
> def args: : (<object 161258> (delay 4))
> def args: : (<object 161258> ((recalculate) (if (and (== ((in1 (quote get))) 1) (== ((in2 (quote get))) 1)) ((agenda (quote schedule)) ((out (quote set)) 1) delay) ((agenda (quote schedule)) ((out (quote set)) 0) delay))))
> def args: : (<object 161403> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 161581> (result (thunk $action #)))
> def args: : (<object 161614> (memo #f))
> def args: : (<object 161675> (prefix items))
> def args: : (<object 161675> (suffix (items (quote next))))
> def args: : (<object 161675> (package (bundle item rank )))
> def args: : (<object 161773> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 162067> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 162361> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 162655> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 162949> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 163243> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 163537> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 163699> (obj (car @)))
> def args: : (<object 163699> (fields (cdr @)))
> def args: : (<object 164320> (obj (car @)))
> def args: : (<object 164320> (fields (cdr @)))
> def args: : (<object 165015> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 165193> (result (thunk $action #)))
> def args: : (<object 165226> (memo #f))
> def args: : (<object 165287> (prefix items))
> def args: : (<object 165287> (suffix (items (quote next))))
> def args: : (<object 165287> (package (bundle item rank )))
> def args: : (<object 165385> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 165679> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 165973> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 166267> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 166561> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 166855> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 167149> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 167443> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 167605> (obj (car @)))
> def args: : (<object 167605> (fields (cdr @)))
> def args: : (<object 168226> (obj (car @)))
> def args: : (<object 168226> (fields (cdr @)))
> def args: : (<object 168872> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 169050> (result (thunk $action #)))
> def args: : (<object 169083> (memo #f))
> def args: : (<object 169144> (prefix items))
> def args: : (<object 169144> (suffix (items (quote next))))
> def args: : (<object 169144> (package (bundle item rank )))
> def args: : (<object 169242> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 169536> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 169830> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 170124> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 170418> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 170712> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 171006> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 171300> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 171594> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 171756> (obj (car @)))
> def args: : (<object 171756> (fields (cdr @)))
> def args: : (<object 172377> (obj (car @)))
> def args: : (<object 172377> (fields (cdr @)))
> def args: : (<object 172998> (or->and (wire)))
> def args: : (<object 173033> (oldSet set))
> def args: : (<object 173033> (value 0))
> def args: : (<object 173033> (downstream ))
> def args: : (<object 173033> ((register object) (oldSet (quote downstream) (cons object downstream)) ((object (quote recalculate)))))
> def args: : (<object 173033> ((inform object) ((object (quote recalculate)))))
> def args: : (<object 173033> ((set newValue) (define d) (if (!= newValue value) (begin (oldSet (quote value) newValue) (map inform downstream)))))
> def args: : (<object 173033> ((get) value))
> def args: : (<object 172998> (not->and (wire)))
> def args: : (<object 173181> (oldSet set))
> def args: : (<object 173181> (value 0))
> def args: : (<object 173181> (downstream ))
> def args: : (<object 173181> ((register object) (oldSet (quote downstream) (cons object downstream)) ((object (quote recalculate)))))
> def args: : (<object 173181> ((inform object) ((object (quote recalculate)))))
> def args: : (<object 173181> ((set newValue) (define d) (if (!= newValue value) (begin (oldSet (quote value) newValue) (map inform downstream)))))
> def args: : (<object 173181> ((get) value))
> def args: : (<object 173329> (delay 4))
> def args: : (<object 173329> ((recalculate) (if (and (== ((in1 (quote get))) 1) (== ((in2 (quote get))) 1)) ((agenda (quote schedule)) ((out (quote set)) 1) delay) ((agenda (quote schedule)) ((out (quote set)) 0) delay))))
> def args: : (<object 173474> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 173652> (result (thunk $action #)))
> def args: : (<object 173685> (memo #f))
> def args: : (<object 173746> (prefix items))
> def args: : (<object 173746> (suffix (items (quote next))))
> def args: : (<object 173746> (package (bundle item rank )))
> def args: : (<object 173844> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 174138> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 174432> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 174726> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 175020> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 175314> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 175608> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 175902> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 176196> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 176490> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 176652> (obj (car @)))
> def args: : (<object 176652> (fields (cdr @)))
> def args: : (<object 177273> (obj (car @)))
> def args: : (<object 177273> (fields (cdr @)))
> def args: : (<object 177968> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 178146> (result (thunk $action #)))
> def args: : (<object 178179> (memo #f))
> def args: : (<object 178240> (prefix items))
> def args: : (<object 178240> (suffix (items (quote next))))
> def args: : (<object 178240> (package (bundle item rank )))
> def args: : (<object 178338> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 178632> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 178926> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 179220> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 179514> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 179808> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 180102> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 180396> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 180690> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 180984> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 181278> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 181440> (obj (car @)))
> def args: : (<object 181440> (fields (cdr @)))
> def args: : (<object 182061> (obj (car @)))
> def args: : (<object 182061> (fields (cdr @)))
> def args: : (<object 182707> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 182885> (result (thunk $action #)))
> def args: : (<object 182918> (memo #f))
> def args: : (<object 182979> (prefix items))
> def args: : (<object 182979> (suffix (items (quote next))))
> def args: : (<object 182979> (package (bundle item rank )))
> def args: : (<object 183077> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 183371> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 183665> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 183959> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 184253> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 184547> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 184841> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 185135> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 185429> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 185723> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 186017> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 186311> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 186473> (obj (car @)))
> def args: : (<object 186473> (fields (cdr @)))
> def args: : (<object 187094> (obj (car @)))
> def args: : (<object 187094> (fields (cdr @)))
> def args: : (<object 187714> (delay 3))
> def args: : (<object 187714> ((recalculate) (if (or (== ((in1 (quote get))) 1) (== ((in2 (quote get))) 1)) ((agenda (quote schedule)) ((out (quote set)) 1) delay) ((agenda (quote schedule)) ((out (quote set)) 0) delay))))
> def args: : (<object 187858> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 188192> (result (thunk $action #)))
> def args: : (<object 188225> (memo #f))
> def args: : (<object 188286> (prefix items))
> def args: : (<object 188286> (suffix (items (quote next))))
> def args: : (<object 188286> (package (bundle item rank )))
> def args: : (<object 188384> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 188678> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 188972> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 189266> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 189497> (obj (car @)))
> def args: : (<object 189497> (fields (cdr @)))
> def args: : (<object 190118> (obj (car @)))
> def args: : (<object 190118> (fields (cdr @)))
> def args: : (<object 190813> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 191147> (result (thunk $action #)))
> def args: : (<object 191180> (memo #f))
> def args: : (<object 191241> (prefix items))
> def args: : (<object 191241> (suffix (items (quote next))))
> def args: : (<object 191241> (package (bundle item rank )))
> def args: : (<object 191339> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 191633> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 191927> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 192221> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 192515> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 192746> (obj (car @)))
> def args: : (<object 192746> (fields (cdr @)))
> def args: : (<object 193367> (obj (car @)))
> def args: : (<object 193367> (fields (cdr @)))
> def args: : (<object 193986> (delay 1))
> def args: : (<object 193986> ((recalculate) (if (== ((in (quote get))) 0) ((agenda (quote schedule)) ((out (quote set)) 1) delay) ((agenda (quote schedule)) ((out (quote set)) 0) delay))))
> def args: : (<object 194184> (result (thunk $action #)))
> def args: : (<object 194217> (memo #f))
> def args: : (<object 194278> (prefix items))
> def args: : (<object 194278> (suffix (items (quote next))))
> def args: : (<object 194278> (package (bundle item rank )))
> def args: : (<object 194376> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 194670> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 194901> (obj (car @)))
> def args: : (<object 194901> (fields (cdr @)))
> def args: : (<object 195522> (obj (car @)))
> def args: : (<object 195522> (fields (cdr @)))
> def args: : (<object 196151> (delay 4))
> def args: : (<object 196151> ((recalculate) (if (and (== ((in1 (quote get))) 1) (== ((in2 (quote get))) 1)) ((agenda (quote schedule)) ((out (quote set)) 1) delay) ((agenda (quote schedule)) ((out (quote set)) 0) delay))))
> def args: : (<object 196296> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 196474> (result (thunk $action #)))
> def args: : (<object 196507> (memo #f))
> def args: : (<object 196568> (prefix items))
> def args: : (<object 196568> (suffix (items (quote next))))
> def args: : (<object 196568> (package (bundle item rank )))
> def args: : (<object 196666> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 196960> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 197254> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 197548> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 197842> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 198136> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 198430> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 198724> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 199018> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 199312> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 199606> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 199900> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 200194> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 200488> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 200782> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 201076> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 201238> (obj (car @)))
> def args: : (<object 201238> (fields (cdr @)))
> def args: : (<object 201859> (obj (car @)))
> def args: : (<object 201859> (fields (cdr @)))
> def args: : (<object 202554> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 202732> (result (thunk $action #)))
> def args: : (<object 202765> (memo #f))
> def args: : (<object 202826> (prefix items))
> def args: : (<object 202826> (suffix (items (quote next))))
> def args: : (<object 202826> (package (bundle item rank )))
> def args: : (<object 202924> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 203218> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 203512> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 203806> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 204100> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 204394> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 204688> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 204982> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 205276> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 205570> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 205864> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 206158> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 206452> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 206746> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 207040> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 207334> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 207628> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 207790> (obj (car @)))
> def args: : (<object 207790> (fields (cdr @)))
> def args: : (<object 208411> (obj (car @)))
> def args: : (<object 208411> (fields (cdr @)))
> def args: : (<object 209057> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 209235> (result (thunk $action #)))
> def args: : (<object 209268> (memo #f))
> def args: : (<object 209329> (prefix items))
> def args: : (<object 209329> (suffix (items (quote next))))
> def args: : (<object 209329> (package (bundle item rank )))
> def args: : (<object 209427> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 209721> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 210015> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 210309> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 210603> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 210897> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 211191> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 211485> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 211779> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 212073> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 212367> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 212661> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 212955> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 213249> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 213543> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 213837> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 214131> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 214425> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 214587> (obj (car @)))
> def args: : (<object 214587> (fields (cdr @)))
> def args: : (<object 215208> (obj (car @)))
> def args: : (<object 215208> (fields (cdr @)))
> def args: : (<object 215837> (delay 3))
> def args: : (<object 215837> ((recalculate) (if (or (== ((in1 (quote get))) 1) (== ((in2 (quote get))) 1)) ((agenda (quote schedule)) ((out (quote set)) 1) delay) ((agenda (quote schedule)) ((out (quote set)) 0) delay))))
> def args: : (<object 215981> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 216315> (result (thunk $action #)))
> def args: : (<object 216348> (memo #f))
> def args: : (<object 216409> (prefix items))
> def args: : (<object 216409> (suffix (items (quote next))))
> def args: : (<object 216409> (package (bundle item rank )))
> def args: : (<object 216507> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 216801> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 217095> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 217389> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 217683> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 217977> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 218271> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 218502> (obj (car @)))
> def args: : (<object 218502> (fields (cdr @)))
> def args: : (<object 219123> (obj (car @)))
> def args: : (<object 219123> (fields (cdr @)))
> def args: : (<object 219818> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 220152> (result (thunk $action #)))
> def args: : (<object 220185> (memo #f))
> def args: : (<object 220246> (prefix items))
> def args: : (<object 220246> (suffix (items (quote next))))
> def args: : (<object 220246> (package (bundle item rank )))
> def args: : (<object 220344> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 220638> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 220932> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 221226> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 221520> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 221814> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 222108> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 222402> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 222633> (obj (car @)))
> def args: : (<object 222633> (fields (cdr @)))
> def args: : (<object 223254> (obj (car @)))
> def args: : (<object 223254> (fields (cdr @)))
> def args: : (<object 223894> (forresult ))
> def args: : (<object 224041> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 224242> (d))
> def args: : (<object 224353> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 224554> (d))
> def args: : (<object 224665> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 224866> (d))
> def args: : (<object 224973> (result ((actions (quote dequeue)))))
> def args: : (<object 225099> (item))
> def args: : (<object 225151> (obj (car @)))
> def args: : (<object 225151> (fields (cdr @)))
> def args: : (<object 225829> (d))
> def args: : (<object 225907> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 225907> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 226131> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 226309> (result (thunk $action #)))
> def args: : (<object 226342> (memo #f))
> def args: : (<object 226403> (prefix items))
> def args: : (<object 226403> (suffix (items (quote next))))
> def args: : (<object 226403> (package (bundle item rank )))
> def args: : (<object 226501> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 226795> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 227089> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 227383> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 227677> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 227971> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 228265> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 228559> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 228853> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 229147> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 229441> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 229735> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 230029> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 230323> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 230617> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 230911> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 231205> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 231499> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 231793> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 232087> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 232249> (obj (car @)))
> def args: : (<object 232249> (fields (cdr @)))
> def args: : (<object 232870> (obj (car @)))
> def args: : (<object 232870> (fields (cdr @)))
> def args: : (<object 224973> (result ((actions (quote dequeue)))))
> def args: : (<object 233624> (item))
> def args: : (<object 233676> (obj (car @)))
> def args: : (<object 233676> (fields (cdr @)))
> def args: : (<object 234354> (d))
> def args: : (<object 234432> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 234432> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 234656> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 234834> (result (thunk $action #)))
> def args: : (<object 234867> (memo #f))
> def args: : (<object 234928> (prefix items))
> def args: : (<object 234928> (suffix (items (quote next))))
> def args: : (<object 234928> (package (bundle item rank )))
> def args: : (<object 235026> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 235320> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 235614> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 235908> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 236202> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 236496> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 236790> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 237084> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 237378> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 237672> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 237966> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 238260> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 238554> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 238848> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 239142> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 239436> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 239730> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 240024> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 240318> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 240612> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 240774> (obj (car @)))
> def args: : (<object 240774> (fields (cdr @)))
> def args: : (<object 241395> (obj (car @)))
> def args: : (<object 241395> (fields (cdr @)))
> def args: : (<object 224973> (result ((actions (quote dequeue)))))
> def args: : (<object 242149> (item))
> def args: : (<object 242201> (obj (car @)))
> def args: : (<object 242201> (fields (cdr @)))
> def args: : (<object 242879> (d))
> def args: : (<object 224973> (result ((actions (quote dequeue)))))
> def args: : (<object 243020> (item))
> def args: : (<object 243072> (obj (car @)))
> def args: : (<object 243072> (fields (cdr @)))
> def args: : (<object 243750> (d))
> def args: : (<object 224973> (result ((actions (quote dequeue)))))
> def args: : (<object 243891> (item))
> def args: : (<object 243943> (obj (car @)))
> def args: : (<object 243943> (fields (cdr @)))
> def args: : (<object 244621> (d))
> def args: : (<object 224973> (result ((actions (quote dequeue)))))
> def args: : (<object 244762> (item))
> def args: : (<object 244814> (obj (car @)))
> def args: : (<object 244814> (fields (cdr @)))
> def args: : (<object 245492> (d))
> def args: : (<object 224973> (result ((actions (quote dequeue)))))
> def args: : (<object 245633> (item))
> def args: : (<object 245685> (obj (car @)))
> def args: : (<object 245685> (fields (cdr @)))
> def args: : (<object 246363> (d))
> def args: : (<object 224973> (result ((actions (quote dequeue)))))
> def args: : (<object 246504> (item))
> def args: : (<object 246556> (obj (car @)))
> def args: : (<object 246556> (fields (cdr @)))
> def args: : (<object 247234> (d))
> def args: : (<object 224973> (result ((actions (quote dequeue)))))
> def args: : (<object 247375> (item))
> def args: : (<object 247427> (obj (car @)))
> def args: : (<object 247427> (fields (cdr @)))
> def args: : (<object 248105> (d))
> def args: : (<object 224973> (result ((actions (quote dequeue)))))
> def args: : (<object 248246> (item))
> def args: : (<object 248298> (obj (car @)))
> def args: : (<object 248298> (fields (cdr @)))
> def args: : (<object 248976> (d))
> def args: : (<object 224973> (result ((actions (quote dequeue)))))
> def args: : (<object 249117> (item))
> def args: : (<object 249169> (obj (car @)))
> def args: : (<object 249169> (fields (cdr @)))
> def args: : (<object 249847> (d))
> def args: : (<object 224973> (result ((actions (quote dequeue)))))
> def args: : (<object 249988> (item))
> def args: : (<object 250040> (obj (car @)))
> def args: : (<object 250040> (fields (cdr @)))
> def args: : (<object 250718> (d))
> def args: : (<object 224973> (result ((actions (quote dequeue)))))
> def args: : (<object 250859> (item))
> def args: : (<object 250911> (obj (car @)))
> def args: : (<object 250911> (fields (cdr @)))
> def args: : (<object 251589> (d))
> def args: : (<object 224973> (result ((actions (quote dequeue)))))
> def args: : (<object 251730> (item))
> def args: : (<object 251782> (obj (car @)))
> def args: : (<object 251782> (fields (cdr @)))
> def args: : (<object 252460> (d))
> def args: : (<object 224973> (result ((actions (quote dequeue)))))
> def args: : (<object 252601> (item))
> def args: : (<object 252653> (obj (car @)))
> def args: : (<object 252653> (fields (cdr @)))
> def args: : (<object 253331> (d))
> def args: : (<object 224973> (result ((actions (quote dequeue)))))
> def args: : (<object 253472> (item))
> def args: : (<object 253524> (obj (car @)))
> def args: : (<object 253524> (fields (cdr @)))
> def args: : (<object 254202> (d))
> def args: : (<object 224973> (result ((actions (quote dequeue)))))
> def args: : (<object 254343> (item))
> def args: : (<object 254395> (obj (car @)))
> def args: : (<object 254395> (fields (cdr @)))
> def args: : (<object 255073> (d))
> def args: : (<object 224973> (result ((actions (quote dequeue)))))
> def args: : (<object 255214> (item))
> def args: : (<object 255266> (obj (car @)))
> def args: : (<object 255266> (fields (cdr @)))
> def args: : (<object 255944> (d))
> def args: : (<object 224973> (result ((actions (quote dequeue)))))
> def args: : (<object 256085> (item))
> def args: : (<object 256137> (obj (car @)))
> def args: : (<object 256137> (fields (cdr @)))
> def args: : (<object 256815> (d))
> def args: : (<object 224973> (result ((actions (quote dequeue)))))
> def args: : (<object 256956> (item))
> def args: : (<object 257008> (obj (car @)))
> def args: : (<object 257008> (fields (cdr @)))
> def args: : (<object 257686> (d))
> def args: : (<object 224973> (result ((actions (quote dequeue)))))
> def args: : (<object 257827> (item))
> def args: : (<object 257879> (obj (car @)))
> def args: : (<object 257879> (fields (cdr @)))
> def args: : (<object 258557> (d))
> def args: : (<object 224973> (result ((actions (quote dequeue)))))
> def args: : (<object 258698> (item))
> def args: : (<object 258750> (obj (car @)))
> def args: : (<object 258750> (fields (cdr @)))
> def args: : (<object 259428> (d))
> def args: : (<object 259601> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 259805> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 260009> (__getElement (get (quote getElement) (get (quote __context) __context))))
> 0def args: : (<object 260410> (env (if (null? @) # (car @))))
>         def args: : (<object 260517> (env (if (null? @) # (car @))))
> 0def args: : (<object 260624> (env (if (null? @) # (car @))))
>         def args: : (<object 260731> (env (if (null? @) # (car @))))
> 0def args: : (<object 260838> (env (if (null? @) # (car @))))
>         def args: : (<object 260945> (env (if (null? @) # (car @))))
> 0def args: : (<object 261052> (env (if (null? @) # (car @))))
>         def args: : (<object 261159> (env (if (null? @) # (car @))))
> 0def args: : (<object 261266> (env (if (null? @) # (car @))))
> 
> def args: : (<object 261464> (env (if (null? @) # (car @))))
> def args: : (<object 261706> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 261907> (d))
> def args: : (<object 262018> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 262219> (d))
> def args: : (<object 262330> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 262531> (d))
> def args: : (<object 262609> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 262609> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 262833> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 263115> (result (thunk $action #)))
> def args: : (<object 263148> (memo #f))
> def args: : (<object 263209> (prefix items))
> def args: : (<object 263209> (suffix (items (quote next))))
> def args: : (<object 263209> (package (bundle item rank )))
> def args: : (<object 263307> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 263469> (obj (car @)))
> def args: : (<object 263469> (fields (cdr @)))
> def args: : (<object 264090> (obj (car @)))
> def args: : (<object 264090> (fields (cdr @)))
> def args: : (<object 264826> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 265004> (result (thunk $action #)))
> def args: : (<object 265037> (memo #f))
> def args: : (<object 265098> (prefix items))
> def args: : (<object 265098> (suffix (items (quote next))))
> def args: : (<object 265098> (package (bundle item rank )))
> def args: : (<object 265196> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 265490> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 265652> (obj (car @)))
> def args: : (<object 265652> (fields (cdr @)))
> def args: : (<object 266273> (obj (car @)))
> def args: : (<object 266273> (fields (cdr @)))
> def args: : (<object 266996> (result ((actions (quote dequeue)))))
> def args: : (<object 267122> (item))
> def args: : (<object 267174> (obj (car @)))
> def args: : (<object 267174> (fields (cdr @)))
> def args: : (<object 267852> (d))
> def args: : (<object 267930> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 267930> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 268154> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 268488> (result (thunk $action #)))
> def args: : (<object 268521> (memo #f))
> def args: : (<object 268582> (prefix items))
> def args: : (<object 268582> (suffix (items (quote next))))
> def args: : (<object 268582> (package (bundle item rank )))
> def args: : (<object 268680> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 268974> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 269136> (obj (car @)))
> def args: : (<object 269136> (fields (cdr @)))
> def args: : (<object 269757> (obj (car @)))
> def args: : (<object 269757> (fields (cdr @)))
> def args: : (<object 266996> (result ((actions (quote dequeue)))))
> def args: : (<object 270511> (item))
> def args: : (<object 270563> (obj (car @)))
> def args: : (<object 270563> (fields (cdr @)))
> def args: : (<object 271241> (d))
> def args: : (<object 266996> (result ((actions (quote dequeue)))))
> def args: : (<object 271382> (item))
> def args: : (<object 271434> (obj (car @)))
> def args: : (<object 271434> (fields (cdr @)))
> def args: : (<object 272112> (d))
> def args: : (<object 272190> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 272190> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 272414> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 272696> (result (thunk $action #)))
> def args: : (<object 272729> (memo #f))
> def args: : (<object 272790> (prefix items))
> def args: : (<object 272790> (suffix (items (quote next))))
> def args: : (<object 272790> (package (bundle item rank )))
> def args: : (<object 272888> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 273050> (obj (car @)))
> def args: : (<object 273050> (fields (cdr @)))
> def args: : (<object 273671> (obj (car @)))
> def args: : (<object 273671> (fields (cdr @)))
> def args: : (<object 274407> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 274585> (result (thunk $action #)))
> def args: : (<object 274618> (memo #f))
> def args: : (<object 274679> (prefix items))
> def args: : (<object 274679> (suffix (items (quote next))))
> def args: : (<object 274679> (package (bundle item rank )))
> def args: : (<object 274777> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 275071> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 275233> (obj (car @)))
> def args: : (<object 275233> (fields (cdr @)))
> def args: : (<object 275854> (obj (car @)))
> def args: : (<object 275854> (fields (cdr @)))
> def args: : (<object 266996> (result ((actions (quote dequeue)))))
> def args: : (<object 276611> (item))
> def args: : (<object 276663> (obj (car @)))
> def args: : (<object 276663> (fields (cdr @)))
> def args: : (<object 277341> (d))
> def args: : (<object 277419> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 277419> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 277643> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 277977> (result (thunk $action #)))
> def args: : (<object 278010> (memo #f))
> def args: : (<object 278071> (prefix items))
> def args: : (<object 278071> (suffix (items (quote next))))
> def args: : (<object 278071> (package (bundle item rank )))
> def args: : (<object 278169> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 278463> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 278625> (obj (car @)))
> def args: : (<object 278625> (fields (cdr @)))
> def args: : (<object 279246> (obj (car @)))
> def args: : (<object 279246> (fields (cdr @)))
> def args: : (<object 266996> (result ((actions (quote dequeue)))))
> def args: : (<object 280000> (item))
> def args: : (<object 280052> (obj (car @)))
> def args: : (<object 280052> (fields (cdr @)))
> def args: : (<object 280730> (d))
> def args: : (<object 266996> (result ((actions (quote dequeue)))))
> def args: : (<object 280871> (item))
> def args: : (<object 280923> (obj (car @)))
> def args: : (<object 280923> (fields (cdr @)))
> def args: : (<object 281601> (d))
> def args: : (<object 281679> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 281679> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 281950> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 282154> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 282358> (__getElement (get (quote getElement) (get (quote __context) __context))))
> 0def args: : (<object 282759> (env (if (null? @) # (car @))))
>         def args: : (<object 282866> (env (if (null? @) # (car @))))
> 0def args: : (<object 282973> (env (if (null? @) # (car @))))
>         def args: : (<object 283080> (env (if (null? @) # (car @))))
> 1def args: : (<object 283187> (env (if (null? @) # (car @))))
>         def args: : (<object 283294> (env (if (null? @) # (car @))))
> 1def args: : (<object 283401> (env (if (null? @) # (car @))))
>         def args: : (<object 283508> (env (if (null? @) # (car @))))
> 0def args: : (<object 283615> (env (if (null? @) # (car @))))
> 
> def args: : (<object 283813> (env (if (null? @) # (car @))))
> def args: : (<object 284055> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 284256> (d))
> def args: : (<object 284367> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 284568> (d))
> def args: : (<object 284646> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 284646> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 284870> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 285048> (result (thunk $action #)))
> def args: : (<object 285081> (memo #f))
> def args: : (<object 285142> (prefix items))
> def args: : (<object 285142> (suffix (items (quote next))))
> def args: : (<object 285142> (package (bundle item rank )))
> def args: : (<object 285240> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 285402> (obj (car @)))
> def args: : (<object 285402> (fields (cdr @)))
> def args: : (<object 286023> (obj (car @)))
> def args: : (<object 286023> (fields (cdr @)))
> def args: : (<object 286759> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 287093> (result (thunk $action #)))
> def args: : (<object 287126> (memo #f))
> def args: : (<object 287187> (prefix items))
> def args: : (<object 287187> (suffix (items (quote next))))
> def args: : (<object 287187> (package (bundle item rank )))
> def args: : (<object 287285> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 287579> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 287741> (obj (car @)))
> def args: : (<object 287741> (fields (cdr @)))
> def args: : (<object 288362> (obj (car @)))
> def args: : (<object 288362> (fields (cdr @)))
> def args: : (<object 289089> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 289290> (d))
> def args: : (<object 289368> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 289368> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 289592> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 289770> (result (thunk $action #)))
> def args: : (<object 289803> (memo #f))
> def args: : (<object 289864> (prefix items))
> def args: : (<object 289864> (suffix (items (quote next))))
> def args: : (<object 289864> (package (bundle item rank )))
> def args: : (<object 289962> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 290256> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 290487> (obj (car @)))
> def args: : (<object 290487> (fields (cdr @)))
> def args: : (<object 291108> (obj (car @)))
> def args: : (<object 291108> (fields (cdr @)))
> def args: : (<object 291844> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 292126> (result (thunk $action #)))
> def args: : (<object 292159> (memo #f))
> def args: : (<object 292220> (prefix items))
> def args: : (<object 292220> (suffix (items (quote next))))
> def args: : (<object 292220> (package (bundle item rank )))
> def args: : (<object 292318> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 292612> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 292906> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 293200> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 293362> (obj (car @)))
> def args: : (<object 293362> (fields (cdr @)))
> def args: : (<object 293983> (obj (car @)))
> def args: : (<object 293983> (fields (cdr @)))
> def args: : (<object 294706> (result ((actions (quote dequeue)))))
> def args: : (<object 294832> (item))
> def args: : (<object 294884> (obj (car @)))
> def args: : (<object 294884> (fields (cdr @)))
> def args: : (<object 295562> (d))
> def args: : (<object 294706> (result ((actions (quote dequeue)))))
> def args: : (<object 295703> (item))
> def args: : (<object 295755> (obj (car @)))
> def args: : (<object 295755> (fields (cdr @)))
> def args: : (<object 296433> (d))
> def args: : (<object 294706> (result ((actions (quote dequeue)))))
> def args: : (<object 296574> (item))
> def args: : (<object 296626> (obj (car @)))
> def args: : (<object 296626> (fields (cdr @)))
> def args: : (<object 297304> (d))
> def args: : (<object 297382> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 297382> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 297606> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 297784> (result (thunk $action #)))
> def args: : (<object 297817> (memo #f))
> def args: : (<object 297878> (prefix items))
> def args: : (<object 297878> (suffix (items (quote next))))
> def args: : (<object 297878> (package (bundle item rank )))
> def args: : (<object 297976> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 298270> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 298432> (obj (car @)))
> def args: : (<object 298432> (fields (cdr @)))
> def args: : (<object 299053> (obj (car @)))
> def args: : (<object 299053> (fields (cdr @)))
> def args: : (<object 299844> (result (thunk $action #)))
> def args: : (<object 299877> (memo #f))
> def args: : (<object 299938> (prefix items))
> def args: : (<object 299938> (suffix (items (quote next))))
> def args: : (<object 299938> (package (bundle item rank )))
> def args: : (<object 300036> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 300330> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 300561> (obj (car @)))
> def args: : (<object 300561> (fields (cdr @)))
> def args: : (<object 301182> (obj (car @)))
> def args: : (<object 301182> (fields (cdr @)))
> def args: : (<object 294706> (result ((actions (quote dequeue)))))
> def args: : (<object 301939> (item))
> def args: : (<object 301991> (obj (car @)))
> def args: : (<object 301991> (fields (cdr @)))
> def args: : (<object 302669> (d))
> def args: : (<object 302747> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 302747> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 302971> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 303305> (result (thunk $action #)))
> def args: : (<object 303338> (memo #f))
> def args: : (<object 303399> (prefix items))
> def args: : (<object 303399> (suffix (items (quote next))))
> def args: : (<object 303399> (package (bundle item rank )))
> def args: : (<object 303497> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 303791> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 304085> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 304247> (obj (car @)))
> def args: : (<object 304247> (fields (cdr @)))
> def args: : (<object 304868> (obj (car @)))
> def args: : (<object 304868> (fields (cdr @)))
> def args: : (<object 305659> (result (thunk $action #)))
> def args: : (<object 305692> (memo #f))
> def args: : (<object 305753> (prefix items))
> def args: : (<object 305753> (suffix (items (quote next))))
> def args: : (<object 305753> (package (bundle item rank )))
> def args: : (<object 305851> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 306145> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 306376> (obj (car @)))
> def args: : (<object 306376> (fields (cdr @)))
> def args: : (<object 306997> (obj (car @)))
> def args: : (<object 306997> (fields (cdr @)))
> def args: : (<object 294706> (result ((actions (quote dequeue)))))
> def args: : (<object 307754> (item))
> def args: : (<object 307806> (obj (car @)))
> def args: : (<object 307806> (fields (cdr @)))
> def args: : (<object 308484> (d))
> def args: : (<object 308562> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 308562> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 308786> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 309068> (result (thunk $action #)))
> def args: : (<object 309101> (memo #f))
> def args: : (<object 309162> (prefix items))
> def args: : (<object 309162> (suffix (items (quote next))))
> def args: : (<object 309162> (package (bundle item rank )))
> def args: : (<object 309260> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 309554> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 309848> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 310142> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 310304> (obj (car @)))
> def args: : (<object 310304> (fields (cdr @)))
> def args: : (<object 310925> (obj (car @)))
> def args: : (<object 310925> (fields (cdr @)))
> def args: : (<object 294706> (result ((actions (quote dequeue)))))
> def args: : (<object 311679> (item))
> def args: : (<object 311731> (obj (car @)))
> def args: : (<object 311731> (fields (cdr @)))
> def args: : (<object 312409> (d))
> def args: : (<object 312487> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 312487> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 312711> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 313045> (result (thunk $action #)))
> def args: : (<object 313078> (memo #f))
> def args: : (<object 313139> (prefix items))
> def args: : (<object 313139> (suffix (items (quote next))))
> def args: : (<object 313139> (package (bundle item rank )))
> def args: : (<object 313237> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 313531> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 313825> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 314119> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 314281> (obj (car @)))
> def args: : (<object 314281> (fields (cdr @)))
> def args: : (<object 314902> (obj (car @)))
> def args: : (<object 314902> (fields (cdr @)))
> def args: : (<object 294706> (result ((actions (quote dequeue)))))
> def args: : (<object 315656> (item))
> def args: : (<object 315708> (obj (car @)))
> def args: : (<object 315708> (fields (cdr @)))
> def args: : (<object 316386> (d))
> def args: : (<object 316464> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 316464> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 294706> (result ((actions (quote dequeue)))))
> def args: : (<object 316703> (item))
> def args: : (<object 316755> (obj (car @)))
> def args: : (<object 316755> (fields (cdr @)))
> def args: : (<object 317433> (d))
> def args: : (<object 317511> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 317511> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 294706> (result ((actions (quote dequeue)))))
> def args: : (<object 317750> (item))
> def args: : (<object 317802> (obj (car @)))
> def args: : (<object 317802> (fields (cdr @)))
> def args: : (<object 318480> (d))
> def args: : (<object 318558> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 318558> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 318782> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 319116> (result (thunk $action #)))
> def args: : (<object 319149> (memo #f))
> def args: : (<object 319210> (prefix items))
> def args: : (<object 319210> (suffix (items (quote next))))
> def args: : (<object 319210> (package (bundle item rank )))
> def args: : (<object 319308> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 319602> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 319764> (obj (car @)))
> def args: : (<object 319764> (fields (cdr @)))
> def args: : (<object 320385> (obj (car @)))
> def args: : (<object 320385> (fields (cdr @)))
> def args: : (<object 321121> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 321299> (result (thunk $action #)))
> def args: : (<object 321332> (memo #f))
> def args: : (<object 321393> (prefix items))
> def args: : (<object 321393> (suffix (items (quote next))))
> def args: : (<object 321393> (package (bundle item rank )))
> def args: : (<object 321491> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 321785> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 322079> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 322241> (obj (car @)))
> def args: : (<object 322241> (fields (cdr @)))
> def args: : (<object 322862> (obj (car @)))
> def args: : (<object 322862> (fields (cdr @)))
> def args: : (<object 294706> (result ((actions (quote dequeue)))))
> def args: : (<object 323619> (item))
> def args: : (<object 323671> (obj (car @)))
> def args: : (<object 323671> (fields (cdr @)))
> def args: : (<object 324349> (d))
> def args: : (<object 324427> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 324427> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 324651> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 324933> (result (thunk $action #)))
> def args: : (<object 324966> (memo #f))
> def args: : (<object 325027> (prefix items))
> def args: : (<object 325027> (suffix (items (quote next))))
> def args: : (<object 325027> (package (bundle item rank )))
> def args: : (<object 325125> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 325419> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 325650> (obj (car @)))
> def args: : (<object 325650> (fields (cdr @)))
> def args: : (<object 326271> (obj (car @)))
> def args: : (<object 326271> (fields (cdr @)))
> def args: : (<object 327007> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 327185> (result (thunk $action #)))
> def args: : (<object 327218> (memo #f))
> def args: : (<object 327279> (prefix items))
> def args: : (<object 327279> (suffix (items (quote next))))
> def args: : (<object 327279> (package (bundle item rank )))
> def args: : (<object 327377> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 327671> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 327965> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 328259> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 328421> (obj (car @)))
> def args: : (<object 328421> (fields (cdr @)))
> def args: : (<object 329042> (obj (car @)))
> def args: : (<object 329042> (fields (cdr @)))
> def args: : (<object 294706> (result ((actions (quote dequeue)))))
> def args: : (<object 329799> (item))
> def args: : (<object 329851> (obj (car @)))
> def args: : (<object 329851> (fields (cdr @)))
> def args: : (<object 330529> (d))
> def args: : (<object 330607> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 330607> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 330831> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 331009> (result (thunk $action #)))
> def args: : (<object 331042> (memo #f))
> def args: : (<object 331103> (prefix items))
> def args: : (<object 331103> (suffix (items (quote next))))
> def args: : (<object 331103> (package (bundle item rank )))
> def args: : (<object 331201> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 331495> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 331789> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 332083> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 332245> (obj (car @)))
> def args: : (<object 332245> (fields (cdr @)))
> def args: : (<object 332866> (obj (car @)))
> def args: : (<object 332866> (fields (cdr @)))
> def args: : (<object 294706> (result ((actions (quote dequeue)))))
> def args: : (<object 333620> (item))
> def args: : (<object 333672> (obj (car @)))
> def args: : (<object 333672> (fields (cdr @)))
> def args: : (<object 334350> (d))
> def args: : (<object 334428> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 334428> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 334652> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 334986> (result (thunk $action #)))
> def args: : (<object 335019> (memo #f))
> def args: : (<object 335080> (prefix items))
> def args: : (<object 335080> (suffix (items (quote next))))
> def args: : (<object 335080> (package (bundle item rank )))
> def args: : (<object 335178> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 335472> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 335766> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 336060> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 336222> (obj (car @)))
> def args: : (<object 336222> (fields (cdr @)))
> def args: : (<object 336843> (obj (car @)))
> def args: : (<object 336843> (fields (cdr @)))
> def args: : (<object 294706> (result ((actions (quote dequeue)))))
> def args: : (<object 337597> (item))
> def args: : (<object 337649> (obj (car @)))
> def args: : (<object 337649> (fields (cdr @)))
> def args: : (<object 338327> (d))
> def args: : (<object 294706> (result ((actions (quote dequeue)))))
> def args: : (<object 338468> (item))
> def args: : (<object 338520> (obj (car @)))
> def args: : (<object 338520> (fields (cdr @)))
> def args: : (<object 339198> (d))
> def args: : (<object 294706> (result ((actions (quote dequeue)))))
> def args: : (<object 339339> (item))
> def args: : (<object 339391> (obj (car @)))
> def args: : (<object 339391> (fields (cdr @)))
> def args: : (<object 340069> (d))
> def args: : (<object 340147> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 340147> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 294706> (result ((actions (quote dequeue)))))
> def args: : (<object 340386> (item))
> def args: : (<object 340438> (obj (car @)))
> def args: : (<object 340438> (fields (cdr @)))
> def args: : (<object 341116> (d))
> def args: : (<object 341194> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 341194> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 341465> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 341669> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 341873> (__getElement (get (quote getElement) (get (quote __context) __context))))
> 0def args: : (<object 342274> (env (if (null? @) # (car @))))
>         def args: : (<object 342381> (env (if (null? @) # (car @))))
> 1def args: : (<object 342488> (env (if (null? @) # (car @))))
>         def args: : (<object 342595> (env (if (null? @) # (car @))))
> 0def args: : (<object 342702> (env (if (null? @) # (car @))))
>         def args: : (<object 342809> (env (if (null? @) # (car @))))
> 1def args: : (<object 342916> (env (if (null? @) # (car @))))
>         def args: : (<object 343023> (env (if (null? @) # (car @))))
> 0def args: : (<object 343130> (env (if (null? @) # (car @))))
> 
> def args: : (<object 343328> (env (if (null? @) # (car @))))
> def args: : (<object 343570> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 343771> (d))
> def args: : (<object 343882> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 344083> (d))
> def args: : (<object 344194> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 344395> (d))
> def args: : (<object 344473> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 344473> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 344697> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 344875> (result (thunk $action #)))
> def args: : (<object 344908> (memo #f))
> def args: : (<object 344969> (prefix items))
> def args: : (<object 344969> (suffix (items (quote next))))
> def args: : (<object 344969> (package (bundle item rank )))
> def args: : (<object 345067> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 345229> (obj (car @)))
> def args: : (<object 345229> (fields (cdr @)))
> def args: : (<object 345850> (obj (car @)))
> def args: : (<object 345850> (fields (cdr @)))
> def args: : (<object 346586> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 346920> (result (thunk $action #)))
> def args: : (<object 346953> (memo #f))
> def args: : (<object 347014> (prefix items))
> def args: : (<object 347014> (suffix (items (quote next))))
> def args: : (<object 347014> (package (bundle item rank )))
> def args: : (<object 347112> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 347406> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 347568> (obj (car @)))
> def args: : (<object 347568> (fields (cdr @)))
> def args: : (<object 348189> (obj (car @)))
> def args: : (<object 348189> (fields (cdr @)))
> def args: : (<object 348912> (result ((actions (quote dequeue)))))
> def args: : (<object 349038> (item))
> def args: : (<object 349090> (obj (car @)))
> def args: : (<object 349090> (fields (cdr @)))
> def args: : (<object 349768> (d))
> def args: : (<object 348912> (result ((actions (quote dequeue)))))
> def args: : (<object 349909> (item))
> def args: : (<object 349961> (obj (car @)))
> def args: : (<object 349961> (fields (cdr @)))
> def args: : (<object 350639> (d))
> def args: : (<object 350717> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 350717> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 350941> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 351119> (result (thunk $action #)))
> def args: : (<object 351152> (memo #f))
> def args: : (<object 351213> (prefix items))
> def args: : (<object 351213> (suffix (items (quote next))))
> def args: : (<object 351213> (package (bundle item rank )))
> def args: : (<object 351311> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 351473> (obj (car @)))
> def args: : (<object 351473> (fields (cdr @)))
> def args: : (<object 352094> (obj (car @)))
> def args: : (<object 352094> (fields (cdr @)))
> def args: : (<object 352885> (result (thunk $action #)))
> def args: : (<object 352918> (memo #f))
> def args: : (<object 352979> (prefix items))
> def args: : (<object 352979> (suffix (items (quote next))))
> def args: : (<object 352979> (package (bundle item rank )))
> def args: : (<object 353077> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 353308> (obj (car @)))
> def args: : (<object 353308> (fields (cdr @)))
> def args: : (<object 353929> (obj (car @)))
> def args: : (<object 353929> (fields (cdr @)))
> def args: : (<object 348912> (result ((actions (quote dequeue)))))
> def args: : (<object 354686> (item))
> def args: : (<object 354738> (obj (car @)))
> def args: : (<object 354738> (fields (cdr @)))
> def args: : (<object 355416> (d))
> def args: : (<object 355494> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 355494> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 355718> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 356000> (result (thunk $action #)))
> def args: : (<object 356033> (memo #f))
> def args: : (<object 356094> (prefix items))
> def args: : (<object 356094> (suffix (items (quote next))))
> def args: : (<object 356094> (package (bundle item rank )))
> def args: : (<object 356192> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 356486> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 356648> (obj (car @)))
> def args: : (<object 356648> (fields (cdr @)))
> def args: : (<object 357269> (obj (car @)))
> def args: : (<object 357269> (fields (cdr @)))
> def args: : (<object 348912> (result ((actions (quote dequeue)))))
> def args: : (<object 358023> (item))
> def args: : (<object 358075> (obj (car @)))
> def args: : (<object 358075> (fields (cdr @)))
> def args: : (<object 358753> (d))
> def args: : (<object 358831> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 358831> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 348912> (result ((actions (quote dequeue)))))
> def args: : (<object 359070> (item))
> def args: : (<object 359122> (obj (car @)))
> def args: : (<object 359122> (fields (cdr @)))
> def args: : (<object 359800> (d))
> def args: : (<object 359878> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 359878> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 360102> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 360436> (result (thunk $action #)))
> def args: : (<object 360469> (memo #f))
> def args: : (<object 360530> (prefix items))
> def args: : (<object 360530> (suffix (items (quote next))))
> def args: : (<object 360530> (package (bundle item rank )))
> def args: : (<object 360628> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 360790> (obj (car @)))
> def args: : (<object 360790> (fields (cdr @)))
> def args: : (<object 361411> (obj (car @)))
> def args: : (<object 361411> (fields (cdr @)))
> def args: : (<object 362147> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 362325> (result (thunk $action #)))
> def args: : (<object 362358> (memo #f))
> def args: : (<object 362419> (prefix items))
> def args: : (<object 362419> (suffix (items (quote next))))
> def args: : (<object 362419> (package (bundle item rank )))
> def args: : (<object 362517> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 362811> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 362973> (obj (car @)))
> def args: : (<object 362973> (fields (cdr @)))
> def args: : (<object 363594> (obj (car @)))
> def args: : (<object 363594> (fields (cdr @)))
> def args: : (<object 348912> (result ((actions (quote dequeue)))))
> def args: : (<object 364351> (item))
> def args: : (<object 364403> (obj (car @)))
> def args: : (<object 364403> (fields (cdr @)))
> def args: : (<object 365081> (d))
> def args: : (<object 365159> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 365159> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 365383> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 365561> (result (thunk $action #)))
> def args: : (<object 365594> (memo #f))
> def args: : (<object 365655> (prefix items))
> def args: : (<object 365655> (suffix (items (quote next))))
> def args: : (<object 365655> (package (bundle item rank )))
> def args: : (<object 365753> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 366047> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 366209> (obj (car @)))
> def args: : (<object 366209> (fields (cdr @)))
> def args: : (<object 366830> (obj (car @)))
> def args: : (<object 366830> (fields (cdr @)))
> def args: : (<object 348912> (result ((actions (quote dequeue)))))
> def args: : (<object 367584> (item))
> def args: : (<object 367636> (obj (car @)))
> def args: : (<object 367636> (fields (cdr @)))
> def args: : (<object 368314> (d))
> def args: : (<object 348912> (result ((actions (quote dequeue)))))
> def args: : (<object 368455> (item))
> def args: : (<object 368507> (obj (car @)))
> def args: : (<object 368507> (fields (cdr @)))
> def args: : (<object 369185> (d))
> def args: : (<object 369263> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 369263> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 369534> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 369738> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 369942> (__getElement (get (quote getElement) (get (quote __context) __context))))
> 0def args: : (<object 370343> (env (if (null? @) # (car @))))
>         def args: : (<object 370450> (env (if (null? @) # (car @))))
> 1def args: : (<object 370557> (env (if (null? @) # (car @))))
>         def args: : (<object 370664> (env (if (null? @) # (car @))))
> 1def args: : (<object 370771> (env (if (null? @) # (car @))))
>         def args: : (<object 370878> (env (if (null? @) # (car @))))
> 0def args: : (<object 370985> (env (if (null? @) # (car @))))
>         def args: : (<object 371092> (env (if (null? @) # (car @))))
> 1def args: : (<object 371199> (env (if (null? @) # (car @))))
> 
> def args: : (<object 371397> (env (if (null? @) # (car @))))
> def args: : (<object 371639> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 371840> (d))
> def args: : (<object 371918> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 371918> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 372142> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 372320> (result (thunk $action #)))
> def args: : (<object 372353> (memo #f))
> def args: : (<object 372414> (prefix items))
> def args: : (<object 372414> (suffix (items (quote next))))
> def args: : (<object 372414> (package (bundle item rank )))
> def args: : (<object 372512> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 372674> (obj (car @)))
> def args: : (<object 372674> (fields (cdr @)))
> def args: : (<object 373295> (obj (car @)))
> def args: : (<object 373295> (fields (cdr @)))
> def args: : (<object 374031> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 374313> (result (thunk $action #)))
> def args: : (<object 374346> (memo #f))
> def args: : (<object 374407> (prefix items))
> def args: : (<object 374407> (suffix (items (quote next))))
> def args: : (<object 374407> (package (bundle item rank )))
> def args: : (<object 374505> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 374799> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 374961> (obj (car @)))
> def args: : (<object 374961> (fields (cdr @)))
> def args: : (<object 375582> (obj (car @)))
> def args: : (<object 375582> (fields (cdr @)))
> def args: : (<object 376309> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 376510> (d))
> def args: : (<object 376588> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 376588> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 376812> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 377094> (result (thunk $action #)))
> def args: : (<object 377127> (memo #f))
> def args: : (<object 377188> (prefix items))
> def args: : (<object 377188> (suffix (items (quote next))))
> def args: : (<object 377188> (package (bundle item rank )))
> def args: : (<object 377286> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 377580> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 377811> (obj (car @)))
> def args: : (<object 377811> (fields (cdr @)))
> def args: : (<object 378432> (obj (car @)))
> def args: : (<object 378432> (fields (cdr @)))
> def args: : (<object 379168> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 379346> (result (thunk $action #)))
> def args: : (<object 379379> (memo #f))
> def args: : (<object 379440> (prefix items))
> def args: : (<object 379440> (suffix (items (quote next))))
> def args: : (<object 379440> (package (bundle item rank )))
> def args: : (<object 379538> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 379832> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 380126> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 380420> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 380582> (obj (car @)))
> def args: : (<object 380582> (fields (cdr @)))
> def args: : (<object 381203> (obj (car @)))
> def args: : (<object 381203> (fields (cdr @)))
> def args: : (<object 381930> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 382131> (d))
> def args: : (<object 382209> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 382209> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 382433> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 382767> (result (thunk $action #)))
> def args: : (<object 382800> (memo #f))
> def args: : (<object 382861> (prefix items))
> def args: : (<object 382861> (suffix (items (quote next))))
> def args: : (<object 382861> (package (bundle item rank )))
> def args: : (<object 382959> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 383253> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 383547> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 383778> (obj (car @)))
> def args: : (<object 383778> (fields (cdr @)))
> def args: : (<object 384399> (obj (car @)))
> def args: : (<object 384399> (fields (cdr @)))
> def args: : (<object 385135> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 385313> (result (thunk $action #)))
> def args: : (<object 385346> (memo #f))
> def args: : (<object 385407> (prefix items))
> def args: : (<object 385407> (suffix (items (quote next))))
> def args: : (<object 385407> (package (bundle item rank )))
> def args: : (<object 385505> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 385799> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 386093> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 386387> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 386681> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 386975> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 387137> (obj (car @)))
> def args: : (<object 387137> (fields (cdr @)))
> def args: : (<object 387758> (obj (car @)))
> def args: : (<object 387758> (fields (cdr @)))
> def args: : (<object 388481> (result ((actions (quote dequeue)))))
> def args: : (<object 388607> (item))
> def args: : (<object 388659> (obj (car @)))
> def args: : (<object 388659> (fields (cdr @)))
> def args: : (<object 389337> (d))
> def args: : (<object 389415> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 389415> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 389639> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 389973> (result (thunk $action #)))
> def args: : (<object 390006> (memo #f))
> def args: : (<object 390067> (prefix items))
> def args: : (<object 390067> (suffix (items (quote next))))
> def args: : (<object 390067> (package (bundle item rank )))
> def args: : (<object 390165> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 390459> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 390753> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 391047> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 391341> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 391635> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 391797> (obj (car @)))
> def args: : (<object 391797> (fields (cdr @)))
> def args: : (<object 392418> (obj (car @)))
> def args: : (<object 392418> (fields (cdr @)))
> def args: : (<object 388481> (result ((actions (quote dequeue)))))
> def args: : (<object 393172> (item))
> def args: : (<object 393224> (obj (car @)))
> def args: : (<object 393224> (fields (cdr @)))
> def args: : (<object 393902> (d))
> def args: : (<object 388481> (result ((actions (quote dequeue)))))
> def args: : (<object 394043> (item))
> def args: : (<object 394095> (obj (car @)))
> def args: : (<object 394095> (fields (cdr @)))
> def args: : (<object 394773> (d))
> def args: : (<object 394851> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 394851> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 395075> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 395253> (result (thunk $action #)))
> def args: : (<object 395286> (memo #f))
> def args: : (<object 395347> (prefix items))
> def args: : (<object 395347> (suffix (items (quote next))))
> def args: : (<object 395347> (package (bundle item rank )))
> def args: : (<object 395445> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 395739> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 396033> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 396327> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 396621> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 396783> (obj (car @)))
> def args: : (<object 396783> (fields (cdr @)))
> def args: : (<object 397404> (obj (car @)))
> def args: : (<object 397404> (fields (cdr @)))
> def args: : (<object 388481> (result ((actions (quote dequeue)))))
> def args: : (<object 398158> (item))
> def args: : (<object 398210> (obj (car @)))
> def args: : (<object 398210> (fields (cdr @)))
> def args: : (<object 398888> (d))
> def args: : (<object 388481> (result ((actions (quote dequeue)))))
> def args: : (<object 399029> (item))
> def args: : (<object 399081> (obj (car @)))
> def args: : (<object 399081> (fields (cdr @)))
> def args: : (<object 399759> (d))
> def args: : (<object 399837> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 399837> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 400061> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 400395> (result (thunk $action #)))
> def args: : (<object 400428> (memo #f))
> def args: : (<object 400489> (prefix items))
> def args: : (<object 400489> (suffix (items (quote next))))
> def args: : (<object 400489> (package (bundle item rank )))
> def args: : (<object 400587> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 400881> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 401175> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 401469> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 401631> (obj (car @)))
> def args: : (<object 401631> (fields (cdr @)))
> def args: : (<object 402252> (obj (car @)))
> def args: : (<object 402252> (fields (cdr @)))
> def args: : (<object 403043> (result (thunk $action #)))
> def args: : (<object 403076> (memo #f))
> def args: : (<object 403137> (prefix items))
> def args: : (<object 403137> (suffix (items (quote next))))
> def args: : (<object 403137> (package (bundle item rank )))
> def args: : (<object 403235> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 403529> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 403760> (obj (car @)))
> def args: : (<object 403760> (fields (cdr @)))
> def args: : (<object 404381> (obj (car @)))
> def args: : (<object 404381> (fields (cdr @)))
> def args: : (<object 388481> (result ((actions (quote dequeue)))))
> def args: : (<object 405138> (item))
> def args: : (<object 405190> (obj (car @)))
> def args: : (<object 405190> (fields (cdr @)))
> def args: : (<object 405868> (d))
> def args: : (<object 388481> (result ((actions (quote dequeue)))))
> def args: : (<object 406009> (item))
> def args: : (<object 406061> (obj (car @)))
> def args: : (<object 406061> (fields (cdr @)))
> def args: : (<object 406739> (d))
> def args: : (<object 406817> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 406817> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 407041> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 407219> (result (thunk $action #)))
> def args: : (<object 407252> (memo #f))
> def args: : (<object 407313> (prefix items))
> def args: : (<object 407313> (suffix (items (quote next))))
> def args: : (<object 407313> (package (bundle item rank )))
> def args: : (<object 407411> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 407705> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 407999> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 408293> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 408455> (obj (car @)))
> def args: : (<object 408455> (fields (cdr @)))
> def args: : (<object 409076> (obj (car @)))
> def args: : (<object 409076> (fields (cdr @)))
> def args: : (<object 388481> (result ((actions (quote dequeue)))))
> def args: : (<object 409830> (item))
> def args: : (<object 409882> (obj (car @)))
> def args: : (<object 409882> (fields (cdr @)))
> def args: : (<object 410560> (d))
> def args: : (<object 410638> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 410638> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 388481> (result ((actions (quote dequeue)))))
> def args: : (<object 410877> (item))
> def args: : (<object 410929> (obj (car @)))
> def args: : (<object 410929> (fields (cdr @)))
> def args: : (<object 411607> (d))
> def args: : (<object 388481> (result ((actions (quote dequeue)))))
> def args: : (<object 411748> (item))
> def args: : (<object 411800> (obj (car @)))
> def args: : (<object 411800> (fields (cdr @)))
> def args: : (<object 412478> (d))
> def args: : (<object 412556> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 412556> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 388481> (result ((actions (quote dequeue)))))
> def args: : (<object 412795> (item))
> def args: : (<object 412847> (obj (car @)))
> def args: : (<object 412847> (fields (cdr @)))
> def args: : (<object 413525> (d))
> def args: : (<object 413698> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 413902> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 414106> (__getElement (get (quote getElement) (get (quote __context) __context))))
> 1def args: : (<object 414507> (env (if (null? @) # (car @))))
>         def args: : (<object 414614> (env (if (null? @) # (car @))))
> 0def args: : (<object 414721> (env (if (null? @) # (car @))))
>         def args: : (<object 414828> (env (if (null? @) # (car @))))
> 0def args: : (<object 414935> (env (if (null? @) # (car @))))
>         def args: : (<object 415042> (env (if (null? @) # (car @))))
> 1def args: : (<object 415149> (env (if (null? @) # (car @))))
>         def args: : (<object 415256> (env (if (null? @) # (car @))))
> 0def args: : (<object 415363> (env (if (null? @) # (car @))))
> 
> def args: : (<object 415561> (env (if (null? @) # (car @))))
> def args: : (<object 415803> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 416004> (d))
> def args: : (<object 416115> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 416316> (d))
> def args: : (<object 416427> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 416628> (d))
> def args: : (<object 416706> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 416706> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 416930> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 417212> (result (thunk $action #)))
> def args: : (<object 417245> (memo #f))
> def args: : (<object 417306> (prefix items))
> def args: : (<object 417306> (suffix (items (quote next))))
> def args: : (<object 417306> (package (bundle item rank )))
> def args: : (<object 417404> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 417566> (obj (car @)))
> def args: : (<object 417566> (fields (cdr @)))
> def args: : (<object 418187> (obj (car @)))
> def args: : (<object 418187> (fields (cdr @)))
> def args: : (<object 418923> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 419101> (result (thunk $action #)))
> def args: : (<object 419134> (memo #f))
> def args: : (<object 419195> (prefix items))
> def args: : (<object 419195> (suffix (items (quote next))))
> def args: : (<object 419195> (package (bundle item rank )))
> def args: : (<object 419293> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 419587> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 419749> (obj (car @)))
> def args: : (<object 419749> (fields (cdr @)))
> def args: : (<object 420370> (obj (car @)))
> def args: : (<object 420370> (fields (cdr @)))
> def args: : (<object 421093> (result ((actions (quote dequeue)))))
> def args: : (<object 421219> (item))
> def args: : (<object 421271> (obj (car @)))
> def args: : (<object 421271> (fields (cdr @)))
> def args: : (<object 421949> (d))
> def args: : (<object 422027> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 422027> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 422251> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 422585> (result (thunk $action #)))
> def args: : (<object 422618> (memo #f))
> def args: : (<object 422679> (prefix items))
> def args: : (<object 422679> (suffix (items (quote next))))
> def args: : (<object 422679> (package (bundle item rank )))
> def args: : (<object 422777> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 423071> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 423233> (obj (car @)))
> def args: : (<object 423233> (fields (cdr @)))
> def args: : (<object 423854> (obj (car @)))
> def args: : (<object 423854> (fields (cdr @)))
> def args: : (<object 421093> (result ((actions (quote dequeue)))))
> def args: : (<object 424608> (item))
> def args: : (<object 424660> (obj (car @)))
> def args: : (<object 424660> (fields (cdr @)))
> def args: : (<object 425338> (d))
> def args: : (<object 421093> (result ((actions (quote dequeue)))))
> def args: : (<object 425479> (item))
> def args: : (<object 425531> (obj (car @)))
> def args: : (<object 425531> (fields (cdr @)))
> def args: : (<object 426209> (d))
> def args: : (<object 426287> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 426287> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 426511> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 426689> (result (thunk $action #)))
> def args: : (<object 426722> (memo #f))
> def args: : (<object 426783> (prefix items))
> def args: : (<object 426783> (suffix (items (quote next))))
> def args: : (<object 426783> (package (bundle item rank )))
> def args: : (<object 426881> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 427043> (obj (car @)))
> def args: : (<object 427043> (fields (cdr @)))
> def args: : (<object 427664> (obj (car @)))
> def args: : (<object 427664> (fields (cdr @)))
> def args: : (<object 428400> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 428734> (result (thunk $action #)))
> def args: : (<object 428767> (memo #f))
> def args: : (<object 428828> (prefix items))
> def args: : (<object 428828> (suffix (items (quote next))))
> def args: : (<object 428828> (package (bundle item rank )))
> def args: : (<object 428926> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 429220> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 429382> (obj (car @)))
> def args: : (<object 429382> (fields (cdr @)))
> def args: : (<object 430003> (obj (car @)))
> def args: : (<object 430003> (fields (cdr @)))
> def args: : (<object 421093> (result ((actions (quote dequeue)))))
> def args: : (<object 430760> (item))
> def args: : (<object 430812> (obj (car @)))
> def args: : (<object 430812> (fields (cdr @)))
> def args: : (<object 431490> (d))
> def args: : (<object 421093> (result ((actions (quote dequeue)))))
> def args: : (<object 431631> (item))
> def args: : (<object 431683> (obj (car @)))
> def args: : (<object 431683> (fields (cdr @)))
> def args: : (<object 432361> (d))
> def args: : (<object 432439> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 432439> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 432663> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 432945> (result (thunk $action #)))
> def args: : (<object 432978> (memo #f))
> def args: : (<object 433039> (prefix items))
> def args: : (<object 433039> (suffix (items (quote next))))
> def args: : (<object 433039> (package (bundle item rank )))
> def args: : (<object 433137> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 433299> (obj (car @)))
> def args: : (<object 433299> (fields (cdr @)))
> def args: : (<object 433920> (obj (car @)))
> def args: : (<object 433920> (fields (cdr @)))
> def args: : (<object 434711> (result (thunk $action #)))
> def args: : (<object 434744> (memo #f))
> def args: : (<object 434805> (prefix items))
> def args: : (<object 434805> (suffix (items (quote next))))
> def args: : (<object 434805> (package (bundle item rank )))
> def args: : (<object 434903> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 435134> (obj (car @)))
> def args: : (<object 435134> (fields (cdr @)))
> def args: : (<object 435755> (obj (car @)))
> def args: : (<object 435755> (fields (cdr @)))
> def args: : (<object 421093> (result ((actions (quote dequeue)))))
> def args: : (<object 436512> (item))
> def args: : (<object 436564> (obj (car @)))
> def args: : (<object 436564> (fields (cdr @)))
> def args: : (<object 437242> (d))
> def args: : (<object 437320> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 437320> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 437544> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 437826> (result (thunk $action #)))
> def args: : (<object 437859> (memo #f))
> def args: : (<object 437920> (prefix items))
> def args: : (<object 437920> (suffix (items (quote next))))
> def args: : (<object 437920> (package (bundle item rank )))
> def args: : (<object 438018> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 438312> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 438474> (obj (car @)))
> def args: : (<object 438474> (fields (cdr @)))
> def args: : (<object 439095> (obj (car @)))
> def args: : (<object 439095> (fields (cdr @)))
> def args: : (<object 421093> (result ((actions (quote dequeue)))))
> def args: : (<object 439849> (item))
> def args: : (<object 439901> (obj (car @)))
> def args: : (<object 439901> (fields (cdr @)))
> def args: : (<object 440579> (d))
> def args: : (<object 440657> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 440657> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 421093> (result ((actions (quote dequeue)))))
> def args: : (<object 440896> (item))
> def args: : (<object 440948> (obj (car @)))
> def args: : (<object 440948> (fields (cdr @)))
> def args: : (<object 441626> (d))
> def args: : (<object 441704> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 441704> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 441975> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 442179> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 442383> (__getElement (get (quote getElement) (get (quote __context) __context))))
> 1def args: : (<object 442784> (env (if (null? @) # (car @))))
>         def args: : (<object 442891> (env (if (null? @) # (car @))))
> 0def args: : (<object 442998> (env (if (null? @) # (car @))))
>         def args: : (<object 443105> (env (if (null? @) # (car @))))
> 1def args: : (<object 443212> (env (if (null? @) # (car @))))
>         def args: : (<object 443319> (env (if (null? @) # (car @))))
> 0def args: : (<object 443426> (env (if (null? @) # (car @))))
>         def args: : (<object 443533> (env (if (null? @) # (car @))))
> 1def args: : (<object 443640> (env (if (null? @) # (car @))))
> 
> def args: : (<object 443838> (env (if (null? @) # (car @))))
> def args: : (<object 444080> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 444281> (d))
> def args: : (<object 444392> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 444593> (d))
> def args: : (<object 444671> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 444671> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 444895> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 445073> (result (thunk $action #)))
> def args: : (<object 445106> (memo #f))
> def args: : (<object 445167> (prefix items))
> def args: : (<object 445167> (suffix (items (quote next))))
> def args: : (<object 445167> (package (bundle item rank )))
> def args: : (<object 445265> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 445427> (obj (car @)))
> def args: : (<object 445427> (fields (cdr @)))
> def args: : (<object 446048> (obj (car @)))
> def args: : (<object 446048> (fields (cdr @)))
> def args: : (<object 446784> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 447118> (result (thunk $action #)))
> def args: : (<object 447151> (memo #f))
> def args: : (<object 447212> (prefix items))
> def args: : (<object 447212> (suffix (items (quote next))))
> def args: : (<object 447212> (package (bundle item rank )))
> def args: : (<object 447310> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 447604> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 447766> (obj (car @)))
> def args: : (<object 447766> (fields (cdr @)))
> def args: : (<object 448387> (obj (car @)))
> def args: : (<object 448387> (fields (cdr @)))
> def args: : (<object 449114> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 449315> (d))
> def args: : (<object 449393> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 449393> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 449617> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 449795> (result (thunk $action #)))
> def args: : (<object 449828> (memo #f))
> def args: : (<object 449889> (prefix items))
> def args: : (<object 449889> (suffix (items (quote next))))
> def args: : (<object 449889> (package (bundle item rank )))
> def args: : (<object 449987> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 450281> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 450512> (obj (car @)))
> def args: : (<object 450512> (fields (cdr @)))
> def args: : (<object 451133> (obj (car @)))
> def args: : (<object 451133> (fields (cdr @)))
> def args: : (<object 451869> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 452151> (result (thunk $action #)))
> def args: : (<object 452184> (memo #f))
> def args: : (<object 452245> (prefix items))
> def args: : (<object 452245> (suffix (items (quote next))))
> def args: : (<object 452245> (package (bundle item rank )))
> def args: : (<object 452343> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 452637> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 452931> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 453225> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 453387> (obj (car @)))
> def args: : (<object 453387> (fields (cdr @)))
> def args: : (<object 454008> (obj (car @)))
> def args: : (<object 454008> (fields (cdr @)))
> def args: : (<object 454731> (result ((actions (quote dequeue)))))
> def args: : (<object 454857> (item))
> def args: : (<object 454909> (obj (car @)))
> def args: : (<object 454909> (fields (cdr @)))
> def args: : (<object 455587> (d))
> def args: : (<object 454731> (result ((actions (quote dequeue)))))
> def args: : (<object 455728> (item))
> def args: : (<object 455780> (obj (car @)))
> def args: : (<object 455780> (fields (cdr @)))
> def args: : (<object 456458> (d))
> def args: : (<object 454731> (result ((actions (quote dequeue)))))
> def args: : (<object 456599> (item))
> def args: : (<object 456651> (obj (car @)))
> def args: : (<object 456651> (fields (cdr @)))
> def args: : (<object 457329> (d))
> def args: : (<object 457407> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 457407> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 457631> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 457809> (result (thunk $action #)))
> def args: : (<object 457842> (memo #f))
> def args: : (<object 457903> (prefix items))
> def args: : (<object 457903> (suffix (items (quote next))))
> def args: : (<object 457903> (package (bundle item rank )))
> def args: : (<object 458001> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 458295> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 458457> (obj (car @)))
> def args: : (<object 458457> (fields (cdr @)))
> def args: : (<object 459078> (obj (car @)))
> def args: : (<object 459078> (fields (cdr @)))
> def args: : (<object 459869> (result (thunk $action #)))
> def args: : (<object 459902> (memo #f))
> def args: : (<object 459963> (prefix items))
> def args: : (<object 459963> (suffix (items (quote next))))
> def args: : (<object 459963> (package (bundle item rank )))
> def args: : (<object 460061> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 460355> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 460586> (obj (car @)))
> def args: : (<object 460586> (fields (cdr @)))
> def args: : (<object 461207> (obj (car @)))
> def args: : (<object 461207> (fields (cdr @)))
> def args: : (<object 454731> (result ((actions (quote dequeue)))))
> def args: : (<object 461964> (item))
> def args: : (<object 462016> (obj (car @)))
> def args: : (<object 462016> (fields (cdr @)))
> def args: : (<object 462694> (d))
> def args: : (<object 462772> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 462772> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 462996> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 463278> (result (thunk $action #)))
> def args: : (<object 463311> (memo #f))
> def args: : (<object 463372> (prefix items))
> def args: : (<object 463372> (suffix (items (quote next))))
> def args: : (<object 463372> (package (bundle item rank )))
> def args: : (<object 463470> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 463764> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 464058> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 464220> (obj (car @)))
> def args: : (<object 464220> (fields (cdr @)))
> def args: : (<object 464841> (obj (car @)))
> def args: : (<object 464841> (fields (cdr @)))
> def args: : (<object 465632> (result (thunk $action #)))
> def args: : (<object 465665> (memo #f))
> def args: : (<object 465726> (prefix items))
> def args: : (<object 465726> (suffix (items (quote next))))
> def args: : (<object 465726> (package (bundle item rank )))
> def args: : (<object 465824> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 466118> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 466349> (obj (car @)))
> def args: : (<object 466349> (fields (cdr @)))
> def args: : (<object 466970> (obj (car @)))
> def args: : (<object 466970> (fields (cdr @)))
> def args: : (<object 454731> (result ((actions (quote dequeue)))))
> def args: : (<object 467727> (item))
> def args: : (<object 467779> (obj (car @)))
> def args: : (<object 467779> (fields (cdr @)))
> def args: : (<object 468457> (d))
> def args: : (<object 468535> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 468535> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 468759> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 469041> (result (thunk $action #)))
> def args: : (<object 469074> (memo #f))
> def args: : (<object 469135> (prefix items))
> def args: : (<object 469135> (suffix (items (quote next))))
> def args: : (<object 469135> (package (bundle item rank )))
> def args: : (<object 469233> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 469527> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 469821> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 470115> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 470277> (obj (car @)))
> def args: : (<object 470277> (fields (cdr @)))
> def args: : (<object 470898> (obj (car @)))
> def args: : (<object 470898> (fields (cdr @)))
> def args: : (<object 454731> (result ((actions (quote dequeue)))))
> def args: : (<object 471652> (item))
> def args: : (<object 471704> (obj (car @)))
> def args: : (<object 471704> (fields (cdr @)))
> def args: : (<object 472382> (d))
> def args: : (<object 472460> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 472460> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 472684> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 473018> (result (thunk $action #)))
> def args: : (<object 473051> (memo #f))
> def args: : (<object 473112> (prefix items))
> def args: : (<object 473112> (suffix (items (quote next))))
> def args: : (<object 473112> (package (bundle item rank )))
> def args: : (<object 473210> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 473504> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 473798> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 474092> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 474254> (obj (car @)))
> def args: : (<object 474254> (fields (cdr @)))
> def args: : (<object 474875> (obj (car @)))
> def args: : (<object 474875> (fields (cdr @)))
> def args: : (<object 454731> (result ((actions (quote dequeue)))))
> def args: : (<object 475629> (item))
> def args: : (<object 475681> (obj (car @)))
> def args: : (<object 475681> (fields (cdr @)))
> def args: : (<object 476359> (d))
> def args: : (<object 454731> (result ((actions (quote dequeue)))))
> def args: : (<object 476500> (item))
> def args: : (<object 476552> (obj (car @)))
> def args: : (<object 476552> (fields (cdr @)))
> def args: : (<object 477230> (d))
> def args: : (<object 454731> (result ((actions (quote dequeue)))))
> def args: : (<object 477371> (item))
> def args: : (<object 477423> (obj (car @)))
> def args: : (<object 477423> (fields (cdr @)))
> def args: : (<object 478101> (d))
> def args: : (<object 478179> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 478179> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 478403> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 478581> (result (thunk $action #)))
> def args: : (<object 478614> (memo #f))
> def args: : (<object 478675> (prefix items))
> def args: : (<object 478675> (suffix (items (quote next))))
> def args: : (<object 478675> (package (bundle item rank )))
> def args: : (<object 478773> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 479067> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 479229> (obj (car @)))
> def args: : (<object 479229> (fields (cdr @)))
> def args: : (<object 479850> (obj (car @)))
> def args: : (<object 479850> (fields (cdr @)))
> def args: : (<object 480586> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 480868> (result (thunk $action #)))
> def args: : (<object 480901> (memo #f))
> def args: : (<object 480962> (prefix items))
> def args: : (<object 480962> (suffix (items (quote next))))
> def args: : (<object 480962> (package (bundle item rank )))
> def args: : (<object 481060> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 481354> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 481648> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 481810> (obj (car @)))
> def args: : (<object 481810> (fields (cdr @)))
> def args: : (<object 482431> (obj (car @)))
> def args: : (<object 482431> (fields (cdr @)))
> def args: : (<object 454731> (result ((actions (quote dequeue)))))
> def args: : (<object 483188> (item))
> def args: : (<object 483240> (obj (car @)))
> def args: : (<object 483240> (fields (cdr @)))
> def args: : (<object 483918> (d))
> def args: : (<object 483996> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 483996> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 484220> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 484398> (result (thunk $action #)))
> def args: : (<object 484431> (memo #f))
> def args: : (<object 484492> (prefix items))
> def args: : (<object 484492> (suffix (items (quote next))))
> def args: : (<object 484492> (package (bundle item rank )))
> def args: : (<object 484590> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 484884> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 485115> (obj (car @)))
> def args: : (<object 485115> (fields (cdr @)))
> def args: : (<object 485736> (obj (car @)))
> def args: : (<object 485736> (fields (cdr @)))
> def args: : (<object 486472> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 486806> (result (thunk $action #)))
> def args: : (<object 486839> (memo #f))
> def args: : (<object 486900> (prefix items))
> def args: : (<object 486900> (suffix (items (quote next))))
> def args: : (<object 486900> (package (bundle item rank )))
> def args: : (<object 486998> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 487292> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 487586> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 487880> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 488042> (obj (car @)))
> def args: : (<object 488042> (fields (cdr @)))
> def args: : (<object 488663> (obj (car @)))
> def args: : (<object 488663> (fields (cdr @)))
> def args: : (<object 454731> (result ((actions (quote dequeue)))))
> def args: : (<object 489420> (item))
> def args: : (<object 489472> (obj (car @)))
> def args: : (<object 489472> (fields (cdr @)))
> def args: : (<object 490150> (d))
> def args: : (<object 454731> (result ((actions (quote dequeue)))))
> def args: : (<object 490291> (item))
> def args: : (<object 490343> (obj (car @)))
> def args: : (<object 490343> (fields (cdr @)))
> def args: : (<object 491021> (d))
> def args: : (<object 454731> (result ((actions (quote dequeue)))))
> def args: : (<object 491162> (item))
> def args: : (<object 491214> (obj (car @)))
> def args: : (<object 491214> (fields (cdr @)))
> def args: : (<object 491892> (d))
> def args: : (<object 491970> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 491970> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 492194> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 492528> (result (thunk $action #)))
> def args: : (<object 492561> (memo #f))
> def args: : (<object 492622> (prefix items))
> def args: : (<object 492622> (suffix (items (quote next))))
> def args: : (<object 492622> (package (bundle item rank )))
> def args: : (<object 492720> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 493014> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 493176> (obj (car @)))
> def args: : (<object 493176> (fields (cdr @)))
> def args: : (<object 493797> (obj (car @)))
> def args: : (<object 493797> (fields (cdr @)))
> def args: : (<object 494588> (result (thunk $action #)))
> def args: : (<object 494621> (memo #f))
> def args: : (<object 494682> (prefix items))
> def args: : (<object 494682> (suffix (items (quote next))))
> def args: : (<object 494682> (package (bundle item rank )))
> def args: : (<object 494780> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 495074> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 495305> (obj (car @)))
> def args: : (<object 495305> (fields (cdr @)))
> def args: : (<object 495926> (obj (car @)))
> def args: : (<object 495926> (fields (cdr @)))
> def args: : (<object 454731> (result ((actions (quote dequeue)))))
> def args: : (<object 496683> (item))
> def args: : (<object 496735> (obj (car @)))
> def args: : (<object 496735> (fields (cdr @)))
> def args: : (<object 497413> (d))
> def args: : (<object 497491> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 497491> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 497715> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 497997> (result (thunk $action #)))
> def args: : (<object 498030> (memo #f))
> def args: : (<object 498091> (prefix items))
> def args: : (<object 498091> (suffix (items (quote next))))
> def args: : (<object 498091> (package (bundle item rank )))
> def args: : (<object 498189> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 498483> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 498777> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 498939> (obj (car @)))
> def args: : (<object 498939> (fields (cdr @)))
> def args: : (<object 499560> (obj (car @)))
> def args: : (<object 499560> (fields (cdr @)))
> def args: : (<object 500351> (result (thunk $action #)))
> def args: : (<object 500384> (memo #f))
> def args: : (<object 500445> (prefix items))
> def args: : (<object 500445> (suffix (items (quote next))))
> def args: : (<object 500445> (package (bundle item rank )))
> def args: : (<object 500543> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 500837> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 501068> (obj (car @)))
> def args: : (<object 501068> (fields (cdr @)))
> def args: : (<object 501689> (obj (car @)))
> def args: : (<object 501689> (fields (cdr @)))
> def args: : (<object 454731> (result ((actions (quote dequeue)))))
> def args: : (<object 502446> (item))
> def args: : (<object 502498> (obj (car @)))
> def args: : (<object 502498> (fields (cdr @)))
> def args: : (<object 503176> (d))
> def args: : (<object 503254> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 503254> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 503478> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 503812> (result (thunk $action #)))
> def args: : (<object 503845> (memo #f))
> def args: : (<object 503906> (prefix items))
> def args: : (<object 503906> (suffix (items (quote next))))
> def args: : (<object 503906> (package (bundle item rank )))
> def args: : (<object 504004> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 504298> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 504592> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 504886> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 505048> (obj (car @)))
> def args: : (<object 505048> (fields (cdr @)))
> def args: : (<object 505669> (obj (car @)))
> def args: : (<object 505669> (fields (cdr @)))
> def args: : (<object 454731> (result ((actions (quote dequeue)))))
> def args: : (<object 506423> (item))
> def args: : (<object 506475> (obj (car @)))
> def args: : (<object 506475> (fields (cdr @)))
> def args: : (<object 507153> (d))
> def args: : (<object 507231> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 507231> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 507455> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 507737> (result (thunk $action #)))
> def args: : (<object 507770> (memo #f))
> def args: : (<object 507831> (prefix items))
> def args: : (<object 507831> (suffix (items (quote next))))
> def args: : (<object 507831> (package (bundle item rank )))
> def args: : (<object 507929> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 508223> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 508517> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 508811> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 508973> (obj (car @)))
> def args: : (<object 508973> (fields (cdr @)))
> def args: : (<object 509594> (obj (car @)))
> def args: : (<object 509594> (fields (cdr @)))
> def args: : (<object 454731> (result ((actions (quote dequeue)))))
> def args: : (<object 510348> (item))
> def args: : (<object 510400> (obj (car @)))
> def args: : (<object 510400> (fields (cdr @)))
> def args: : (<object 511078> (d))
> def args: : (<object 511156> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 511156> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 454731> (result ((actions (quote dequeue)))))
> def args: : (<object 511395> (item))
> def args: : (<object 511447> (obj (car @)))
> def args: : (<object 511447> (fields (cdr @)))
> def args: : (<object 512125> (d))
> def args: : (<object 512203> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 512203> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 454731> (result ((actions (quote dequeue)))))
> def args: : (<object 512442> (item))
> def args: : (<object 512494> (obj (car @)))
> def args: : (<object 512494> (fields (cdr @)))
> def args: : (<object 513172> (d))
> def args: : (<object 513250> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 513250> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 454731> (result ((actions (quote dequeue)))))
> def args: : (<object 513489> (item))
> def args: : (<object 513541> (obj (car @)))
> def args: : (<object 513541> (fields (cdr @)))
> def args: : (<object 514219> (d))
> def args: : (<object 514297> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 514297> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 514568> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 514772> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 514976> (__getElement (get (quote getElement) (get (quote __context) __context))))
> 1def args: : (<object 515377> (env (if (null? @) # (car @))))
>         def args: : (<object 515484> (env (if (null? @) # (car @))))
> 1def args: : (<object 515591> (env (if (null? @) # (car @))))
>         def args: : (<object 515698> (env (if (null? @) # (car @))))
> 0def args: : (<object 515805> (env (if (null? @) # (car @))))
>         def args: : (<object 515912> (env (if (null? @) # (car @))))
> 0def args: : (<object 516019> (env (if (null? @) # (car @))))
>         def args: : (<object 516126> (env (if (null? @) # (car @))))
> 1def args: : (<object 516233> (env (if (null? @) # (car @))))
> 
> def args: : (<object 516431> (env (if (null? @) # (car @))))
> def args: : (<object 516673> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 516874> (d))
> def args: : (<object 516985> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 517186> (d))
> def args: : (<object 517297> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 517498> (d))
> def args: : (<object 517576> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 517576> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 517800> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 517978> (result (thunk $action #)))
> def args: : (<object 518011> (memo #f))
> def args: : (<object 518072> (prefix items))
> def args: : (<object 518072> (suffix (items (quote next))))
> def args: : (<object 518072> (package (bundle item rank )))
> def args: : (<object 518170> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 518332> (obj (car @)))
> def args: : (<object 518332> (fields (cdr @)))
> def args: : (<object 518953> (obj (car @)))
> def args: : (<object 518953> (fields (cdr @)))
> def args: : (<object 519689> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 520023> (result (thunk $action #)))
> def args: : (<object 520056> (memo #f))
> def args: : (<object 520117> (prefix items))
> def args: : (<object 520117> (suffix (items (quote next))))
> def args: : (<object 520117> (package (bundle item rank )))
> def args: : (<object 520215> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 520509> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 520671> (obj (car @)))
> def args: : (<object 520671> (fields (cdr @)))
> def args: : (<object 521292> (obj (car @)))
> def args: : (<object 521292> (fields (cdr @)))
> def args: : (<object 522015> (result ((actions (quote dequeue)))))
> def args: : (<object 522141> (item))
> def args: : (<object 522193> (obj (car @)))
> def args: : (<object 522193> (fields (cdr @)))
> def args: : (<object 522871> (d))
> def args: : (<object 522015> (result ((actions (quote dequeue)))))
> def args: : (<object 523012> (item))
> def args: : (<object 523064> (obj (car @)))
> def args: : (<object 523064> (fields (cdr @)))
> def args: : (<object 523742> (d))
> def args: : (<object 523820> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 523820> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 524044> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 524222> (result (thunk $action #)))
> def args: : (<object 524255> (memo #f))
> def args: : (<object 524316> (prefix items))
> def args: : (<object 524316> (suffix (items (quote next))))
> def args: : (<object 524316> (package (bundle item rank )))
> def args: : (<object 524414> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 524576> (obj (car @)))
> def args: : (<object 524576> (fields (cdr @)))
> def args: : (<object 525197> (obj (car @)))
> def args: : (<object 525197> (fields (cdr @)))
> def args: : (<object 525988> (result (thunk $action #)))
> def args: : (<object 526021> (memo #f))
> def args: : (<object 526082> (prefix items))
> def args: : (<object 526082> (suffix (items (quote next))))
> def args: : (<object 526082> (package (bundle item rank )))
> def args: : (<object 526180> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 526411> (obj (car @)))
> def args: : (<object 526411> (fields (cdr @)))
> def args: : (<object 527032> (obj (car @)))
> def args: : (<object 527032> (fields (cdr @)))
> def args: : (<object 522015> (result ((actions (quote dequeue)))))
> def args: : (<object 527789> (item))
> def args: : (<object 527841> (obj (car @)))
> def args: : (<object 527841> (fields (cdr @)))
> def args: : (<object 528519> (d))
> def args: : (<object 528597> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 528597> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 528821> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 529103> (result (thunk $action #)))
> def args: : (<object 529136> (memo #f))
> def args: : (<object 529197> (prefix items))
> def args: : (<object 529197> (suffix (items (quote next))))
> def args: : (<object 529197> (package (bundle item rank )))
> def args: : (<object 529295> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 529589> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 529751> (obj (car @)))
> def args: : (<object 529751> (fields (cdr @)))
> def args: : (<object 530372> (obj (car @)))
> def args: : (<object 530372> (fields (cdr @)))
> def args: : (<object 522015> (result ((actions (quote dequeue)))))
> def args: : (<object 531126> (item))
> def args: : (<object 531178> (obj (car @)))
> def args: : (<object 531178> (fields (cdr @)))
> def args: : (<object 531856> (d))
> def args: : (<object 522015> (result ((actions (quote dequeue)))))
> def args: : (<object 531997> (item))
> def args: : (<object 532049> (obj (car @)))
> def args: : (<object 532049> (fields (cdr @)))
> def args: : (<object 532727> (d))
> def args: : (<object 532805> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 532805> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 533029> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 533207> (result (thunk $action #)))
> def args: : (<object 533240> (memo #f))
> def args: : (<object 533301> (prefix items))
> def args: : (<object 533301> (suffix (items (quote next))))
> def args: : (<object 533301> (package (bundle item rank )))
> def args: : (<object 533399> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 533561> (obj (car @)))
> def args: : (<object 533561> (fields (cdr @)))
> def args: : (<object 534182> (obj (car @)))
> def args: : (<object 534182> (fields (cdr @)))
> def args: : (<object 534918> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 535200> (result (thunk $action #)))
> def args: : (<object 535233> (memo #f))
> def args: : (<object 535294> (prefix items))
> def args: : (<object 535294> (suffix (items (quote next))))
> def args: : (<object 535294> (package (bundle item rank )))
> def args: : (<object 535392> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 535686> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 535848> (obj (car @)))
> def args: : (<object 535848> (fields (cdr @)))
> def args: : (<object 536469> (obj (car @)))
> def args: : (<object 536469> (fields (cdr @)))
> def args: : (<object 522015> (result ((actions (quote dequeue)))))
> def args: : (<object 537226> (item))
> def args: : (<object 537278> (obj (car @)))
> def args: : (<object 537278> (fields (cdr @)))
> def args: : (<object 537956> (d))
> def args: : (<object 522015> (result ((actions (quote dequeue)))))
> def args: : (<object 538097> (item))
> def args: : (<object 538149> (obj (car @)))
> def args: : (<object 538149> (fields (cdr @)))
> def args: : (<object 538827> (d))
> def args: : (<object 538905> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 538905> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 539129> ((iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))))
> def args: : (<object 539307> (result (thunk $action #)))
> def args: : (<object 539340> (memo #f))
> def args: : (<object 539401> (prefix items))
> def args: : (<object 539401> (suffix (items (quote next))))
> def args: : (<object 539401> (package (bundle item rank )))
> def args: : (<object 539499> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 539661> (obj (car @)))
> def args: : (<object 539661> (fields (cdr @)))
> def args: : (<object 540282> (obj (car @)))
> def args: : (<object 540282> (fields (cdr @)))
> def args: : (<object 541073> (result (thunk $action #)))
> def args: : (<object 541106> (memo #f))
> def args: : (<object 541167> (prefix items))
> def args: : (<object 541167> (suffix (items (quote next))))
> def args: : (<object 541167> (package (bundle item rank )))
> def args: : (<object 541265> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 541496> (obj (car @)))
> def args: : (<object 541496> (fields (cdr @)))
> def args: : (<object 542117> (obj (car @)))
> def args: : (<object 542117> (fields (cdr @)))
> def args: : (<object 522015> (result ((actions (quote dequeue)))))
> def args: : (<object 542874> (item))
> def args: : (<object 542926> (obj (car @)))
> def args: : (<object 542926> (fields (cdr @)))
> def args: : (<object 543604> (d))
> def args: : (<object 543682> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 543682> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 543906> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 544240> (result (thunk $action #)))
> def args: : (<object 544273> (memo #f))
> def args: : (<object 544334> (prefix items))
> def args: : (<object 544334> (suffix (items (quote next))))
> def args: : (<object 544334> (package (bundle item rank )))
> def args: : (<object 544432> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 544726> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 544888> (obj (car @)))
> def args: : (<object 544888> (fields (cdr @)))
> def args: : (<object 545509> (obj (car @)))
> def args: : (<object 545509> (fields (cdr @)))
> def args: : (<object 522015> (result ((actions (quote dequeue)))))
> def args: : (<object 546263> (item))
> def args: : (<object 546315> (obj (car @)))
> def args: : (<object 546315> (fields (cdr @)))
> def args: : (<object 546993> (d))
> def args: : (<object 522015> (result ((actions (quote dequeue)))))
> def args: : (<object 547134> (item))
> def args: : (<object 547186> (obj (car @)))
> def args: : (<object 547186> (fields (cdr @)))
> def args: : (<object 547864> (d))
> def args: : (<object 547942> ((map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))))
> def args: : (<object 547942> ((iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))))
> def args: : (<object 548213> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 548417> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 548621> (__getElement (get (quote getElement) (get (quote __context) __context))))
> 1def args: : (<object 549022> (env (if (null? @) # (car @))))
>         def args: : (<object 549129> (env (if (null? @) # (car @))))
> 1def args: : (<object 549236> (env (if (null? @) # (car @))))
>         def args: : (<object 549343> (env (if (null? @) # (car @))))
> 1def args: : (<object 549450> (env (if (null? @) # (car @))))
>         def args: : (<object 549557> (env (if (null? @) # (car @))))
> 1def args: : (<object 549664> (env (if (null? @) # (car @))))
>         def args: : (<object 549771> (env (if (null? @) # (car @))))
> 1def args: : (<object 549878> (env (if (null? @) # (car @))))
> 
> def args: : (<object 550076> (env (if (null? @) # (car @))))
------------------------------------------
agenda.s
------------------------------------------
10c10
<         ((. actions enqueue) result  (+ time delay))
---
>         ((actions 'enqueue) result  (+ time delay))
13,15c13,15
<         (while (not((. actions empty)))
<             (assign time ((. actions peekRank)))
<             (define result ((. actions dequeue)))
---
>         (while (not((actions 'empty)))
>             (set 'time ((actions 'peekRank)))
>             (define result ((actions 'dequeue)))
20c20
<         (assign time 0)
---
>         (set 'time 0)
25a26,135
> def args: : (<object 4799> (else #t))
> def args: : (<object 4799> (__builtin __context))
> def args: : (<object 4799> (__main-lib this))
> def args: : (<object 4799> (nil? null?))
> def args: : (<object 4799> ((valid? x) (not (null? x))))
> def args: : (<object 4799> ((head x) (car x)))
> def args: : (<object 4799> ((tail x) (cdr x)))
> def args: : (<object 4799> ((join x y) (cons x y)))
> def args: : (<object 4799> (^ expt))
> def args: : (<object 4799> (** expt))
> def args: : (<object 4799> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4799> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4799> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4799> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4799> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4799> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4799> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4799> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4799> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4799> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4799> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4799> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4799> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4799> (__type type))
> def args: : (<object 4799> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4799> ((class x) (get (quote __label) x)))
> def args: : (<object 4799> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4799> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4799> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4799> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4799> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4799> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4799> (function? closure?))
> def args: : (<object 4799> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4799> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4799> ((dec x) (- x 1)))
> def args: : (<object 4799> ((inc x) (+ x 1)))
> def args: : (<object 4799> (__display display))
> def args: : (<object 4799> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4799> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4799> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4799> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4799> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4799> ((negative? n) (< n 0)))
> def args: : (<object 4799> ((positive? n) (> n 0)))
> def args: : (<object 4799> ((newline) (println)))
> def args: : (<object 4799> (remainder %))
> def args: : (<object 4799> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4799> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4799> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4799> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4799> (integer int))
> def args: : (<object 4799> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4799> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4799> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4799> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4799> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4799> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4799> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4799> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4799> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4799> ((true? x) x))
> def args: : (<object 4799> ((false? x) (not x)))
> def args: : (<object 4799> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4799> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4799> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4799> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4799> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4799> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4799> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4799> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4799> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4799> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4799> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4799> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4799> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4799> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4799> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4799> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4799> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4799> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4799> ((stream-car s) (car s)))
> def args: : (<object 4799> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4799> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4799> ((stream-null? s) (null? s)))
> def args: : (<object 4799> ((code $s) $s))
> def args: : (<object 4799> ((member? x items) (valid? (member x items))))
> def args: : (<object 4799> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4799> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4799> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4799> (__string+ string+))
> def args: : (<object 4799> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4799> (__string string))
> def args: : (<object 4799> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4799> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4799> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4799> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4799> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4799> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4799> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4799> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4799> ((localNames env) (cadr env)))
> def args: : (<object 4799> ((localValues env) (caddr env)))
> def args: : (<object 4799> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4799> ((dot obj $name) (get $name obj)))
> def args: : (<object 4799> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4799> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12466> ((priorityQueue) (define items) (define (bundle data rank next) this) (define (dequeue) (define item) (set (quote item) (items (quote next) (quote data))) (set* items (quote next) (items (quote next) (quote next))) item) (define (enqueue item rank) (define prefix items) (define suffix (items (quote next))) (define package (bundle item rank )) (while (and (valid? suffix) (>= rank (suffix (quote rank)))) (set (quote prefix) suffix) (set (quote suffix) (suffix (quote next)))) (set* prefix (quote next) package) (set* package (quote next) suffix)) (define (peekItem) (items (quote next) (quote data))) (define (peekRank) (items (quote next) (quote rank))) (define (empty) (null? (items (quote next)))) (set (quote items) (bundle   )) this))
> def args: : (<object 12466> ((agenda) (define time 0) (define actions (priorityQueue)) (define (schedule # $action delay) (define result (thunk $action #)) ((actions (quote enqueue)) result (+ time delay))) (define (run) (while (not ((actions (quote empty)))) (set (quote time) ((actions (quote peekRank)))) (define result ((actions (quote dequeue)))) (force result)) (set (quote time) 0)) this))
------------------------------------------
apply.s
------------------------------------------
36,37c36,169
< sum (via f): 10
< sum (via g): 10
---
> def args: : (<object 4798> (else #t))
> def args: : (<object 4798> (__builtin __context))
> def args: : (<object 4798> (__main-lib this))
> def args: : (<object 4798> (nil? null?))
> def args: : (<object 4798> ((valid? x) (not (null? x))))
> def args: : (<object 4798> ((head x) (car x)))
> def args: : (<object 4798> ((tail x) (cdr x)))
> def args: : (<object 4798> ((join x y) (cons x y)))
> def args: : (<object 4798> (^ expt))
> def args: : (<object 4798> (** expt))
> def args: : (<object 4798> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4798> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4798> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4798> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4798> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4798> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4798> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4798> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4798> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4798> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4798> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4798> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4798> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4798> (__type type))
> def args: : (<object 4798> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4798> ((class x) (get (quote __label) x)))
> def args: : (<object 4798> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4798> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4798> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4798> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4798> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4798> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4798> (function? closure?))
> def args: : (<object 4798> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4798> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4798> ((dec x) (- x 1)))
> def args: : (<object 4798> ((inc x) (+ x 1)))
> def args: : (<object 4798> (__display display))
> def args: : (<object 4798> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4798> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4798> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4798> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4798> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4798> ((negative? n) (< n 0)))
> def args: : (<object 4798> ((positive? n) (> n 0)))
> def args: : (<object 4798> ((newline) (println)))
> def args: : (<object 4798> (remainder %))
> def args: : (<object 4798> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4798> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4798> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4798> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4798> (integer int))
> def args: : (<object 4798> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4798> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4798> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4798> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4798> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4798> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4798> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4798> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4798> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4798> ((true? x) x))
> def args: : (<object 4798> ((false? x) (not x)))
> def args: : (<object 4798> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4798> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4798> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4798> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4798> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4798> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4798> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4798> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4798> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4798> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4798> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4798> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4798> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4798> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4798> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4798> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4798> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4798> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4798> ((stream-car s) (car s)))
> def args: : (<object 4798> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4798> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4798> ((stream-null? s) (null? s)))
> def args: : (<object 4798> ((code $s) $s))
> def args: : (<object 4798> ((member? x items) (valid? (member x items))))
> def args: : (<object 4798> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4798> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4798> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4798> (__string+ string+))
> def args: : (<object 4798> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4798> (__string string))
> def args: : (<object 4798> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4798> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4798> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4798> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4798> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4798> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4798> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4798> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4798> ((localNames env) (cadr env)))
> def args: : (<object 4798> ((localValues env) (caddr env)))
> def args: : (<object 4798> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4798> ((dot obj $name) (get $name obj)))
> def args: : (<object 4798> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4798> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12465> ((f @) (if (== @ ) 0 (+ (getElement @ 0) (apply f (cdr @))))))
> def args: : (<object 12465> ((g # $) (define total 0) (define size (length $)) (while (> size 0) (set (quote total) (+ total (eval (getElement $ (- size 1)) #))) (set (quote size) (- size 1))) total))
> def args: : (<object 12955> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 13166> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 13376> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 13585> (__getElement (get (quote getElement) (get (quote __context) __context))))
> sum (via f): def args: : (<object 13887> (env (if (null? @) # (car @))))
> 10def args: : (<object 13994> (env (if (null? @) # (car @))))
> 
> def args: : (<object 14101> (env (if (null? @) # (car @))))
> def args: : (<object 14217> (total 0))
> def args: : (<object 14217> (size (length $)))
> def args: : (<object 14276> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 14463> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 14650> (__getElement (get (quote getElement) (get (quote __context) __context))))
> def args: : (<object 14837> (__getElement (get (quote getElement) (get (quote __context) __context))))
> sum (via g): def args: : (<object 15106> (env (if (null? @) # (car @))))
> 10def args: : (<object 15213> (env (if (null? @) # (car @))))
> 
> def args: : (<object 15320> (env (if (null? @) # (car @))))
> def args: : (<object 12465> ((a) (define (f) (print "hello
> ")) (define (g x) (println x)) (lambda (@) (apply (get (car @) __context) (cdr @)))))
> def args: : (<object 12465> (aa (a)))
> def args: : (<object 15456> ((f) (print "hello
> ")))
> def args: : (<object 15456> ((g x) (println x)))
39c171,174
< world
---
> def args: : (<object 15714> (env (if (null? @) # (car @))))
> worlddef args: : (<object 16029> (env (if (null? @) # (car @))))
> 
> def args: : (<object 16227> (env (if (null? @) # (car @))))
------------------------------------------
arrays.s
------------------------------------------
19,22c19,410
< (allocate 5) is [nil,nil,nil,nil,nil]
< (allocate* 5) is [nil,nil,nil,nil,nil]
< (allocate* 5 4) is [[nil,nil,nil,nil],[nil,nil,nil,nil],[nil,nil,nil,nil],[nil,nil,nil,nil],[nil,nil,nil,nil]]
< (allocate* 5 4 3 2) is [[[[nil,nil],[nil,nil],[nil,nil]],[[nil,nil],[nil,nil],[nil,nil]],[[nil,nil],[nil,nil],[nil,nil]],[[nil,nil],[nil,nil],[nil,nil]]],[[[nil,nil],[nil,nil],[nil,nil]],[[nil,nil],[nil,nil],[nil,nil]],[[nil,nil],[nil,nil],[nil,nil]],[[nil,nil],[nil,nil],[nil,nil]]],[[[nil,nil],[nil,nil],[nil,nil]],[[nil,nil],[nil,nil],[nil,nil]],[[nil,nil],[nil,nil],[nil,nil]],[[nil,nil],[nil,nil],[nil,nil]]],[[[nil,nil],[nil,nil],[nil,nil]],[[nil,nil],[nil,nil],[nil,nil]],[[nil,nil],[nil,nil],[nil,nil]],[[nil,nil],[nil,nil],[nil,nil]]],[[[nil,nil],[nil,nil],[nil,nil]],[[nil,nil],[nil,nil],[nil,nil]],[[nil,nil],[nil,nil],[nil,nil]],[[nil,nil],[nil,nil],[nil,nil]]]]
---
> def args: : (<object 4799> (else #t))
> def args: : (<object 4799> (__builtin __context))
> def args: : (<object 4799> (__main-lib this))
> def args: : (<object 4799> (nil? null?))
> def args: : (<object 4799> ((valid? x) (not (null? x))))
> def args: : (<object 4799> ((head x) (car x)))
> def args: : (<object 4799> ((tail x) (cdr x)))
> def args: : (<object 4799> ((join x y) (cons x y)))
> def args: : (<object 4799> (^ expt))
> def args: : (<object 4799> (** expt))
> def args: : (<object 4799> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4799> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4799> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4799> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4799> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4799> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4799> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4799> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4799> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4799> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4799> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4799> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4799> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4799> (__type type))
> def args: : (<object 4799> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4799> ((class x) (get (quote __label) x)))
> def args: : (<object 4799> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4799> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4799> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4799> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4799> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4799> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4799> (function? closure?))
> def args: : (<object 4799> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4799> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4799> ((dec x) (- x 1)))
> def args: : (<object 4799> ((inc x) (+ x 1)))
> def args: : (<object 4799> (__display display))
> def args: : (<object 4799> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4799> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4799> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4799> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4799> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4799> ((negative? n) (< n 0)))
> def args: : (<object 4799> ((positive? n) (> n 0)))
> def args: : (<object 4799> ((newline) (println)))
> def args: : (<object 4799> (remainder %))
> def args: : (<object 4799> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4799> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4799> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4799> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4799> (integer int))
> def args: : (<object 4799> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4799> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4799> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4799> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4799> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4799> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4799> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4799> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4799> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4799> ((true? x) x))
> def args: : (<object 4799> ((false? x) (not x)))
> def args: : (<object 4799> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4799> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4799> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4799> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4799> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4799> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4799> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4799> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4799> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4799> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4799> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4799> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4799> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4799> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4799> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4799> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4799> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4799> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4799> ((stream-car s) (car s)))
> def args: : (<object 4799> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4799> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4799> ((stream-null? s) (null? s)))
> def args: : (<object 4799> ((code $s) $s))
> def args: : (<object 4799> ((member? x items) (valid? (member x items))))
> def args: : (<object 4799> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4799> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4799> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4799> (__string+ string+))
> def args: : (<object 4799> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4799> (__string string))
> def args: : (<object 4799> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4799> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4799> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4799> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4799> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4799> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4799> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4799> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4799> ((localNames env) (cadr env)))
> def args: : (<object 4799> ((localValues env) (caddr env)))
> def args: : (<object 4799> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4799> ((dot obj $name) (get $name obj)))
> def args: : (<object 4799> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4799> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12466> ((allocate* @) (cond ((null? @) ) (else (define a (allocate (car @))) (for (define i 0) (< i (car @)) (++ i) (setElement a i (apply allocate* (cdr @)))) a))))
> (allocate 5) is [,,,,]
> def args: : (<object 12691> (a (allocate (car @))))
> def args: : (<object 12691> (i 0))
> def args: : (<object 12756> (forresult ))
> (allocate* 5) is [,,,,]
> def args: : (<object 14028> (a (allocate (car @))))
> def args: : (<object 14028> (i 0))
> def args: : (<object 14093> (forresult ))
> def args: : (<object 14248> (a (allocate (car @))))
> def args: : (<object 14248> (i 0))
> def args: : (<object 14312> (forresult ))
> def args: : (<object 15531> (a (allocate (car @))))
> def args: : (<object 15531> (i 0))
> def args: : (<object 15595> (forresult ))
> def args: : (<object 16814> (a (allocate (car @))))
> def args: : (<object 16814> (i 0))
> def args: : (<object 16878> (forresult ))
> def args: : (<object 18097> (a (allocate (car @))))
> def args: : (<object 18097> (i 0))
> def args: : (<object 18161> (forresult ))
> def args: : (<object 19380> (a (allocate (car @))))
> def args: : (<object 19380> (i 0))
> def args: : (<object 19444> (forresult ))
> (allocate* 5 4) is [[,,,],[,,,],[,,,],[,,,],[,,,]]
> def args: : (<object 20596> (a (allocate (car @))))
> def args: : (<object 20596> (i 0))
> def args: : (<object 20661> (forresult ))
> def args: : (<object 20818> (a (allocate (car @))))
> def args: : (<object 20818> (i 0))
> def args: : (<object 20882> (forresult ))
> def args: : (<object 21038> (a (allocate (car @))))
> def args: : (<object 21038> (i 0))
> def args: : (<object 21101> (forresult ))
> def args: : (<object 21256> (a (allocate (car @))))
> def args: : (<object 21256> (i 0))
> def args: : (<object 21318> (forresult ))
> def args: : (<object 22059> (a (allocate (car @))))
> def args: : (<object 22059> (i 0))
> def args: : (<object 22121> (forresult ))
> def args: : (<object 22862> (a (allocate (car @))))
> def args: : (<object 22862> (i 0))
> def args: : (<object 22924> (forresult ))
> def args: : (<object 23774> (a (allocate (car @))))
> def args: : (<object 23774> (i 0))
> def args: : (<object 23837> (forresult ))
> def args: : (<object 23992> (a (allocate (car @))))
> def args: : (<object 23992> (i 0))
> def args: : (<object 24054> (forresult ))
> def args: : (<object 24795> (a (allocate (car @))))
> def args: : (<object 24795> (i 0))
> def args: : (<object 24857> (forresult ))
> def args: : (<object 25598> (a (allocate (car @))))
> def args: : (<object 25598> (i 0))
> def args: : (<object 25660> (forresult ))
> def args: : (<object 26510> (a (allocate (car @))))
> def args: : (<object 26510> (i 0))
> def args: : (<object 26573> (forresult ))
> def args: : (<object 26728> (a (allocate (car @))))
> def args: : (<object 26728> (i 0))
> def args: : (<object 26790> (forresult ))
> def args: : (<object 27531> (a (allocate (car @))))
> def args: : (<object 27531> (i 0))
> def args: : (<object 27593> (forresult ))
> def args: : (<object 28334> (a (allocate (car @))))
> def args: : (<object 28334> (i 0))
> def args: : (<object 28396> (forresult ))
> def args: : (<object 29246> (a (allocate (car @))))
> def args: : (<object 29246> (i 0))
> def args: : (<object 29309> (forresult ))
> def args: : (<object 29464> (a (allocate (car @))))
> def args: : (<object 29464> (i 0))
> def args: : (<object 29526> (forresult ))
> def args: : (<object 30267> (a (allocate (car @))))
> def args: : (<object 30267> (i 0))
> def args: : (<object 30329> (forresult ))
> def args: : (<object 31070> (a (allocate (car @))))
> def args: : (<object 31070> (i 0))
> def args: : (<object 31132> (forresult ))
> def args: : (<object 32091> (a (allocate (car @))))
> def args: : (<object 32091> (i 0))
> def args: : (<object 32155> (forresult ))
> def args: : (<object 32311> (a (allocate (car @))))
> def args: : (<object 32311> (i 0))
> def args: : (<object 32374> (forresult ))
> def args: : (<object 32529> (a (allocate (car @))))
> def args: : (<object 32529> (i 0))
> def args: : (<object 32591> (forresult ))
> def args: : (<object 33332> (a (allocate (car @))))
> def args: : (<object 33332> (i 0))
> def args: : (<object 33394> (forresult ))
> def args: : (<object 34135> (a (allocate (car @))))
> def args: : (<object 34135> (i 0))
> def args: : (<object 34197> (forresult ))
> def args: : (<object 35047> (a (allocate (car @))))
> def args: : (<object 35047> (i 0))
> def args: : (<object 35110> (forresult ))
> def args: : (<object 35265> (a (allocate (car @))))
> def args: : (<object 35265> (i 0))
> def args: : (<object 35327> (forresult ))
> def args: : (<object 36068> (a (allocate (car @))))
> def args: : (<object 36068> (i 0))
> def args: : (<object 36130> (forresult ))
> def args: : (<object 36871> (a (allocate (car @))))
> def args: : (<object 36871> (i 0))
> def args: : (<object 36933> (forresult ))
> def args: : (<object 37783> (a (allocate (car @))))
> def args: : (<object 37783> (i 0))
> def args: : (<object 37846> (forresult ))
> def args: : (<object 38001> (a (allocate (car @))))
> def args: : (<object 38001> (i 0))
> def args: : (<object 38063> (forresult ))
> def args: : (<object 38804> (a (allocate (car @))))
> def args: : (<object 38804> (i 0))
> def args: : (<object 38866> (forresult ))
> def args: : (<object 39607> (a (allocate (car @))))
> def args: : (<object 39607> (i 0))
> def args: : (<object 39669> (forresult ))
> def args: : (<object 40519> (a (allocate (car @))))
> def args: : (<object 40519> (i 0))
> def args: : (<object 40582> (forresult ))
> def args: : (<object 40737> (a (allocate (car @))))
> def args: : (<object 40737> (i 0))
> def args: : (<object 40799> (forresult ))
> def args: : (<object 41540> (a (allocate (car @))))
> def args: : (<object 41540> (i 0))
> def args: : (<object 41602> (forresult ))
> def args: : (<object 42343> (a (allocate (car @))))
> def args: : (<object 42343> (i 0))
> def args: : (<object 42405> (forresult ))
> def args: : (<object 43364> (a (allocate (car @))))
> def args: : (<object 43364> (i 0))
> def args: : (<object 43428> (forresult ))
> def args: : (<object 43584> (a (allocate (car @))))
> def args: : (<object 43584> (i 0))
> def args: : (<object 43647> (forresult ))
> def args: : (<object 43802> (a (allocate (car @))))
> def args: : (<object 43802> (i 0))
> def args: : (<object 43864> (forresult ))
> def args: : (<object 44605> (a (allocate (car @))))
> def args: : (<object 44605> (i 0))
> def args: : (<object 44667> (forresult ))
> def args: : (<object 45408> (a (allocate (car @))))
> def args: : (<object 45408> (i 0))
> def args: : (<object 45470> (forresult ))
> def args: : (<object 46320> (a (allocate (car @))))
> def args: : (<object 46320> (i 0))
> def args: : (<object 46383> (forresult ))
> def args: : (<object 46538> (a (allocate (car @))))
> def args: : (<object 46538> (i 0))
> def args: : (<object 46600> (forresult ))
> def args: : (<object 47341> (a (allocate (car @))))
> def args: : (<object 47341> (i 0))
> def args: : (<object 47403> (forresult ))
> def args: : (<object 48144> (a (allocate (car @))))
> def args: : (<object 48144> (i 0))
> def args: : (<object 48206> (forresult ))
> def args: : (<object 49056> (a (allocate (car @))))
> def args: : (<object 49056> (i 0))
> def args: : (<object 49119> (forresult ))
> def args: : (<object 49274> (a (allocate (car @))))
> def args: : (<object 49274> (i 0))
> def args: : (<object 49336> (forresult ))
> def args: : (<object 50077> (a (allocate (car @))))
> def args: : (<object 50077> (i 0))
> def args: : (<object 50139> (forresult ))
> def args: : (<object 50880> (a (allocate (car @))))
> def args: : (<object 50880> (i 0))
> def args: : (<object 50942> (forresult ))
> def args: : (<object 51792> (a (allocate (car @))))
> def args: : (<object 51792> (i 0))
> def args: : (<object 51855> (forresult ))
> def args: : (<object 52010> (a (allocate (car @))))
> def args: : (<object 52010> (i 0))
> def args: : (<object 52072> (forresult ))
> def args: : (<object 52813> (a (allocate (car @))))
> def args: : (<object 52813> (i 0))
> def args: : (<object 52875> (forresult ))
> def args: : (<object 53616> (a (allocate (car @))))
> def args: : (<object 53616> (i 0))
> def args: : (<object 53678> (forresult ))
> def args: : (<object 54637> (a (allocate (car @))))
> def args: : (<object 54637> (i 0))
> def args: : (<object 54701> (forresult ))
> def args: : (<object 54857> (a (allocate (car @))))
> def args: : (<object 54857> (i 0))
> def args: : (<object 54920> (forresult ))
> def args: : (<object 55075> (a (allocate (car @))))
> def args: : (<object 55075> (i 0))
> def args: : (<object 55137> (forresult ))
> def args: : (<object 55878> (a (allocate (car @))))
> def args: : (<object 55878> (i 0))
> def args: : (<object 55940> (forresult ))
> def args: : (<object 56681> (a (allocate (car @))))
> def args: : (<object 56681> (i 0))
> def args: : (<object 56743> (forresult ))
> def args: : (<object 57593> (a (allocate (car @))))
> def args: : (<object 57593> (i 0))
> def args: : (<object 57656> (forresult ))
> def args: : (<object 57811> (a (allocate (car @))))
> def args: : (<object 57811> (i 0))
> def args: : (<object 57873> (forresult ))
> def args: : (<object 58614> (a (allocate (car @))))
> def args: : (<object 58614> (i 0))
> def args: : (<object 58676> (forresult ))
> def args: : (<object 59417> (a (allocate (car @))))
> def args: : (<object 59417> (i 0))
> def args: : (<object 59479> (forresult ))
> def args: : (<object 60329> (a (allocate (car @))))
> def args: : (<object 60329> (i 0))
> def args: : (<object 60392> (forresult ))
> def args: : (<object 60547> (a (allocate (car @))))
> def args: : (<object 60547> (i 0))
> def args: : (<object 60609> (forresult ))
> def args: : (<object 61350> (a (allocate (car @))))
> def args: : (<object 61350> (i 0))
> def args: : (<object 61412> (forresult ))
> def args: : (<object 62153> (a (allocate (car @))))
> def args: : (<object 62153> (i 0))
> def args: : (<object 62215> (forresult ))
> def args: : (<object 63065> (a (allocate (car @))))
> def args: : (<object 63065> (i 0))
> def args: : (<object 63128> (forresult ))
> def args: : (<object 63283> (a (allocate (car @))))
> def args: : (<object 63283> (i 0))
> def args: : (<object 63345> (forresult ))
> def args: : (<object 64086> (a (allocate (car @))))
> def args: : (<object 64086> (i 0))
> def args: : (<object 64148> (forresult ))
> def args: : (<object 64889> (a (allocate (car @))))
> def args: : (<object 64889> (i 0))
> def args: : (<object 64951> (forresult ))
> def args: : (<object 65910> (a (allocate (car @))))
> def args: : (<object 65910> (i 0))
> def args: : (<object 65974> (forresult ))
> def args: : (<object 66130> (a (allocate (car @))))
> def args: : (<object 66130> (i 0))
> def args: : (<object 66193> (forresult ))
> def args: : (<object 66348> (a (allocate (car @))))
> def args: : (<object 66348> (i 0))
> def args: : (<object 66410> (forresult ))
> def args: : (<object 67151> (a (allocate (car @))))
> def args: : (<object 67151> (i 0))
> def args: : (<object 67213> (forresult ))
> def args: : (<object 67954> (a (allocate (car @))))
> def args: : (<object 67954> (i 0))
> def args: : (<object 68016> (forresult ))
> def args: : (<object 68866> (a (allocate (car @))))
> def args: : (<object 68866> (i 0))
> def args: : (<object 68929> (forresult ))
> def args: : (<object 69084> (a (allocate (car @))))
> def args: : (<object 69084> (i 0))
> def args: : (<object 69146> (forresult ))
> def args: : (<object 69887> (a (allocate (car @))))
> def args: : (<object 69887> (i 0))
> def args: : (<object 69949> (forresult ))
> def args: : (<object 70690> (a (allocate (car @))))
> def args: : (<object 70690> (i 0))
> def args: : (<object 70752> (forresult ))
> def args: : (<object 71602> (a (allocate (car @))))
> def args: : (<object 71602> (i 0))
> def args: : (<object 71665> (forresult ))
> def args: : (<object 71820> (a (allocate (car @))))
> def args: : (<object 71820> (i 0))
> def args: : (<object 71882> (forresult ))
> def args: : (<object 72623> (a (allocate (car @))))
> def args: : (<object 72623> (i 0))
> def args: : (<object 72685> (forresult ))
> def args: : (<object 73426> (a (allocate (car @))))
> def args: : (<object 73426> (i 0))
> def args: : (<object 73488> (forresult ))
> def args: : (<object 74338> (a (allocate (car @))))
> def args: : (<object 74338> (i 0))
> def args: : (<object 74401> (forresult ))
> def args: : (<object 74556> (a (allocate (car @))))
> def args: : (<object 74556> (i 0))
> def args: : (<object 74618> (forresult ))
> def args: : (<object 75359> (a (allocate (car @))))
> def args: : (<object 75359> (i 0))
> def args: : (<object 75421> (forresult ))
> def args: : (<object 76162> (a (allocate (car @))))
> def args: : (<object 76162> (i 0))
> def args: : (<object 76224> (forresult ))
> (allocate* 5 4 3 2) is [[[[,],[,],[,]],[[,],[,],[,]],[[,],[,],[,]],[[,],[,],[,]]],[[[,],[,],[,]],[[,],[,],[,]],[[,],[,],[,]],[[,],[,],[,]]],[[[,],[,],[,]],[[,],[,],[,]],[[,],[,],[,]],[[,],[,],[,]]],[[[,],[,],[,]],[[,],[,],[,]],[[,],[,],[,]],[[,],[,],[,]]],[[[,],[,],[,]],[[,],[,],[,]],[[,],[,],[,]],[[,],[,],[,]]]]
------------------------------------------
a.s
------------------------------------------
13c13,131
< zeta of 10 and 10 is 400
---
> def args: : (<object 4794> (else #t))
> def args: : (<object 4794> (__builtin __context))
> def args: : (<object 4794> (__main-lib this))
> def args: : (<object 4794> (nil? null?))
> def args: : (<object 4794> ((valid? x) (not (null? x))))
> def args: : (<object 4794> ((head x) (car x)))
> def args: : (<object 4794> ((tail x) (cdr x)))
> def args: : (<object 4794> ((join x y) (cons x y)))
> def args: : (<object 4794> (^ expt))
> def args: : (<object 4794> (** expt))
> def args: : (<object 4794> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4794> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4794> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4794> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4794> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4794> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4794> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4794> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4794> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4794> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4794> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4794> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4794> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4794> (__type type))
> def args: : (<object 4794> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4794> ((class x) (get (quote __label) x)))
> def args: : (<object 4794> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4794> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4794> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4794> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4794> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4794> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4794> (function? closure?))
> def args: : (<object 4794> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4794> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4794> ((dec x) (- x 1)))
> def args: : (<object 4794> ((inc x) (+ x 1)))
> def args: : (<object 4794> (__display display))
> def args: : (<object 4794> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4794> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4794> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4794> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4794> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4794> ((negative? n) (< n 0)))
> def args: : (<object 4794> ((positive? n) (> n 0)))
> def args: : (<object 4794> ((newline) (println)))
> def args: : (<object 4794> (remainder %))
> def args: : (<object 4794> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4794> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4794> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4794> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4794> (integer int))
> def args: : (<object 4794> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4794> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4794> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4794> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4794> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4794> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4794> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4794> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4794> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4794> ((true? x) x))
> def args: : (<object 4794> ((false? x) (not x)))
> def args: : (<object 4794> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4794> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4794> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4794> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4794> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4794> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4794> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4794> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4794> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4794> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4794> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4794> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4794> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4794> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4794> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4794> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4794> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4794> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4794> ((stream-car s) (car s)))
> def args: : (<object 4794> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4794> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4794> ((stream-null? s) (null? s)))
> def args: : (<object 4794> ((code $s) $s))
> def args: : (<object 4794> ((member? x items) (valid? (member x items))))
> def args: : (<object 4794> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4794> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4794> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4794> (__string+ string+))
> def args: : (<object 4794> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4794> (__string string))
> def args: : (<object 4794> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4794> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4794> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4794> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4794> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4794> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4794> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4794> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4794> ((localNames env) (cadr env)))
> def args: : (<object 4794> ((localValues env) (caddr env)))
> def args: : (<object 4794> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4794> ((dot obj $name) (get $name obj)))
> def args: : (<object 4794> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4794> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12461> ((sqr x) (return (* x x))))
> def args: : (<object 12461> ((a+b a b) (return (sqr (+ a b)))))
> def args: : (<object 12461> (z 10))
> zeta of def args: : (<object 12858> (env (if (null? @) # (car @))))
> 10def args: : (<object 12965> (env (if (null? @) # (car @))))
>  and def args: : (<object 13072> (env (if (null? @) # (car @))))
> 10def args: : (<object 13179> (env (if (null? @) # (car @))))
>  is def args: : (<object 13286> (env (if (null? @) # (car @))))
> 400def args: : (<object 13393> (env (if (null? @) # (car @))))
> 
> def args: : (<object 13500> (env (if (null? @) # (car @))))
------------------------------------------
assoc.s
------------------------------------------
7a8,118
> def args: : (<object 4798> (else #t))
> def args: : (<object 4798> (__builtin __context))
> def args: : (<object 4798> (__main-lib this))
> def args: : (<object 4798> (nil? null?))
> def args: : (<object 4798> ((valid? x) (not (null? x))))
> def args: : (<object 4798> ((head x) (car x)))
> def args: : (<object 4798> ((tail x) (cdr x)))
> def args: : (<object 4798> ((join x y) (cons x y)))
> def args: : (<object 4798> (^ expt))
> def args: : (<object 4798> (** expt))
> def args: : (<object 4798> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4798> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4798> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4798> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4798> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4798> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4798> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4798> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4798> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4798> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4798> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4798> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4798> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4798> (__type type))
> def args: : (<object 4798> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4798> ((class x) (get (quote __label) x)))
> def args: : (<object 4798> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4798> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4798> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4798> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4798> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4798> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4798> (function? closure?))
> def args: : (<object 4798> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4798> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4798> ((dec x) (- x 1)))
> def args: : (<object 4798> ((inc x) (+ x 1)))
> def args: : (<object 4798> (__display display))
> def args: : (<object 4798> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4798> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4798> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4798> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4798> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4798> ((negative? n) (< n 0)))
> def args: : (<object 4798> ((positive? n) (> n 0)))
> def args: : (<object 4798> ((newline) (println)))
> def args: : (<object 4798> (remainder %))
> def args: : (<object 4798> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4798> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4798> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4798> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4798> (integer int))
> def args: : (<object 4798> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4798> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4798> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4798> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4798> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4798> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4798> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4798> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4798> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4798> ((true? x) x))
> def args: : (<object 4798> ((false? x) (not x)))
> def args: : (<object 4798> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4798> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4798> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4798> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4798> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4798> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4798> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4798> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4798> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4798> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4798> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4798> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4798> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4798> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4798> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4798> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4798> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4798> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4798> ((stream-car s) (car s)))
> def args: : (<object 4798> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4798> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4798> ((stream-null? s) (null? s)))
> def args: : (<object 4798> ((code $s) $s))
> def args: : (<object 4798> ((member? x items) (valid? (member x items))))
> def args: : (<object 4798> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4798> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4798> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4798> (__string+ string+))
> def args: : (<object 4798> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4798> (__string string))
> def args: : (<object 4798> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4798> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4798> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4798> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4798> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4798> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4798> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4798> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4798> ((localNames env) (cadr env)))
> def args: : (<object 4798> ((localValues env) (caddr env)))
> def args: : (<object 4798> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4798> ((dot obj $name) (get $name obj)))
> def args: : (<object 4798> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4798> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12465> (alist (quote ((a 1) (b 2) (c 3)))))
> def args: : (<object 13020> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 13241> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
8a120,123
> def args: : (<object 13829> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 14050> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 14635> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 14856> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
9a125,130
> def args: : (<object 15444> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 15665> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 16250> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 16471> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 17056> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 17277> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
10a132,137
> def args: : (<object 17874> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 18095> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 18680> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 18901> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 19486> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 19707> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
------------------------------------------
bad.s
------------------------------------------
7c7,118
< zero
---
> def args: : (<object 4796> (else #t))
> def args: : (<object 4796> (__builtin __context))
> def args: : (<object 4796> (__main-lib this))
> def args: : (<object 4796> (nil? null?))
> def args: : (<object 4796> ((valid? x) (not (null? x))))
> def args: : (<object 4796> ((head x) (car x)))
> def args: : (<object 4796> ((tail x) (cdr x)))
> def args: : (<object 4796> ((join x y) (cons x y)))
> def args: : (<object 4796> (^ expt))
> def args: : (<object 4796> (** expt))
> def args: : (<object 4796> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4796> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4796> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4796> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4796> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4796> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4796> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4796> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4796> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4796> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4796> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4796> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4796> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4796> (__type type))
> def args: : (<object 4796> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4796> ((class x) (get (quote __label) x)))
> def args: : (<object 4796> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4796> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4796> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4796> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4796> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4796> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4796> (function? closure?))
> def args: : (<object 4796> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4796> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4796> ((dec x) (- x 1)))
> def args: : (<object 4796> ((inc x) (+ x 1)))
> def args: : (<object 4796> (__display display))
> def args: : (<object 4796> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4796> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4796> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4796> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4796> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4796> ((negative? n) (< n 0)))
> def args: : (<object 4796> ((positive? n) (> n 0)))
> def args: : (<object 4796> ((newline) (println)))
> def args: : (<object 4796> (remainder %))
> def args: : (<object 4796> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4796> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4796> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4796> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4796> (integer int))
> def args: : (<object 4796> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4796> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4796> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4796> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4796> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4796> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4796> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4796> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4796> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4796> ((true? x) x))
> def args: : (<object 4796> ((false? x) (not x)))
> def args: : (<object 4796> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4796> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4796> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4796> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4796> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4796> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4796> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4796> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4796> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4796> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4796> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4796> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4796> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4796> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4796> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4796> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4796> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4796> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4796> ((stream-car s) (car s)))
> def args: : (<object 4796> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4796> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4796> ((stream-null? s) (null? s)))
> def args: : (<object 4796> ((code $s) $s))
> def args: : (<object 4796> ((member? x items) (valid? (member x items))))
> def args: : (<object 4796> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4796> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4796> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4796> (__string+ string+))
> def args: : (<object 4796> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4796> (__string string))
> def args: : (<object 4796> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4796> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4796> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4796> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4796> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4796> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4796> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4796> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4796> ((localNames env) (cadr env)))
> def args: : (<object 4796> ((localValues env) (caddr env)))
> def args: : (<object 4796> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4796> ((dot obj $name) (get $name obj)))
> def args: : (<object 4796> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4796> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12463> (i 0))
> zerodef args: : (<object 12660> (env (if (null? @) # (car @))))
> 
> def args: : (<object 12858> (env (if (null? @) # (car @))))
------------------------------------------
block.s
------------------------------------------
22,36c22,209
< the value of i is 1
< the value of i is 3
< the value of i is 5
< the value of i is 7
< the value of i is 9
< the value of i is 10
< the value of i is 9
< the value of i is 8
< the value of i is 7
< the value of i is 6
< the value of i is 5
< the value of i is 4
< the value of i is 3
< the value of i is 2
< the value of i is 1
---
> def args: : (<object 4798> (else #t))
> def args: : (<object 4798> (__builtin __context))
> def args: : (<object 4798> (__main-lib this))
> def args: : (<object 4798> (nil? null?))
> def args: : (<object 4798> ((valid? x) (not (null? x))))
> def args: : (<object 4798> ((head x) (car x)))
> def args: : (<object 4798> ((tail x) (cdr x)))
> def args: : (<object 4798> ((join x y) (cons x y)))
> def args: : (<object 4798> (^ expt))
> def args: : (<object 4798> (** expt))
> def args: : (<object 4798> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4798> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4798> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4798> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4798> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4798> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4798> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4798> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4798> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4798> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4798> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4798> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4798> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4798> (__type type))
> def args: : (<object 4798> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4798> ((class x) (get (quote __label) x)))
> def args: : (<object 4798> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4798> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4798> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4798> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4798> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4798> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4798> (function? closure?))
> def args: : (<object 4798> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4798> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4798> ((dec x) (- x 1)))
> def args: : (<object 4798> ((inc x) (+ x 1)))
> def args: : (<object 4798> (__display display))
> def args: : (<object 4798> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4798> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4798> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4798> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4798> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4798> ((negative? n) (< n 0)))
> def args: : (<object 4798> ((positive? n) (> n 0)))
> def args: : (<object 4798> ((newline) (println)))
> def args: : (<object 4798> (remainder %))
> def args: : (<object 4798> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4798> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4798> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4798> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4798> (integer int))
> def args: : (<object 4798> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4798> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4798> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4798> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4798> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4798> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4798> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4798> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4798> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4798> ((true? x) x))
> def args: : (<object 4798> ((false? x) (not x)))
> def args: : (<object 4798> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4798> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4798> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4798> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4798> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4798> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4798> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4798> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4798> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4798> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4798> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4798> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4798> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4798> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4798> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4798> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4798> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4798> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4798> ((stream-car s) (car s)))
> def args: : (<object 4798> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4798> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4798> ((stream-null? s) (null? s)))
> def args: : (<object 4798> ((code $s) $s))
> def args: : (<object 4798> ((member? x items) (valid? (member x items))))
> def args: : (<object 4798> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4798> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4798> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4798> (__string+ string+))
> def args: : (<object 4798> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4798> (__string string))
> def args: : (<object 4798> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4798> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4798> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4798> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4798> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4798> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4798> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4798> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4798> ((localNames env) (cadr env)))
> def args: : (<object 4798> ((localValues env) (caddr env)))
> def args: : (<object 4798> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4798> ((dot obj $name) (get $name obj)))
> def args: : (<object 4798> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4798> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12465> (i 0))
> def args: : (<object 12465> ((for2 # init $test $increment $) (while (eval $test #) (evalList $ #) (eval $increment #))))
> def args: : (<object 12734> (env (if (null? @) # (car @))))
> def args: : (<object 12804> (forresult ))
> the value of i is def args: : (<object 13022> (env (if (null? @) # (car @))))
> 1def args: : (<object 13268> (env (if (null? @) # (car @))))
> 
> def args: : (<object 13523> (env (if (null? @) # (car @))))
> def args: : (<object 13656> (env (if (null? @) # (car @))))
> the value of i is def args: : (<object 13897> (env (if (null? @) # (car @))))
> 3def args: : (<object 14143> (env (if (null? @) # (car @))))
> 
> def args: : (<object 14398> (env (if (null? @) # (car @))))
> def args: : (<object 14531> (env (if (null? @) # (car @))))
> the value of i is def args: : (<object 14772> (env (if (null? @) # (car @))))
> 5def args: : (<object 15018> (env (if (null? @) # (car @))))
> 
> def args: : (<object 15273> (env (if (null? @) # (car @))))
> def args: : (<object 15406> (env (if (null? @) # (car @))))
> the value of i is def args: : (<object 15647> (env (if (null? @) # (car @))))
> 7def args: : (<object 15893> (env (if (null? @) # (car @))))
> 
> def args: : (<object 16148> (env (if (null? @) # (car @))))
> def args: : (<object 16281> (env (if (null? @) # (car @))))
> the value of i is def args: : (<object 16522> (env (if (null? @) # (car @))))
> 9def args: : (<object 16768> (env (if (null? @) # (car @))))
> 
> def args: : (<object 17023> (env (if (null? @) # (car @))))
> def args: : (<object 17156> (env (if (null? @) # (car @))))
> def args: : (<object 17254> (env (if (null? @) # (car @))))
> the value of i is def args: : (<object 17542> (env (if (null? @) # (car @))))
> 10def args: : (<object 17788> (env (if (null? @) # (car @))))
> 
> def args: : (<object 18043> (env (if (null? @) # (car @))))
> def args: : (<object 18172> (env (if (null? @) # (car @))))
> the value of i is def args: : (<object 18412> (env (if (null? @) # (car @))))
> 9def args: : (<object 18658> (env (if (null? @) # (car @))))
> 
> def args: : (<object 18913> (env (if (null? @) # (car @))))
> def args: : (<object 19042> (env (if (null? @) # (car @))))
> the value of i is def args: : (<object 19282> (env (if (null? @) # (car @))))
> 8def args: : (<object 19528> (env (if (null? @) # (car @))))
> 
> def args: : (<object 19783> (env (if (null? @) # (car @))))
> def args: : (<object 19912> (env (if (null? @) # (car @))))
> the value of i is def args: : (<object 20152> (env (if (null? @) # (car @))))
> 7def args: : (<object 20398> (env (if (null? @) # (car @))))
> 
> def args: : (<object 20653> (env (if (null? @) # (car @))))
> def args: : (<object 20782> (env (if (null? @) # (car @))))
> the value of i is def args: : (<object 21022> (env (if (null? @) # (car @))))
> 6def args: : (<object 21268> (env (if (null? @) # (car @))))
> 
> def args: : (<object 21523> (env (if (null? @) # (car @))))
> def args: : (<object 21652> (env (if (null? @) # (car @))))
> the value of i is def args: : (<object 21892> (env (if (null? @) # (car @))))
> 5def args: : (<object 22138> (env (if (null? @) # (car @))))
> 
> def args: : (<object 22393> (env (if (null? @) # (car @))))
> def args: : (<object 22522> (env (if (null? @) # (car @))))
> the value of i is def args: : (<object 22762> (env (if (null? @) # (car @))))
> 4def args: : (<object 23008> (env (if (null? @) # (car @))))
> 
> def args: : (<object 23263> (env (if (null? @) # (car @))))
> def args: : (<object 23392> (env (if (null? @) # (car @))))
> the value of i is def args: : (<object 23632> (env (if (null? @) # (car @))))
> 3def args: : (<object 23878> (env (if (null? @) # (car @))))
> 
> def args: : (<object 24133> (env (if (null? @) # (car @))))
> def args: : (<object 24262> (env (if (null? @) # (car @))))
> the value of i is def args: : (<object 24502> (env (if (null? @) # (car @))))
> 2def args: : (<object 24748> (env (if (null? @) # (car @))))
> 
> def args: : (<object 25003> (env (if (null? @) # (car @))))
> def args: : (<object 25132> (env (if (null? @) # (car @))))
> the value of i is def args: : (<object 25372> (env (if (null? @) # (car @))))
> 1def args: : (<object 25618> (env (if (null? @) # (car @))))
> 
> def args: : (<object 25873> (env (if (null? @) # (car @))))
> def args: : (<object 26002> (env (if (null? @) # (car @))))
------------------------------------------
call.s
------------------------------------------
7c7,119
< (square 4) is 16
---
> def args: : (<object 4797> (else #t))
> def args: : (<object 4797> (__builtin __context))
> def args: : (<object 4797> (__main-lib this))
> def args: : (<object 4797> (nil? null?))
> def args: : (<object 4797> ((valid? x) (not (null? x))))
> def args: : (<object 4797> ((head x) (car x)))
> def args: : (<object 4797> ((tail x) (cdr x)))
> def args: : (<object 4797> ((join x y) (cons x y)))
> def args: : (<object 4797> (^ expt))
> def args: : (<object 4797> (** expt))
> def args: : (<object 4797> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4797> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4797> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4797> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4797> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4797> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4797> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4797> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4797> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4797> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4797> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4797> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4797> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4797> (__type type))
> def args: : (<object 4797> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4797> ((class x) (get (quote __label) x)))
> def args: : (<object 4797> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4797> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4797> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4797> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4797> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4797> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4797> (function? closure?))
> def args: : (<object 4797> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4797> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4797> ((dec x) (- x 1)))
> def args: : (<object 4797> ((inc x) (+ x 1)))
> def args: : (<object 4797> (__display display))
> def args: : (<object 4797> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4797> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4797> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4797> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4797> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4797> ((negative? n) (< n 0)))
> def args: : (<object 4797> ((positive? n) (> n 0)))
> def args: : (<object 4797> ((newline) (println)))
> def args: : (<object 4797> (remainder %))
> def args: : (<object 4797> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4797> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4797> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4797> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4797> (integer int))
> def args: : (<object 4797> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4797> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4797> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4797> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4797> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4797> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4797> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4797> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4797> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4797> ((true? x) x))
> def args: : (<object 4797> ((false? x) (not x)))
> def args: : (<object 4797> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4797> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4797> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4797> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4797> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4797> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4797> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4797> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4797> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4797> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4797> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4797> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4797> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4797> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4797> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4797> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4797> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4797> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4797> ((stream-car s) (car s)))
> def args: : (<object 4797> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4797> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4797> ((stream-null? s) (null? s)))
> def args: : (<object 4797> ((code $s) $s))
> def args: : (<object 4797> ((member? x items) (valid? (member x items))))
> def args: : (<object 4797> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4797> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4797> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4797> (__string+ string+))
> def args: : (<object 4797> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4797> (__string string))
> def args: : (<object 4797> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4797> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4797> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4797> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4797> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4797> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4797> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4797> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4797> ((localNames env) (cadr env)))
> def args: : (<object 4797> ((localValues env) (caddr env)))
> def args: : (<object 4797> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4797> ((dot obj $name) (get $name obj)))
> def args: : (<object 4797> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4797> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12464> ((sqr x) (return (* x x))))
> (square 4) is def args: : (<object 12713> (env (if (null? @) # (car @))))
> 16def args: : (<object 12820> (env (if (null? @) # (car @))))
> 
> def args: : (<object 12927> (env (if (null? @) # (car @))))
------------------------------------------
catch.s
------------------------------------------
2a3,110
> def args: : (<object 4798> (else #t))
> def args: : (<object 4798> (__builtin __context))
> def args: : (<object 4798> (__main-lib this))
> def args: : (<object 4798> (nil? null?))
> def args: : (<object 4798> ((valid? x) (not (null? x))))
> def args: : (<object 4798> ((head x) (car x)))
> def args: : (<object 4798> ((tail x) (cdr x)))
> def args: : (<object 4798> ((join x y) (cons x y)))
> def args: : (<object 4798> (^ expt))
> def args: : (<object 4798> (** expt))
> def args: : (<object 4798> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4798> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4798> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4798> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4798> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4798> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4798> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4798> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4798> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4798> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4798> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4798> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4798> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4798> (__type type))
> def args: : (<object 4798> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4798> ((class x) (get (quote __label) x)))
> def args: : (<object 4798> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4798> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4798> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4798> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4798> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4798> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4798> (function? closure?))
> def args: : (<object 4798> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4798> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4798> ((dec x) (- x 1)))
> def args: : (<object 4798> ((inc x) (+ x 1)))
> def args: : (<object 4798> (__display display))
> def args: : (<object 4798> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4798> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4798> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4798> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4798> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4798> ((negative? n) (< n 0)))
> def args: : (<object 4798> ((positive? n) (> n 0)))
> def args: : (<object 4798> ((newline) (println)))
> def args: : (<object 4798> (remainder %))
> def args: : (<object 4798> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4798> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4798> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4798> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4798> (integer int))
> def args: : (<object 4798> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4798> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4798> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4798> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4798> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4798> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4798> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4798> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4798> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4798> ((true? x) x))
> def args: : (<object 4798> ((false? x) (not x)))
> def args: : (<object 4798> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4798> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4798> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4798> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4798> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4798> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4798> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4798> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4798> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4798> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4798> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4798> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4798> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4798> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4798> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4798> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4798> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4798> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4798> ((stream-car s) (car s)))
> def args: : (<object 4798> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4798> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4798> ((stream-null? s) (null? s)))
> def args: : (<object 4798> ((code $s) $s))
> def args: : (<object 4798> ((member? x items) (valid? (member x items))))
> def args: : (<object 4798> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4798> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4798> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4798> (__string+ string+))
> def args: : (<object 4798> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4798> (__string string))
> def args: : (<object 4798> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4798> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4798> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4798> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4798> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4798> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4798> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4798> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4798> ((localNames env) (cadr env)))
> def args: : (<object 4798> ((localValues env) (caddr env)))
> def args: : (<object 4798> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4798> ((dot obj $name) (get $name obj)))
> def args: : (<object 4798> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4798> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
------------------------------------------
chain.s
------------------------------------------
0a1,139
> (define (a x y)
>     this
>     )
> 
> (define (b m n)
>     (define o (a 'one 'two))
>     this
>     )
> 
> (define obj (b 'red 'green))
> 
> (println "output should be 'one'")
> (inspect (. obj o x))
> (println "output should be 'two'")
> (inspect (. obj o y))
> ------------------------------------------
> def args: : (<object 4798> (else #t))
> def args: : (<object 4798> (__builtin __context))
> def args: : (<object 4798> (__main-lib this))
> def args: : (<object 4798> (nil? null?))
> def args: : (<object 4798> ((valid? x) (not (null? x))))
> def args: : (<object 4798> ((head x) (car x)))
> def args: : (<object 4798> ((tail x) (cdr x)))
> def args: : (<object 4798> ((join x y) (cons x y)))
> def args: : (<object 4798> (^ expt))
> def args: : (<object 4798> (** expt))
> def args: : (<object 4798> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4798> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4798> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4798> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4798> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4798> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4798> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4798> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4798> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4798> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4798> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4798> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4798> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4798> (__type type))
> def args: : (<object 4798> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4798> ((class x) (get (quote __label) x)))
> def args: : (<object 4798> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4798> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4798> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4798> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4798> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4798> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4798> (function? closure?))
> def args: : (<object 4798> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4798> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4798> ((dec x) (- x 1)))
> def args: : (<object 4798> ((inc x) (+ x 1)))
> def args: : (<object 4798> (__display display))
> def args: : (<object 4798> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4798> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4798> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4798> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4798> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4798> ((negative? n) (< n 0)))
> def args: : (<object 4798> ((positive? n) (> n 0)))
> def args: : (<object 4798> ((newline) (println)))
> def args: : (<object 4798> (remainder %))
> def args: : (<object 4798> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4798> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4798> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4798> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4798> (integer int))
> def args: : (<object 4798> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4798> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4798> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4798> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4798> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4798> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4798> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4798> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4798> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4798> ((true? x) x))
> def args: : (<object 4798> ((false? x) (not x)))
> def args: : (<object 4798> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4798> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4798> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4798> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4798> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4798> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4798> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4798> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4798> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4798> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4798> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4798> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4798> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4798> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4798> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4798> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4798> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4798> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4798> ((stream-car s) (car s)))
> def args: : (<object 4798> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4798> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4798> ((stream-null? s) (null? s)))
> def args: : (<object 4798> ((code $s) $s))
> def args: : (<object 4798> ((member? x items) (valid? (member x items))))
> def args: : (<object 4798> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4798> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4798> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4798> (__string+ string+))
> def args: : (<object 4798> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4798> (__string string))
> def args: : (<object 4798> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4798> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4798> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4798> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4798> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4798> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4798> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4798> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4798> ((localNames env) (cadr env)))
> def args: : (<object 4798> ((localValues env) (caddr env)))
> def args: : (<object 4798> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4798> ((dot obj $name) (get $name obj)))
> def args: : (<object 4798> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4798> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12465> ((a x y) this))
> def args: : (<object 12465> ((b m n) (define o (a (quote one) (quote two))) this))
> def args: : (<object 12465> (obj (b (quote red) (quote green))))
> def args: : (<object 12705> (o (a (quote one) (quote two))))
> output should be 'one'def args: : (<object 12899> (env (if (null? @) # (car @))))
> 
> def args: : (<object 13097> (env (if (null? @) # (car @))))
> (. obj o x) is <object 13254>
>              __label  : throw
>                 code  : undefinedVariable
>                value  : "file chain.s,line 13: variable . is undefined"
>                trace  : ((. obj o x))
> 
> EXCEPTION: undefinedVariable
> file chain.s,line 13: variable . is undefined
------------------------------------------
common2.s
------------------------------------------
6,7c6,121
< ((__label environment) (__context <object 4707>) (__level 0) (__constructor nil) (this <object 11590>) (common <object 11668>) (__included_common2.s #t))
< ((__label environment) (__context <object 11590>) (__level 0) (__constructor nil) (this <object 11668>) (count 0))
---
> def args: : (<object 4800> (else #t))
> def args: : (<object 4800> (__builtin __context))
> def args: : (<object 4800> (__main-lib this))
> def args: : (<object 4800> (nil? null?))
> def args: : (<object 4800> ((valid? x) (not (null? x))))
> def args: : (<object 4800> ((head x) (car x)))
> def args: : (<object 4800> ((tail x) (cdr x)))
> def args: : (<object 4800> ((join x y) (cons x y)))
> def args: : (<object 4800> (^ expt))
> def args: : (<object 4800> (** expt))
> def args: : (<object 4800> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4800> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4800> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4800> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4800> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4800> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4800> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4800> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4800> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4800> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4800> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4800> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4800> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4800> (__type type))
> def args: : (<object 4800> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4800> ((class x) (get (quote __label) x)))
> def args: : (<object 4800> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4800> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4800> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4800> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4800> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4800> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4800> (function? closure?))
> def args: : (<object 4800> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4800> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4800> ((dec x) (- x 1)))
> def args: : (<object 4800> ((inc x) (+ x 1)))
> def args: : (<object 4800> (__display display))
> def args: : (<object 4800> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4800> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4800> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4800> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4800> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4800> ((negative? n) (< n 0)))
> def args: : (<object 4800> ((positive? n) (> n 0)))
> def args: : (<object 4800> ((newline) (println)))
> def args: : (<object 4800> (remainder %))
> def args: : (<object 4800> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4800> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4800> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4800> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4800> (integer int))
> def args: : (<object 4800> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4800> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4800> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4800> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4800> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4800> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4800> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4800> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4800> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4800> ((true? x) x))
> def args: : (<object 4800> ((false? x) (not x)))
> def args: : (<object 4800> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4800> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4800> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4800> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4800> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4800> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4800> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4800> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4800> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4800> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4800> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4800> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4800> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4800> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4800> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4800> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4800> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4800> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4800> ((stream-car s) (car s)))
> def args: : (<object 4800> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4800> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4800> ((stream-null? s) (null? s)))
> def args: : (<object 4800> ((code $s) $s))
> def args: : (<object 4800> ((member? x items) (valid? (member x items))))
> def args: : (<object 4800> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4800> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4800> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4800> (__string+ string+))
> def args: : (<object 4800> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4800> (__string string))
> def args: : (<object 4800> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4800> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4800> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4800> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4800> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4800> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4800> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4800> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4800> ((localNames env) (cadr env)))
> def args: : (<object 4800> ((localValues env) (caddr env)))
> def args: : (<object 4800> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4800> ((dot obj $name) (get $name obj)))
> def args: : (<object 4800> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4800> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12467> (common (scope (define count 0) this)))
> def args: : (<object 12545> (count 0))
> ((__label environment) (__context <object 4800>) (__level 0) (__constructor ) (this <object 12467>) (common <object 12545>) (__included_common2.s #t))def args: : (<object 12708> (env (if (null? @) # (car @))))
> 
> def args: : (<object 12906> (env (if (null? @) # (car @))))
> ((__label environment) (__context <object 12467>) (__level 0) (__constructor ) (this <object 12545>) (count 0))def args: : (<object 13155> (env (if (null? @) # (car @))))
> 
> def args: : (<object 13353> (env (if (null? @) # (car @))))
------------------------------------------
common3.s
------------------------------------------
26a27,170
> def args: : (<object 4800> (else #t))
> def args: : (<object 4800> (__builtin __context))
> def args: : (<object 4800> (__main-lib this))
> def args: : (<object 4800> (nil? null?))
> def args: : (<object 4800> ((valid? x) (not (null? x))))
> def args: : (<object 4800> ((head x) (car x)))
> def args: : (<object 4800> ((tail x) (cdr x)))
> def args: : (<object 4800> ((join x y) (cons x y)))
> def args: : (<object 4800> (^ expt))
> def args: : (<object 4800> (** expt))
> def args: : (<object 4800> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4800> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4800> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4800> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4800> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4800> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4800> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4800> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4800> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4800> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4800> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4800> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4800> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4800> (__type type))
> def args: : (<object 4800> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4800> ((class x) (get (quote __label) x)))
> def args: : (<object 4800> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4800> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4800> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4800> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4800> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4800> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4800> (function? closure?))
> def args: : (<object 4800> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4800> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4800> ((dec x) (- x 1)))
> def args: : (<object 4800> ((inc x) (+ x 1)))
> def args: : (<object 4800> (__display display))
> def args: : (<object 4800> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4800> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4800> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4800> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4800> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4800> ((negative? n) (< n 0)))
> def args: : (<object 4800> ((positive? n) (> n 0)))
> def args: : (<object 4800> ((newline) (println)))
> def args: : (<object 4800> (remainder %))
> def args: : (<object 4800> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4800> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4800> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4800> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4800> (integer int))
> def args: : (<object 4800> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4800> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4800> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4800> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4800> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4800> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4800> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4800> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4800> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4800> ((true? x) x))
> def args: : (<object 4800> ((false? x) (not x)))
> def args: : (<object 4800> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4800> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4800> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4800> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4800> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4800> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4800> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4800> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4800> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4800> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4800> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4800> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4800> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4800> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4800> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4800> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4800> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4800> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4800> ((stream-car s) (car s)))
> def args: : (<object 4800> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4800> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4800> ((stream-null? s) (null? s)))
> def args: : (<object 4800> ((code $s) $s))
> def args: : (<object 4800> ((member? x items) (valid? (member x items))))
> def args: : (<object 4800> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4800> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4800> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4800> (__string+ string+))
> def args: : (<object 4800> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4800> (__string string))
> def args: : (<object 4800> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4800> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4800> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4800> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4800> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4800> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4800> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4800> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4800> ((localNames env) (cadr env)))
> def args: : (<object 4800> ((localValues env) (caddr env)))
> def args: : (<object 4800> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4800> ((dot obj $name) (get $name obj)))
> def args: : (<object 4800> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4800> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12467> ((prior #) (define f (get (quote __constructor) #)) (if (local? (quote __prior) f) (get (quote __prior) f) (throw (quote reflectionException) "prior field has not been set"))))
> def args: : (<object 12467> ((redefine # $params $) (if (not (pair? $params)) (throw (quote reflectionException) (string+ (fileName $params) ",line " (string (lineNumber $params)) ": can only redefine functions"))) (define p (car $params)) (define (zow) (define pf 1) this) (if (defined? p #) (define pf (get p #)) (define pf (lambda (@) #f))) (define f (eval (cons (quote define) (cons $params $)) #)) (addSymbol (quote __prior) pf f) f))
> def args: : (<object 12467> ((clone # item) (define (cloneObject item) (list (quote object) (cloneList (cadr item)) (cloneList (caddr item)))) (define (cloneObjectWithContext item env) (define c (cloneObject item)) (set (quote __context) env c) c) (define (cloneList items) (cond ((null? items) ) ((pair? items) (cons (car items) (cloneList (cdr items)))) (else items))) (cond ((closure? item) (cloneObjectWithContext item #)) ((thunk? item) (cloneObjectWithContext item #)) ((object? item) (cloneObject item)) ((pair? item) (cloneList item)) (else item))))
> def args: : (<object 12467> ((compile-reflection #) (include "compile.lib") (println "compiling prior...") (compile prior #) (println "compiling redefine...") (compile redefine #) (println "compiling clone...") (compile clone #) (println "reflection.lib compiled.")))
> def args: : (<object 12467> ((resetClosures static obj) (define (update current rest) (if (closure? current) (begin (set (quote __context) static current))) (if (valid? rest) (update (car rest) (cdr rest)))) (define values (localValues obj)) (if (!= values ) (update (car values) (cdr values))) obj))
> def args: : (<object 12467> ((inherit child parents reification static) (if (null? parents) (set (quote __context) static child) (set (quote __context) (inherit (resetClosures reification (car parents)) (cdr parents) reification static) child)) (if (valid? (child (quote __constructor))) (set (quote __label) (child (quote __constructor) (quote name)) child)) child))
> def args: : (<object 12467> ((new child) (define (chain x) (if (null? x)  (cons x (chain (x (quote parent)))))) (inherit child (chain (child (quote parent))) child (child (quote __context)))))
> def args: : (<object 12467> ((mixin object @) (inherit object @ object (object (quote __context)))))
> def args: : (<object 12467> ((super child) (child (quote __context))))
> def args: : (<object 12467> ((extend # parent) (define top (if (local? (quote inherit-top) parent) (parent (quote inherit-top)) parent)) (addSymbol (quote inherit-top) top #) (set (quote __context) (# (quote __context)) top) (set (quote __context) parent #) #))
> def args: : (<object 12467> ((setEnclosingScope a b) (set* a (quote __context) b)))
> def args: : (<object 12467> ((getEnclosingScope a) (a (quote __context))))
> def args: : (<object 12467> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 12467> (common 0))
> def args: : (<object 12467> ((z) (define parent ) (define uncommon 0) (+= common 1) (+= uncommon 1) this))
> def args: : (<object 12467> ((x) (define parent (z)) this))
> def args: : (<object 14490> (parent (z)))
> def args: : (<object 14521> (parent ))
> def args: : (<object 14521> (uncommon 0))
> def args: : (<object 14700> ((chain x) (if (null? x)  (cons x (chain (x (quote parent)))))))
> def args: : (<object 14918> ((update current rest) (if (closure? current) (begin (set (quote __context) static current))) (if (valid? rest) (update (car rest) (cdr rest)))))
> def args: : (<object 14918> (values (localValues obj)))
> def args: : (<object 15418> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 15568> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 15832> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 15982> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 16476> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 16626> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 16890> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 17040> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 17613> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 17763> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 18257> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 18407> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 18671> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 18821> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
27a172,191
> def args: : (<object 19224> (parent (z)))
> def args: : (<object 19255> (parent ))
> def args: : (<object 19255> (uncommon 0))
> def args: : (<object 19434> ((chain x) (if (null? x)  (cons x (chain (x (quote parent)))))))
> def args: : (<object 19652> ((update current rest) (if (closure? current) (begin (set (quote __context) static current))) (if (valid? rest) (update (car rest) (cdr rest)))))
> def args: : (<object 19652> (values (localValues obj)))
> def args: : (<object 20152> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 20302> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 20566> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 20716> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 21210> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 21360> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 21624> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 21774> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 22347> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 22497> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 22991> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 23141> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 23405> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 23555> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
28a193,212
> def args: : (<object 23958> (parent (z)))
> def args: : (<object 23989> (parent ))
> def args: : (<object 23989> (uncommon 0))
> def args: : (<object 24168> ((chain x) (if (null? x)  (cons x (chain (x (quote parent)))))))
> def args: : (<object 24386> ((update current rest) (if (closure? current) (begin (set (quote __context) static current))) (if (valid? rest) (update (car rest) (cdr rest)))))
> def args: : (<object 24386> (values (localValues obj)))
> def args: : (<object 24886> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 25036> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 25300> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 25450> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 25944> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 26094> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 26358> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 26508> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 27081> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 27231> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 27725> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 27875> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 28139> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 28289> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
29a214,233
> def args: : (<object 28701> (parent (z)))
> def args: : (<object 28732> (parent ))
> def args: : (<object 28732> (uncommon 0))
> def args: : (<object 28911> ((chain x) (if (null? x)  (cons x (chain (x (quote parent)))))))
> def args: : (<object 29129> ((update current rest) (if (closure? current) (begin (set (quote __context) static current))) (if (valid? rest) (update (car rest) (cdr rest)))))
> def args: : (<object 29129> (values (localValues obj)))
> def args: : (<object 29629> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 29779> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 30043> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 30193> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 30687> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 30837> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 31101> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 31251> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 31824> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 31974> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 32468> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 32618> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 32882> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 33032> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
------------------------------------------
common4.s
------------------------------------------
34,38c34,168
< help!
< ((. (new (x)) getCommon)) is 4
< (. (new (x)) uncommon) is 1
< help!
< ((. (new (x)) getCommon)) is 4
---
> def args: : (<object 4800> (else #t))
> def args: : (<object 4800> (__builtin __context))
> def args: : (<object 4800> (__main-lib this))
> def args: : (<object 4800> (nil? null?))
> def args: : (<object 4800> ((valid? x) (not (null? x))))
> def args: : (<object 4800> ((head x) (car x)))
> def args: : (<object 4800> ((tail x) (cdr x)))
> def args: : (<object 4800> ((join x y) (cons x y)))
> def args: : (<object 4800> (^ expt))
> def args: : (<object 4800> (** expt))
> def args: : (<object 4800> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4800> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4800> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4800> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4800> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4800> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4800> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4800> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4800> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4800> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4800> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4800> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4800> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4800> (__type type))
> def args: : (<object 4800> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4800> ((class x) (get (quote __label) x)))
> def args: : (<object 4800> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4800> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4800> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4800> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4800> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4800> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4800> (function? closure?))
> def args: : (<object 4800> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4800> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4800> ((dec x) (- x 1)))
> def args: : (<object 4800> ((inc x) (+ x 1)))
> def args: : (<object 4800> (__display display))
> def args: : (<object 4800> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4800> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4800> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4800> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4800> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4800> ((negative? n) (< n 0)))
> def args: : (<object 4800> ((positive? n) (> n 0)))
> def args: : (<object 4800> ((newline) (println)))
> def args: : (<object 4800> (remainder %))
> def args: : (<object 4800> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4800> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4800> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4800> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4800> (integer int))
> def args: : (<object 4800> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4800> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4800> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4800> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4800> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4800> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4800> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4800> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4800> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4800> ((true? x) x))
> def args: : (<object 4800> ((false? x) (not x)))
> def args: : (<object 4800> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4800> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4800> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4800> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4800> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4800> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4800> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4800> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4800> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4800> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4800> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4800> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4800> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4800> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4800> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4800> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4800> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4800> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4800> ((stream-car s) (car s)))
> def args: : (<object 4800> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4800> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4800> ((stream-null? s) (null? s)))
> def args: : (<object 4800> ((code $s) $s))
> def args: : (<object 4800> ((member? x items) (valid? (member x items))))
> def args: : (<object 4800> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4800> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4800> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4800> (__string+ string+))
> def args: : (<object 4800> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4800> (__string string))
> def args: : (<object 4800> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4800> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4800> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4800> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4800> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4800> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4800> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4800> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4800> ((localNames env) (cadr env)))
> def args: : (<object 4800> ((localValues env) (caddr env)))
> def args: : (<object 4800> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4800> ((dot obj $name) (get $name obj)))
> def args: : (<object 4800> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4800> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12467> ((prior #) (define f (get (quote __constructor) #)) (if (local? (quote __prior) f) (get (quote __prior) f) (throw (quote reflectionException) "prior field has not been set"))))
> def args: : (<object 12467> ((redefine # $params $) (if (not (pair? $params)) (throw (quote reflectionException) (string+ (fileName $params) ",line " (string (lineNumber $params)) ": can only redefine functions"))) (define p (car $params)) (define (zow) (define pf 1) this) (if (defined? p #) (define pf (get p #)) (define pf (lambda (@) #f))) (define f (eval (cons (quote define) (cons $params $)) #)) (addSymbol (quote __prior) pf f) f))
> def args: : (<object 12467> ((clone # item) (define (cloneObject item) (list (quote object) (cloneList (cadr item)) (cloneList (caddr item)))) (define (cloneObjectWithContext item env) (define c (cloneObject item)) (set (quote __context) env c) c) (define (cloneList items) (cond ((null? items) ) ((pair? items) (cons (car items) (cloneList (cdr items)))) (else items))) (cond ((closure? item) (cloneObjectWithContext item #)) ((thunk? item) (cloneObjectWithContext item #)) ((object? item) (cloneObject item)) ((pair? item) (cloneList item)) (else item))))
> def args: : (<object 12467> ((compile-reflection #) (include "compile.lib") (println "compiling prior...") (compile prior #) (println "compiling redefine...") (compile redefine #) (println "compiling clone...") (compile clone #) (println "reflection.lib compiled.")))
> def args: : (<object 12467> ((resetClosures static obj) (define (update current rest) (if (closure? current) (begin (set (quote __context) static current))) (if (valid? rest) (update (car rest) (cdr rest)))) (define values (localValues obj)) (if (!= values ) (update (car values) (cdr values))) obj))
> def args: : (<object 12467> ((inherit child parents reification static) (if (null? parents) (set (quote __context) static child) (set (quote __context) (inherit (resetClosures reification (car parents)) (cdr parents) reification static) child)) (if (valid? (child (quote __constructor))) (set (quote __label) (child (quote __constructor) (quote name)) child)) child))
> def args: : (<object 12467> ((new child) (define (chain x) (if (null? x)  (cons x (chain (x (quote parent)))))) (inherit child (chain (child (quote parent))) child (child (quote __context)))))
> def args: : (<object 12467> ((mixin object @) (inherit object @ object (object (quote __context)))))
> def args: : (<object 12467> ((super child) (child (quote __context))))
> def args: : (<object 12467> ((extend # parent) (define top (if (local? (quote inherit-top) parent) (parent (quote inherit-top)) parent)) (addSymbol (quote inherit-top) top #) (set (quote __context) (# (quote __context)) top) (set (quote __context) parent #) #))
> def args: : (<object 12467> ((setEnclosingScope a b) (set* a (quote __context) b)))
> def args: : (<object 12467> ((getEnclosingScope a) (a (quote __context))))
> def args: : (<object 12467> ((helper) (println "oops!")))
> def args: : (<object 12467> (common 3))
> def args: : (<object 12467> (z (scope (define common 0) (define (helper) (println "oopsy!")) (define (z) (define parent ) (define uncommon 0) (define (getCommon) (helper) common) (assign common (+ common 1)) (assign uncommon (+ uncommon 1)) this))))
> def args: : (<object 14506> (common 0))
> def args: : (<object 14506> ((helper) (println "oopsy!")))
> def args: : (<object 14506> ((z) (define parent ) (define uncommon 0) (define (getCommon) (helper) common) (assign common (+ common 1)) (assign uncommon (+ uncommon 1)) this))
> def args: : (<object 12467> ((x) (define parent (z)) (define common 4) (define (helper) (println "help!")) this))
> ((. (new (x)) getCommon)) is <object 14653>
>              __label  : throw
>                 code  : undefinedVariable
>                value  : "file common4.s,line 30: variable . is undefined"
>                trace  : (((. (new (x)) getCommon)) (. (new (x)) getCommon))
> 
> EXCEPTION: undefinedVariable
> file common4.s,line 30: variable . is undefined
------------------------------------------
common5.s
------------------------------------------
42,47c42,174
< x's common count is 3
< y's common count is 3
< z's common count is 3
< x's count is 1
< y's count is 1
< z's count is 1
---
> def args: : (<object 4800> (else #t))
> def args: : (<object 4800> (__builtin __context))
> def args: : (<object 4800> (__main-lib this))
> def args: : (<object 4800> (nil? null?))
> def args: : (<object 4800> ((valid? x) (not (null? x))))
> def args: : (<object 4800> ((head x) (car x)))
> def args: : (<object 4800> ((tail x) (cdr x)))
> def args: : (<object 4800> ((join x y) (cons x y)))
> def args: : (<object 4800> (^ expt))
> def args: : (<object 4800> (** expt))
> def args: : (<object 4800> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4800> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4800> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4800> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4800> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4800> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4800> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4800> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4800> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4800> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4800> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4800> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4800> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4800> (__type type))
> def args: : (<object 4800> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4800> ((class x) (get (quote __label) x)))
> def args: : (<object 4800> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4800> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4800> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4800> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4800> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4800> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4800> (function? closure?))
> def args: : (<object 4800> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4800> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4800> ((dec x) (- x 1)))
> def args: : (<object 4800> ((inc x) (+ x 1)))
> def args: : (<object 4800> (__display display))
> def args: : (<object 4800> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4800> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4800> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4800> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4800> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4800> ((negative? n) (< n 0)))
> def args: : (<object 4800> ((positive? n) (> n 0)))
> def args: : (<object 4800> ((newline) (println)))
> def args: : (<object 4800> (remainder %))
> def args: : (<object 4800> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4800> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4800> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4800> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4800> (integer int))
> def args: : (<object 4800> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4800> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4800> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4800> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4800> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4800> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4800> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4800> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4800> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4800> ((true? x) x))
> def args: : (<object 4800> ((false? x) (not x)))
> def args: : (<object 4800> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4800> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4800> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4800> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4800> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4800> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4800> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4800> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4800> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4800> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4800> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4800> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4800> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4800> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4800> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4800> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4800> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4800> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4800> ((stream-car s) (car s)))
> def args: : (<object 4800> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4800> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4800> ((stream-null? s) (null? s)))
> def args: : (<object 4800> ((code $s) $s))
> def args: : (<object 4800> ((member? x items) (valid? (member x items))))
> def args: : (<object 4800> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4800> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4800> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4800> (__string+ string+))
> def args: : (<object 4800> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4800> (__string string))
> def args: : (<object 4800> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4800> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4800> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4800> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4800> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4800> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4800> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4800> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4800> ((localNames env) (cadr env)))
> def args: : (<object 4800> ((localValues env) (caddr env)))
> def args: : (<object 4800> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4800> ((dot obj $name) (get $name obj)))
> def args: : (<object 4800> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4800> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12467> ((prior #) (define f (get (quote __constructor) #)) (if (local? (quote __prior) f) (get (quote __prior) f) (throw (quote reflectionException) "prior field has not been set"))))
> def args: : (<object 12467> ((redefine # $params $) (if (not (pair? $params)) (throw (quote reflectionException) (string+ (fileName $params) ",line " (string (lineNumber $params)) ": can only redefine functions"))) (define p (car $params)) (define (zow) (define pf 1) this) (if (defined? p #) (define pf (get p #)) (define pf (lambda (@) #f))) (define f (eval (cons (quote define) (cons $params $)) #)) (addSymbol (quote __prior) pf f) f))
> def args: : (<object 12467> ((clone # item) (define (cloneObject item) (list (quote object) (cloneList (cadr item)) (cloneList (caddr item)))) (define (cloneObjectWithContext item env) (define c (cloneObject item)) (set (quote __context) env c) c) (define (cloneList items) (cond ((null? items) ) ((pair? items) (cons (car items) (cloneList (cdr items)))) (else items))) (cond ((closure? item) (cloneObjectWithContext item #)) ((thunk? item) (cloneObjectWithContext item #)) ((object? item) (cloneObject item)) ((pair? item) (cloneList item)) (else item))))
> def args: : (<object 12467> ((compile-reflection #) (include "compile.lib") (println "compiling prior...") (compile prior #) (println "compiling redefine...") (compile redefine #) (println "compiling clone...") (compile clone #) (println "reflection.lib compiled.")))
> def args: : (<object 12467> ((resetClosures static obj) (define (update current rest) (if (closure? current) (begin (set (quote __context) static current))) (if (valid? rest) (update (car rest) (cdr rest)))) (define values (localValues obj)) (if (!= values ) (update (car values) (cdr values))) obj))
> def args: : (<object 12467> ((inherit child parents reification static) (if (null? parents) (set (quote __context) static child) (set (quote __context) (inherit (resetClosures reification (car parents)) (cdr parents) reification static) child)) (if (valid? (child (quote __constructor))) (set (quote __label) (child (quote __constructor) (quote name)) child)) child))
> def args: : (<object 12467> ((new child) (define (chain x) (if (null? x)  (cons x (chain (x (quote parent)))))) (inherit child (chain (child (quote parent))) child (child (quote __context)))))
> def args: : (<object 12467> ((mixin object @) (inherit object @ object (object (quote __context)))))
> def args: : (<object 12467> ((super child) (child (quote __context))))
> def args: : (<object 12467> ((extend # parent) (define top (if (local? (quote inherit-top) parent) (parent (quote inherit-top)) parent)) (addSymbol (quote inherit-top) top #) (set (quote __context) (# (quote __context)) top) (set (quote __context) parent #) #))
> def args: : (<object 12467> ((setEnclosingScope a b) (set* a (quote __context) b)))
> def args: : (<object 12467> ((getEnclosingScope a) (a (quote __context))))
> def args: : (<object 12467> (z (scope (define z_shared (scope (define parent ) (define shared-count 0) this)) (define (z) (define parent z_shared) (define count 0) (assign count (+ count 1)) (assign (. parent shared-count) (+ (. parent shared-count) 1)) this))))
> def args: : (<object 14628> (z_shared (scope (define parent ) (define shared-count 0) this)))
> def args: : (<object 14650> (parent ))
> def args: : (<object 14650> (shared-count 0))
> def args: : (<object 14628> ((z) (define parent z_shared) (define count 0) (assign count (+ count 1)) (assign (. parent shared-count) (+ (. parent shared-count) 1)) this))
> def args: : (<object 12467> ((x) (define parent (z))))
> def args: : (<object 12467> ((y) (define parent (z))))
> def args: : (<object 12467> (xish (new (x))))
> def args: : (<object 14765> (parent (z)))
> def args: : (<object 14804> (parent z_shared))
> def args: : (<object 14804> (count 0))
> EXCEPTION: undefinedVariable
> file common5.s,line 16: variable assign is undefined
------------------------------------------
common.s
------------------------------------------
35,38c35,167
< x's common count is 2
< y's common count is 2
< x's uncommon count is 1
< y's uncommon count is 1
---
> def args: : (<object 4799> (else #t))
> def args: : (<object 4799> (__builtin __context))
> def args: : (<object 4799> (__main-lib this))
> def args: : (<object 4799> (nil? null?))
> def args: : (<object 4799> ((valid? x) (not (null? x))))
> def args: : (<object 4799> ((head x) (car x)))
> def args: : (<object 4799> ((tail x) (cdr x)))
> def args: : (<object 4799> ((join x y) (cons x y)))
> def args: : (<object 4799> (^ expt))
> def args: : (<object 4799> (** expt))
> def args: : (<object 4799> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4799> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4799> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4799> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4799> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4799> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4799> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4799> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4799> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4799> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4799> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4799> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4799> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4799> (__type type))
> def args: : (<object 4799> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4799> ((class x) (get (quote __label) x)))
> def args: : (<object 4799> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4799> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4799> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4799> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4799> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4799> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4799> (function? closure?))
> def args: : (<object 4799> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4799> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4799> ((dec x) (- x 1)))
> def args: : (<object 4799> ((inc x) (+ x 1)))
> def args: : (<object 4799> (__display display))
> def args: : (<object 4799> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4799> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4799> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4799> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4799> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4799> ((negative? n) (< n 0)))
> def args: : (<object 4799> ((positive? n) (> n 0)))
> def args: : (<object 4799> ((newline) (println)))
> def args: : (<object 4799> (remainder %))
> def args: : (<object 4799> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4799> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4799> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4799> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4799> (integer int))
> def args: : (<object 4799> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4799> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4799> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4799> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4799> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4799> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4799> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4799> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4799> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4799> ((true? x) x))
> def args: : (<object 4799> ((false? x) (not x)))
> def args: : (<object 4799> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4799> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4799> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4799> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4799> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4799> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4799> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4799> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4799> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4799> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4799> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4799> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4799> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4799> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4799> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4799> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4799> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4799> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4799> ((stream-car s) (car s)))
> def args: : (<object 4799> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4799> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4799> ((stream-null? s) (null? s)))
> def args: : (<object 4799> ((code $s) $s))
> def args: : (<object 4799> ((member? x items) (valid? (member x items))))
> def args: : (<object 4799> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4799> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4799> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4799> (__string+ string+))
> def args: : (<object 4799> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4799> (__string string))
> def args: : (<object 4799> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4799> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4799> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4799> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4799> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4799> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4799> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4799> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4799> ((localNames env) (cadr env)))
> def args: : (<object 4799> ((localValues env) (caddr env)))
> def args: : (<object 4799> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4799> ((dot obj $name) (get $name obj)))
> def args: : (<object 4799> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4799> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12466> ((prior #) (define f (get (quote __constructor) #)) (if (local? (quote __prior) f) (get (quote __prior) f) (throw (quote reflectionException) "prior field has not been set"))))
> def args: : (<object 12466> ((redefine # $params $) (if (not (pair? $params)) (throw (quote reflectionException) (string+ (fileName $params) ",line " (string (lineNumber $params)) ": can only redefine functions"))) (define p (car $params)) (define (zow) (define pf 1) this) (if (defined? p #) (define pf (get p #)) (define pf (lambda (@) #f))) (define f (eval (cons (quote define) (cons $params $)) #)) (addSymbol (quote __prior) pf f) f))
> def args: : (<object 12466> ((clone # item) (define (cloneObject item) (list (quote object) (cloneList (cadr item)) (cloneList (caddr item)))) (define (cloneObjectWithContext item env) (define c (cloneObject item)) (set (quote __context) env c) c) (define (cloneList items) (cond ((null? items) ) ((pair? items) (cons (car items) (cloneList (cdr items)))) (else items))) (cond ((closure? item) (cloneObjectWithContext item #)) ((thunk? item) (cloneObjectWithContext item #)) ((object? item) (cloneObject item)) ((pair? item) (cloneList item)) (else item))))
> def args: : (<object 12466> ((compile-reflection #) (include "compile.lib") (println "compiling prior...") (compile prior #) (println "compiling redefine...") (compile redefine #) (println "compiling clone...") (compile clone #) (println "reflection.lib compiled.")))
> def args: : (<object 12466> ((resetClosures static obj) (define (update current rest) (if (closure? current) (begin (set (quote __context) static current))) (if (valid? rest) (update (car rest) (cdr rest)))) (define values (localValues obj)) (if (!= values ) (update (car values) (cdr values))) obj))
> def args: : (<object 12466> ((inherit child parents reification static) (if (null? parents) (set (quote __context) static child) (set (quote __context) (inherit (resetClosures reification (car parents)) (cdr parents) reification static) child)) (if (valid? (child (quote __constructor))) (set (quote __label) (child (quote __constructor) (quote name)) child)) child))
> def args: : (<object 12466> ((new child) (define (chain x) (if (null? x)  (cons x (chain (x (quote parent)))))) (inherit child (chain (child (quote parent))) child (child (quote __context)))))
> def args: : (<object 12466> ((mixin object @) (inherit object @ object (object (quote __context)))))
> def args: : (<object 12466> ((super child) (child (quote __context))))
> def args: : (<object 12466> ((extend # parent) (define top (if (local? (quote inherit-top) parent) (parent (quote inherit-top)) parent)) (addSymbol (quote inherit-top) top #) (set (quote __context) (# (quote __context)) top) (set (quote __context) parent #) #))
> def args: : (<object 12466> ((setEnclosingScope a b) (set* a (quote __context) b)))
> def args: : (<object 12466> ((getEnclosingScope a) (a (quote __context))))
> def args: : (<object 12466> (z-common (scope (define count 0) this)))
> def args: : (<object 14727> (count 0))
> def args: : (<object 12466> ((z) (define parent ) (define common z-common) (define uncommon (scope (define count 0) this)) this))
> def args: : (<object 12466> ((x) (define parent (z)) (assign (. (. parent common) count) (+ (. (. parent common) count) 1)) (assign (. (. parent uncommon) count) (+ (. (. parent uncommon) count) 1)) this))
> def args: : (<object 12466> ((y) (define parent (z)) (assign (. (. parent common) count) (+ (. (. parent common) count) 1)) (assign (. (. parent uncommon) count) (+ (. (. parent uncommon) count) 1)) this))
> def args: : (<object 12466> (xish (new (x))))
> def args: : (<object 14830> (parent (z)))
> def args: : (<object 14863> (parent ))
> def args: : (<object 14863> (common z-common))
> def args: : (<object 14863> (uncommon (scope (define count 0) this)))
> def args: : (<object 14912> (count 0))
> EXCEPTION: undefinedVariable
> file common.s,line 14: variable assign is undefined
------------------------------------------
cond.s
------------------------------------------
0a1,133
> (for (define i 0) (< i 4) (++ i)
>     (cond
>         ((= i 0) (println 'zero))
>         ((= i 1) (println 'one))
>         ((= i 2) (println 'two))
>         (else (println "more than two"))
>         )
>     )
> (inspect else)
> ------------------------------------------
> def args: : (<object 4797> (else #t))
> def args: : (<object 4797> (__builtin __context))
> def args: : (<object 4797> (__main-lib this))
> def args: : (<object 4797> (nil? null?))
> def args: : (<object 4797> ((valid? x) (not (null? x))))
> def args: : (<object 4797> ((head x) (car x)))
> def args: : (<object 4797> ((tail x) (cdr x)))
> def args: : (<object 4797> ((join x y) (cons x y)))
> def args: : (<object 4797> (^ expt))
> def args: : (<object 4797> (** expt))
> def args: : (<object 4797> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4797> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4797> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4797> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4797> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4797> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4797> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4797> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4797> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4797> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4797> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4797> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4797> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4797> (__type type))
> def args: : (<object 4797> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4797> ((class x) (get (quote __label) x)))
> def args: : (<object 4797> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4797> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4797> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4797> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4797> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4797> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4797> (function? closure?))
> def args: : (<object 4797> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4797> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4797> ((dec x) (- x 1)))
> def args: : (<object 4797> ((inc x) (+ x 1)))
> def args: : (<object 4797> (__display display))
> def args: : (<object 4797> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4797> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4797> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4797> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4797> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4797> ((negative? n) (< n 0)))
> def args: : (<object 4797> ((positive? n) (> n 0)))
> def args: : (<object 4797> ((newline) (println)))
> def args: : (<object 4797> (remainder %))
> def args: : (<object 4797> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4797> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4797> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4797> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4797> (integer int))
> def args: : (<object 4797> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4797> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4797> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4797> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4797> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4797> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4797> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4797> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4797> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4797> ((true? x) x))
> def args: : (<object 4797> ((false? x) (not x)))
> def args: : (<object 4797> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4797> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4797> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4797> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4797> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4797> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4797> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4797> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4797> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4797> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4797> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4797> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4797> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4797> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4797> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4797> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4797> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4797> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4797> ((stream-car s) (car s)))
> def args: : (<object 4797> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4797> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4797> ((stream-null? s) (null? s)))
> def args: : (<object 4797> ((code $s) $s))
> def args: : (<object 4797> ((member? x items) (valid? (member x items))))
> def args: : (<object 4797> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4797> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4797> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4797> (__string+ string+))
> def args: : (<object 4797> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4797> (__string string))
> def args: : (<object 4797> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4797> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4797> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4797> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4797> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4797> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4797> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4797> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4797> ((localNames env) (cadr env)))
> def args: : (<object 4797> ((localValues env) (caddr env)))
> def args: : (<object 4797> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4797> ((dot obj $name) (get $name obj)))
> def args: : (<object 4797> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4797> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12464> (i 0))
> def args: : (<object 12630> (forresult ))
> zerodef args: : (<object 12908> (env (if (null? @) # (car @))))
> 
> def args: : (<object 13106> (env (if (null? @) # (car @))))
> onedef args: : (<object 13530> (env (if (null? @) # (car @))))
> 
> def args: : (<object 13728> (env (if (null? @) # (car @))))
> twodef args: : (<object 14155> (env (if (null? @) # (car @))))
> 
> def args: : (<object 14353> (env (if (null? @) # (car @))))
> more than twodef args: : (<object 14779> (env (if (null? @) # (car @))))
> 
> def args: : (<object 14977> (env (if (null? @) # (car @))))
> else is #t
------------------------------------------
defined.s
------------------------------------------
17a18,130
> def args: : (<object 4800> (else #t))
> def args: : (<object 4800> (__builtin __context))
> def args: : (<object 4800> (__main-lib this))
> def args: : (<object 4800> (nil? null?))
> def args: : (<object 4800> ((valid? x) (not (null? x))))
> def args: : (<object 4800> ((head x) (car x)))
> def args: : (<object 4800> ((tail x) (cdr x)))
> def args: : (<object 4800> ((join x y) (cons x y)))
> def args: : (<object 4800> (^ expt))
> def args: : (<object 4800> (** expt))
> def args: : (<object 4800> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4800> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4800> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4800> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4800> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4800> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4800> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4800> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4800> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4800> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4800> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4800> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4800> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4800> (__type type))
> def args: : (<object 4800> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4800> ((class x) (get (quote __label) x)))
> def args: : (<object 4800> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4800> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4800> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4800> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4800> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4800> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4800> (function? closure?))
> def args: : (<object 4800> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4800> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4800> ((dec x) (- x 1)))
> def args: : (<object 4800> ((inc x) (+ x 1)))
> def args: : (<object 4800> (__display display))
> def args: : (<object 4800> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4800> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4800> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4800> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4800> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4800> ((negative? n) (< n 0)))
> def args: : (<object 4800> ((positive? n) (> n 0)))
> def args: : (<object 4800> ((newline) (println)))
> def args: : (<object 4800> (remainder %))
> def args: : (<object 4800> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4800> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4800> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4800> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4800> (integer int))
> def args: : (<object 4800> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4800> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4800> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4800> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4800> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4800> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4800> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4800> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4800> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4800> ((true? x) x))
> def args: : (<object 4800> ((false? x) (not x)))
> def args: : (<object 4800> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4800> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4800> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4800> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4800> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4800> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4800> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4800> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4800> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4800> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4800> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4800> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4800> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4800> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4800> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4800> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4800> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4800> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4800> ((stream-car s) (car s)))
> def args: : (<object 4800> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4800> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4800> ((stream-null? s) (null? s)))
> def args: : (<object 4800> ((code $s) $s))
> def args: : (<object 4800> ((member? x items) (valid? (member x items))))
> def args: : (<object 4800> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4800> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4800> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4800> (__string+ string+))
> def args: : (<object 4800> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4800> (__string string))
> def args: : (<object 4800> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4800> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4800> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4800> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4800> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4800> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4800> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4800> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4800> ((localNames env) (cadr env)))
> def args: : (<object 4800> ((localValues env) (caddr env)))
> def args: : (<object 4800> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4800> ((dot obj $name) (get $name obj)))
> def args: : (<object 4800> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4800> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12467> ((prior #) (define f (get (quote __constructor) #)) (if (local? (quote __prior) f) (get (quote __prior) f) (throw (quote reflectionException) "prior field has not been set"))))
> def args: : (<object 12467> ((redefine # $params $) (if (not (pair? $params)) (throw (quote reflectionException) (string+ (fileName $params) ",line " (string (lineNumber $params)) ": can only redefine functions"))) (define p (car $params)) (define (zow) (define pf 1) this) (if (defined? p #) (define pf (get p #)) (define pf (lambda (@) #f))) (define f (eval (cons (quote define) (cons $params $)) #)) (addSymbol (quote __prior) pf f) f))
> def args: : (<object 12467> ((clone # item) (define (cloneObject item) (list (quote object) (cloneList (cadr item)) (cloneList (caddr item)))) (define (cloneObjectWithContext item env) (define c (cloneObject item)) (set (quote __context) env c) c) (define (cloneList items) (cond ((null? items) ) ((pair? items) (cons (car items) (cloneList (cdr items)))) (else items))) (cond ((closure? item) (cloneObjectWithContext item #)) ((thunk? item) (cloneObjectWithContext item #)) ((object? item) (cloneObject item)) ((pair? item) (cloneList item)) (else item))))
> def args: : (<object 12467> ((compile-reflection #) (include "compile.lib") (println "compiling prior...") (compile prior #) (println "compiling redefine...") (compile redefine #) (println "compiling clone...") (compile clone #) (println "reflection.lib compiled.")))
> def args: : (<object 12467> (methodList (array (symbol "-") (quote +) (symbol "+!+"))))
19,22c132,136
< - is defined!
< + is defined!
< +!+ is not defined.
< (defined? (quote defined?) this) is #t
---
> def args: : (<object 12467> (i 0))
> def args: : (<object 12467> (item (getElement methodList i)))
> def args: : (<object 13618> (__getElement (get (quote getElement) (get (quote __context) __context))))
> EXCEPTION: undefinedVariable
> file defined.s,line 10: variable __id is undefined
------------------------------------------
delay.s
------------------------------------------
66,104c66,21317
< 1 2 4 8 16 32 64 128 256 512 ...
< 1 2 4 8 16 32 64 128 256 512 ...
< 1 1 1 1 1 1 1 1 1 1 ...
< 1 2 3 4 5 6 7 8 9 10 ...
< 1 3 6 10 15 21 28 36 45 55 ...
< 1 3 6 10 15 21 28 36 45 55 66 78 91 105 120 136 153 171 190 210 231 253 276 300 325 351 378 406 435 465 496 gc:1, 2040417 cells available
< 528 561 595 630 666 703 741 780 820 gc:2, 2018659 cells available
< 861 903 946 990 1035 1081 gc:3, 1993714 cells available
< 1128 1176 1225 1275 1326 gc:4, 1989419 cells available
< 1378 1431 1485 1540 gc:5, 1972996 cells available
< 1596 1653 1711 gc:6, 1917904 cells available
< 1770 1830 1891 gc:7, 1896821 cells available
< 1953 2016 2080 gc:8, 1907223 cells available
< 2145 2211 2278 gc:9, 1944603 cells available
< 2346 2415 gc:10, 1886305 cells available
< 2485 2556 gc:11, 1850355 cells available
< 2628 2701 gc:12, 1834180 cells available
< 2775 2850 gc:13, 1834995 cells available
< 2926 3003 gc:14, 1850329 cells available
< 3081 3160 gc:15, 1879094 cells available
< 3240 3321 gc:16, 1919947 cells available
< 3403 gc:17, 1800553 cells available
< 3486 3570 gc:18, 1876392 cells available
< 3655 gc:19, 1777424 cells available
< 3741 3828 gc:20, 1882368 cells available
< 3916 gc:21, 1794213 cells available
< 4005 gc:22, 1723482 cells available
< 4095 4186 gc:23, 1872603 cells available
< 4278 gc:24, 1803487 cells available
< 4371 gc:25, 1750168 cells available
< 4465 gc:26, 1708861 cells available
< 4560 gc:27, 1677951 cells available
< 4656 gc:28, 1656950 cells available
< 4753 gc:29, 1643954 cells available
< 4851 gc:30, 1637391 cells available
< 4950 gc:31, 1636786 cells available
< 5050 gc:32, 1641491 cells available
< ...
< 1 3 6 10 15 21 28 36 45 55 ...
---
> def args: : (<object 4798> (else #t))
> def args: : (<object 4798> (__builtin __context))
> def args: : (<object 4798> (__main-lib this))
> def args: : (<object 4798> (nil? null?))
> def args: : (<object 4798> ((valid? x) (not (null? x))))
> def args: : (<object 4798> ((head x) (car x)))
> def args: : (<object 4798> ((tail x) (cdr x)))
> def args: : (<object 4798> ((join x y) (cons x y)))
> def args: : (<object 4798> (^ expt))
> def args: : (<object 4798> (** expt))
> def args: : (<object 4798> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4798> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4798> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4798> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4798> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4798> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4798> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4798> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4798> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4798> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4798> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4798> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4798> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4798> (__type type))
> def args: : (<object 4798> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4798> ((class x) (get (quote __label) x)))
> def args: : (<object 4798> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4798> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4798> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4798> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4798> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4798> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4798> (function? closure?))
> def args: : (<object 4798> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4798> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4798> ((dec x) (- x 1)))
> def args: : (<object 4798> ((inc x) (+ x 1)))
> def args: : (<object 4798> (__display display))
> def args: : (<object 4798> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4798> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4798> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4798> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4798> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4798> ((negative? n) (< n 0)))
> def args: : (<object 4798> ((positive? n) (> n 0)))
> def args: : (<object 4798> ((newline) (println)))
> def args: : (<object 4798> (remainder %))
> def args: : (<object 4798> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4798> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4798> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4798> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4798> (integer int))
> def args: : (<object 4798> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4798> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4798> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4798> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4798> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4798> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4798> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4798> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4798> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4798> ((true? x) x))
> def args: : (<object 4798> ((false? x) (not x)))
> def args: : (<object 4798> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4798> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4798> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4798> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4798> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4798> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4798> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4798> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4798> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4798> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4798> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4798> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4798> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4798> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4798> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4798> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4798> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4798> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4798> ((stream-car s) (car s)))
> def args: : (<object 4798> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4798> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4798> ((stream-null? s) (null? s)))
> def args: : (<object 4798> ((code $s) $s))
> def args: : (<object 4798> ((member? x items) (valid? (member x items))))
> def args: : (<object 4798> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4798> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4798> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4798> (__string+ string+))
> def args: : (<object 4798> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4798> (__string string))
> def args: : (<object 4798> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4798> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4798> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4798> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4798> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4798> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4798> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4798> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4798> ((localNames env) (cadr env)))
> def args: : (<object 4798> ((localValues env) (caddr env)))
> def args: : (<object 4798> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4798> ((dot obj $name) (get $name obj)))
> def args: : (<object 4798> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4798> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12465> ((delay # $x) (lambda  (eval $x #))))
> def args: : (<object 12465> ((force t) (t)))
> def args: : (<object 12465> ((sdisplay s n) (cond ((= n 0) (println "...")) (else (print (stream-car s) " ") (sdisplay (force (cdr s)) (- n 1))))))
> def args: : (<object 12465> ((f x) (cons x (delay (f (+ x x))))))
> 1def args: : (<object 13467> (env (if (null? @) # (car @))))
>  def args: : (<object 13574> (env (if (null? @) # (car @))))
> 2def args: : (<object 14039> (env (if (null? @) # (car @))))
>  def args: : (<object 14146> (env (if (null? @) # (car @))))
> 4def args: : (<object 14611> (env (if (null? @) # (car @))))
>  def args: : (<object 14718> (env (if (null? @) # (car @))))
> 8def args: : (<object 15183> (env (if (null? @) # (car @))))
>  def args: : (<object 15290> (env (if (null? @) # (car @))))
> 16def args: : (<object 15755> (env (if (null? @) # (car @))))
>  def args: : (<object 15862> (env (if (null? @) # (car @))))
> 32def args: : (<object 16327> (env (if (null? @) # (car @))))
>  def args: : (<object 16434> (env (if (null? @) # (car @))))
> 64def args: : (<object 16899> (env (if (null? @) # (car @))))
>  def args: : (<object 17006> (env (if (null? @) # (car @))))
> 128def args: : (<object 17471> (env (if (null? @) # (car @))))
>  def args: : (<object 17578> (env (if (null? @) # (car @))))
> 256def args: : (<object 18043> (env (if (null? @) # (car @))))
>  def args: : (<object 18150> (env (if (null? @) # (car @))))
> 512def args: : (<object 18615> (env (if (null? @) # (car @))))
>  def args: : (<object 18722> (env (if (null? @) # (car @))))
> ...def args: : (<object 19190> (env (if (null? @) # (car @))))
> 
> def args: : (<object 19388> (env (if (null? @) # (car @))))
> def args: : (<object 12465> ((sdisplay s n) (cond ((= n 0) (println "...")) (else (print (stream-car s) " ") (sdisplay (stream-cdr s) (- n 1))))))
> def args: : (<object 12465> ((f x) (cons-stream x (f (+ x x)))))
> 1def args: : (<object 19777> (env (if (null? @) # (car @))))
>  def args: : (<object 19884> (env (if (null? @) # (car @))))
> def args: : (<object 20004> (scdr (cdr s)))
> def args: : (<object 20004> (scddr (cdr scdr)))
> 2def args: : (<object 20336> (env (if (null? @) # (car @))))
>  def args: : (<object 20443> (env (if (null? @) # (car @))))
> def args: : (<object 20563> (scdr (cdr s)))
> def args: : (<object 20563> (scddr (cdr scdr)))
> 4def args: : (<object 20895> (env (if (null? @) # (car @))))
>  def args: : (<object 21002> (env (if (null? @) # (car @))))
> def args: : (<object 21122> (scdr (cdr s)))
> def args: : (<object 21122> (scddr (cdr scdr)))
> 8def args: : (<object 21454> (env (if (null? @) # (car @))))
>  def args: : (<object 21561> (env (if (null? @) # (car @))))
> def args: : (<object 21681> (scdr (cdr s)))
> def args: : (<object 21681> (scddr (cdr scdr)))
> 16def args: : (<object 22013> (env (if (null? @) # (car @))))
>  def args: : (<object 22120> (env (if (null? @) # (car @))))
> def args: : (<object 22240> (scdr (cdr s)))
> def args: : (<object 22240> (scddr (cdr scdr)))
> 32def args: : (<object 22572> (env (if (null? @) # (car @))))
>  def args: : (<object 22679> (env (if (null? @) # (car @))))
> def args: : (<object 22799> (scdr (cdr s)))
> def args: : (<object 22799> (scddr (cdr scdr)))
> 64def args: : (<object 23131> (env (if (null? @) # (car @))))
>  def args: : (<object 23238> (env (if (null? @) # (car @))))
> def args: : (<object 23358> (scdr (cdr s)))
> def args: : (<object 23358> (scddr (cdr scdr)))
> 128def args: : (<object 23690> (env (if (null? @) # (car @))))
>  def args: : (<object 23797> (env (if (null? @) # (car @))))
> def args: : (<object 23917> (scdr (cdr s)))
> def args: : (<object 23917> (scddr (cdr scdr)))
> 256def args: : (<object 24249> (env (if (null? @) # (car @))))
>  def args: : (<object 24356> (env (if (null? @) # (car @))))
> def args: : (<object 24476> (scdr (cdr s)))
> def args: : (<object 24476> (scddr (cdr scdr)))
> 512def args: : (<object 24808> (env (if (null? @) # (car @))))
>  def args: : (<object 24915> (env (if (null? @) # (car @))))
> def args: : (<object 25035> (scdr (cdr s)))
> def args: : (<object 25035> (scddr (cdr scdr)))
> ...def args: : (<object 25370> (env (if (null? @) # (car @))))
> 
> def args: : (<object 25568> (env (if (null? @) # (car @))))
> def args: : (<object 12465> ((psum s) (cons-stream (stream-car s) (psum (cons-stream (+ (stream-car s) (stream-car (stream-cdr s))) (stream-cdr (stream-cdr s)))))))
> def args: : (<object 12465> ((add-streams s t) (cons-stream (+ (stream-car s) (stream-car t)) (add-streams (stream-cdr s) (stream-cdr t)))))
> def args: : (<object 12465> (ones (cons-stream 1 ones)))
> def args: : (<object 12465> (integers (cons-stream 1 (add-streams ones integers))))
> 1def args: : (<object 25975> (env (if (null? @) # (car @))))
>  def args: : (<object 26082> (env (if (null? @) # (car @))))
> def args: : (<object 26202> (scdr (cdr s)))
> def args: : (<object 26202> (scddr (cdr scdr)))
> 1def args: : (<object 26452> (env (if (null? @) # (car @))))
>  def args: : (<object 26559> (env (if (null? @) # (car @))))
> def args: : (<object 26679> (scdr (cdr s)))
> def args: : (<object 26679> (scddr (cdr scdr)))
> 1def args: : (<object 26911> (env (if (null? @) # (car @))))
>  def args: : (<object 27018> (env (if (null? @) # (car @))))
> def args: : (<object 27138> (scdr (cdr s)))
> def args: : (<object 27138> (scddr (cdr scdr)))
> 1def args: : (<object 27370> (env (if (null? @) # (car @))))
>  def args: : (<object 27477> (env (if (null? @) # (car @))))
> def args: : (<object 27597> (scdr (cdr s)))
> def args: : (<object 27597> (scddr (cdr scdr)))
> 1def args: : (<object 27829> (env (if (null? @) # (car @))))
>  def args: : (<object 27936> (env (if (null? @) # (car @))))
> def args: : (<object 28056> (scdr (cdr s)))
> def args: : (<object 28056> (scddr (cdr scdr)))
> 1def args: : (<object 28288> (env (if (null? @) # (car @))))
>  def args: : (<object 28395> (env (if (null? @) # (car @))))
> def args: : (<object 28515> (scdr (cdr s)))
> def args: : (<object 28515> (scddr (cdr scdr)))
> 1def args: : (<object 28747> (env (if (null? @) # (car @))))
>  def args: : (<object 28854> (env (if (null? @) # (car @))))
> def args: : (<object 28974> (scdr (cdr s)))
> def args: : (<object 28974> (scddr (cdr scdr)))
> 1def args: : (<object 29206> (env (if (null? @) # (car @))))
>  def args: : (<object 29313> (env (if (null? @) # (car @))))
> def args: : (<object 29433> (scdr (cdr s)))
> def args: : (<object 29433> (scddr (cdr scdr)))
> 1def args: : (<object 29665> (env (if (null? @) # (car @))))
>  def args: : (<object 29772> (env (if (null? @) # (car @))))
> def args: : (<object 29892> (scdr (cdr s)))
> def args: : (<object 29892> (scddr (cdr scdr)))
> 1def args: : (<object 30124> (env (if (null? @) # (car @))))
>  def args: : (<object 30231> (env (if (null? @) # (car @))))
> def args: : (<object 30351> (scdr (cdr s)))
> def args: : (<object 30351> (scddr (cdr scdr)))
> ...def args: : (<object 30586> (env (if (null? @) # (car @))))
> 
> def args: : (<object 30784> (env (if (null? @) # (car @))))
> 1def args: : (<object 31055> (env (if (null? @) # (car @))))
>  def args: : (<object 31162> (env (if (null? @) # (car @))))
> def args: : (<object 31282> (scdr (cdr s)))
> def args: : (<object 31282> (scddr (cdr scdr)))
> 2def args: : (<object 31689> (env (if (null? @) # (car @))))
>  def args: : (<object 31796> (env (if (null? @) # (car @))))
> def args: : (<object 31916> (scdr (cdr s)))
> def args: : (<object 31916> (scddr (cdr scdr)))
> def args: : (<object 31988> (scdr (cdr s)))
> def args: : (<object 31988> (scddr (cdr scdr)))
> def args: : (<object 32056> (scdr (cdr s)))
> def args: : (<object 32056> (scddr (cdr scdr)))
> 3def args: : (<object 32459> (env (if (null? @) # (car @))))
>  def args: : (<object 32566> (env (if (null? @) # (car @))))
> def args: : (<object 32686> (scdr (cdr s)))
> def args: : (<object 32686> (scddr (cdr scdr)))
> def args: : (<object 32758> (scdr (cdr s)))
> def args: : (<object 32758> (scddr (cdr scdr)))
> def args: : (<object 32826> (scdr (cdr s)))
> def args: : (<object 32826> (scddr (cdr scdr)))
> 4def args: : (<object 33229> (env (if (null? @) # (car @))))
>  def args: : (<object 33336> (env (if (null? @) # (car @))))
> def args: : (<object 33456> (scdr (cdr s)))
> def args: : (<object 33456> (scddr (cdr scdr)))
> def args: : (<object 33528> (scdr (cdr s)))
> def args: : (<object 33528> (scddr (cdr scdr)))
> def args: : (<object 33596> (scdr (cdr s)))
> def args: : (<object 33596> (scddr (cdr scdr)))
> 5def args: : (<object 33999> (env (if (null? @) # (car @))))
>  def args: : (<object 34106> (env (if (null? @) # (car @))))
> def args: : (<object 34226> (scdr (cdr s)))
> def args: : (<object 34226> (scddr (cdr scdr)))
> def args: : (<object 34298> (scdr (cdr s)))
> def args: : (<object 34298> (scddr (cdr scdr)))
> def args: : (<object 34366> (scdr (cdr s)))
> def args: : (<object 34366> (scddr (cdr scdr)))
> 6def args: : (<object 34769> (env (if (null? @) # (car @))))
>  def args: : (<object 34876> (env (if (null? @) # (car @))))
> def args: : (<object 34996> (scdr (cdr s)))
> def args: : (<object 34996> (scddr (cdr scdr)))
> def args: : (<object 35068> (scdr (cdr s)))
> def args: : (<object 35068> (scddr (cdr scdr)))
> def args: : (<object 35136> (scdr (cdr s)))
> def args: : (<object 35136> (scddr (cdr scdr)))
> 7def args: : (<object 35539> (env (if (null? @) # (car @))))
>  def args: : (<object 35646> (env (if (null? @) # (car @))))
> def args: : (<object 35766> (scdr (cdr s)))
> def args: : (<object 35766> (scddr (cdr scdr)))
> def args: : (<object 35838> (scdr (cdr s)))
> def args: : (<object 35838> (scddr (cdr scdr)))
> def args: : (<object 35906> (scdr (cdr s)))
> def args: : (<object 35906> (scddr (cdr scdr)))
> 8def args: : (<object 36309> (env (if (null? @) # (car @))))
>  def args: : (<object 36416> (env (if (null? @) # (car @))))
> def args: : (<object 36536> (scdr (cdr s)))
> def args: : (<object 36536> (scddr (cdr scdr)))
> def args: : (<object 36608> (scdr (cdr s)))
> def args: : (<object 36608> (scddr (cdr scdr)))
> def args: : (<object 36676> (scdr (cdr s)))
> def args: : (<object 36676> (scddr (cdr scdr)))
> 9def args: : (<object 37079> (env (if (null? @) # (car @))))
>  def args: : (<object 37186> (env (if (null? @) # (car @))))
> def args: : (<object 37306> (scdr (cdr s)))
> def args: : (<object 37306> (scddr (cdr scdr)))
> def args: : (<object 37378> (scdr (cdr s)))
> def args: : (<object 37378> (scddr (cdr scdr)))
> def args: : (<object 37446> (scdr (cdr s)))
> def args: : (<object 37446> (scddr (cdr scdr)))
> 10def args: : (<object 37849> (env (if (null? @) # (car @))))
>  def args: : (<object 37956> (env (if (null? @) # (car @))))
> def args: : (<object 38076> (scdr (cdr s)))
> def args: : (<object 38076> (scddr (cdr scdr)))
> def args: : (<object 38148> (scdr (cdr s)))
> def args: : (<object 38148> (scddr (cdr scdr)))
> def args: : (<object 38216> (scdr (cdr s)))
> def args: : (<object 38216> (scddr (cdr scdr)))
> ...def args: : (<object 38622> (env (if (null? @) # (car @))))
> 
> def args: : (<object 38820> (env (if (null? @) # (car @))))
> 1def args: : (<object 39206> (env (if (null? @) # (car @))))
>  def args: : (<object 39313> (env (if (null? @) # (car @))))
> def args: : (<object 39433> (scdr (cdr s)))
> def args: : (<object 39433> (scddr (cdr scdr)))
> def args: : (<object 39542> (scdr (cdr s)))
> def args: : (<object 39542> (scddr (cdr scdr)))
> 3def args: : (<object 39986> (env (if (null? @) # (car @))))
>  def args: : (<object 40093> (env (if (null? @) # (car @))))
> def args: : (<object 40213> (scdr (cdr s)))
> def args: : (<object 40213> (scddr (cdr scdr)))
> def args: : (<object 40322> (scdr (cdr s)))
> def args: : (<object 40322> (scddr (cdr scdr)))
> def args: : (<object 40394> (scdr (cdr s)))
> def args: : (<object 40394> (scddr (cdr scdr)))
> def args: : (<object 40462> (scdr (cdr s)))
> def args: : (<object 40462> (scddr (cdr scdr)))
> 6def args: : (<object 40920> (env (if (null? @) # (car @))))
>  def args: : (<object 41027> (env (if (null? @) # (car @))))
> def args: : (<object 41147> (scdr (cdr s)))
> def args: : (<object 41147> (scddr (cdr scdr)))
> def args: : (<object 41256> (scdr (cdr s)))
> def args: : (<object 41256> (scddr (cdr scdr)))
> def args: : (<object 41328> (scdr (cdr s)))
> def args: : (<object 41328> (scddr (cdr scdr)))
> def args: : (<object 41396> (scdr (cdr s)))
> def args: : (<object 41396> (scddr (cdr scdr)))
> 10def args: : (<object 41854> (env (if (null? @) # (car @))))
>  def args: : (<object 41961> (env (if (null? @) # (car @))))
> def args: : (<object 42081> (scdr (cdr s)))
> def args: : (<object 42081> (scddr (cdr scdr)))
> def args: : (<object 42190> (scdr (cdr s)))
> def args: : (<object 42190> (scddr (cdr scdr)))
> def args: : (<object 42262> (scdr (cdr s)))
> def args: : (<object 42262> (scddr (cdr scdr)))
> def args: : (<object 42330> (scdr (cdr s)))
> def args: : (<object 42330> (scddr (cdr scdr)))
> 15def args: : (<object 42788> (env (if (null? @) # (car @))))
>  def args: : (<object 42895> (env (if (null? @) # (car @))))
> def args: : (<object 43015> (scdr (cdr s)))
> def args: : (<object 43015> (scddr (cdr scdr)))
> def args: : (<object 43124> (scdr (cdr s)))
> def args: : (<object 43124> (scddr (cdr scdr)))
> def args: : (<object 43196> (scdr (cdr s)))
> def args: : (<object 43196> (scddr (cdr scdr)))
> def args: : (<object 43264> (scdr (cdr s)))
> def args: : (<object 43264> (scddr (cdr scdr)))
> 21def args: : (<object 43722> (env (if (null? @) # (car @))))
>  def args: : (<object 43829> (env (if (null? @) # (car @))))
> def args: : (<object 43949> (scdr (cdr s)))
> def args: : (<object 43949> (scddr (cdr scdr)))
> def args: : (<object 44058> (scdr (cdr s)))
> def args: : (<object 44058> (scddr (cdr scdr)))
> def args: : (<object 44130> (scdr (cdr s)))
> def args: : (<object 44130> (scddr (cdr scdr)))
> def args: : (<object 44198> (scdr (cdr s)))
> def args: : (<object 44198> (scddr (cdr scdr)))
> 28def args: : (<object 44656> (env (if (null? @) # (car @))))
>  def args: : (<object 44763> (env (if (null? @) # (car @))))
> def args: : (<object 44883> (scdr (cdr s)))
> def args: : (<object 44883> (scddr (cdr scdr)))
> def args: : (<object 44992> (scdr (cdr s)))
> def args: : (<object 44992> (scddr (cdr scdr)))
> def args: : (<object 45064> (scdr (cdr s)))
> def args: : (<object 45064> (scddr (cdr scdr)))
> def args: : (<object 45132> (scdr (cdr s)))
> def args: : (<object 45132> (scddr (cdr scdr)))
> 36def args: : (<object 45590> (env (if (null? @) # (car @))))
>  def args: : (<object 45697> (env (if (null? @) # (car @))))
> def args: : (<object 45817> (scdr (cdr s)))
> def args: : (<object 45817> (scddr (cdr scdr)))
> def args: : (<object 45926> (scdr (cdr s)))
> def args: : (<object 45926> (scddr (cdr scdr)))
> def args: : (<object 45998> (scdr (cdr s)))
> def args: : (<object 45998> (scddr (cdr scdr)))
> def args: : (<object 46066> (scdr (cdr s)))
> def args: : (<object 46066> (scddr (cdr scdr)))
> 45def args: : (<object 46524> (env (if (null? @) # (car @))))
>  def args: : (<object 46631> (env (if (null? @) # (car @))))
> def args: : (<object 46751> (scdr (cdr s)))
> def args: : (<object 46751> (scddr (cdr scdr)))
> def args: : (<object 46860> (scdr (cdr s)))
> def args: : (<object 46860> (scddr (cdr scdr)))
> def args: : (<object 46932> (scdr (cdr s)))
> def args: : (<object 46932> (scddr (cdr scdr)))
> def args: : (<object 47000> (scdr (cdr s)))
> def args: : (<object 47000> (scddr (cdr scdr)))
> 55def args: : (<object 47458> (env (if (null? @) # (car @))))
>  def args: : (<object 47565> (env (if (null? @) # (car @))))
> def args: : (<object 47685> (scdr (cdr s)))
> def args: : (<object 47685> (scddr (cdr scdr)))
> def args: : (<object 47794> (scdr (cdr s)))
> def args: : (<object 47794> (scddr (cdr scdr)))
> def args: : (<object 47866> (scdr (cdr s)))
> def args: : (<object 47866> (scddr (cdr scdr)))
> def args: : (<object 47934> (scdr (cdr s)))
> def args: : (<object 47934> (scddr (cdr scdr)))
> ...def args: : (<object 48395> (env (if (null? @) # (car @))))
> 
> def args: : (<object 48593> (env (if (null? @) # (car @))))
> def args: : (<object 12465> ((psum s) (cons-stream (stream-car s) (add-streams (stream-cdr s) (psum s)))))
> 1def args: : (<object 48999> (env (if (null? @) # (car @))))
>  def args: : (<object 49106> (env (if (null? @) # (car @))))
> def args: : (<object 49226> (scdr (cdr s)))
> def args: : (<object 49226> (scddr (cdr scdr)))
> def args: : (<object 49298> (scdr (cdr s)))
> def args: : (<object 49298> (scddr (cdr scdr)))
> 3def args: : (<object 49816> (env (if (null? @) # (car @))))
>  def args: : (<object 49923> (env (if (null? @) # (car @))))
> def args: : (<object 50043> (scdr (cdr s)))
> def args: : (<object 50043> (scddr (cdr scdr)))
> def args: : (<object 50115> (scdr (cdr s)))
> def args: : (<object 50115> (scddr (cdr scdr)))
> def args: : (<object 50183> (scdr (cdr s)))
> def args: : (<object 50183> (scddr (cdr scdr)))
> def args: : (<object 50255> (scdr (cdr s)))
> def args: : (<object 50255> (scddr (cdr scdr)))
> 6def args: : (<object 50944> (env (if (null? @) # (car @))))
>  def args: : (<object 51051> (env (if (null? @) # (car @))))
> def args: : (<object 51171> (scdr (cdr s)))
> def args: : (<object 51171> (scddr (cdr scdr)))
> def args: : (<object 51243> (scdr (cdr s)))
> def args: : (<object 51243> (scddr (cdr scdr)))
> def args: : (<object 51311> (scdr (cdr s)))
> def args: : (<object 51311> (scddr (cdr scdr)))
> def args: : (<object 51383> (scdr (cdr s)))
> def args: : (<object 51383> (scddr (cdr scdr)))
> def args: : (<object 51451> (scdr (cdr s)))
> def args: : (<object 51451> (scddr (cdr scdr)))
> def args: : (<object 51523> (scdr (cdr s)))
> def args: : (<object 51523> (scddr (cdr scdr)))
> 10def args: : (<object 52383> (env (if (null? @) # (car @))))
>  def args: : (<object 52490> (env (if (null? @) # (car @))))
> def args: : (<object 52610> (scdr (cdr s)))
> def args: : (<object 52610> (scddr (cdr scdr)))
> def args: : (<object 52682> (scdr (cdr s)))
> def args: : (<object 52682> (scddr (cdr scdr)))
> def args: : (<object 52750> (scdr (cdr s)))
> def args: : (<object 52750> (scddr (cdr scdr)))
> def args: : (<object 52822> (scdr (cdr s)))
> def args: : (<object 52822> (scddr (cdr scdr)))
> def args: : (<object 52890> (scdr (cdr s)))
> def args: : (<object 52890> (scddr (cdr scdr)))
> def args: : (<object 52962> (scdr (cdr s)))
> def args: : (<object 52962> (scddr (cdr scdr)))
> def args: : (<object 53030> (scdr (cdr s)))
> def args: : (<object 53030> (scddr (cdr scdr)))
> def args: : (<object 53102> (scdr (cdr s)))
> def args: : (<object 53102> (scddr (cdr scdr)))
> 15def args: : (<object 54133> (env (if (null? @) # (car @))))
>  def args: : (<object 54240> (env (if (null? @) # (car @))))
> def args: : (<object 54360> (scdr (cdr s)))
> def args: : (<object 54360> (scddr (cdr scdr)))
> def args: : (<object 54432> (scdr (cdr s)))
> def args: : (<object 54432> (scddr (cdr scdr)))
> def args: : (<object 54500> (scdr (cdr s)))
> def args: : (<object 54500> (scddr (cdr scdr)))
> def args: : (<object 54572> (scdr (cdr s)))
> def args: : (<object 54572> (scddr (cdr scdr)))
> def args: : (<object 54640> (scdr (cdr s)))
> def args: : (<object 54640> (scddr (cdr scdr)))
> def args: : (<object 54712> (scdr (cdr s)))
> def args: : (<object 54712> (scddr (cdr scdr)))
> def args: : (<object 54780> (scdr (cdr s)))
> def args: : (<object 54780> (scddr (cdr scdr)))
> def args: : (<object 54852> (scdr (cdr s)))
> def args: : (<object 54852> (scddr (cdr scdr)))
> def args: : (<object 54920> (scdr (cdr s)))
> def args: : (<object 54920> (scddr (cdr scdr)))
> def args: : (<object 54992> (scdr (cdr s)))
> def args: : (<object 54992> (scddr (cdr scdr)))
> 21def args: : (<object 56194> (env (if (null? @) # (car @))))
>  def args: : (<object 56301> (env (if (null? @) # (car @))))
> def args: : (<object 56421> (scdr (cdr s)))
> def args: : (<object 56421> (scddr (cdr scdr)))
> def args: : (<object 56493> (scdr (cdr s)))
> def args: : (<object 56493> (scddr (cdr scdr)))
> def args: : (<object 56561> (scdr (cdr s)))
> def args: : (<object 56561> (scddr (cdr scdr)))
> def args: : (<object 56633> (scdr (cdr s)))
> def args: : (<object 56633> (scddr (cdr scdr)))
> def args: : (<object 56701> (scdr (cdr s)))
> def args: : (<object 56701> (scddr (cdr scdr)))
> def args: : (<object 56773> (scdr (cdr s)))
> def args: : (<object 56773> (scddr (cdr scdr)))
> def args: : (<object 56841> (scdr (cdr s)))
> def args: : (<object 56841> (scddr (cdr scdr)))
> def args: : (<object 56913> (scdr (cdr s)))
> def args: : (<object 56913> (scddr (cdr scdr)))
> def args: : (<object 56981> (scdr (cdr s)))
> def args: : (<object 56981> (scddr (cdr scdr)))
> def args: : (<object 57053> (scdr (cdr s)))
> def args: : (<object 57053> (scddr (cdr scdr)))
> def args: : (<object 57121> (scdr (cdr s)))
> def args: : (<object 57121> (scddr (cdr scdr)))
> def args: : (<object 57193> (scdr (cdr s)))
> def args: : (<object 57193> (scddr (cdr scdr)))
> 28def args: : (<object 58566> (env (if (null? @) # (car @))))
>  def args: : (<object 58673> (env (if (null? @) # (car @))))
> def args: : (<object 58793> (scdr (cdr s)))
> def args: : (<object 58793> (scddr (cdr scdr)))
> def args: : (<object 58865> (scdr (cdr s)))
> def args: : (<object 58865> (scddr (cdr scdr)))
> def args: : (<object 58933> (scdr (cdr s)))
> def args: : (<object 58933> (scddr (cdr scdr)))
> def args: : (<object 59005> (scdr (cdr s)))
> def args: : (<object 59005> (scddr (cdr scdr)))
> def args: : (<object 59073> (scdr (cdr s)))
> def args: : (<object 59073> (scddr (cdr scdr)))
> def args: : (<object 59145> (scdr (cdr s)))
> def args: : (<object 59145> (scddr (cdr scdr)))
> def args: : (<object 59213> (scdr (cdr s)))
> def args: : (<object 59213> (scddr (cdr scdr)))
> def args: : (<object 59285> (scdr (cdr s)))
> def args: : (<object 59285> (scddr (cdr scdr)))
> def args: : (<object 59353> (scdr (cdr s)))
> def args: : (<object 59353> (scddr (cdr scdr)))
> def args: : (<object 59425> (scdr (cdr s)))
> def args: : (<object 59425> (scddr (cdr scdr)))
> def args: : (<object 59493> (scdr (cdr s)))
> def args: : (<object 59493> (scddr (cdr scdr)))
> def args: : (<object 59565> (scdr (cdr s)))
> def args: : (<object 59565> (scddr (cdr scdr)))
> def args: : (<object 59633> (scdr (cdr s)))
> def args: : (<object 59633> (scddr (cdr scdr)))
> def args: : (<object 59705> (scdr (cdr s)))
> def args: : (<object 59705> (scddr (cdr scdr)))
> 36def args: : (<object 61249> (env (if (null? @) # (car @))))
>  def args: : (<object 61356> (env (if (null? @) # (car @))))
> def args: : (<object 61476> (scdr (cdr s)))
> def args: : (<object 61476> (scddr (cdr scdr)))
> def args: : (<object 61548> (scdr (cdr s)))
> def args: : (<object 61548> (scddr (cdr scdr)))
> def args: : (<object 61616> (scdr (cdr s)))
> def args: : (<object 61616> (scddr (cdr scdr)))
> def args: : (<object 61688> (scdr (cdr s)))
> def args: : (<object 61688> (scddr (cdr scdr)))
> def args: : (<object 61756> (scdr (cdr s)))
> def args: : (<object 61756> (scddr (cdr scdr)))
> def args: : (<object 61828> (scdr (cdr s)))
> def args: : (<object 61828> (scddr (cdr scdr)))
> def args: : (<object 61896> (scdr (cdr s)))
> def args: : (<object 61896> (scddr (cdr scdr)))
> def args: : (<object 61968> (scdr (cdr s)))
> def args: : (<object 61968> (scddr (cdr scdr)))
> def args: : (<object 62036> (scdr (cdr s)))
> def args: : (<object 62036> (scddr (cdr scdr)))
> def args: : (<object 62108> (scdr (cdr s)))
> def args: : (<object 62108> (scddr (cdr scdr)))
> def args: : (<object 62176> (scdr (cdr s)))
> def args: : (<object 62176> (scddr (cdr scdr)))
> def args: : (<object 62248> (scdr (cdr s)))
> def args: : (<object 62248> (scddr (cdr scdr)))
> def args: : (<object 62316> (scdr (cdr s)))
> def args: : (<object 62316> (scddr (cdr scdr)))
> def args: : (<object 62388> (scdr (cdr s)))
> def args: : (<object 62388> (scddr (cdr scdr)))
> def args: : (<object 62456> (scdr (cdr s)))
> def args: : (<object 62456> (scddr (cdr scdr)))
> def args: : (<object 62528> (scdr (cdr s)))
> def args: : (<object 62528> (scddr (cdr scdr)))
> 45def args: : (<object 64243> (env (if (null? @) # (car @))))
>  def args: : (<object 64350> (env (if (null? @) # (car @))))
> def args: : (<object 64470> (scdr (cdr s)))
> def args: : (<object 64470> (scddr (cdr scdr)))
> def args: : (<object 64542> (scdr (cdr s)))
> def args: : (<object 64542> (scddr (cdr scdr)))
> def args: : (<object 64610> (scdr (cdr s)))
> def args: : (<object 64610> (scddr (cdr scdr)))
> def args: : (<object 64682> (scdr (cdr s)))
> def args: : (<object 64682> (scddr (cdr scdr)))
> def args: : (<object 64750> (scdr (cdr s)))
> def args: : (<object 64750> (scddr (cdr scdr)))
> def args: : (<object 64822> (scdr (cdr s)))
> def args: : (<object 64822> (scddr (cdr scdr)))
> def args: : (<object 64890> (scdr (cdr s)))
> def args: : (<object 64890> (scddr (cdr scdr)))
> def args: : (<object 64962> (scdr (cdr s)))
> def args: : (<object 64962> (scddr (cdr scdr)))
> def args: : (<object 65030> (scdr (cdr s)))
> def args: : (<object 65030> (scddr (cdr scdr)))
> def args: : (<object 65102> (scdr (cdr s)))
> def args: : (<object 65102> (scddr (cdr scdr)))
> def args: : (<object 65170> (scdr (cdr s)))
> def args: : (<object 65170> (scddr (cdr scdr)))
> def args: : (<object 65242> (scdr (cdr s)))
> def args: : (<object 65242> (scddr (cdr scdr)))
> def args: : (<object 65310> (scdr (cdr s)))
> def args: : (<object 65310> (scddr (cdr scdr)))
> def args: : (<object 65382> (scdr (cdr s)))
> def args: : (<object 65382> (scddr (cdr scdr)))
> def args: : (<object 65450> (scdr (cdr s)))
> def args: : (<object 65450> (scddr (cdr scdr)))
> def args: : (<object 65522> (scdr (cdr s)))
> def args: : (<object 65522> (scddr (cdr scdr)))
> def args: : (<object 65590> (scdr (cdr s)))
> def args: : (<object 65590> (scddr (cdr scdr)))
> def args: : (<object 65662> (scdr (cdr s)))
> def args: : (<object 65662> (scddr (cdr scdr)))
> 55def args: : (<object 67548> (env (if (null? @) # (car @))))
>  def args: : (<object 67655> (env (if (null? @) # (car @))))
> def args: : (<object 67775> (scdr (cdr s)))
> def args: : (<object 67775> (scddr (cdr scdr)))
> def args: : (<object 67847> (scdr (cdr s)))
> def args: : (<object 67847> (scddr (cdr scdr)))
> def args: : (<object 67915> (scdr (cdr s)))
> def args: : (<object 67915> (scddr (cdr scdr)))
> def args: : (<object 67987> (scdr (cdr s)))
> def args: : (<object 67987> (scddr (cdr scdr)))
> def args: : (<object 68055> (scdr (cdr s)))
> def args: : (<object 68055> (scddr (cdr scdr)))
> def args: : (<object 68127> (scdr (cdr s)))
> def args: : (<object 68127> (scddr (cdr scdr)))
> def args: : (<object 68195> (scdr (cdr s)))
> def args: : (<object 68195> (scddr (cdr scdr)))
> def args: : (<object 68267> (scdr (cdr s)))
> def args: : (<object 68267> (scddr (cdr scdr)))
> def args: : (<object 68335> (scdr (cdr s)))
> def args: : (<object 68335> (scddr (cdr scdr)))
> def args: : (<object 68407> (scdr (cdr s)))
> def args: : (<object 68407> (scddr (cdr scdr)))
> def args: : (<object 68475> (scdr (cdr s)))
> def args: : (<object 68475> (scddr (cdr scdr)))
> def args: : (<object 68547> (scdr (cdr s)))
> def args: : (<object 68547> (scddr (cdr scdr)))
> def args: : (<object 68615> (scdr (cdr s)))
> def args: : (<object 68615> (scddr (cdr scdr)))
> def args: : (<object 68687> (scdr (cdr s)))
> def args: : (<object 68687> (scddr (cdr scdr)))
> def args: : (<object 68755> (scdr (cdr s)))
> def args: : (<object 68755> (scddr (cdr scdr)))
> def args: : (<object 68827> (scdr (cdr s)))
> def args: : (<object 68827> (scddr (cdr scdr)))
> def args: : (<object 68895> (scdr (cdr s)))
> def args: : (<object 68895> (scddr (cdr scdr)))
> def args: : (<object 68967> (scdr (cdr s)))
> def args: : (<object 68967> (scddr (cdr scdr)))
> def args: : (<object 69035> (scdr (cdr s)))
> def args: : (<object 69035> (scddr (cdr scdr)))
> def args: : (<object 69107> (scdr (cdr s)))
> def args: : (<object 69107> (scddr (cdr scdr)))
> 66def args: : (<object 71164> (env (if (null? @) # (car @))))
>  def args: : (<object 71271> (env (if (null? @) # (car @))))
> def args: : (<object 71391> (scdr (cdr s)))
> def args: : (<object 71391> (scddr (cdr scdr)))
> def args: : (<object 71463> (scdr (cdr s)))
> def args: : (<object 71463> (scddr (cdr scdr)))
> def args: : (<object 71535> (scdr (cdr s)))
> def args: : (<object 71535> (scddr (cdr scdr)))
> def args: : (<object 71603> (scdr (cdr s)))
> def args: : (<object 71603> (scddr (cdr scdr)))
> def args: : (<object 71842> (scdr (cdr s)))
> def args: : (<object 71842> (scddr (cdr scdr)))
> def args: : (<object 71914> (scdr (cdr s)))
> def args: : (<object 71914> (scddr (cdr scdr)))
> def args: : (<object 71982> (scdr (cdr s)))
> def args: : (<object 71982> (scddr (cdr scdr)))
> def args: : (<object 72054> (scdr (cdr s)))
> def args: : (<object 72054> (scddr (cdr scdr)))
> def args: : (<object 72122> (scdr (cdr s)))
> def args: : (<object 72122> (scddr (cdr scdr)))
> def args: : (<object 72194> (scdr (cdr s)))
> def args: : (<object 72194> (scddr (cdr scdr)))
> def args: : (<object 72262> (scdr (cdr s)))
> def args: : (<object 72262> (scddr (cdr scdr)))
> def args: : (<object 72334> (scdr (cdr s)))
> def args: : (<object 72334> (scddr (cdr scdr)))
> def args: : (<object 72402> (scdr (cdr s)))
> def args: : (<object 72402> (scddr (cdr scdr)))
> def args: : (<object 72474> (scdr (cdr s)))
> def args: : (<object 72474> (scddr (cdr scdr)))
> def args: : (<object 72542> (scdr (cdr s)))
> def args: : (<object 72542> (scddr (cdr scdr)))
> def args: : (<object 72614> (scdr (cdr s)))
> def args: : (<object 72614> (scddr (cdr scdr)))
> def args: : (<object 72682> (scdr (cdr s)))
> def args: : (<object 72682> (scddr (cdr scdr)))
> def args: : (<object 72754> (scdr (cdr s)))
> def args: : (<object 72754> (scddr (cdr scdr)))
> def args: : (<object 72822> (scdr (cdr s)))
> def args: : (<object 72822> (scddr (cdr scdr)))
> def args: : (<object 72894> (scdr (cdr s)))
> def args: : (<object 72894> (scddr (cdr scdr)))
> def args: : (<object 72962> (scdr (cdr s)))
> def args: : (<object 72962> (scddr (cdr scdr)))
> def args: : (<object 73034> (scdr (cdr s)))
> def args: : (<object 73034> (scddr (cdr scdr)))
> def args: : (<object 73102> (scdr (cdr s)))
> def args: : (<object 73102> (scddr (cdr scdr)))
> def args: : (<object 73174> (scdr (cdr s)))
> def args: : (<object 73174> (scddr (cdr scdr)))
> 78def args: : (<object 75402> (env (if (null? @) # (car @))))
>  def args: : (<object 75509> (env (if (null? @) # (car @))))
> def args: : (<object 75629> (scdr (cdr s)))
> def args: : (<object 75629> (scddr (cdr scdr)))
> def args: : (<object 75701> (scdr (cdr s)))
> def args: : (<object 75701> (scddr (cdr scdr)))
> def args: : (<object 75773> (scdr (cdr s)))
> def args: : (<object 75773> (scddr (cdr scdr)))
> def args: : (<object 75841> (scdr (cdr s)))
> def args: : (<object 75841> (scddr (cdr scdr)))
> def args: : (<object 76080> (scdr (cdr s)))
> def args: : (<object 76080> (scddr (cdr scdr)))
> def args: : (<object 76152> (scdr (cdr s)))
> def args: : (<object 76152> (scddr (cdr scdr)))
> def args: : (<object 76220> (scdr (cdr s)))
> def args: : (<object 76220> (scddr (cdr scdr)))
> def args: : (<object 76292> (scdr (cdr s)))
> def args: : (<object 76292> (scddr (cdr scdr)))
> def args: : (<object 76360> (scdr (cdr s)))
> def args: : (<object 76360> (scddr (cdr scdr)))
> def args: : (<object 76432> (scdr (cdr s)))
> def args: : (<object 76432> (scddr (cdr scdr)))
> def args: : (<object 76500> (scdr (cdr s)))
> def args: : (<object 76500> (scddr (cdr scdr)))
> def args: : (<object 76572> (scdr (cdr s)))
> def args: : (<object 76572> (scddr (cdr scdr)))
> def args: : (<object 76640> (scdr (cdr s)))
> def args: : (<object 76640> (scddr (cdr scdr)))
> def args: : (<object 76712> (scdr (cdr s)))
> def args: : (<object 76712> (scddr (cdr scdr)))
> def args: : (<object 76780> (scdr (cdr s)))
> def args: : (<object 76780> (scddr (cdr scdr)))
> def args: : (<object 76852> (scdr (cdr s)))
> def args: : (<object 76852> (scddr (cdr scdr)))
> def args: : (<object 76920> (scdr (cdr s)))
> def args: : (<object 76920> (scddr (cdr scdr)))
> def args: : (<object 76992> (scdr (cdr s)))
> def args: : (<object 76992> (scddr (cdr scdr)))
> def args: : (<object 77060> (scdr (cdr s)))
> def args: : (<object 77060> (scddr (cdr scdr)))
> def args: : (<object 77132> (scdr (cdr s)))
> def args: : (<object 77132> (scddr (cdr scdr)))
> def args: : (<object 77200> (scdr (cdr s)))
> def args: : (<object 77200> (scddr (cdr scdr)))
> def args: : (<object 77272> (scdr (cdr s)))
> def args: : (<object 77272> (scddr (cdr scdr)))
> def args: : (<object 77340> (scdr (cdr s)))
> def args: : (<object 77340> (scddr (cdr scdr)))
> def args: : (<object 77412> (scdr (cdr s)))
> def args: : (<object 77412> (scddr (cdr scdr)))
> def args: : (<object 77480> (scdr (cdr s)))
> def args: : (<object 77480> (scddr (cdr scdr)))
> def args: : (<object 77552> (scdr (cdr s)))
> def args: : (<object 77552> (scddr (cdr scdr)))
> 91def args: : (<object 79951> (env (if (null? @) # (car @))))
>  def args: : (<object 80058> (env (if (null? @) # (car @))))
> def args: : (<object 80178> (scdr (cdr s)))
> def args: : (<object 80178> (scddr (cdr scdr)))
> def args: : (<object 80250> (scdr (cdr s)))
> def args: : (<object 80250> (scddr (cdr scdr)))
> def args: : (<object 80322> (scdr (cdr s)))
> def args: : (<object 80322> (scddr (cdr scdr)))
> def args: : (<object 80390> (scdr (cdr s)))
> def args: : (<object 80390> (scddr (cdr scdr)))
> def args: : (<object 80629> (scdr (cdr s)))
> def args: : (<object 80629> (scddr (cdr scdr)))
> def args: : (<object 80701> (scdr (cdr s)))
> def args: : (<object 80701> (scddr (cdr scdr)))
> def args: : (<object 80769> (scdr (cdr s)))
> def args: : (<object 80769> (scddr (cdr scdr)))
> def args: : (<object 80841> (scdr (cdr s)))
> def args: : (<object 80841> (scddr (cdr scdr)))
> def args: : (<object 80909> (scdr (cdr s)))
> def args: : (<object 80909> (scddr (cdr scdr)))
> def args: : (<object 80981> (scdr (cdr s)))
> def args: : (<object 80981> (scddr (cdr scdr)))
> def args: : (<object 81049> (scdr (cdr s)))
> def args: : (<object 81049> (scddr (cdr scdr)))
> def args: : (<object 81121> (scdr (cdr s)))
> def args: : (<object 81121> (scddr (cdr scdr)))
> def args: : (<object 81189> (scdr (cdr s)))
> def args: : (<object 81189> (scddr (cdr scdr)))
> def args: : (<object 81261> (scdr (cdr s)))
> def args: : (<object 81261> (scddr (cdr scdr)))
> def args: : (<object 81329> (scdr (cdr s)))
> def args: : (<object 81329> (scddr (cdr scdr)))
> def args: : (<object 81401> (scdr (cdr s)))
> def args: : (<object 81401> (scddr (cdr scdr)))
> def args: : (<object 81469> (scdr (cdr s)))
> def args: : (<object 81469> (scddr (cdr scdr)))
> def args: : (<object 81541> (scdr (cdr s)))
> def args: : (<object 81541> (scddr (cdr scdr)))
> def args: : (<object 81609> (scdr (cdr s)))
> def args: : (<object 81609> (scddr (cdr scdr)))
> def args: : (<object 81681> (scdr (cdr s)))
> def args: : (<object 81681> (scddr (cdr scdr)))
> def args: : (<object 81749> (scdr (cdr s)))
> def args: : (<object 81749> (scddr (cdr scdr)))
> def args: : (<object 81821> (scdr (cdr s)))
> def args: : (<object 81821> (scddr (cdr scdr)))
> def args: : (<object 81889> (scdr (cdr s)))
> def args: : (<object 81889> (scddr (cdr scdr)))
> def args: : (<object 81961> (scdr (cdr s)))
> def args: : (<object 81961> (scddr (cdr scdr)))
> def args: : (<object 82029> (scdr (cdr s)))
> def args: : (<object 82029> (scddr (cdr scdr)))
> def args: : (<object 82101> (scdr (cdr s)))
> def args: : (<object 82101> (scddr (cdr scdr)))
> def args: : (<object 82169> (scdr (cdr s)))
> def args: : (<object 82169> (scddr (cdr scdr)))
> def args: : (<object 82241> (scdr (cdr s)))
> def args: : (<object 82241> (scddr (cdr scdr)))
> 105def args: : (<object 84811> (env (if (null? @) # (car @))))
>  def args: : (<object 84918> (env (if (null? @) # (car @))))
> def args: : (<object 85038> (scdr (cdr s)))
> def args: : (<object 85038> (scddr (cdr scdr)))
> def args: : (<object 85110> (scdr (cdr s)))
> def args: : (<object 85110> (scddr (cdr scdr)))
> def args: : (<object 85182> (scdr (cdr s)))
> def args: : (<object 85182> (scddr (cdr scdr)))
> def args: : (<object 85250> (scdr (cdr s)))
> def args: : (<object 85250> (scddr (cdr scdr)))
> def args: : (<object 85489> (scdr (cdr s)))
> def args: : (<object 85489> (scddr (cdr scdr)))
> def args: : (<object 85561> (scdr (cdr s)))
> def args: : (<object 85561> (scddr (cdr scdr)))
> def args: : (<object 85629> (scdr (cdr s)))
> def args: : (<object 85629> (scddr (cdr scdr)))
> def args: : (<object 85701> (scdr (cdr s)))
> def args: : (<object 85701> (scddr (cdr scdr)))
> def args: : (<object 85769> (scdr (cdr s)))
> def args: : (<object 85769> (scddr (cdr scdr)))
> def args: : (<object 85841> (scdr (cdr s)))
> def args: : (<object 85841> (scddr (cdr scdr)))
> def args: : (<object 85909> (scdr (cdr s)))
> def args: : (<object 85909> (scddr (cdr scdr)))
> def args: : (<object 85981> (scdr (cdr s)))
> def args: : (<object 85981> (scddr (cdr scdr)))
> def args: : (<object 86049> (scdr (cdr s)))
> def args: : (<object 86049> (scddr (cdr scdr)))
> def args: : (<object 86121> (scdr (cdr s)))
> def args: : (<object 86121> (scddr (cdr scdr)))
> def args: : (<object 86189> (scdr (cdr s)))
> def args: : (<object 86189> (scddr (cdr scdr)))
> def args: : (<object 86261> (scdr (cdr s)))
> def args: : (<object 86261> (scddr (cdr scdr)))
> def args: : (<object 86329> (scdr (cdr s)))
> def args: : (<object 86329> (scddr (cdr scdr)))
> def args: : (<object 86401> (scdr (cdr s)))
> def args: : (<object 86401> (scddr (cdr scdr)))
> def args: : (<object 86469> (scdr (cdr s)))
> def args: : (<object 86469> (scddr (cdr scdr)))
> def args: : (<object 86541> (scdr (cdr s)))
> def args: : (<object 86541> (scddr (cdr scdr)))
> def args: : (<object 86609> (scdr (cdr s)))
> def args: : (<object 86609> (scddr (cdr scdr)))
> def args: : (<object 86681> (scdr (cdr s)))
> def args: : (<object 86681> (scddr (cdr scdr)))
> def args: : (<object 86749> (scdr (cdr s)))
> def args: : (<object 86749> (scddr (cdr scdr)))
> def args: : (<object 86821> (scdr (cdr s)))
> def args: : (<object 86821> (scddr (cdr scdr)))
> def args: : (<object 86889> (scdr (cdr s)))
> def args: : (<object 86889> (scddr (cdr scdr)))
> def args: : (<object 86961> (scdr (cdr s)))
> def args: : (<object 86961> (scddr (cdr scdr)))
> def args: : (<object 87029> (scdr (cdr s)))
> def args: : (<object 87029> (scddr (cdr scdr)))
> def args: : (<object 87101> (scdr (cdr s)))
> def args: : (<object 87101> (scddr (cdr scdr)))
> def args: : (<object 87169> (scdr (cdr s)))
> def args: : (<object 87169> (scddr (cdr scdr)))
> def args: : (<object 87241> (scdr (cdr s)))
> def args: : (<object 87241> (scddr (cdr scdr)))
> 120def args: : (<object 89982> (env (if (null? @) # (car @))))
>  def args: : (<object 90089> (env (if (null? @) # (car @))))
> def args: : (<object 90209> (scdr (cdr s)))
> def args: : (<object 90209> (scddr (cdr scdr)))
> def args: : (<object 90281> (scdr (cdr s)))
> def args: : (<object 90281> (scddr (cdr scdr)))
> def args: : (<object 90353> (scdr (cdr s)))
> def args: : (<object 90353> (scddr (cdr scdr)))
> def args: : (<object 90421> (scdr (cdr s)))
> def args: : (<object 90421> (scddr (cdr scdr)))
> def args: : (<object 90660> (scdr (cdr s)))
> def args: : (<object 90660> (scddr (cdr scdr)))
> def args: : (<object 90732> (scdr (cdr s)))
> def args: : (<object 90732> (scddr (cdr scdr)))
> def args: : (<object 90800> (scdr (cdr s)))
> def args: : (<object 90800> (scddr (cdr scdr)))
> def args: : (<object 90872> (scdr (cdr s)))
> def args: : (<object 90872> (scddr (cdr scdr)))
> def args: : (<object 90940> (scdr (cdr s)))
> def args: : (<object 90940> (scddr (cdr scdr)))
> def args: : (<object 91012> (scdr (cdr s)))
> def args: : (<object 91012> (scddr (cdr scdr)))
> def args: : (<object 91080> (scdr (cdr s)))
> def args: : (<object 91080> (scddr (cdr scdr)))
> def args: : (<object 91152> (scdr (cdr s)))
> def args: : (<object 91152> (scddr (cdr scdr)))
> def args: : (<object 91220> (scdr (cdr s)))
> def args: : (<object 91220> (scddr (cdr scdr)))
> def args: : (<object 91292> (scdr (cdr s)))
> def args: : (<object 91292> (scddr (cdr scdr)))
> def args: : (<object 91360> (scdr (cdr s)))
> def args: : (<object 91360> (scddr (cdr scdr)))
> def args: : (<object 91432> (scdr (cdr s)))
> def args: : (<object 91432> (scddr (cdr scdr)))
> def args: : (<object 91500> (scdr (cdr s)))
> def args: : (<object 91500> (scddr (cdr scdr)))
> def args: : (<object 91572> (scdr (cdr s)))
> def args: : (<object 91572> (scddr (cdr scdr)))
> def args: : (<object 91640> (scdr (cdr s)))
> def args: : (<object 91640> (scddr (cdr scdr)))
> def args: : (<object 91712> (scdr (cdr s)))
> def args: : (<object 91712> (scddr (cdr scdr)))
> def args: : (<object 91780> (scdr (cdr s)))
> def args: : (<object 91780> (scddr (cdr scdr)))
> def args: : (<object 91852> (scdr (cdr s)))
> def args: : (<object 91852> (scddr (cdr scdr)))
> def args: : (<object 91920> (scdr (cdr s)))
> def args: : (<object 91920> (scddr (cdr scdr)))
> def args: : (<object 91992> (scdr (cdr s)))
> def args: : (<object 91992> (scddr (cdr scdr)))
> def args: : (<object 92060> (scdr (cdr s)))
> def args: : (<object 92060> (scddr (cdr scdr)))
> def args: : (<object 92132> (scdr (cdr s)))
> def args: : (<object 92132> (scddr (cdr scdr)))
> def args: : (<object 92200> (scdr (cdr s)))
> def args: : (<object 92200> (scddr (cdr scdr)))
> def args: : (<object 92272> (scdr (cdr s)))
> def args: : (<object 92272> (scddr (cdr scdr)))
> def args: : (<object 92340> (scdr (cdr s)))
> def args: : (<object 92340> (scddr (cdr scdr)))
> def args: : (<object 92412> (scdr (cdr s)))
> def args: : (<object 92412> (scddr (cdr scdr)))
> def args: : (<object 92480> (scdr (cdr s)))
> def args: : (<object 92480> (scddr (cdr scdr)))
> def args: : (<object 92552> (scdr (cdr s)))
> def args: : (<object 92552> (scddr (cdr scdr)))
> 136def args: : (<object 95464> (env (if (null? @) # (car @))))
>  def args: : (<object 95571> (env (if (null? @) # (car @))))
> def args: : (<object 95691> (scdr (cdr s)))
> def args: : (<object 95691> (scddr (cdr scdr)))
> def args: : (<object 95763> (scdr (cdr s)))
> def args: : (<object 95763> (scddr (cdr scdr)))
> def args: : (<object 95835> (scdr (cdr s)))
> def args: : (<object 95835> (scddr (cdr scdr)))
> def args: : (<object 95903> (scdr (cdr s)))
> def args: : (<object 95903> (scddr (cdr scdr)))
> def args: : (<object 96142> (scdr (cdr s)))
> def args: : (<object 96142> (scddr (cdr scdr)))
> def args: : (<object 96214> (scdr (cdr s)))
> def args: : (<object 96214> (scddr (cdr scdr)))
> def args: : (<object 96282> (scdr (cdr s)))
> def args: : (<object 96282> (scddr (cdr scdr)))
> def args: : (<object 96354> (scdr (cdr s)))
> def args: : (<object 96354> (scddr (cdr scdr)))
> def args: : (<object 96422> (scdr (cdr s)))
> def args: : (<object 96422> (scddr (cdr scdr)))
> def args: : (<object 96494> (scdr (cdr s)))
> def args: : (<object 96494> (scddr (cdr scdr)))
> def args: : (<object 96562> (scdr (cdr s)))
> def args: : (<object 96562> (scddr (cdr scdr)))
> def args: : (<object 96634> (scdr (cdr s)))
> def args: : (<object 96634> (scddr (cdr scdr)))
> def args: : (<object 96702> (scdr (cdr s)))
> def args: : (<object 96702> (scddr (cdr scdr)))
> def args: : (<object 96774> (scdr (cdr s)))
> def args: : (<object 96774> (scddr (cdr scdr)))
> def args: : (<object 96842> (scdr (cdr s)))
> def args: : (<object 96842> (scddr (cdr scdr)))
> def args: : (<object 96914> (scdr (cdr s)))
> def args: : (<object 96914> (scddr (cdr scdr)))
> def args: : (<object 96982> (scdr (cdr s)))
> def args: : (<object 96982> (scddr (cdr scdr)))
> def args: : (<object 97054> (scdr (cdr s)))
> def args: : (<object 97054> (scddr (cdr scdr)))
> def args: : (<object 97122> (scdr (cdr s)))
> def args: : (<object 97122> (scddr (cdr scdr)))
> def args: : (<object 97194> (scdr (cdr s)))
> def args: : (<object 97194> (scddr (cdr scdr)))
> def args: : (<object 97262> (scdr (cdr s)))
> def args: : (<object 97262> (scddr (cdr scdr)))
> def args: : (<object 97334> (scdr (cdr s)))
> def args: : (<object 97334> (scddr (cdr scdr)))
> def args: : (<object 97402> (scdr (cdr s)))
> def args: : (<object 97402> (scddr (cdr scdr)))
> def args: : (<object 97474> (scdr (cdr s)))
> def args: : (<object 97474> (scddr (cdr scdr)))
> def args: : (<object 97542> (scdr (cdr s)))
> def args: : (<object 97542> (scddr (cdr scdr)))
> def args: : (<object 97614> (scdr (cdr s)))
> def args: : (<object 97614> (scddr (cdr scdr)))
> def args: : (<object 97682> (scdr (cdr s)))
> def args: : (<object 97682> (scddr (cdr scdr)))
> def args: : (<object 97754> (scdr (cdr s)))
> def args: : (<object 97754> (scddr (cdr scdr)))
> def args: : (<object 97822> (scdr (cdr s)))
> def args: : (<object 97822> (scddr (cdr scdr)))
> def args: : (<object 97894> (scdr (cdr s)))
> def args: : (<object 97894> (scddr (cdr scdr)))
> def args: : (<object 97962> (scdr (cdr s)))
> def args: : (<object 97962> (scddr (cdr scdr)))
> def args: : (<object 98034> (scdr (cdr s)))
> def args: : (<object 98034> (scddr (cdr scdr)))
> def args: : (<object 98102> (scdr (cdr s)))
> def args: : (<object 98102> (scddr (cdr scdr)))
> def args: : (<object 98174> (scdr (cdr s)))
> def args: : (<object 98174> (scddr (cdr scdr)))
> 153def args: : (<object 101257> (env (if (null? @) # (car @))))
>  def args: : (<object 101364> (env (if (null? @) # (car @))))
> def args: : (<object 101484> (scdr (cdr s)))
> def args: : (<object 101484> (scddr (cdr scdr)))
> def args: : (<object 101556> (scdr (cdr s)))
> def args: : (<object 101556> (scddr (cdr scdr)))
> def args: : (<object 101628> (scdr (cdr s)))
> def args: : (<object 101628> (scddr (cdr scdr)))
> def args: : (<object 101696> (scdr (cdr s)))
> def args: : (<object 101696> (scddr (cdr scdr)))
> def args: : (<object 101935> (scdr (cdr s)))
> def args: : (<object 101935> (scddr (cdr scdr)))
> def args: : (<object 102007> (scdr (cdr s)))
> def args: : (<object 102007> (scddr (cdr scdr)))
> def args: : (<object 102075> (scdr (cdr s)))
> def args: : (<object 102075> (scddr (cdr scdr)))
> def args: : (<object 102147> (scdr (cdr s)))
> def args: : (<object 102147> (scddr (cdr scdr)))
> def args: : (<object 102215> (scdr (cdr s)))
> def args: : (<object 102215> (scddr (cdr scdr)))
> def args: : (<object 102287> (scdr (cdr s)))
> def args: : (<object 102287> (scddr (cdr scdr)))
> def args: : (<object 102355> (scdr (cdr s)))
> def args: : (<object 102355> (scddr (cdr scdr)))
> def args: : (<object 102427> (scdr (cdr s)))
> def args: : (<object 102427> (scddr (cdr scdr)))
> def args: : (<object 102495> (scdr (cdr s)))
> def args: : (<object 102495> (scddr (cdr scdr)))
> def args: : (<object 102567> (scdr (cdr s)))
> def args: : (<object 102567> (scddr (cdr scdr)))
> def args: : (<object 102635> (scdr (cdr s)))
> def args: : (<object 102635> (scddr (cdr scdr)))
> def args: : (<object 102707> (scdr (cdr s)))
> def args: : (<object 102707> (scddr (cdr scdr)))
> def args: : (<object 102775> (scdr (cdr s)))
> def args: : (<object 102775> (scddr (cdr scdr)))
> def args: : (<object 102847> (scdr (cdr s)))
> def args: : (<object 102847> (scddr (cdr scdr)))
> def args: : (<object 102915> (scdr (cdr s)))
> def args: : (<object 102915> (scddr (cdr scdr)))
> def args: : (<object 102987> (scdr (cdr s)))
> def args: : (<object 102987> (scddr (cdr scdr)))
> def args: : (<object 103055> (scdr (cdr s)))
> def args: : (<object 103055> (scddr (cdr scdr)))
> def args: : (<object 103127> (scdr (cdr s)))
> def args: : (<object 103127> (scddr (cdr scdr)))
> def args: : (<object 103195> (scdr (cdr s)))
> def args: : (<object 103195> (scddr (cdr scdr)))
> def args: : (<object 103267> (scdr (cdr s)))
> def args: : (<object 103267> (scddr (cdr scdr)))
> def args: : (<object 103335> (scdr (cdr s)))
> def args: : (<object 103335> (scddr (cdr scdr)))
> def args: : (<object 103407> (scdr (cdr s)))
> def args: : (<object 103407> (scddr (cdr scdr)))
> def args: : (<object 103475> (scdr (cdr s)))
> def args: : (<object 103475> (scddr (cdr scdr)))
> def args: : (<object 103547> (scdr (cdr s)))
> def args: : (<object 103547> (scddr (cdr scdr)))
> def args: : (<object 103615> (scdr (cdr s)))
> def args: : (<object 103615> (scddr (cdr scdr)))
> def args: : (<object 103687> (scdr (cdr s)))
> def args: : (<object 103687> (scddr (cdr scdr)))
> def args: : (<object 103755> (scdr (cdr s)))
> def args: : (<object 103755> (scddr (cdr scdr)))
> def args: : (<object 103827> (scdr (cdr s)))
> def args: : (<object 103827> (scddr (cdr scdr)))
> def args: : (<object 103895> (scdr (cdr s)))
> def args: : (<object 103895> (scddr (cdr scdr)))
> def args: : (<object 103967> (scdr (cdr s)))
> def args: : (<object 103967> (scddr (cdr scdr)))
> def args: : (<object 104035> (scdr (cdr s)))
> def args: : (<object 104035> (scddr (cdr scdr)))
> def args: : (<object 104107> (scdr (cdr s)))
> def args: : (<object 104107> (scddr (cdr scdr)))
> 171def args: : (<object 107361> (env (if (null? @) # (car @))))
>  def args: : (<object 107468> (env (if (null? @) # (car @))))
> def args: : (<object 107588> (scdr (cdr s)))
> def args: : (<object 107588> (scddr (cdr scdr)))
> def args: : (<object 107660> (scdr (cdr s)))
> def args: : (<object 107660> (scddr (cdr scdr)))
> def args: : (<object 107732> (scdr (cdr s)))
> def args: : (<object 107732> (scddr (cdr scdr)))
> def args: : (<object 107800> (scdr (cdr s)))
> def args: : (<object 107800> (scddr (cdr scdr)))
> def args: : (<object 108039> (scdr (cdr s)))
> def args: : (<object 108039> (scddr (cdr scdr)))
> def args: : (<object 108111> (scdr (cdr s)))
> def args: : (<object 108111> (scddr (cdr scdr)))
> def args: : (<object 108179> (scdr (cdr s)))
> def args: : (<object 108179> (scddr (cdr scdr)))
> def args: : (<object 108251> (scdr (cdr s)))
> def args: : (<object 108251> (scddr (cdr scdr)))
> def args: : (<object 108319> (scdr (cdr s)))
> def args: : (<object 108319> (scddr (cdr scdr)))
> def args: : (<object 108391> (scdr (cdr s)))
> def args: : (<object 108391> (scddr (cdr scdr)))
> def args: : (<object 108459> (scdr (cdr s)))
> def args: : (<object 108459> (scddr (cdr scdr)))
> def args: : (<object 108531> (scdr (cdr s)))
> def args: : (<object 108531> (scddr (cdr scdr)))
> def args: : (<object 108599> (scdr (cdr s)))
> def args: : (<object 108599> (scddr (cdr scdr)))
> def args: : (<object 108671> (scdr (cdr s)))
> def args: : (<object 108671> (scddr (cdr scdr)))
> def args: : (<object 108739> (scdr (cdr s)))
> def args: : (<object 108739> (scddr (cdr scdr)))
> def args: : (<object 108811> (scdr (cdr s)))
> def args: : (<object 108811> (scddr (cdr scdr)))
> def args: : (<object 108879> (scdr (cdr s)))
> def args: : (<object 108879> (scddr (cdr scdr)))
> def args: : (<object 108951> (scdr (cdr s)))
> def args: : (<object 108951> (scddr (cdr scdr)))
> def args: : (<object 109019> (scdr (cdr s)))
> def args: : (<object 109019> (scddr (cdr scdr)))
> def args: : (<object 109091> (scdr (cdr s)))
> def args: : (<object 109091> (scddr (cdr scdr)))
> def args: : (<object 109159> (scdr (cdr s)))
> def args: : (<object 109159> (scddr (cdr scdr)))
> def args: : (<object 109231> (scdr (cdr s)))
> def args: : (<object 109231> (scddr (cdr scdr)))
> def args: : (<object 109299> (scdr (cdr s)))
> def args: : (<object 109299> (scddr (cdr scdr)))
> def args: : (<object 109371> (scdr (cdr s)))
> def args: : (<object 109371> (scddr (cdr scdr)))
> def args: : (<object 109439> (scdr (cdr s)))
> def args: : (<object 109439> (scddr (cdr scdr)))
> def args: : (<object 109511> (scdr (cdr s)))
> def args: : (<object 109511> (scddr (cdr scdr)))
> def args: : (<object 109579> (scdr (cdr s)))
> def args: : (<object 109579> (scddr (cdr scdr)))
> def args: : (<object 109651> (scdr (cdr s)))
> def args: : (<object 109651> (scddr (cdr scdr)))
> def args: : (<object 109719> (scdr (cdr s)))
> def args: : (<object 109719> (scddr (cdr scdr)))
> def args: : (<object 109791> (scdr (cdr s)))
> def args: : (<object 109791> (scddr (cdr scdr)))
> def args: : (<object 109859> (scdr (cdr s)))
> def args: : (<object 109859> (scddr (cdr scdr)))
> def args: : (<object 109931> (scdr (cdr s)))
> def args: : (<object 109931> (scddr (cdr scdr)))
> def args: : (<object 109999> (scdr (cdr s)))
> def args: : (<object 109999> (scddr (cdr scdr)))
> def args: : (<object 110071> (scdr (cdr s)))
> def args: : (<object 110071> (scddr (cdr scdr)))
> def args: : (<object 110139> (scdr (cdr s)))
> def args: : (<object 110139> (scddr (cdr scdr)))
> def args: : (<object 110211> (scdr (cdr s)))
> def args: : (<object 110211> (scddr (cdr scdr)))
> def args: : (<object 110279> (scdr (cdr s)))
> def args: : (<object 110279> (scddr (cdr scdr)))
> def args: : (<object 110351> (scdr (cdr s)))
> def args: : (<object 110351> (scddr (cdr scdr)))
> 190def args: : (<object 113776> (env (if (null? @) # (car @))))
>  def args: : (<object 113883> (env (if (null? @) # (car @))))
> def args: : (<object 114003> (scdr (cdr s)))
> def args: : (<object 114003> (scddr (cdr scdr)))
> def args: : (<object 114075> (scdr (cdr s)))
> def args: : (<object 114075> (scddr (cdr scdr)))
> def args: : (<object 114147> (scdr (cdr s)))
> def args: : (<object 114147> (scddr (cdr scdr)))
> def args: : (<object 114215> (scdr (cdr s)))
> def args: : (<object 114215> (scddr (cdr scdr)))
> def args: : (<object 114454> (scdr (cdr s)))
> def args: : (<object 114454> (scddr (cdr scdr)))
> def args: : (<object 114526> (scdr (cdr s)))
> def args: : (<object 114526> (scddr (cdr scdr)))
> def args: : (<object 114594> (scdr (cdr s)))
> def args: : (<object 114594> (scddr (cdr scdr)))
> def args: : (<object 114666> (scdr (cdr s)))
> def args: : (<object 114666> (scddr (cdr scdr)))
> def args: : (<object 114734> (scdr (cdr s)))
> def args: : (<object 114734> (scddr (cdr scdr)))
> def args: : (<object 114806> (scdr (cdr s)))
> def args: : (<object 114806> (scddr (cdr scdr)))
> def args: : (<object 114874> (scdr (cdr s)))
> def args: : (<object 114874> (scddr (cdr scdr)))
> def args: : (<object 114946> (scdr (cdr s)))
> def args: : (<object 114946> (scddr (cdr scdr)))
> def args: : (<object 115014> (scdr (cdr s)))
> def args: : (<object 115014> (scddr (cdr scdr)))
> def args: : (<object 115086> (scdr (cdr s)))
> def args: : (<object 115086> (scddr (cdr scdr)))
> def args: : (<object 115154> (scdr (cdr s)))
> def args: : (<object 115154> (scddr (cdr scdr)))
> def args: : (<object 115226> (scdr (cdr s)))
> def args: : (<object 115226> (scddr (cdr scdr)))
> def args: : (<object 115294> (scdr (cdr s)))
> def args: : (<object 115294> (scddr (cdr scdr)))
> def args: : (<object 115366> (scdr (cdr s)))
> def args: : (<object 115366> (scddr (cdr scdr)))
> def args: : (<object 115434> (scdr (cdr s)))
> def args: : (<object 115434> (scddr (cdr scdr)))
> def args: : (<object 115506> (scdr (cdr s)))
> def args: : (<object 115506> (scddr (cdr scdr)))
> def args: : (<object 115574> (scdr (cdr s)))
> def args: : (<object 115574> (scddr (cdr scdr)))
> def args: : (<object 115646> (scdr (cdr s)))
> def args: : (<object 115646> (scddr (cdr scdr)))
> def args: : (<object 115714> (scdr (cdr s)))
> def args: : (<object 115714> (scddr (cdr scdr)))
> def args: : (<object 115786> (scdr (cdr s)))
> def args: : (<object 115786> (scddr (cdr scdr)))
> def args: : (<object 115854> (scdr (cdr s)))
> def args: : (<object 115854> (scddr (cdr scdr)))
> def args: : (<object 115926> (scdr (cdr s)))
> def args: : (<object 115926> (scddr (cdr scdr)))
> def args: : (<object 115994> (scdr (cdr s)))
> def args: : (<object 115994> (scddr (cdr scdr)))
> def args: : (<object 116066> (scdr (cdr s)))
> def args: : (<object 116066> (scddr (cdr scdr)))
> def args: : (<object 116134> (scdr (cdr s)))
> def args: : (<object 116134> (scddr (cdr scdr)))
> def args: : (<object 116206> (scdr (cdr s)))
> def args: : (<object 116206> (scddr (cdr scdr)))
> def args: : (<object 116274> (scdr (cdr s)))
> def args: : (<object 116274> (scddr (cdr scdr)))
> def args: : (<object 116346> (scdr (cdr s)))
> def args: : (<object 116346> (scddr (cdr scdr)))
> def args: : (<object 116414> (scdr (cdr s)))
> def args: : (<object 116414> (scddr (cdr scdr)))
> def args: : (<object 116486> (scdr (cdr s)))
> def args: : (<object 116486> (scddr (cdr scdr)))
> def args: : (<object 116554> (scdr (cdr s)))
> def args: : (<object 116554> (scddr (cdr scdr)))
> def args: : (<object 116626> (scdr (cdr s)))
> def args: : (<object 116626> (scddr (cdr scdr)))
> def args: : (<object 116694> (scdr (cdr s)))
> def args: : (<object 116694> (scddr (cdr scdr)))
> def args: : (<object 116766> (scdr (cdr s)))
> def args: : (<object 116766> (scddr (cdr scdr)))
> def args: : (<object 116834> (scdr (cdr s)))
> def args: : (<object 116834> (scddr (cdr scdr)))
> def args: : (<object 116906> (scdr (cdr s)))
> def args: : (<object 116906> (scddr (cdr scdr)))
> 210def args: : (<object 120502> (env (if (null? @) # (car @))))
>  def args: : (<object 120609> (env (if (null? @) # (car @))))
> def args: : (<object 120729> (scdr (cdr s)))
> def args: : (<object 120729> (scddr (cdr scdr)))
> def args: : (<object 120801> (scdr (cdr s)))
> def args: : (<object 120801> (scddr (cdr scdr)))
> def args: : (<object 120873> (scdr (cdr s)))
> def args: : (<object 120873> (scddr (cdr scdr)))
> def args: : (<object 120941> (scdr (cdr s)))
> def args: : (<object 120941> (scddr (cdr scdr)))
> def args: : (<object 121180> (scdr (cdr s)))
> def args: : (<object 121180> (scddr (cdr scdr)))
> def args: : (<object 121252> (scdr (cdr s)))
> def args: : (<object 121252> (scddr (cdr scdr)))
> def args: : (<object 121320> (scdr (cdr s)))
> def args: : (<object 121320> (scddr (cdr scdr)))
> def args: : (<object 121392> (scdr (cdr s)))
> def args: : (<object 121392> (scddr (cdr scdr)))
> def args: : (<object 121460> (scdr (cdr s)))
> def args: : (<object 121460> (scddr (cdr scdr)))
> def args: : (<object 121532> (scdr (cdr s)))
> def args: : (<object 121532> (scddr (cdr scdr)))
> def args: : (<object 121600> (scdr (cdr s)))
> def args: : (<object 121600> (scddr (cdr scdr)))
> def args: : (<object 121672> (scdr (cdr s)))
> def args: : (<object 121672> (scddr (cdr scdr)))
> def args: : (<object 121740> (scdr (cdr s)))
> def args: : (<object 121740> (scddr (cdr scdr)))
> def args: : (<object 121812> (scdr (cdr s)))
> def args: : (<object 121812> (scddr (cdr scdr)))
> def args: : (<object 121880> (scdr (cdr s)))
> def args: : (<object 121880> (scddr (cdr scdr)))
> def args: : (<object 121952> (scdr (cdr s)))
> def args: : (<object 121952> (scddr (cdr scdr)))
> def args: : (<object 122020> (scdr (cdr s)))
> def args: : (<object 122020> (scddr (cdr scdr)))
> def args: : (<object 122092> (scdr (cdr s)))
> def args: : (<object 122092> (scddr (cdr scdr)))
> def args: : (<object 122160> (scdr (cdr s)))
> def args: : (<object 122160> (scddr (cdr scdr)))
> def args: : (<object 122232> (scdr (cdr s)))
> def args: : (<object 122232> (scddr (cdr scdr)))
> def args: : (<object 122300> (scdr (cdr s)))
> def args: : (<object 122300> (scddr (cdr scdr)))
> def args: : (<object 122372> (scdr (cdr s)))
> def args: : (<object 122372> (scddr (cdr scdr)))
> def args: : (<object 122440> (scdr (cdr s)))
> def args: : (<object 122440> (scddr (cdr scdr)))
> def args: : (<object 122512> (scdr (cdr s)))
> def args: : (<object 122512> (scddr (cdr scdr)))
> def args: : (<object 122580> (scdr (cdr s)))
> def args: : (<object 122580> (scddr (cdr scdr)))
> def args: : (<object 122652> (scdr (cdr s)))
> def args: : (<object 122652> (scddr (cdr scdr)))
> def args: : (<object 122720> (scdr (cdr s)))
> def args: : (<object 122720> (scddr (cdr scdr)))
> def args: : (<object 122792> (scdr (cdr s)))
> def args: : (<object 122792> (scddr (cdr scdr)))
> def args: : (<object 122860> (scdr (cdr s)))
> def args: : (<object 122860> (scddr (cdr scdr)))
> def args: : (<object 122932> (scdr (cdr s)))
> def args: : (<object 122932> (scddr (cdr scdr)))
> def args: : (<object 123000> (scdr (cdr s)))
> def args: : (<object 123000> (scddr (cdr scdr)))
> def args: : (<object 123072> (scdr (cdr s)))
> def args: : (<object 123072> (scddr (cdr scdr)))
> def args: : (<object 123140> (scdr (cdr s)))
> def args: : (<object 123140> (scddr (cdr scdr)))
> def args: : (<object 123212> (scdr (cdr s)))
> def args: : (<object 123212> (scddr (cdr scdr)))
> def args: : (<object 123280> (scdr (cdr s)))
> def args: : (<object 123280> (scddr (cdr scdr)))
> def args: : (<object 123352> (scdr (cdr s)))
> def args: : (<object 123352> (scddr (cdr scdr)))
> def args: : (<object 123420> (scdr (cdr s)))
> def args: : (<object 123420> (scddr (cdr scdr)))
> def args: : (<object 123492> (scdr (cdr s)))
> def args: : (<object 123492> (scddr (cdr scdr)))
> def args: : (<object 123560> (scdr (cdr s)))
> def args: : (<object 123560> (scddr (cdr scdr)))
> def args: : (<object 123632> (scdr (cdr s)))
> def args: : (<object 123632> (scddr (cdr scdr)))
> def args: : (<object 123700> (scdr (cdr s)))
> def args: : (<object 123700> (scddr (cdr scdr)))
> def args: : (<object 123772> (scdr (cdr s)))
> def args: : (<object 123772> (scddr (cdr scdr)))
> 231def args: : (<object 127539> (env (if (null? @) # (car @))))
>  def args: : (<object 127646> (env (if (null? @) # (car @))))
> def args: : (<object 127766> (scdr (cdr s)))
> def args: : (<object 127766> (scddr (cdr scdr)))
> def args: : (<object 127838> (scdr (cdr s)))
> def args: : (<object 127838> (scddr (cdr scdr)))
> def args: : (<object 127910> (scdr (cdr s)))
> def args: : (<object 127910> (scddr (cdr scdr)))
> def args: : (<object 127978> (scdr (cdr s)))
> def args: : (<object 127978> (scddr (cdr scdr)))
> def args: : (<object 128217> (scdr (cdr s)))
> def args: : (<object 128217> (scddr (cdr scdr)))
> def args: : (<object 128289> (scdr (cdr s)))
> def args: : (<object 128289> (scddr (cdr scdr)))
> def args: : (<object 128357> (scdr (cdr s)))
> def args: : (<object 128357> (scddr (cdr scdr)))
> def args: : (<object 128429> (scdr (cdr s)))
> def args: : (<object 128429> (scddr (cdr scdr)))
> def args: : (<object 128497> (scdr (cdr s)))
> def args: : (<object 128497> (scddr (cdr scdr)))
> def args: : (<object 128569> (scdr (cdr s)))
> def args: : (<object 128569> (scddr (cdr scdr)))
> def args: : (<object 128637> (scdr (cdr s)))
> def args: : (<object 128637> (scddr (cdr scdr)))
> def args: : (<object 128709> (scdr (cdr s)))
> def args: : (<object 128709> (scddr (cdr scdr)))
> def args: : (<object 128777> (scdr (cdr s)))
> def args: : (<object 128777> (scddr (cdr scdr)))
> def args: : (<object 128849> (scdr (cdr s)))
> def args: : (<object 128849> (scddr (cdr scdr)))
> def args: : (<object 128917> (scdr (cdr s)))
> def args: : (<object 128917> (scddr (cdr scdr)))
> def args: : (<object 128989> (scdr (cdr s)))
> def args: : (<object 128989> (scddr (cdr scdr)))
> def args: : (<object 129057> (scdr (cdr s)))
> def args: : (<object 129057> (scddr (cdr scdr)))
> def args: : (<object 129129> (scdr (cdr s)))
> def args: : (<object 129129> (scddr (cdr scdr)))
> def args: : (<object 129197> (scdr (cdr s)))
> def args: : (<object 129197> (scddr (cdr scdr)))
> def args: : (<object 129269> (scdr (cdr s)))
> def args: : (<object 129269> (scddr (cdr scdr)))
> def args: : (<object 129337> (scdr (cdr s)))
> def args: : (<object 129337> (scddr (cdr scdr)))
> def args: : (<object 129409> (scdr (cdr s)))
> def args: : (<object 129409> (scddr (cdr scdr)))
> def args: : (<object 129477> (scdr (cdr s)))
> def args: : (<object 129477> (scddr (cdr scdr)))
> def args: : (<object 129549> (scdr (cdr s)))
> def args: : (<object 129549> (scddr (cdr scdr)))
> def args: : (<object 129617> (scdr (cdr s)))
> def args: : (<object 129617> (scddr (cdr scdr)))
> def args: : (<object 129689> (scdr (cdr s)))
> def args: : (<object 129689> (scddr (cdr scdr)))
> def args: : (<object 129757> (scdr (cdr s)))
> def args: : (<object 129757> (scddr (cdr scdr)))
> def args: : (<object 129829> (scdr (cdr s)))
> def args: : (<object 129829> (scddr (cdr scdr)))
> def args: : (<object 129897> (scdr (cdr s)))
> def args: : (<object 129897> (scddr (cdr scdr)))
> def args: : (<object 129969> (scdr (cdr s)))
> def args: : (<object 129969> (scddr (cdr scdr)))
> def args: : (<object 130037> (scdr (cdr s)))
> def args: : (<object 130037> (scddr (cdr scdr)))
> def args: : (<object 130109> (scdr (cdr s)))
> def args: : (<object 130109> (scddr (cdr scdr)))
> def args: : (<object 130177> (scdr (cdr s)))
> def args: : (<object 130177> (scddr (cdr scdr)))
> def args: : (<object 130249> (scdr (cdr s)))
> def args: : (<object 130249> (scddr (cdr scdr)))
> def args: : (<object 130317> (scdr (cdr s)))
> def args: : (<object 130317> (scddr (cdr scdr)))
> def args: : (<object 130389> (scdr (cdr s)))
> def args: : (<object 130389> (scddr (cdr scdr)))
> def args: : (<object 130457> (scdr (cdr s)))
> def args: : (<object 130457> (scddr (cdr scdr)))
> def args: : (<object 130529> (scdr (cdr s)))
> def args: : (<object 130529> (scddr (cdr scdr)))
> def args: : (<object 130597> (scdr (cdr s)))
> def args: : (<object 130597> (scddr (cdr scdr)))
> def args: : (<object 130669> (scdr (cdr s)))
> def args: : (<object 130669> (scddr (cdr scdr)))
> def args: : (<object 130737> (scdr (cdr s)))
> def args: : (<object 130737> (scddr (cdr scdr)))
> def args: : (<object 130809> (scdr (cdr s)))
> def args: : (<object 130809> (scddr (cdr scdr)))
> def args: : (<object 130877> (scdr (cdr s)))
> def args: : (<object 130877> (scddr (cdr scdr)))
> def args: : (<object 130949> (scdr (cdr s)))
> def args: : (<object 130949> (scddr (cdr scdr)))
> 253def args: : (<object 134887> (env (if (null? @) # (car @))))
>  def args: : (<object 134994> (env (if (null? @) # (car @))))
> def args: : (<object 135114> (scdr (cdr s)))
> def args: : (<object 135114> (scddr (cdr scdr)))
> def args: : (<object 135186> (scdr (cdr s)))
> def args: : (<object 135186> (scddr (cdr scdr)))
> def args: : (<object 135258> (scdr (cdr s)))
> def args: : (<object 135258> (scddr (cdr scdr)))
> def args: : (<object 135326> (scdr (cdr s)))
> def args: : (<object 135326> (scddr (cdr scdr)))
> def args: : (<object 135565> (scdr (cdr s)))
> def args: : (<object 135565> (scddr (cdr scdr)))
> def args: : (<object 135637> (scdr (cdr s)))
> def args: : (<object 135637> (scddr (cdr scdr)))
> def args: : (<object 135705> (scdr (cdr s)))
> def args: : (<object 135705> (scddr (cdr scdr)))
> def args: : (<object 135777> (scdr (cdr s)))
> def args: : (<object 135777> (scddr (cdr scdr)))
> def args: : (<object 135845> (scdr (cdr s)))
> def args: : (<object 135845> (scddr (cdr scdr)))
> def args: : (<object 135917> (scdr (cdr s)))
> def args: : (<object 135917> (scddr (cdr scdr)))
> def args: : (<object 135985> (scdr (cdr s)))
> def args: : (<object 135985> (scddr (cdr scdr)))
> def args: : (<object 136057> (scdr (cdr s)))
> def args: : (<object 136057> (scddr (cdr scdr)))
> def args: : (<object 136125> (scdr (cdr s)))
> def args: : (<object 136125> (scddr (cdr scdr)))
> def args: : (<object 136197> (scdr (cdr s)))
> def args: : (<object 136197> (scddr (cdr scdr)))
> def args: : (<object 136265> (scdr (cdr s)))
> def args: : (<object 136265> (scddr (cdr scdr)))
> def args: : (<object 136337> (scdr (cdr s)))
> def args: : (<object 136337> (scddr (cdr scdr)))
> def args: : (<object 136405> (scdr (cdr s)))
> def args: : (<object 136405> (scddr (cdr scdr)))
> def args: : (<object 136477> (scdr (cdr s)))
> def args: : (<object 136477> (scddr (cdr scdr)))
> def args: : (<object 136545> (scdr (cdr s)))
> def args: : (<object 136545> (scddr (cdr scdr)))
> def args: : (<object 136617> (scdr (cdr s)))
> def args: : (<object 136617> (scddr (cdr scdr)))
> def args: : (<object 136685> (scdr (cdr s)))
> def args: : (<object 136685> (scddr (cdr scdr)))
> def args: : (<object 136757> (scdr (cdr s)))
> def args: : (<object 136757> (scddr (cdr scdr)))
> def args: : (<object 136825> (scdr (cdr s)))
> def args: : (<object 136825> (scddr (cdr scdr)))
> def args: : (<object 136897> (scdr (cdr s)))
> def args: : (<object 136897> (scddr (cdr scdr)))
> def args: : (<object 136965> (scdr (cdr s)))
> def args: : (<object 136965> (scddr (cdr scdr)))
> def args: : (<object 137037> (scdr (cdr s)))
> def args: : (<object 137037> (scddr (cdr scdr)))
> def args: : (<object 137105> (scdr (cdr s)))
> def args: : (<object 137105> (scddr (cdr scdr)))
> def args: : (<object 137177> (scdr (cdr s)))
> def args: : (<object 137177> (scddr (cdr scdr)))
> def args: : (<object 137245> (scdr (cdr s)))
> def args: : (<object 137245> (scddr (cdr scdr)))
> def args: : (<object 137317> (scdr (cdr s)))
> def args: : (<object 137317> (scddr (cdr scdr)))
> def args: : (<object 137385> (scdr (cdr s)))
> def args: : (<object 137385> (scddr (cdr scdr)))
> def args: : (<object 137457> (scdr (cdr s)))
> def args: : (<object 137457> (scddr (cdr scdr)))
> def args: : (<object 137525> (scdr (cdr s)))
> def args: : (<object 137525> (scddr (cdr scdr)))
> def args: : (<object 137597> (scdr (cdr s)))
> def args: : (<object 137597> (scddr (cdr scdr)))
> def args: : (<object 137665> (scdr (cdr s)))
> def args: : (<object 137665> (scddr (cdr scdr)))
> def args: : (<object 137737> (scdr (cdr s)))
> def args: : (<object 137737> (scddr (cdr scdr)))
> def args: : (<object 137805> (scdr (cdr s)))
> def args: : (<object 137805> (scddr (cdr scdr)))
> def args: : (<object 137877> (scdr (cdr s)))
> def args: : (<object 137877> (scddr (cdr scdr)))
> def args: : (<object 137945> (scdr (cdr s)))
> def args: : (<object 137945> (scddr (cdr scdr)))
> def args: : (<object 138017> (scdr (cdr s)))
> def args: : (<object 138017> (scddr (cdr scdr)))
> def args: : (<object 138085> (scdr (cdr s)))
> def args: : (<object 138085> (scddr (cdr scdr)))
> def args: : (<object 138157> (scdr (cdr s)))
> def args: : (<object 138157> (scddr (cdr scdr)))
> def args: : (<object 138225> (scdr (cdr s)))
> def args: : (<object 138225> (scddr (cdr scdr)))
> def args: : (<object 138297> (scdr (cdr s)))
> def args: : (<object 138297> (scddr (cdr scdr)))
> def args: : (<object 138365> (scdr (cdr s)))
> def args: : (<object 138365> (scddr (cdr scdr)))
> def args: : (<object 138437> (scdr (cdr s)))
> def args: : (<object 138437> (scddr (cdr scdr)))
> 276def args: : (<object 142546> (env (if (null? @) # (car @))))
>  def args: : (<object 142653> (env (if (null? @) # (car @))))
> def args: : (<object 142773> (scdr (cdr s)))
> def args: : (<object 142773> (scddr (cdr scdr)))
> def args: : (<object 142845> (scdr (cdr s)))
> def args: : (<object 142845> (scddr (cdr scdr)))
> def args: : (<object 142917> (scdr (cdr s)))
> def args: : (<object 142917> (scddr (cdr scdr)))
> def args: : (<object 142985> (scdr (cdr s)))
> def args: : (<object 142985> (scddr (cdr scdr)))
> def args: : (<object 143224> (scdr (cdr s)))
> def args: : (<object 143224> (scddr (cdr scdr)))
> def args: : (<object 143296> (scdr (cdr s)))
> def args: : (<object 143296> (scddr (cdr scdr)))
> def args: : (<object 143364> (scdr (cdr s)))
> def args: : (<object 143364> (scddr (cdr scdr)))
> def args: : (<object 143436> (scdr (cdr s)))
> def args: : (<object 143436> (scddr (cdr scdr)))
> def args: : (<object 143504> (scdr (cdr s)))
> def args: : (<object 143504> (scddr (cdr scdr)))
> def args: : (<object 143576> (scdr (cdr s)))
> def args: : (<object 143576> (scddr (cdr scdr)))
> def args: : (<object 143644> (scdr (cdr s)))
> def args: : (<object 143644> (scddr (cdr scdr)))
> def args: : (<object 143716> (scdr (cdr s)))
> def args: : (<object 143716> (scddr (cdr scdr)))
> def args: : (<object 143784> (scdr (cdr s)))
> def args: : (<object 143784> (scddr (cdr scdr)))
> def args: : (<object 143856> (scdr (cdr s)))
> def args: : (<object 143856> (scddr (cdr scdr)))
> def args: : (<object 143924> (scdr (cdr s)))
> def args: : (<object 143924> (scddr (cdr scdr)))
> def args: : (<object 143996> (scdr (cdr s)))
> def args: : (<object 143996> (scddr (cdr scdr)))
> def args: : (<object 144064> (scdr (cdr s)))
> def args: : (<object 144064> (scddr (cdr scdr)))
> def args: : (<object 144136> (scdr (cdr s)))
> def args: : (<object 144136> (scddr (cdr scdr)))
> def args: : (<object 144204> (scdr (cdr s)))
> def args: : (<object 144204> (scddr (cdr scdr)))
> def args: : (<object 144276> (scdr (cdr s)))
> def args: : (<object 144276> (scddr (cdr scdr)))
> def args: : (<object 144344> (scdr (cdr s)))
> def args: : (<object 144344> (scddr (cdr scdr)))
> def args: : (<object 144416> (scdr (cdr s)))
> def args: : (<object 144416> (scddr (cdr scdr)))
> def args: : (<object 144484> (scdr (cdr s)))
> def args: : (<object 144484> (scddr (cdr scdr)))
> def args: : (<object 144556> (scdr (cdr s)))
> def args: : (<object 144556> (scddr (cdr scdr)))
> def args: : (<object 144624> (scdr (cdr s)))
> def args: : (<object 144624> (scddr (cdr scdr)))
> def args: : (<object 144696> (scdr (cdr s)))
> def args: : (<object 144696> (scddr (cdr scdr)))
> def args: : (<object 144764> (scdr (cdr s)))
> def args: : (<object 144764> (scddr (cdr scdr)))
> def args: : (<object 144836> (scdr (cdr s)))
> def args: : (<object 144836> (scddr (cdr scdr)))
> def args: : (<object 144904> (scdr (cdr s)))
> def args: : (<object 144904> (scddr (cdr scdr)))
> def args: : (<object 144976> (scdr (cdr s)))
> def args: : (<object 144976> (scddr (cdr scdr)))
> def args: : (<object 145044> (scdr (cdr s)))
> def args: : (<object 145044> (scddr (cdr scdr)))
> def args: : (<object 145116> (scdr (cdr s)))
> def args: : (<object 145116> (scddr (cdr scdr)))
> def args: : (<object 145184> (scdr (cdr s)))
> def args: : (<object 145184> (scddr (cdr scdr)))
> def args: : (<object 145256> (scdr (cdr s)))
> def args: : (<object 145256> (scddr (cdr scdr)))
> def args: : (<object 145324> (scdr (cdr s)))
> def args: : (<object 145324> (scddr (cdr scdr)))
> def args: : (<object 145396> (scdr (cdr s)))
> def args: : (<object 145396> (scddr (cdr scdr)))
> def args: : (<object 145464> (scdr (cdr s)))
> def args: : (<object 145464> (scddr (cdr scdr)))
> def args: : (<object 145536> (scdr (cdr s)))
> def args: : (<object 145536> (scddr (cdr scdr)))
> def args: : (<object 145604> (scdr (cdr s)))
> def args: : (<object 145604> (scddr (cdr scdr)))
> def args: : (<object 145676> (scdr (cdr s)))
> def args: : (<object 145676> (scddr (cdr scdr)))
> def args: : (<object 145744> (scdr (cdr s)))
> def args: : (<object 145744> (scddr (cdr scdr)))
> def args: : (<object 145816> (scdr (cdr s)))
> def args: : (<object 145816> (scddr (cdr scdr)))
> def args: : (<object 145884> (scdr (cdr s)))
> def args: : (<object 145884> (scddr (cdr scdr)))
> def args: : (<object 145956> (scdr (cdr s)))
> def args: : (<object 145956> (scddr (cdr scdr)))
> def args: : (<object 146024> (scdr (cdr s)))
> def args: : (<object 146024> (scddr (cdr scdr)))
> def args: : (<object 146096> (scdr (cdr s)))
> def args: : (<object 146096> (scddr (cdr scdr)))
> def args: : (<object 146164> (scdr (cdr s)))
> def args: : (<object 146164> (scddr (cdr scdr)))
> def args: : (<object 146236> (scdr (cdr s)))
> def args: : (<object 146236> (scddr (cdr scdr)))
> 300def args: : (<object 150516> (env (if (null? @) # (car @))))
>  def args: : (<object 150623> (env (if (null? @) # (car @))))
> def args: : (<object 150743> (scdr (cdr s)))
> def args: : (<object 150743> (scddr (cdr scdr)))
> def args: : (<object 150815> (scdr (cdr s)))
> def args: : (<object 150815> (scddr (cdr scdr)))
> def args: : (<object 150887> (scdr (cdr s)))
> def args: : (<object 150887> (scddr (cdr scdr)))
> def args: : (<object 150955> (scdr (cdr s)))
> def args: : (<object 150955> (scddr (cdr scdr)))
> def args: : (<object 151194> (scdr (cdr s)))
> def args: : (<object 151194> (scddr (cdr scdr)))
> def args: : (<object 151266> (scdr (cdr s)))
> def args: : (<object 151266> (scddr (cdr scdr)))
> def args: : (<object 151334> (scdr (cdr s)))
> def args: : (<object 151334> (scddr (cdr scdr)))
> def args: : (<object 151406> (scdr (cdr s)))
> def args: : (<object 151406> (scddr (cdr scdr)))
> def args: : (<object 151474> (scdr (cdr s)))
> def args: : (<object 151474> (scddr (cdr scdr)))
> def args: : (<object 151546> (scdr (cdr s)))
> def args: : (<object 151546> (scddr (cdr scdr)))
> def args: : (<object 151614> (scdr (cdr s)))
> def args: : (<object 151614> (scddr (cdr scdr)))
> def args: : (<object 151686> (scdr (cdr s)))
> def args: : (<object 151686> (scddr (cdr scdr)))
> def args: : (<object 151754> (scdr (cdr s)))
> def args: : (<object 151754> (scddr (cdr scdr)))
> def args: : (<object 151826> (scdr (cdr s)))
> def args: : (<object 151826> (scddr (cdr scdr)))
> def args: : (<object 151894> (scdr (cdr s)))
> def args: : (<object 151894> (scddr (cdr scdr)))
> def args: : (<object 151966> (scdr (cdr s)))
> def args: : (<object 151966> (scddr (cdr scdr)))
> def args: : (<object 152034> (scdr (cdr s)))
> def args: : (<object 152034> (scddr (cdr scdr)))
> def args: : (<object 152106> (scdr (cdr s)))
> def args: : (<object 152106> (scddr (cdr scdr)))
> def args: : (<object 152174> (scdr (cdr s)))
> def args: : (<object 152174> (scddr (cdr scdr)))
> def args: : (<object 152246> (scdr (cdr s)))
> def args: : (<object 152246> (scddr (cdr scdr)))
> def args: : (<object 152314> (scdr (cdr s)))
> def args: : (<object 152314> (scddr (cdr scdr)))
> def args: : (<object 152386> (scdr (cdr s)))
> def args: : (<object 152386> (scddr (cdr scdr)))
> def args: : (<object 152454> (scdr (cdr s)))
> def args: : (<object 152454> (scddr (cdr scdr)))
> def args: : (<object 152526> (scdr (cdr s)))
> def args: : (<object 152526> (scddr (cdr scdr)))
> def args: : (<object 152594> (scdr (cdr s)))
> def args: : (<object 152594> (scddr (cdr scdr)))
> def args: : (<object 152666> (scdr (cdr s)))
> def args: : (<object 152666> (scddr (cdr scdr)))
> def args: : (<object 152734> (scdr (cdr s)))
> def args: : (<object 152734> (scddr (cdr scdr)))
> def args: : (<object 152806> (scdr (cdr s)))
> def args: : (<object 152806> (scddr (cdr scdr)))
> def args: : (<object 152874> (scdr (cdr s)))
> def args: : (<object 152874> (scddr (cdr scdr)))
> def args: : (<object 152946> (scdr (cdr s)))
> def args: : (<object 152946> (scddr (cdr scdr)))
> def args: : (<object 153014> (scdr (cdr s)))
> def args: : (<object 153014> (scddr (cdr scdr)))
> def args: : (<object 153086> (scdr (cdr s)))
> def args: : (<object 153086> (scddr (cdr scdr)))
> def args: : (<object 153154> (scdr (cdr s)))
> def args: : (<object 153154> (scddr (cdr scdr)))
> def args: : (<object 153226> (scdr (cdr s)))
> def args: : (<object 153226> (scddr (cdr scdr)))
> def args: : (<object 153294> (scdr (cdr s)))
> def args: : (<object 153294> (scddr (cdr scdr)))
> def args: : (<object 153366> (scdr (cdr s)))
> def args: : (<object 153366> (scddr (cdr scdr)))
> def args: : (<object 153434> (scdr (cdr s)))
> def args: : (<object 153434> (scddr (cdr scdr)))
> def args: : (<object 153506> (scdr (cdr s)))
> def args: : (<object 153506> (scddr (cdr scdr)))
> def args: : (<object 153574> (scdr (cdr s)))
> def args: : (<object 153574> (scddr (cdr scdr)))
> def args: : (<object 153646> (scdr (cdr s)))
> def args: : (<object 153646> (scddr (cdr scdr)))
> def args: : (<object 153714> (scdr (cdr s)))
> def args: : (<object 153714> (scddr (cdr scdr)))
> def args: : (<object 153786> (scdr (cdr s)))
> def args: : (<object 153786> (scddr (cdr scdr)))
> def args: : (<object 153854> (scdr (cdr s)))
> def args: : (<object 153854> (scddr (cdr scdr)))
> def args: : (<object 153926> (scdr (cdr s)))
> def args: : (<object 153926> (scddr (cdr scdr)))
> def args: : (<object 153994> (scdr (cdr s)))
> def args: : (<object 153994> (scddr (cdr scdr)))
> def args: : (<object 154066> (scdr (cdr s)))
> def args: : (<object 154066> (scddr (cdr scdr)))
> def args: : (<object 154134> (scdr (cdr s)))
> def args: : (<object 154134> (scddr (cdr scdr)))
> def args: : (<object 154206> (scdr (cdr s)))
> def args: : (<object 154206> (scddr (cdr scdr)))
> def args: : (<object 154274> (scdr (cdr s)))
> def args: : (<object 154274> (scddr (cdr scdr)))
> def args: : (<object 154346> (scdr (cdr s)))
> def args: : (<object 154346> (scddr (cdr scdr)))
> 325def args: : (<object 158797> (env (if (null? @) # (car @))))
>  def args: : (<object 158904> (env (if (null? @) # (car @))))
> def args: : (<object 159024> (scdr (cdr s)))
> def args: : (<object 159024> (scddr (cdr scdr)))
> def args: : (<object 159096> (scdr (cdr s)))
> def args: : (<object 159096> (scddr (cdr scdr)))
> def args: : (<object 159168> (scdr (cdr s)))
> def args: : (<object 159168> (scddr (cdr scdr)))
> def args: : (<object 159236> (scdr (cdr s)))
> def args: : (<object 159236> (scddr (cdr scdr)))
> def args: : (<object 159475> (scdr (cdr s)))
> def args: : (<object 159475> (scddr (cdr scdr)))
> def args: : (<object 159547> (scdr (cdr s)))
> def args: : (<object 159547> (scddr (cdr scdr)))
> def args: : (<object 159615> (scdr (cdr s)))
> def args: : (<object 159615> (scddr (cdr scdr)))
> def args: : (<object 159687> (scdr (cdr s)))
> def args: : (<object 159687> (scddr (cdr scdr)))
> def args: : (<object 159755> (scdr (cdr s)))
> def args: : (<object 159755> (scddr (cdr scdr)))
> def args: : (<object 159827> (scdr (cdr s)))
> def args: : (<object 159827> (scddr (cdr scdr)))
> def args: : (<object 159895> (scdr (cdr s)))
> def args: : (<object 159895> (scddr (cdr scdr)))
> def args: : (<object 159967> (scdr (cdr s)))
> def args: : (<object 159967> (scddr (cdr scdr)))
> def args: : (<object 160035> (scdr (cdr s)))
> def args: : (<object 160035> (scddr (cdr scdr)))
> def args: : (<object 160107> (scdr (cdr s)))
> def args: : (<object 160107> (scddr (cdr scdr)))
> def args: : (<object 160175> (scdr (cdr s)))
> def args: : (<object 160175> (scddr (cdr scdr)))
> def args: : (<object 160247> (scdr (cdr s)))
> def args: : (<object 160247> (scddr (cdr scdr)))
> def args: : (<object 160315> (scdr (cdr s)))
> def args: : (<object 160315> (scddr (cdr scdr)))
> def args: : (<object 160387> (scdr (cdr s)))
> def args: : (<object 160387> (scddr (cdr scdr)))
> def args: : (<object 160455> (scdr (cdr s)))
> def args: : (<object 160455> (scddr (cdr scdr)))
> def args: : (<object 160527> (scdr (cdr s)))
> def args: : (<object 160527> (scddr (cdr scdr)))
> def args: : (<object 160595> (scdr (cdr s)))
> def args: : (<object 160595> (scddr (cdr scdr)))
> def args: : (<object 160667> (scdr (cdr s)))
> def args: : (<object 160667> (scddr (cdr scdr)))
> def args: : (<object 160735> (scdr (cdr s)))
> def args: : (<object 160735> (scddr (cdr scdr)))
> def args: : (<object 160807> (scdr (cdr s)))
> def args: : (<object 160807> (scddr (cdr scdr)))
> def args: : (<object 160875> (scdr (cdr s)))
> def args: : (<object 160875> (scddr (cdr scdr)))
> def args: : (<object 160947> (scdr (cdr s)))
> def args: : (<object 160947> (scddr (cdr scdr)))
> def args: : (<object 161015> (scdr (cdr s)))
> def args: : (<object 161015> (scddr (cdr scdr)))
> def args: : (<object 161087> (scdr (cdr s)))
> def args: : (<object 161087> (scddr (cdr scdr)))
> def args: : (<object 161155> (scdr (cdr s)))
> def args: : (<object 161155> (scddr (cdr scdr)))
> def args: : (<object 161227> (scdr (cdr s)))
> def args: : (<object 161227> (scddr (cdr scdr)))
> def args: : (<object 161295> (scdr (cdr s)))
> def args: : (<object 161295> (scddr (cdr scdr)))
> def args: : (<object 161367> (scdr (cdr s)))
> def args: : (<object 161367> (scddr (cdr scdr)))
> def args: : (<object 161435> (scdr (cdr s)))
> def args: : (<object 161435> (scddr (cdr scdr)))
> def args: : (<object 161507> (scdr (cdr s)))
> def args: : (<object 161507> (scddr (cdr scdr)))
> def args: : (<object 161575> (scdr (cdr s)))
> def args: : (<object 161575> (scddr (cdr scdr)))
> def args: : (<object 161647> (scdr (cdr s)))
> def args: : (<object 161647> (scddr (cdr scdr)))
> def args: : (<object 161715> (scdr (cdr s)))
> def args: : (<object 161715> (scddr (cdr scdr)))
> def args: : (<object 161787> (scdr (cdr s)))
> def args: : (<object 161787> (scddr (cdr scdr)))
> def args: : (<object 161855> (scdr (cdr s)))
> def args: : (<object 161855> (scddr (cdr scdr)))
> def args: : (<object 161927> (scdr (cdr s)))
> def args: : (<object 161927> (scddr (cdr scdr)))
> def args: : (<object 161995> (scdr (cdr s)))
> def args: : (<object 161995> (scddr (cdr scdr)))
> def args: : (<object 162067> (scdr (cdr s)))
> def args: : (<object 162067> (scddr (cdr scdr)))
> def args: : (<object 162135> (scdr (cdr s)))
> def args: : (<object 162135> (scddr (cdr scdr)))
> def args: : (<object 162207> (scdr (cdr s)))
> def args: : (<object 162207> (scddr (cdr scdr)))
> def args: : (<object 162275> (scdr (cdr s)))
> def args: : (<object 162275> (scddr (cdr scdr)))
> def args: : (<object 162347> (scdr (cdr s)))
> def args: : (<object 162347> (scddr (cdr scdr)))
> def args: : (<object 162415> (scdr (cdr s)))
> def args: : (<object 162415> (scddr (cdr scdr)))
> def args: : (<object 162487> (scdr (cdr s)))
> def args: : (<object 162487> (scddr (cdr scdr)))
> def args: : (<object 162555> (scdr (cdr s)))
> def args: : (<object 162555> (scddr (cdr scdr)))
> def args: : (<object 162627> (scdr (cdr s)))
> def args: : (<object 162627> (scddr (cdr scdr)))
> def args: : (<object 162695> (scdr (cdr s)))
> def args: : (<object 162695> (scddr (cdr scdr)))
> def args: : (<object 162767> (scdr (cdr s)))
> def args: : (<object 162767> (scddr (cdr scdr)))
> 351def args: : (<object 167389> (env (if (null? @) # (car @))))
>  def args: : (<object 167496> (env (if (null? @) # (car @))))
> def args: : (<object 167616> (scdr (cdr s)))
> def args: : (<object 167616> (scddr (cdr scdr)))
> def args: : (<object 167688> (scdr (cdr s)))
> def args: : (<object 167688> (scddr (cdr scdr)))
> def args: : (<object 167760> (scdr (cdr s)))
> def args: : (<object 167760> (scddr (cdr scdr)))
> def args: : (<object 167828> (scdr (cdr s)))
> def args: : (<object 167828> (scddr (cdr scdr)))
> def args: : (<object 168067> (scdr (cdr s)))
> def args: : (<object 168067> (scddr (cdr scdr)))
> def args: : (<object 168139> (scdr (cdr s)))
> def args: : (<object 168139> (scddr (cdr scdr)))
> def args: : (<object 168207> (scdr (cdr s)))
> def args: : (<object 168207> (scddr (cdr scdr)))
> def args: : (<object 168279> (scdr (cdr s)))
> def args: : (<object 168279> (scddr (cdr scdr)))
> def args: : (<object 168347> (scdr (cdr s)))
> def args: : (<object 168347> (scddr (cdr scdr)))
> def args: : (<object 168419> (scdr (cdr s)))
> def args: : (<object 168419> (scddr (cdr scdr)))
> def args: : (<object 168487> (scdr (cdr s)))
> def args: : (<object 168487> (scddr (cdr scdr)))
> def args: : (<object 168559> (scdr (cdr s)))
> def args: : (<object 168559> (scddr (cdr scdr)))
> def args: : (<object 168627> (scdr (cdr s)))
> def args: : (<object 168627> (scddr (cdr scdr)))
> def args: : (<object 168699> (scdr (cdr s)))
> def args: : (<object 168699> (scddr (cdr scdr)))
> def args: : (<object 168767> (scdr (cdr s)))
> def args: : (<object 168767> (scddr (cdr scdr)))
> def args: : (<object 168839> (scdr (cdr s)))
> def args: : (<object 168839> (scddr (cdr scdr)))
> def args: : (<object 168907> (scdr (cdr s)))
> def args: : (<object 168907> (scddr (cdr scdr)))
> def args: : (<object 168979> (scdr (cdr s)))
> def args: : (<object 168979> (scddr (cdr scdr)))
> def args: : (<object 169047> (scdr (cdr s)))
> def args: : (<object 169047> (scddr (cdr scdr)))
> def args: : (<object 169119> (scdr (cdr s)))
> def args: : (<object 169119> (scddr (cdr scdr)))
> def args: : (<object 169187> (scdr (cdr s)))
> def args: : (<object 169187> (scddr (cdr scdr)))
> def args: : (<object 169259> (scdr (cdr s)))
> def args: : (<object 169259> (scddr (cdr scdr)))
> def args: : (<object 169327> (scdr (cdr s)))
> def args: : (<object 169327> (scddr (cdr scdr)))
> def args: : (<object 169399> (scdr (cdr s)))
> def args: : (<object 169399> (scddr (cdr scdr)))
> def args: : (<object 169467> (scdr (cdr s)))
> def args: : (<object 169467> (scddr (cdr scdr)))
> def args: : (<object 169539> (scdr (cdr s)))
> def args: : (<object 169539> (scddr (cdr scdr)))
> def args: : (<object 169607> (scdr (cdr s)))
> def args: : (<object 169607> (scddr (cdr scdr)))
> def args: : (<object 169679> (scdr (cdr s)))
> def args: : (<object 169679> (scddr (cdr scdr)))
> def args: : (<object 169747> (scdr (cdr s)))
> def args: : (<object 169747> (scddr (cdr scdr)))
> def args: : (<object 169819> (scdr (cdr s)))
> def args: : (<object 169819> (scddr (cdr scdr)))
> def args: : (<object 169887> (scdr (cdr s)))
> def args: : (<object 169887> (scddr (cdr scdr)))
> def args: : (<object 169959> (scdr (cdr s)))
> def args: : (<object 169959> (scddr (cdr scdr)))
> def args: : (<object 170027> (scdr (cdr s)))
> def args: : (<object 170027> (scddr (cdr scdr)))
> def args: : (<object 170099> (scdr (cdr s)))
> def args: : (<object 170099> (scddr (cdr scdr)))
> def args: : (<object 170167> (scdr (cdr s)))
> def args: : (<object 170167> (scddr (cdr scdr)))
> def args: : (<object 170239> (scdr (cdr s)))
> def args: : (<object 170239> (scddr (cdr scdr)))
> def args: : (<object 170307> (scdr (cdr s)))
> def args: : (<object 170307> (scddr (cdr scdr)))
> def args: : (<object 170379> (scdr (cdr s)))
> def args: : (<object 170379> (scddr (cdr scdr)))
> def args: : (<object 170447> (scdr (cdr s)))
> def args: : (<object 170447> (scddr (cdr scdr)))
> def args: : (<object 170519> (scdr (cdr s)))
> def args: : (<object 170519> (scddr (cdr scdr)))
> def args: : (<object 170587> (scdr (cdr s)))
> def args: : (<object 170587> (scddr (cdr scdr)))
> def args: : (<object 170659> (scdr (cdr s)))
> def args: : (<object 170659> (scddr (cdr scdr)))
> def args: : (<object 170727> (scdr (cdr s)))
> def args: : (<object 170727> (scddr (cdr scdr)))
> def args: : (<object 170799> (scdr (cdr s)))
> def args: : (<object 170799> (scddr (cdr scdr)))
> def args: : (<object 170867> (scdr (cdr s)))
> def args: : (<object 170867> (scddr (cdr scdr)))
> def args: : (<object 170939> (scdr (cdr s)))
> def args: : (<object 170939> (scddr (cdr scdr)))
> def args: : (<object 171007> (scdr (cdr s)))
> def args: : (<object 171007> (scddr (cdr scdr)))
> def args: : (<object 171079> (scdr (cdr s)))
> def args: : (<object 171079> (scddr (cdr scdr)))
> def args: : (<object 171147> (scdr (cdr s)))
> def args: : (<object 171147> (scddr (cdr scdr)))
> def args: : (<object 171219> (scdr (cdr s)))
> def args: : (<object 171219> (scddr (cdr scdr)))
> def args: : (<object 171287> (scdr (cdr s)))
> def args: : (<object 171287> (scddr (cdr scdr)))
> def args: : (<object 171359> (scdr (cdr s)))
> def args: : (<object 171359> (scddr (cdr scdr)))
> def args: : (<object 171427> (scdr (cdr s)))
> def args: : (<object 171427> (scddr (cdr scdr)))
> def args: : (<object 171499> (scdr (cdr s)))
> def args: : (<object 171499> (scddr (cdr scdr)))
> 378def args: : (<object 176292> (env (if (null? @) # (car @))))
>  def args: : (<object 176399> (env (if (null? @) # (car @))))
> def args: : (<object 176519> (scdr (cdr s)))
> def args: : (<object 176519> (scddr (cdr scdr)))
> def args: : (<object 176591> (scdr (cdr s)))
> def args: : (<object 176591> (scddr (cdr scdr)))
> def args: : (<object 176663> (scdr (cdr s)))
> def args: : (<object 176663> (scddr (cdr scdr)))
> def args: : (<object 176731> (scdr (cdr s)))
> def args: : (<object 176731> (scddr (cdr scdr)))
> def args: : (<object 176970> (scdr (cdr s)))
> def args: : (<object 176970> (scddr (cdr scdr)))
> def args: : (<object 177042> (scdr (cdr s)))
> def args: : (<object 177042> (scddr (cdr scdr)))
> def args: : (<object 177110> (scdr (cdr s)))
> def args: : (<object 177110> (scddr (cdr scdr)))
> def args: : (<object 177182> (scdr (cdr s)))
> def args: : (<object 177182> (scddr (cdr scdr)))
> def args: : (<object 177250> (scdr (cdr s)))
> def args: : (<object 177250> (scddr (cdr scdr)))
> def args: : (<object 177322> (scdr (cdr s)))
> def args: : (<object 177322> (scddr (cdr scdr)))
> def args: : (<object 177390> (scdr (cdr s)))
> def args: : (<object 177390> (scddr (cdr scdr)))
> def args: : (<object 177462> (scdr (cdr s)))
> def args: : (<object 177462> (scddr (cdr scdr)))
> def args: : (<object 177530> (scdr (cdr s)))
> def args: : (<object 177530> (scddr (cdr scdr)))
> def args: : (<object 177602> (scdr (cdr s)))
> def args: : (<object 177602> (scddr (cdr scdr)))
> def args: : (<object 177670> (scdr (cdr s)))
> def args: : (<object 177670> (scddr (cdr scdr)))
> def args: : (<object 177742> (scdr (cdr s)))
> def args: : (<object 177742> (scddr (cdr scdr)))
> def args: : (<object 177810> (scdr (cdr s)))
> def args: : (<object 177810> (scddr (cdr scdr)))
> def args: : (<object 177882> (scdr (cdr s)))
> def args: : (<object 177882> (scddr (cdr scdr)))
> def args: : (<object 177950> (scdr (cdr s)))
> def args: : (<object 177950> (scddr (cdr scdr)))
> def args: : (<object 178022> (scdr (cdr s)))
> def args: : (<object 178022> (scddr (cdr scdr)))
> def args: : (<object 178090> (scdr (cdr s)))
> def args: : (<object 178090> (scddr (cdr scdr)))
> def args: : (<object 178162> (scdr (cdr s)))
> def args: : (<object 178162> (scddr (cdr scdr)))
> def args: : (<object 178230> (scdr (cdr s)))
> def args: : (<object 178230> (scddr (cdr scdr)))
> def args: : (<object 178302> (scdr (cdr s)))
> def args: : (<object 178302> (scddr (cdr scdr)))
> def args: : (<object 178370> (scdr (cdr s)))
> def args: : (<object 178370> (scddr (cdr scdr)))
> def args: : (<object 178442> (scdr (cdr s)))
> def args: : (<object 178442> (scddr (cdr scdr)))
> def args: : (<object 178510> (scdr (cdr s)))
> def args: : (<object 178510> (scddr (cdr scdr)))
> def args: : (<object 178582> (scdr (cdr s)))
> def args: : (<object 178582> (scddr (cdr scdr)))
> def args: : (<object 178650> (scdr (cdr s)))
> def args: : (<object 178650> (scddr (cdr scdr)))
> def args: : (<object 178722> (scdr (cdr s)))
> def args: : (<object 178722> (scddr (cdr scdr)))
> def args: : (<object 178790> (scdr (cdr s)))
> def args: : (<object 178790> (scddr (cdr scdr)))
> def args: : (<object 178862> (scdr (cdr s)))
> def args: : (<object 178862> (scddr (cdr scdr)))
> def args: : (<object 178930> (scdr (cdr s)))
> def args: : (<object 178930> (scddr (cdr scdr)))
> def args: : (<object 179002> (scdr (cdr s)))
> def args: : (<object 179002> (scddr (cdr scdr)))
> def args: : (<object 179070> (scdr (cdr s)))
> def args: : (<object 179070> (scddr (cdr scdr)))
> def args: : (<object 179142> (scdr (cdr s)))
> def args: : (<object 179142> (scddr (cdr scdr)))
> def args: : (<object 179210> (scdr (cdr s)))
> def args: : (<object 179210> (scddr (cdr scdr)))
> def args: : (<object 179282> (scdr (cdr s)))
> def args: : (<object 179282> (scddr (cdr scdr)))
> def args: : (<object 179350> (scdr (cdr s)))
> def args: : (<object 179350> (scddr (cdr scdr)))
> def args: : (<object 179422> (scdr (cdr s)))
> def args: : (<object 179422> (scddr (cdr scdr)))
> def args: : (<object 179490> (scdr (cdr s)))
> def args: : (<object 179490> (scddr (cdr scdr)))
> def args: : (<object 179562> (scdr (cdr s)))
> def args: : (<object 179562> (scddr (cdr scdr)))
> def args: : (<object 179630> (scdr (cdr s)))
> def args: : (<object 179630> (scddr (cdr scdr)))
> def args: : (<object 179702> (scdr (cdr s)))
> def args: : (<object 179702> (scddr (cdr scdr)))
> def args: : (<object 179770> (scdr (cdr s)))
> def args: : (<object 179770> (scddr (cdr scdr)))
> def args: : (<object 179842> (scdr (cdr s)))
> def args: : (<object 179842> (scddr (cdr scdr)))
> def args: : (<object 179910> (scdr (cdr s)))
> def args: : (<object 179910> (scddr (cdr scdr)))
> def args: : (<object 179982> (scdr (cdr s)))
> def args: : (<object 179982> (scddr (cdr scdr)))
> def args: : (<object 180050> (scdr (cdr s)))
> def args: : (<object 180050> (scddr (cdr scdr)))
> def args: : (<object 180122> (scdr (cdr s)))
> def args: : (<object 180122> (scddr (cdr scdr)))
> def args: : (<object 180190> (scdr (cdr s)))
> def args: : (<object 180190> (scddr (cdr scdr)))
> def args: : (<object 180262> (scdr (cdr s)))
> def args: : (<object 180262> (scddr (cdr scdr)))
> def args: : (<object 180330> (scdr (cdr s)))
> def args: : (<object 180330> (scddr (cdr scdr)))
> def args: : (<object 180402> (scdr (cdr s)))
> def args: : (<object 180402> (scddr (cdr scdr)))
> def args: : (<object 180470> (scdr (cdr s)))
> def args: : (<object 180470> (scddr (cdr scdr)))
> def args: : (<object 180542> (scdr (cdr s)))
> def args: : (<object 180542> (scddr (cdr scdr)))
> 406def args: : (<object 185506> (env (if (null? @) # (car @))))
>  def args: : (<object 185613> (env (if (null? @) # (car @))))
> def args: : (<object 185733> (scdr (cdr s)))
> def args: : (<object 185733> (scddr (cdr scdr)))
> def args: : (<object 185805> (scdr (cdr s)))
> def args: : (<object 185805> (scddr (cdr scdr)))
> def args: : (<object 185877> (scdr (cdr s)))
> def args: : (<object 185877> (scddr (cdr scdr)))
> def args: : (<object 185945> (scdr (cdr s)))
> def args: : (<object 185945> (scddr (cdr scdr)))
> def args: : (<object 186184> (scdr (cdr s)))
> def args: : (<object 186184> (scddr (cdr scdr)))
> def args: : (<object 186256> (scdr (cdr s)))
> def args: : (<object 186256> (scddr (cdr scdr)))
> def args: : (<object 186324> (scdr (cdr s)))
> def args: : (<object 186324> (scddr (cdr scdr)))
> def args: : (<object 186396> (scdr (cdr s)))
> def args: : (<object 186396> (scddr (cdr scdr)))
> def args: : (<object 186464> (scdr (cdr s)))
> def args: : (<object 186464> (scddr (cdr scdr)))
> def args: : (<object 186536> (scdr (cdr s)))
> def args: : (<object 186536> (scddr (cdr scdr)))
> def args: : (<object 186604> (scdr (cdr s)))
> def args: : (<object 186604> (scddr (cdr scdr)))
> def args: : (<object 186676> (scdr (cdr s)))
> def args: : (<object 186676> (scddr (cdr scdr)))
> def args: : (<object 186744> (scdr (cdr s)))
> def args: : (<object 186744> (scddr (cdr scdr)))
> def args: : (<object 186816> (scdr (cdr s)))
> def args: : (<object 186816> (scddr (cdr scdr)))
> def args: : (<object 186884> (scdr (cdr s)))
> def args: : (<object 186884> (scddr (cdr scdr)))
> def args: : (<object 186956> (scdr (cdr s)))
> def args: : (<object 186956> (scddr (cdr scdr)))
> def args: : (<object 187024> (scdr (cdr s)))
> def args: : (<object 187024> (scddr (cdr scdr)))
> def args: : (<object 187096> (scdr (cdr s)))
> def args: : (<object 187096> (scddr (cdr scdr)))
> def args: : (<object 187164> (scdr (cdr s)))
> def args: : (<object 187164> (scddr (cdr scdr)))
> def args: : (<object 187236> (scdr (cdr s)))
> def args: : (<object 187236> (scddr (cdr scdr)))
> def args: : (<object 187304> (scdr (cdr s)))
> def args: : (<object 187304> (scddr (cdr scdr)))
> def args: : (<object 187376> (scdr (cdr s)))
> def args: : (<object 187376> (scddr (cdr scdr)))
> def args: : (<object 187444> (scdr (cdr s)))
> def args: : (<object 187444> (scddr (cdr scdr)))
> def args: : (<object 187516> (scdr (cdr s)))
> def args: : (<object 187516> (scddr (cdr scdr)))
> def args: : (<object 187584> (scdr (cdr s)))
> def args: : (<object 187584> (scddr (cdr scdr)))
> def args: : (<object 187656> (scdr (cdr s)))
> def args: : (<object 187656> (scddr (cdr scdr)))
> def args: : (<object 187724> (scdr (cdr s)))
> def args: : (<object 187724> (scddr (cdr scdr)))
> def args: : (<object 187796> (scdr (cdr s)))
> def args: : (<object 187796> (scddr (cdr scdr)))
> def args: : (<object 187864> (scdr (cdr s)))
> def args: : (<object 187864> (scddr (cdr scdr)))
> def args: : (<object 187936> (scdr (cdr s)))
> def args: : (<object 187936> (scddr (cdr scdr)))
> def args: : (<object 188004> (scdr (cdr s)))
> def args: : (<object 188004> (scddr (cdr scdr)))
> def args: : (<object 188076> (scdr (cdr s)))
> def args: : (<object 188076> (scddr (cdr scdr)))
> def args: : (<object 188144> (scdr (cdr s)))
> def args: : (<object 188144> (scddr (cdr scdr)))
> def args: : (<object 188216> (scdr (cdr s)))
> def args: : (<object 188216> (scddr (cdr scdr)))
> def args: : (<object 188284> (scdr (cdr s)))
> def args: : (<object 188284> (scddr (cdr scdr)))
> def args: : (<object 188356> (scdr (cdr s)))
> def args: : (<object 188356> (scddr (cdr scdr)))
> def args: : (<object 188424> (scdr (cdr s)))
> def args: : (<object 188424> (scddr (cdr scdr)))
> def args: : (<object 188496> (scdr (cdr s)))
> def args: : (<object 188496> (scddr (cdr scdr)))
> def args: : (<object 188564> (scdr (cdr s)))
> def args: : (<object 188564> (scddr (cdr scdr)))
> def args: : (<object 188636> (scdr (cdr s)))
> def args: : (<object 188636> (scddr (cdr scdr)))
> def args: : (<object 188704> (scdr (cdr s)))
> def args: : (<object 188704> (scddr (cdr scdr)))
> def args: : (<object 188776> (scdr (cdr s)))
> def args: : (<object 188776> (scddr (cdr scdr)))
> def args: : (<object 188844> (scdr (cdr s)))
> def args: : (<object 188844> (scddr (cdr scdr)))
> def args: : (<object 188916> (scdr (cdr s)))
> def args: : (<object 188916> (scddr (cdr scdr)))
> def args: : (<object 188984> (scdr (cdr s)))
> def args: : (<object 188984> (scddr (cdr scdr)))
> def args: : (<object 189056> (scdr (cdr s)))
> def args: : (<object 189056> (scddr (cdr scdr)))
> def args: : (<object 189124> (scdr (cdr s)))
> def args: : (<object 189124> (scddr (cdr scdr)))
> def args: : (<object 189196> (scdr (cdr s)))
> def args: : (<object 189196> (scddr (cdr scdr)))
> def args: : (<object 189264> (scdr (cdr s)))
> def args: : (<object 189264> (scddr (cdr scdr)))
> def args: : (<object 189336> (scdr (cdr s)))
> def args: : (<object 189336> (scddr (cdr scdr)))
> def args: : (<object 189404> (scdr (cdr s)))
> def args: : (<object 189404> (scddr (cdr scdr)))
> def args: : (<object 189476> (scdr (cdr s)))
> def args: : (<object 189476> (scddr (cdr scdr)))
> def args: : (<object 189544> (scdr (cdr s)))
> def args: : (<object 189544> (scddr (cdr scdr)))
> def args: : (<object 189616> (scdr (cdr s)))
> def args: : (<object 189616> (scddr (cdr scdr)))
> def args: : (<object 189684> (scdr (cdr s)))
> def args: : (<object 189684> (scddr (cdr scdr)))
> def args: : (<object 189756> (scdr (cdr s)))
> def args: : (<object 189756> (scddr (cdr scdr)))
> def args: : (<object 189824> (scdr (cdr s)))
> def args: : (<object 189824> (scddr (cdr scdr)))
> def args: : (<object 189896> (scdr (cdr s)))
> def args: : (<object 189896> (scddr (cdr scdr)))
> 435def args: : (<object 195031> (env (if (null? @) # (car @))))
>  def args: : (<object 195138> (env (if (null? @) # (car @))))
> def args: : (<object 195258> (scdr (cdr s)))
> def args: : (<object 195258> (scddr (cdr scdr)))
> def args: : (<object 195330> (scdr (cdr s)))
> def args: : (<object 195330> (scddr (cdr scdr)))
> def args: : (<object 195402> (scdr (cdr s)))
> def args: : (<object 195402> (scddr (cdr scdr)))
> def args: : (<object 195470> (scdr (cdr s)))
> def args: : (<object 195470> (scddr (cdr scdr)))
> def args: : (<object 195709> (scdr (cdr s)))
> def args: : (<object 195709> (scddr (cdr scdr)))
> def args: : (<object 195781> (scdr (cdr s)))
> def args: : (<object 195781> (scddr (cdr scdr)))
> def args: : (<object 195849> (scdr (cdr s)))
> def args: : (<object 195849> (scddr (cdr scdr)))
> def args: : (<object 195921> (scdr (cdr s)))
> def args: : (<object 195921> (scddr (cdr scdr)))
> def args: : (<object 195989> (scdr (cdr s)))
> def args: : (<object 195989> (scddr (cdr scdr)))
> def args: : (<object 196061> (scdr (cdr s)))
> def args: : (<object 196061> (scddr (cdr scdr)))
> def args: : (<object 196129> (scdr (cdr s)))
> def args: : (<object 196129> (scddr (cdr scdr)))
> def args: : (<object 196201> (scdr (cdr s)))
> def args: : (<object 196201> (scddr (cdr scdr)))
> def args: : (<object 196269> (scdr (cdr s)))
> def args: : (<object 196269> (scddr (cdr scdr)))
> def args: : (<object 196341> (scdr (cdr s)))
> def args: : (<object 196341> (scddr (cdr scdr)))
> def args: : (<object 196409> (scdr (cdr s)))
> def args: : (<object 196409> (scddr (cdr scdr)))
> def args: : (<object 196481> (scdr (cdr s)))
> def args: : (<object 196481> (scddr (cdr scdr)))
> def args: : (<object 196549> (scdr (cdr s)))
> def args: : (<object 196549> (scddr (cdr scdr)))
> def args: : (<object 196621> (scdr (cdr s)))
> def args: : (<object 196621> (scddr (cdr scdr)))
> def args: : (<object 196689> (scdr (cdr s)))
> def args: : (<object 196689> (scddr (cdr scdr)))
> def args: : (<object 196761> (scdr (cdr s)))
> def args: : (<object 196761> (scddr (cdr scdr)))
> def args: : (<object 196829> (scdr (cdr s)))
> def args: : (<object 196829> (scddr (cdr scdr)))
> def args: : (<object 196901> (scdr (cdr s)))
> def args: : (<object 196901> (scddr (cdr scdr)))
> def args: : (<object 196969> (scdr (cdr s)))
> def args: : (<object 196969> (scddr (cdr scdr)))
> def args: : (<object 197041> (scdr (cdr s)))
> def args: : (<object 197041> (scddr (cdr scdr)))
> def args: : (<object 197109> (scdr (cdr s)))
> def args: : (<object 197109> (scddr (cdr scdr)))
> def args: : (<object 197181> (scdr (cdr s)))
> def args: : (<object 197181> (scddr (cdr scdr)))
> def args: : (<object 197249> (scdr (cdr s)))
> def args: : (<object 197249> (scddr (cdr scdr)))
> def args: : (<object 197321> (scdr (cdr s)))
> def args: : (<object 197321> (scddr (cdr scdr)))
> def args: : (<object 197389> (scdr (cdr s)))
> def args: : (<object 197389> (scddr (cdr scdr)))
> def args: : (<object 197461> (scdr (cdr s)))
> def args: : (<object 197461> (scddr (cdr scdr)))
> def args: : (<object 197529> (scdr (cdr s)))
> def args: : (<object 197529> (scddr (cdr scdr)))
> def args: : (<object 197601> (scdr (cdr s)))
> def args: : (<object 197601> (scddr (cdr scdr)))
> def args: : (<object 197669> (scdr (cdr s)))
> def args: : (<object 197669> (scddr (cdr scdr)))
> def args: : (<object 197741> (scdr (cdr s)))
> def args: : (<object 197741> (scddr (cdr scdr)))
> def args: : (<object 197809> (scdr (cdr s)))
> def args: : (<object 197809> (scddr (cdr scdr)))
> def args: : (<object 197881> (scdr (cdr s)))
> def args: : (<object 197881> (scddr (cdr scdr)))
> def args: : (<object 197949> (scdr (cdr s)))
> def args: : (<object 197949> (scddr (cdr scdr)))
> def args: : (<object 198021> (scdr (cdr s)))
> def args: : (<object 198021> (scddr (cdr scdr)))
> def args: : (<object 198089> (scdr (cdr s)))
> def args: : (<object 198089> (scddr (cdr scdr)))
> def args: : (<object 198161> (scdr (cdr s)))
> def args: : (<object 198161> (scddr (cdr scdr)))
> def args: : (<object 198229> (scdr (cdr s)))
> def args: : (<object 198229> (scddr (cdr scdr)))
> def args: : (<object 198301> (scdr (cdr s)))
> def args: : (<object 198301> (scddr (cdr scdr)))
> def args: : (<object 198369> (scdr (cdr s)))
> def args: : (<object 198369> (scddr (cdr scdr)))
> def args: : (<object 198441> (scdr (cdr s)))
> def args: : (<object 198441> (scddr (cdr scdr)))
> def args: : (<object 198509> (scdr (cdr s)))
> def args: : (<object 198509> (scddr (cdr scdr)))
> def args: : (<object 198581> (scdr (cdr s)))
> def args: : (<object 198581> (scddr (cdr scdr)))
> def args: : (<object 198649> (scdr (cdr s)))
> def args: : (<object 198649> (scddr (cdr scdr)))
> def args: : (<object 198721> (scdr (cdr s)))
> def args: : (<object 198721> (scddr (cdr scdr)))
> def args: : (<object 198789> (scdr (cdr s)))
> def args: : (<object 198789> (scddr (cdr scdr)))
> def args: : (<object 198861> (scdr (cdr s)))
> def args: : (<object 198861> (scddr (cdr scdr)))
> def args: : (<object 198929> (scdr (cdr s)))
> def args: : (<object 198929> (scddr (cdr scdr)))
> def args: : (<object 199001> (scdr (cdr s)))
> def args: : (<object 199001> (scddr (cdr scdr)))
> def args: : (<object 199069> (scdr (cdr s)))
> def args: : (<object 199069> (scddr (cdr scdr)))
> def args: : (<object 199141> (scdr (cdr s)))
> def args: : (<object 199141> (scddr (cdr scdr)))
> def args: : (<object 199209> (scdr (cdr s)))
> def args: : (<object 199209> (scddr (cdr scdr)))
> def args: : (<object 199281> (scdr (cdr s)))
> def args: : (<object 199281> (scddr (cdr scdr)))
> def args: : (<object 199349> (scdr (cdr s)))
> def args: : (<object 199349> (scddr (cdr scdr)))
> def args: : (<object 199421> (scdr (cdr s)))
> def args: : (<object 199421> (scddr (cdr scdr)))
> def args: : (<object 199489> (scdr (cdr s)))
> def args: : (<object 199489> (scddr (cdr scdr)))
> def args: : (<object 199561> (scdr (cdr s)))
> def args: : (<object 199561> (scddr (cdr scdr)))
> 465def args: : (<object 204867> (env (if (null? @) # (car @))))
>  def args: : (<object 204974> (env (if (null? @) # (car @))))
> def args: : (<object 205094> (scdr (cdr s)))
> def args: : (<object 205094> (scddr (cdr scdr)))
> def args: : (<object 205166> (scdr (cdr s)))
> def args: : (<object 205166> (scddr (cdr scdr)))
> def args: : (<object 205238> (scdr (cdr s)))
> def args: : (<object 205238> (scddr (cdr scdr)))
> def args: : (<object 205306> (scdr (cdr s)))
> def args: : (<object 205306> (scddr (cdr scdr)))
> def args: : (<object 205545> (scdr (cdr s)))
> def args: : (<object 205545> (scddr (cdr scdr)))
> def args: : (<object 205617> (scdr (cdr s)))
> def args: : (<object 205617> (scddr (cdr scdr)))
> def args: : (<object 205685> (scdr (cdr s)))
> def args: : (<object 205685> (scddr (cdr scdr)))
> def args: : (<object 205757> (scdr (cdr s)))
> def args: : (<object 205757> (scddr (cdr scdr)))
> def args: : (<object 205825> (scdr (cdr s)))
> def args: : (<object 205825> (scddr (cdr scdr)))
> def args: : (<object 205897> (scdr (cdr s)))
> def args: : (<object 205897> (scddr (cdr scdr)))
> def args: : (<object 205965> (scdr (cdr s)))
> def args: : (<object 205965> (scddr (cdr scdr)))
> def args: : (<object 206037> (scdr (cdr s)))
> def args: : (<object 206037> (scddr (cdr scdr)))
> def args: : (<object 206105> (scdr (cdr s)))
> def args: : (<object 206105> (scddr (cdr scdr)))
> def args: : (<object 206177> (scdr (cdr s)))
> def args: : (<object 206177> (scddr (cdr scdr)))
> def args: : (<object 206245> (scdr (cdr s)))
> def args: : (<object 206245> (scddr (cdr scdr)))
> def args: : (<object 206317> (scdr (cdr s)))
> def args: : (<object 206317> (scddr (cdr scdr)))
> def args: : (<object 206385> (scdr (cdr s)))
> def args: : (<object 206385> (scddr (cdr scdr)))
> def args: : (<object 206457> (scdr (cdr s)))
> def args: : (<object 206457> (scddr (cdr scdr)))
> def args: : (<object 206525> (scdr (cdr s)))
> def args: : (<object 206525> (scddr (cdr scdr)))
> def args: : (<object 206597> (scdr (cdr s)))
> def args: : (<object 206597> (scddr (cdr scdr)))
> def args: : (<object 206665> (scdr (cdr s)))
> def args: : (<object 206665> (scddr (cdr scdr)))
> def args: : (<object 206737> (scdr (cdr s)))
> def args: : (<object 206737> (scddr (cdr scdr)))
> def args: : (<object 206805> (scdr (cdr s)))
> def args: : (<object 206805> (scddr (cdr scdr)))
> def args: : (<object 206877> (scdr (cdr s)))
> def args: : (<object 206877> (scddr (cdr scdr)))
> def args: : (<object 206945> (scdr (cdr s)))
> def args: : (<object 206945> (scddr (cdr scdr)))
> def args: : (<object 207017> (scdr (cdr s)))
> def args: : (<object 207017> (scddr (cdr scdr)))
> def args: : (<object 207085> (scdr (cdr s)))
> def args: : (<object 207085> (scddr (cdr scdr)))
> def args: : (<object 207157> (scdr (cdr s)))
> def args: : (<object 207157> (scddr (cdr scdr)))
> def args: : (<object 207225> (scdr (cdr s)))
> def args: : (<object 207225> (scddr (cdr scdr)))
> def args: : (<object 207297> (scdr (cdr s)))
> def args: : (<object 207297> (scddr (cdr scdr)))
> def args: : (<object 207365> (scdr (cdr s)))
> def args: : (<object 207365> (scddr (cdr scdr)))
> def args: : (<object 207437> (scdr (cdr s)))
> def args: : (<object 207437> (scddr (cdr scdr)))
> def args: : (<object 207505> (scdr (cdr s)))
> def args: : (<object 207505> (scddr (cdr scdr)))
> def args: : (<object 207577> (scdr (cdr s)))
> def args: : (<object 207577> (scddr (cdr scdr)))
> def args: : (<object 207645> (scdr (cdr s)))
> def args: : (<object 207645> (scddr (cdr scdr)))
> def args: : (<object 207717> (scdr (cdr s)))
> def args: : (<object 207717> (scddr (cdr scdr)))
> def args: : (<object 207785> (scdr (cdr s)))
> def args: : (<object 207785> (scddr (cdr scdr)))
> def args: : (<object 207857> (scdr (cdr s)))
> def args: : (<object 207857> (scddr (cdr scdr)))
> def args: : (<object 207925> (scdr (cdr s)))
> def args: : (<object 207925> (scddr (cdr scdr)))
> def args: : (<object 207997> (scdr (cdr s)))
> def args: : (<object 207997> (scddr (cdr scdr)))
> def args: : (<object 208065> (scdr (cdr s)))
> def args: : (<object 208065> (scddr (cdr scdr)))
> def args: : (<object 208137> (scdr (cdr s)))
> def args: : (<object 208137> (scddr (cdr scdr)))
> def args: : (<object 208205> (scdr (cdr s)))
> def args: : (<object 208205> (scddr (cdr scdr)))
> def args: : (<object 208277> (scdr (cdr s)))
> def args: : (<object 208277> (scddr (cdr scdr)))
> def args: : (<object 208345> (scdr (cdr s)))
> def args: : (<object 208345> (scddr (cdr scdr)))
> def args: : (<object 208417> (scdr (cdr s)))
> def args: : (<object 208417> (scddr (cdr scdr)))
> def args: : (<object 208485> (scdr (cdr s)))
> def args: : (<object 208485> (scddr (cdr scdr)))
> def args: : (<object 208557> (scdr (cdr s)))
> def args: : (<object 208557> (scddr (cdr scdr)))
> def args: : (<object 208625> (scdr (cdr s)))
> def args: : (<object 208625> (scddr (cdr scdr)))
> def args: : (<object 208697> (scdr (cdr s)))
> def args: : (<object 208697> (scddr (cdr scdr)))
> def args: : (<object 208765> (scdr (cdr s)))
> def args: : (<object 208765> (scddr (cdr scdr)))
> def args: : (<object 208837> (scdr (cdr s)))
> def args: : (<object 208837> (scddr (cdr scdr)))
> def args: : (<object 208905> (scdr (cdr s)))
> def args: : (<object 208905> (scddr (cdr scdr)))
> def args: : (<object 208977> (scdr (cdr s)))
> def args: : (<object 208977> (scddr (cdr scdr)))
> def args: : (<object 209045> (scdr (cdr s)))
> def args: : (<object 209045> (scddr (cdr scdr)))
> def args: : (<object 209117> (scdr (cdr s)))
> def args: : (<object 209117> (scddr (cdr scdr)))
> def args: : (<object 209185> (scdr (cdr s)))
> def args: : (<object 209185> (scddr (cdr scdr)))
> def args: : (<object 209257> (scdr (cdr s)))
> def args: : (<object 209257> (scddr (cdr scdr)))
> def args: : (<object 209325> (scdr (cdr s)))
> def args: : (<object 209325> (scddr (cdr scdr)))
> def args: : (<object 209397> (scdr (cdr s)))
> def args: : (<object 209397> (scddr (cdr scdr)))
> def args: : (<object 209465> (scdr (cdr s)))
> def args: : (<object 209465> (scddr (cdr scdr)))
> def args: : (<object 209537> (scdr (cdr s)))
> def args: : (<object 209537> (scddr (cdr scdr)))
> 496def args: : (<object 215014> (env (if (null? @) # (car @))))
>  def args: : (<object 215121> (env (if (null? @) # (car @))))
> def args: : (<object 215241> (scdr (cdr s)))
> def args: : (<object 215241> (scddr (cdr scdr)))
> def args: : (<object 215313> (scdr (cdr s)))
> def args: : (<object 215313> (scddr (cdr scdr)))
> def args: : (<object 215385> (scdr (cdr s)))
> def args: : (<object 215385> (scddr (cdr scdr)))
> def args: : (<object 215453> (scdr (cdr s)))
> def args: : (<object 215453> (scddr (cdr scdr)))
> def args: : (<object 215692> (scdr (cdr s)))
> def args: : (<object 215692> (scddr (cdr scdr)))
> def args: : (<object 215764> (scdr (cdr s)))
> def args: : (<object 215764> (scddr (cdr scdr)))
> def args: : (<object 215832> (scdr (cdr s)))
> def args: : (<object 215832> (scddr (cdr scdr)))
> def args: : (<object 215904> (scdr (cdr s)))
> def args: : (<object 215904> (scddr (cdr scdr)))
> def args: : (<object 215972> (scdr (cdr s)))
> def args: : (<object 215972> (scddr (cdr scdr)))
> def args: : (<object 216044> (scdr (cdr s)))
> def args: : (<object 216044> (scddr (cdr scdr)))
> def args: : (<object 216112> (scdr (cdr s)))
> def args: : (<object 216112> (scddr (cdr scdr)))
> def args: : (<object 216184> (scdr (cdr s)))
> def args: : (<object 216184> (scddr (cdr scdr)))
> def args: : (<object 216252> (scdr (cdr s)))
> def args: : (<object 216252> (scddr (cdr scdr)))
> def args: : (<object 216324> (scdr (cdr s)))
> def args: : (<object 216324> (scddr (cdr scdr)))
> def args: : (<object 216392> (scdr (cdr s)))
> def args: : (<object 216392> (scddr (cdr scdr)))
> def args: : (<object 216464> (scdr (cdr s)))
> def args: : (<object 216464> (scddr (cdr scdr)))
> def args: : (<object 216532> (scdr (cdr s)))
> def args: : (<object 216532> (scddr (cdr scdr)))
> def args: : (<object 216604> (scdr (cdr s)))
> def args: : (<object 216604> (scddr (cdr scdr)))
> def args: : (<object 216672> (scdr (cdr s)))
> def args: : (<object 216672> (scddr (cdr scdr)))
> def args: : (<object 216744> (scdr (cdr s)))
> def args: : (<object 216744> (scddr (cdr scdr)))
> def args: : (<object 216812> (scdr (cdr s)))
> def args: : (<object 216812> (scddr (cdr scdr)))
> def args: : (<object 216884> (scdr (cdr s)))
> def args: : (<object 216884> (scddr (cdr scdr)))
> def args: : (<object 216952> (scdr (cdr s)))
> def args: : (<object 216952> (scddr (cdr scdr)))
> def args: : (<object 217024> (scdr (cdr s)))
> def args: : (<object 217024> (scddr (cdr scdr)))
> def args: : (<object 217092> (scdr (cdr s)))
> def args: : (<object 217092> (scddr (cdr scdr)))
> def args: : (<object 217164> (scdr (cdr s)))
> def args: : (<object 217164> (scddr (cdr scdr)))
> def args: : (<object 217232> (scdr (cdr s)))
> def args: : (<object 217232> (scddr (cdr scdr)))
> def args: : (<object 217304> (scdr (cdr s)))
> def args: : (<object 217304> (scddr (cdr scdr)))
> def args: : (<object 217372> (scdr (cdr s)))
> def args: : (<object 217372> (scddr (cdr scdr)))
> def args: : (<object 217444> (scdr (cdr s)))
> def args: : (<object 217444> (scddr (cdr scdr)))
> def args: : (<object 217512> (scdr (cdr s)))
> def args: : (<object 217512> (scddr (cdr scdr)))
> def args: : (<object 217584> (scdr (cdr s)))
> def args: : (<object 217584> (scddr (cdr scdr)))
> def args: : (<object 217652> (scdr (cdr s)))
> def args: : (<object 217652> (scddr (cdr scdr)))
> def args: : (<object 217724> (scdr (cdr s)))
> def args: : (<object 217724> (scddr (cdr scdr)))
> def args: : (<object 217792> (scdr (cdr s)))
> def args: : (<object 217792> (scddr (cdr scdr)))
> def args: : (<object 217864> (scdr (cdr s)))
> def args: : (<object 217864> (scddr (cdr scdr)))
> def args: : (<object 217932> (scdr (cdr s)))
> def args: : (<object 217932> (scddr (cdr scdr)))
> def args: : (<object 218004> (scdr (cdr s)))
> def args: : (<object 218004> (scddr (cdr scdr)))
> def args: : (<object 218072> (scdr (cdr s)))
> def args: : (<object 218072> (scddr (cdr scdr)))
> def args: : (<object 218144> (scdr (cdr s)))
> def args: : (<object 218144> (scddr (cdr scdr)))
> def args: : (<object 218212> (scdr (cdr s)))
> def args: : (<object 218212> (scddr (cdr scdr)))
> def args: : (<object 218284> (scdr (cdr s)))
> def args: : (<object 218284> (scddr (cdr scdr)))
> def args: : (<object 218352> (scdr (cdr s)))
> def args: : (<object 218352> (scddr (cdr scdr)))
> def args: : (<object 218424> (scdr (cdr s)))
> def args: : (<object 218424> (scddr (cdr scdr)))
> def args: : (<object 218492> (scdr (cdr s)))
> def args: : (<object 218492> (scddr (cdr scdr)))
> def args: : (<object 218564> (scdr (cdr s)))
> def args: : (<object 218564> (scddr (cdr scdr)))
> def args: : (<object 218632> (scdr (cdr s)))
> def args: : (<object 218632> (scddr (cdr scdr)))
> def args: : (<object 218704> (scdr (cdr s)))
> def args: : (<object 218704> (scddr (cdr scdr)))
> def args: : (<object 218772> (scdr (cdr s)))
> def args: : (<object 218772> (scddr (cdr scdr)))
> def args: : (<object 218844> (scdr (cdr s)))
> def args: : (<object 218844> (scddr (cdr scdr)))
> def args: : (<object 218912> (scdr (cdr s)))
> def args: : (<object 218912> (scddr (cdr scdr)))
> def args: : (<object 218984> (scdr (cdr s)))
> def args: : (<object 218984> (scddr (cdr scdr)))
> def args: : (<object 219052> (scdr (cdr s)))
> def args: : (<object 219052> (scddr (cdr scdr)))
> def args: : (<object 219124> (scdr (cdr s)))
> def args: : (<object 219124> (scddr (cdr scdr)))
> def args: : (<object 219192> (scdr (cdr s)))
> def args: : (<object 219192> (scddr (cdr scdr)))
> def args: : (<object 219264> (scdr (cdr s)))
> def args: : (<object 219264> (scddr (cdr scdr)))
> def args: : (<object 219332> (scdr (cdr s)))
> def args: : (<object 219332> (scddr (cdr scdr)))
> def args: : (<object 219404> (scdr (cdr s)))
> def args: : (<object 219404> (scddr (cdr scdr)))
> def args: : (<object 219472> (scdr (cdr s)))
> def args: : (<object 219472> (scddr (cdr scdr)))
> def args: : (<object 219544> (scdr (cdr s)))
> def args: : (<object 219544> (scddr (cdr scdr)))
> def args: : (<object 219612> (scdr (cdr s)))
> def args: : (<object 219612> (scddr (cdr scdr)))
> def args: : (<object 219684> (scdr (cdr s)))
> def args: : (<object 219684> (scddr (cdr scdr)))
> def args: : (<object 219752> (scdr (cdr s)))
> def args: : (<object 219752> (scddr (cdr scdr)))
> def args: : (<object 219824> (scdr (cdr s)))
> def args: : (<object 219824> (scddr (cdr scdr)))
> 528def args: : (<object 225472> (env (if (null? @) # (car @))))
>  def args: : (<object 225579> (env (if (null? @) # (car @))))
> def args: : (<object 225699> (scdr (cdr s)))
> def args: : (<object 225699> (scddr (cdr scdr)))
> def args: : (<object 225771> (scdr (cdr s)))
> def args: : (<object 225771> (scddr (cdr scdr)))
> def args: : (<object 225843> (scdr (cdr s)))
> def args: : (<object 225843> (scddr (cdr scdr)))
> def args: : (<object 225911> (scdr (cdr s)))
> def args: : (<object 225911> (scddr (cdr scdr)))
> def args: : (<object 226150> (scdr (cdr s)))
> def args: : (<object 226150> (scddr (cdr scdr)))
> def args: : (<object 226222> (scdr (cdr s)))
> def args: : (<object 226222> (scddr (cdr scdr)))
> def args: : (<object 226290> (scdr (cdr s)))
> def args: : (<object 226290> (scddr (cdr scdr)))
> def args: : (<object 226362> (scdr (cdr s)))
> def args: : (<object 226362> (scddr (cdr scdr)))
> def args: : (<object 226430> (scdr (cdr s)))
> def args: : (<object 226430> (scddr (cdr scdr)))
> def args: : (<object 226502> (scdr (cdr s)))
> def args: : (<object 226502> (scddr (cdr scdr)))
> def args: : (<object 226570> (scdr (cdr s)))
> def args: : (<object 226570> (scddr (cdr scdr)))
> def args: : (<object 226642> (scdr (cdr s)))
> def args: : (<object 226642> (scddr (cdr scdr)))
> def args: : (<object 226710> (scdr (cdr s)))
> def args: : (<object 226710> (scddr (cdr scdr)))
> def args: : (<object 226782> (scdr (cdr s)))
> def args: : (<object 226782> (scddr (cdr scdr)))
> def args: : (<object 226850> (scdr (cdr s)))
> def args: : (<object 226850> (scddr (cdr scdr)))
> def args: : (<object 226922> (scdr (cdr s)))
> def args: : (<object 226922> (scddr (cdr scdr)))
> def args: : (<object 226990> (scdr (cdr s)))
> def args: : (<object 226990> (scddr (cdr scdr)))
> def args: : (<object 227062> (scdr (cdr s)))
> def args: : (<object 227062> (scddr (cdr scdr)))
> def args: : (<object 227130> (scdr (cdr s)))
> def args: : (<object 227130> (scddr (cdr scdr)))
> def args: : (<object 227202> (scdr (cdr s)))
> def args: : (<object 227202> (scddr (cdr scdr)))
> def args: : (<object 227270> (scdr (cdr s)))
> def args: : (<object 227270> (scddr (cdr scdr)))
> def args: : (<object 227342> (scdr (cdr s)))
> def args: : (<object 227342> (scddr (cdr scdr)))
> def args: : (<object 227410> (scdr (cdr s)))
> def args: : (<object 227410> (scddr (cdr scdr)))
> def args: : (<object 227482> (scdr (cdr s)))
> def args: : (<object 227482> (scddr (cdr scdr)))
> def args: : (<object 227550> (scdr (cdr s)))
> def args: : (<object 227550> (scddr (cdr scdr)))
> def args: : (<object 227622> (scdr (cdr s)))
> def args: : (<object 227622> (scddr (cdr scdr)))
> def args: : (<object 227690> (scdr (cdr s)))
> def args: : (<object 227690> (scddr (cdr scdr)))
> def args: : (<object 227762> (scdr (cdr s)))
> def args: : (<object 227762> (scddr (cdr scdr)))
> def args: : (<object 227830> (scdr (cdr s)))
> def args: : (<object 227830> (scddr (cdr scdr)))
> def args: : (<object 227902> (scdr (cdr s)))
> def args: : (<object 227902> (scddr (cdr scdr)))
> def args: : (<object 227970> (scdr (cdr s)))
> def args: : (<object 227970> (scddr (cdr scdr)))
> def args: : (<object 228042> (scdr (cdr s)))
> def args: : (<object 228042> (scddr (cdr scdr)))
> def args: : (<object 228110> (scdr (cdr s)))
> def args: : (<object 228110> (scddr (cdr scdr)))
> def args: : (<object 228182> (scdr (cdr s)))
> def args: : (<object 228182> (scddr (cdr scdr)))
> def args: : (<object 228250> (scdr (cdr s)))
> def args: : (<object 228250> (scddr (cdr scdr)))
> def args: : (<object 228322> (scdr (cdr s)))
> def args: : (<object 228322> (scddr (cdr scdr)))
> def args: : (<object 228390> (scdr (cdr s)))
> def args: : (<object 228390> (scddr (cdr scdr)))
> def args: : (<object 228462> (scdr (cdr s)))
> def args: : (<object 228462> (scddr (cdr scdr)))
> def args: : (<object 228530> (scdr (cdr s)))
> def args: : (<object 228530> (scddr (cdr scdr)))
> def args: : (<object 228602> (scdr (cdr s)))
> def args: : (<object 228602> (scddr (cdr scdr)))
> def args: : (<object 228670> (scdr (cdr s)))
> def args: : (<object 228670> (scddr (cdr scdr)))
> def args: : (<object 228742> (scdr (cdr s)))
> def args: : (<object 228742> (scddr (cdr scdr)))
> def args: : (<object 228810> (scdr (cdr s)))
> def args: : (<object 228810> (scddr (cdr scdr)))
> def args: : (<object 228882> (scdr (cdr s)))
> def args: : (<object 228882> (scddr (cdr scdr)))
> def args: : (<object 228950> (scdr (cdr s)))
> def args: : (<object 228950> (scddr (cdr scdr)))
> def args: : (<object 229022> (scdr (cdr s)))
> def args: : (<object 229022> (scddr (cdr scdr)))
> def args: : (<object 229090> (scdr (cdr s)))
> def args: : (<object 229090> (scddr (cdr scdr)))
> def args: : (<object 229162> (scdr (cdr s)))
> def args: : (<object 229162> (scddr (cdr scdr)))
> def args: : (<object 229230> (scdr (cdr s)))
> def args: : (<object 229230> (scddr (cdr scdr)))
> def args: : (<object 229302> (scdr (cdr s)))
> def args: : (<object 229302> (scddr (cdr scdr)))
> def args: : (<object 229370> (scdr (cdr s)))
> def args: : (<object 229370> (scddr (cdr scdr)))
> def args: : (<object 229442> (scdr (cdr s)))
> def args: : (<object 229442> (scddr (cdr scdr)))
> def args: : (<object 229510> (scdr (cdr s)))
> def args: : (<object 229510> (scddr (cdr scdr)))
> def args: : (<object 229582> (scdr (cdr s)))
> def args: : (<object 229582> (scddr (cdr scdr)))
> def args: : (<object 229650> (scdr (cdr s)))
> def args: : (<object 229650> (scddr (cdr scdr)))
> def args: : (<object 229722> (scdr (cdr s)))
> def args: : (<object 229722> (scddr (cdr scdr)))
> def args: : (<object 229790> (scdr (cdr s)))
> def args: : (<object 229790> (scddr (cdr scdr)))
> def args: : (<object 229862> (scdr (cdr s)))
> def args: : (<object 229862> (scddr (cdr scdr)))
> def args: : (<object 229930> (scdr (cdr s)))
> def args: : (<object 229930> (scddr (cdr scdr)))
> def args: : (<object 230002> (scdr (cdr s)))
> def args: : (<object 230002> (scddr (cdr scdr)))
> def args: : (<object 230070> (scdr (cdr s)))
> def args: : (<object 230070> (scddr (cdr scdr)))
> def args: : (<object 230142> (scdr (cdr s)))
> def args: : (<object 230142> (scddr (cdr scdr)))
> def args: : (<object 230210> (scdr (cdr s)))
> def args: : (<object 230210> (scddr (cdr scdr)))
> def args: : (<object 230282> (scdr (cdr s)))
> def args: : (<object 230282> (scddr (cdr scdr)))
> def args: : (<object 230350> (scdr (cdr s)))
> def args: : (<object 230350> (scddr (cdr scdr)))
> def args: : (<object 230422> (scdr (cdr s)))
> def args: : (<object 230422> (scddr (cdr scdr)))
> 561def args: : (<object 236241> (env (if (null? @) # (car @))))
>  def args: : (<object 236348> (env (if (null? @) # (car @))))
> def args: : (<object 236468> (scdr (cdr s)))
> def args: : (<object 236468> (scddr (cdr scdr)))
> def args: : (<object 236540> (scdr (cdr s)))
> def args: : (<object 236540> (scddr (cdr scdr)))
> def args: : (<object 236612> (scdr (cdr s)))
> def args: : (<object 236612> (scddr (cdr scdr)))
> def args: : (<object 236680> (scdr (cdr s)))
> def args: : (<object 236680> (scddr (cdr scdr)))
> def args: : (<object 236919> (scdr (cdr s)))
> def args: : (<object 236919> (scddr (cdr scdr)))
> def args: : (<object 236991> (scdr (cdr s)))
> def args: : (<object 236991> (scddr (cdr scdr)))
> def args: : (<object 237059> (scdr (cdr s)))
> def args: : (<object 237059> (scddr (cdr scdr)))
> def args: : (<object 237131> (scdr (cdr s)))
> def args: : (<object 237131> (scddr (cdr scdr)))
> def args: : (<object 237199> (scdr (cdr s)))
> def args: : (<object 237199> (scddr (cdr scdr)))
> def args: : (<object 237271> (scdr (cdr s)))
> def args: : (<object 237271> (scddr (cdr scdr)))
> def args: : (<object 237339> (scdr (cdr s)))
> def args: : (<object 237339> (scddr (cdr scdr)))
> def args: : (<object 237411> (scdr (cdr s)))
> def args: : (<object 237411> (scddr (cdr scdr)))
> def args: : (<object 237479> (scdr (cdr s)))
> def args: : (<object 237479> (scddr (cdr scdr)))
> def args: : (<object 237551> (scdr (cdr s)))
> def args: : (<object 237551> (scddr (cdr scdr)))
> def args: : (<object 237619> (scdr (cdr s)))
> def args: : (<object 237619> (scddr (cdr scdr)))
> def args: : (<object 237691> (scdr (cdr s)))
> def args: : (<object 237691> (scddr (cdr scdr)))
> def args: : (<object 237759> (scdr (cdr s)))
> def args: : (<object 237759> (scddr (cdr scdr)))
> def args: : (<object 237831> (scdr (cdr s)))
> def args: : (<object 237831> (scddr (cdr scdr)))
> def args: : (<object 237899> (scdr (cdr s)))
> def args: : (<object 237899> (scddr (cdr scdr)))
> def args: : (<object 237971> (scdr (cdr s)))
> def args: : (<object 237971> (scddr (cdr scdr)))
> def args: : (<object 238039> (scdr (cdr s)))
> def args: : (<object 238039> (scddr (cdr scdr)))
> def args: : (<object 238111> (scdr (cdr s)))
> def args: : (<object 238111> (scddr (cdr scdr)))
> def args: : (<object 238179> (scdr (cdr s)))
> def args: : (<object 238179> (scddr (cdr scdr)))
> def args: : (<object 238251> (scdr (cdr s)))
> def args: : (<object 238251> (scddr (cdr scdr)))
> def args: : (<object 238319> (scdr (cdr s)))
> def args: : (<object 238319> (scddr (cdr scdr)))
> def args: : (<object 238391> (scdr (cdr s)))
> def args: : (<object 238391> (scddr (cdr scdr)))
> def args: : (<object 238459> (scdr (cdr s)))
> def args: : (<object 238459> (scddr (cdr scdr)))
> def args: : (<object 238531> (scdr (cdr s)))
> def args: : (<object 238531> (scddr (cdr scdr)))
> def args: : (<object 238599> (scdr (cdr s)))
> def args: : (<object 238599> (scddr (cdr scdr)))
> def args: : (<object 238671> (scdr (cdr s)))
> def args: : (<object 238671> (scddr (cdr scdr)))
> def args: : (<object 238739> (scdr (cdr s)))
> def args: : (<object 238739> (scddr (cdr scdr)))
> def args: : (<object 238811> (scdr (cdr s)))
> def args: : (<object 238811> (scddr (cdr scdr)))
> def args: : (<object 238879> (scdr (cdr s)))
> def args: : (<object 238879> (scddr (cdr scdr)))
> def args: : (<object 238951> (scdr (cdr s)))
> def args: : (<object 238951> (scddr (cdr scdr)))
> def args: : (<object 239019> (scdr (cdr s)))
> def args: : (<object 239019> (scddr (cdr scdr)))
> def args: : (<object 239091> (scdr (cdr s)))
> def args: : (<object 239091> (scddr (cdr scdr)))
> def args: : (<object 239159> (scdr (cdr s)))
> def args: : (<object 239159> (scddr (cdr scdr)))
> def args: : (<object 239231> (scdr (cdr s)))
> def args: : (<object 239231> (scddr (cdr scdr)))
> def args: : (<object 239299> (scdr (cdr s)))
> def args: : (<object 239299> (scddr (cdr scdr)))
> def args: : (<object 239371> (scdr (cdr s)))
> def args: : (<object 239371> (scddr (cdr scdr)))
> def args: : (<object 239439> (scdr (cdr s)))
> def args: : (<object 239439> (scddr (cdr scdr)))
> def args: : (<object 239511> (scdr (cdr s)))
> def args: : (<object 239511> (scddr (cdr scdr)))
> def args: : (<object 239579> (scdr (cdr s)))
> def args: : (<object 239579> (scddr (cdr scdr)))
> def args: : (<object 239651> (scdr (cdr s)))
> def args: : (<object 239651> (scddr (cdr scdr)))
> def args: : (<object 239719> (scdr (cdr s)))
> def args: : (<object 239719> (scddr (cdr scdr)))
> def args: : (<object 239791> (scdr (cdr s)))
> def args: : (<object 239791> (scddr (cdr scdr)))
> def args: : (<object 239859> (scdr (cdr s)))
> def args: : (<object 239859> (scddr (cdr scdr)))
> def args: : (<object 239931> (scdr (cdr s)))
> def args: : (<object 239931> (scddr (cdr scdr)))
> def args: : (<object 239999> (scdr (cdr s)))
> def args: : (<object 239999> (scddr (cdr scdr)))
> def args: : (<object 240071> (scdr (cdr s)))
> def args: : (<object 240071> (scddr (cdr scdr)))
> def args: : (<object 240139> (scdr (cdr s)))
> def args: : (<object 240139> (scddr (cdr scdr)))
> def args: : (<object 240211> (scdr (cdr s)))
> def args: : (<object 240211> (scddr (cdr scdr)))
> def args: : (<object 240279> (scdr (cdr s)))
> def args: : (<object 240279> (scddr (cdr scdr)))
> def args: : (<object 240351> (scdr (cdr s)))
> def args: : (<object 240351> (scddr (cdr scdr)))
> def args: : (<object 240419> (scdr (cdr s)))
> def args: : (<object 240419> (scddr (cdr scdr)))
> def args: : (<object 240491> (scdr (cdr s)))
> def args: : (<object 240491> (scddr (cdr scdr)))
> def args: : (<object 240559> (scdr (cdr s)))
> def args: : (<object 240559> (scddr (cdr scdr)))
> def args: : (<object 240631> (scdr (cdr s)))
> def args: : (<object 240631> (scddr (cdr scdr)))
> def args: : (<object 240699> (scdr (cdr s)))
> def args: : (<object 240699> (scddr (cdr scdr)))
> def args: : (<object 240771> (scdr (cdr s)))
> def args: : (<object 240771> (scddr (cdr scdr)))
> def args: : (<object 240839> (scdr (cdr s)))
> def args: : (<object 240839> (scddr (cdr scdr)))
> def args: : (<object 240911> (scdr (cdr s)))
> def args: : (<object 240911> (scddr (cdr scdr)))
> def args: : (<object 240979> (scdr (cdr s)))
> def args: : (<object 240979> (scddr (cdr scdr)))
> def args: : (<object 241051> (scdr (cdr s)))
> def args: : (<object 241051> (scddr (cdr scdr)))
> def args: : (<object 241119> (scdr (cdr s)))
> def args: : (<object 241119> (scddr (cdr scdr)))
> def args: : (<object 241191> (scdr (cdr s)))
> def args: : (<object 241191> (scddr (cdr scdr)))
> def args: : (<object 241259> (scdr (cdr s)))
> def args: : (<object 241259> (scddr (cdr scdr)))
> def args: : (<object 241331> (scdr (cdr s)))
> def args: : (<object 241331> (scddr (cdr scdr)))
> 595def args: : (<object 247321> (env (if (null? @) # (car @))))
>  def args: : (<object 247428> (env (if (null? @) # (car @))))
> def args: : (<object 247548> (scdr (cdr s)))
> def args: : (<object 247548> (scddr (cdr scdr)))
> def args: : (<object 247620> (scdr (cdr s)))
> def args: : (<object 247620> (scddr (cdr scdr)))
> def args: : (<object 247692> (scdr (cdr s)))
> def args: : (<object 247692> (scddr (cdr scdr)))
> def args: : (<object 247760> (scdr (cdr s)))
> def args: : (<object 247760> (scddr (cdr scdr)))
> def args: : (<object 247999> (scdr (cdr s)))
> def args: : (<object 247999> (scddr (cdr scdr)))
> def args: : (<object 248071> (scdr (cdr s)))
> def args: : (<object 248071> (scddr (cdr scdr)))
> def args: : (<object 248139> (scdr (cdr s)))
> def args: : (<object 248139> (scddr (cdr scdr)))
> def args: : (<object 248211> (scdr (cdr s)))
> def args: : (<object 248211> (scddr (cdr scdr)))
> def args: : (<object 248279> (scdr (cdr s)))
> def args: : (<object 248279> (scddr (cdr scdr)))
> def args: : (<object 248351> (scdr (cdr s)))
> def args: : (<object 248351> (scddr (cdr scdr)))
> def args: : (<object 248419> (scdr (cdr s)))
> def args: : (<object 248419> (scddr (cdr scdr)))
> def args: : (<object 248491> (scdr (cdr s)))
> def args: : (<object 248491> (scddr (cdr scdr)))
> def args: : (<object 248559> (scdr (cdr s)))
> def args: : (<object 248559> (scddr (cdr scdr)))
> def args: : (<object 248631> (scdr (cdr s)))
> def args: : (<object 248631> (scddr (cdr scdr)))
> def args: : (<object 248699> (scdr (cdr s)))
> def args: : (<object 248699> (scddr (cdr scdr)))
> def args: : (<object 248771> (scdr (cdr s)))
> def args: : (<object 248771> (scddr (cdr scdr)))
> def args: : (<object 248839> (scdr (cdr s)))
> def args: : (<object 248839> (scddr (cdr scdr)))
> def args: : (<object 248911> (scdr (cdr s)))
> def args: : (<object 248911> (scddr (cdr scdr)))
> def args: : (<object 248979> (scdr (cdr s)))
> def args: : (<object 248979> (scddr (cdr scdr)))
> def args: : (<object 249051> (scdr (cdr s)))
> def args: : (<object 249051> (scddr (cdr scdr)))
> def args: : (<object 249119> (scdr (cdr s)))
> def args: : (<object 249119> (scddr (cdr scdr)))
> def args: : (<object 249191> (scdr (cdr s)))
> def args: : (<object 249191> (scddr (cdr scdr)))
> def args: : (<object 249259> (scdr (cdr s)))
> def args: : (<object 249259> (scddr (cdr scdr)))
> def args: : (<object 249331> (scdr (cdr s)))
> def args: : (<object 249331> (scddr (cdr scdr)))
> def args: : (<object 249399> (scdr (cdr s)))
> def args: : (<object 249399> (scddr (cdr scdr)))
> def args: : (<object 249471> (scdr (cdr s)))
> def args: : (<object 249471> (scddr (cdr scdr)))
> def args: : (<object 249539> (scdr (cdr s)))
> def args: : (<object 249539> (scddr (cdr scdr)))
> def args: : (<object 249611> (scdr (cdr s)))
> def args: : (<object 249611> (scddr (cdr scdr)))
> def args: : (<object 249679> (scdr (cdr s)))
> def args: : (<object 249679> (scddr (cdr scdr)))
> def args: : (<object 249751> (scdr (cdr s)))
> def args: : (<object 249751> (scddr (cdr scdr)))
> def args: : (<object 249819> (scdr (cdr s)))
> def args: : (<object 249819> (scddr (cdr scdr)))
> def args: : (<object 249891> (scdr (cdr s)))
> def args: : (<object 249891> (scddr (cdr scdr)))
> def args: : (<object 249959> (scdr (cdr s)))
> def args: : (<object 249959> (scddr (cdr scdr)))
> def args: : (<object 250031> (scdr (cdr s)))
> def args: : (<object 250031> (scddr (cdr scdr)))
> def args: : (<object 250099> (scdr (cdr s)))
> def args: : (<object 250099> (scddr (cdr scdr)))
> def args: : (<object 250171> (scdr (cdr s)))
> def args: : (<object 250171> (scddr (cdr scdr)))
> def args: : (<object 250239> (scdr (cdr s)))
> def args: : (<object 250239> (scddr (cdr scdr)))
> def args: : (<object 250311> (scdr (cdr s)))
> def args: : (<object 250311> (scddr (cdr scdr)))
> def args: : (<object 250379> (scdr (cdr s)))
> def args: : (<object 250379> (scddr (cdr scdr)))
> def args: : (<object 250451> (scdr (cdr s)))
> def args: : (<object 250451> (scddr (cdr scdr)))
> def args: : (<object 250519> (scdr (cdr s)))
> def args: : (<object 250519> (scddr (cdr scdr)))
> def args: : (<object 250591> (scdr (cdr s)))
> def args: : (<object 250591> (scddr (cdr scdr)))
> def args: : (<object 250659> (scdr (cdr s)))
> def args: : (<object 250659> (scddr (cdr scdr)))
> def args: : (<object 250731> (scdr (cdr s)))
> def args: : (<object 250731> (scddr (cdr scdr)))
> def args: : (<object 250799> (scdr (cdr s)))
> def args: : (<object 250799> (scddr (cdr scdr)))
> def args: : (<object 250871> (scdr (cdr s)))
> def args: : (<object 250871> (scddr (cdr scdr)))
> def args: : (<object 250939> (scdr (cdr s)))
> def args: : (<object 250939> (scddr (cdr scdr)))
> def args: : (<object 251011> (scdr (cdr s)))
> def args: : (<object 251011> (scddr (cdr scdr)))
> def args: : (<object 251079> (scdr (cdr s)))
> def args: : (<object 251079> (scddr (cdr scdr)))
> def args: : (<object 251151> (scdr (cdr s)))
> def args: : (<object 251151> (scddr (cdr scdr)))
> def args: : (<object 251219> (scdr (cdr s)))
> def args: : (<object 251219> (scddr (cdr scdr)))
> def args: : (<object 251291> (scdr (cdr s)))
> def args: : (<object 251291> (scddr (cdr scdr)))
> def args: : (<object 251359> (scdr (cdr s)))
> def args: : (<object 251359> (scddr (cdr scdr)))
> def args: : (<object 251431> (scdr (cdr s)))
> def args: : (<object 251431> (scddr (cdr scdr)))
> def args: : (<object 251499> (scdr (cdr s)))
> def args: : (<object 251499> (scddr (cdr scdr)))
> def args: : (<object 251571> (scdr (cdr s)))
> def args: : (<object 251571> (scddr (cdr scdr)))
> def args: : (<object 251639> (scdr (cdr s)))
> def args: : (<object 251639> (scddr (cdr scdr)))
> def args: : (<object 251711> (scdr (cdr s)))
> def args: : (<object 251711> (scddr (cdr scdr)))
> def args: : (<object 251779> (scdr (cdr s)))
> def args: : (<object 251779> (scddr (cdr scdr)))
> def args: : (<object 251851> (scdr (cdr s)))
> def args: : (<object 251851> (scddr (cdr scdr)))
> def args: : (<object 251919> (scdr (cdr s)))
> def args: : (<object 251919> (scddr (cdr scdr)))
> def args: : (<object 251991> (scdr (cdr s)))
> def args: : (<object 251991> (scddr (cdr scdr)))
> def args: : (<object 252059> (scdr (cdr s)))
> def args: : (<object 252059> (scddr (cdr scdr)))
> def args: : (<object 252131> (scdr (cdr s)))
> def args: : (<object 252131> (scddr (cdr scdr)))
> def args: : (<object 252199> (scdr (cdr s)))
> def args: : (<object 252199> (scddr (cdr scdr)))
> def args: : (<object 252271> (scdr (cdr s)))
> def args: : (<object 252271> (scddr (cdr scdr)))
> def args: : (<object 252339> (scdr (cdr s)))
> def args: : (<object 252339> (scddr (cdr scdr)))
> def args: : (<object 252411> (scdr (cdr s)))
> def args: : (<object 252411> (scddr (cdr scdr)))
> def args: : (<object 252479> (scdr (cdr s)))
> def args: : (<object 252479> (scddr (cdr scdr)))
> def args: : (<object 252551> (scdr (cdr s)))
> def args: : (<object 252551> (scddr (cdr scdr)))
> 630def args: : (<object 258712> (env (if (null? @) # (car @))))
>  def args: : (<object 258819> (env (if (null? @) # (car @))))
> def args: : (<object 258939> (scdr (cdr s)))
> def args: : (<object 258939> (scddr (cdr scdr)))
> def args: : (<object 259011> (scdr (cdr s)))
> def args: : (<object 259011> (scddr (cdr scdr)))
> def args: : (<object 259083> (scdr (cdr s)))
> def args: : (<object 259083> (scddr (cdr scdr)))
> def args: : (<object 259151> (scdr (cdr s)))
> def args: : (<object 259151> (scddr (cdr scdr)))
> def args: : (<object 259390> (scdr (cdr s)))
> def args: : (<object 259390> (scddr (cdr scdr)))
> def args: : (<object 259462> (scdr (cdr s)))
> def args: : (<object 259462> (scddr (cdr scdr)))
> def args: : (<object 259530> (scdr (cdr s)))
> def args: : (<object 259530> (scddr (cdr scdr)))
> def args: : (<object 259602> (scdr (cdr s)))
> def args: : (<object 259602> (scddr (cdr scdr)))
> def args: : (<object 259670> (scdr (cdr s)))
> def args: : (<object 259670> (scddr (cdr scdr)))
> def args: : (<object 259742> (scdr (cdr s)))
> def args: : (<object 259742> (scddr (cdr scdr)))
> def args: : (<object 259810> (scdr (cdr s)))
> def args: : (<object 259810> (scddr (cdr scdr)))
> def args: : (<object 259882> (scdr (cdr s)))
> def args: : (<object 259882> (scddr (cdr scdr)))
> def args: : (<object 259950> (scdr (cdr s)))
> def args: : (<object 259950> (scddr (cdr scdr)))
> def args: : (<object 260022> (scdr (cdr s)))
> def args: : (<object 260022> (scddr (cdr scdr)))
> def args: : (<object 260090> (scdr (cdr s)))
> def args: : (<object 260090> (scddr (cdr scdr)))
> def args: : (<object 260162> (scdr (cdr s)))
> def args: : (<object 260162> (scddr (cdr scdr)))
> def args: : (<object 260230> (scdr (cdr s)))
> def args: : (<object 260230> (scddr (cdr scdr)))
> def args: : (<object 260302> (scdr (cdr s)))
> def args: : (<object 260302> (scddr (cdr scdr)))
> def args: : (<object 260370> (scdr (cdr s)))
> def args: : (<object 260370> (scddr (cdr scdr)))
> def args: : (<object 260442> (scdr (cdr s)))
> def args: : (<object 260442> (scddr (cdr scdr)))
> def args: : (<object 260510> (scdr (cdr s)))
> def args: : (<object 260510> (scddr (cdr scdr)))
> def args: : (<object 260582> (scdr (cdr s)))
> def args: : (<object 260582> (scddr (cdr scdr)))
> def args: : (<object 260650> (scdr (cdr s)))
> def args: : (<object 260650> (scddr (cdr scdr)))
> def args: : (<object 260722> (scdr (cdr s)))
> def args: : (<object 260722> (scddr (cdr scdr)))
> def args: : (<object 260790> (scdr (cdr s)))
> def args: : (<object 260790> (scddr (cdr scdr)))
> def args: : (<object 260862> (scdr (cdr s)))
> def args: : (<object 260862> (scddr (cdr scdr)))
> def args: : (<object 260930> (scdr (cdr s)))
> def args: : (<object 260930> (scddr (cdr scdr)))
> def args: : (<object 261002> (scdr (cdr s)))
> def args: : (<object 261002> (scddr (cdr scdr)))
> def args: : (<object 261070> (scdr (cdr s)))
> def args: : (<object 261070> (scddr (cdr scdr)))
> def args: : (<object 261142> (scdr (cdr s)))
> def args: : (<object 261142> (scddr (cdr scdr)))
> def args: : (<object 261210> (scdr (cdr s)))
> def args: : (<object 261210> (scddr (cdr scdr)))
> def args: : (<object 261282> (scdr (cdr s)))
> def args: : (<object 261282> (scddr (cdr scdr)))
> def args: : (<object 261350> (scdr (cdr s)))
> def args: : (<object 261350> (scddr (cdr scdr)))
> def args: : (<object 261422> (scdr (cdr s)))
> def args: : (<object 261422> (scddr (cdr scdr)))
> def args: : (<object 261490> (scdr (cdr s)))
> def args: : (<object 261490> (scddr (cdr scdr)))
> def args: : (<object 261562> (scdr (cdr s)))
> def args: : (<object 261562> (scddr (cdr scdr)))
> def args: : (<object 261630> (scdr (cdr s)))
> def args: : (<object 261630> (scddr (cdr scdr)))
> def args: : (<object 261702> (scdr (cdr s)))
> def args: : (<object 261702> (scddr (cdr scdr)))
> def args: : (<object 261770> (scdr (cdr s)))
> def args: : (<object 261770> (scddr (cdr scdr)))
> def args: : (<object 261842> (scdr (cdr s)))
> def args: : (<object 261842> (scddr (cdr scdr)))
> def args: : (<object 261910> (scdr (cdr s)))
> def args: : (<object 261910> (scddr (cdr scdr)))
> def args: : (<object 261982> (scdr (cdr s)))
> def args: : (<object 261982> (scddr (cdr scdr)))
> def args: : (<object 262050> (scdr (cdr s)))
> def args: : (<object 262050> (scddr (cdr scdr)))
> def args: : (<object 262122> (scdr (cdr s)))
> def args: : (<object 262122> (scddr (cdr scdr)))
> def args: : (<object 262190> (scdr (cdr s)))
> def args: : (<object 262190> (scddr (cdr scdr)))
> def args: : (<object 262262> (scdr (cdr s)))
> def args: : (<object 262262> (scddr (cdr scdr)))
> def args: : (<object 262330> (scdr (cdr s)))
> def args: : (<object 262330> (scddr (cdr scdr)))
> def args: : (<object 262402> (scdr (cdr s)))
> def args: : (<object 262402> (scddr (cdr scdr)))
> def args: : (<object 262470> (scdr (cdr s)))
> def args: : (<object 262470> (scddr (cdr scdr)))
> def args: : (<object 262542> (scdr (cdr s)))
> def args: : (<object 262542> (scddr (cdr scdr)))
> def args: : (<object 262610> (scdr (cdr s)))
> def args: : (<object 262610> (scddr (cdr scdr)))
> def args: : (<object 262682> (scdr (cdr s)))
> def args: : (<object 262682> (scddr (cdr scdr)))
> def args: : (<object 262750> (scdr (cdr s)))
> def args: : (<object 262750> (scddr (cdr scdr)))
> def args: : (<object 262822> (scdr (cdr s)))
> def args: : (<object 262822> (scddr (cdr scdr)))
> def args: : (<object 262890> (scdr (cdr s)))
> def args: : (<object 262890> (scddr (cdr scdr)))
> def args: : (<object 262962> (scdr (cdr s)))
> def args: : (<object 262962> (scddr (cdr scdr)))
> def args: : (<object 263030> (scdr (cdr s)))
> def args: : (<object 263030> (scddr (cdr scdr)))
> def args: : (<object 263102> (scdr (cdr s)))
> def args: : (<object 263102> (scddr (cdr scdr)))
> def args: : (<object 263170> (scdr (cdr s)))
> def args: : (<object 263170> (scddr (cdr scdr)))
> def args: : (<object 263242> (scdr (cdr s)))
> def args: : (<object 263242> (scddr (cdr scdr)))
> def args: : (<object 263310> (scdr (cdr s)))
> def args: : (<object 263310> (scddr (cdr scdr)))
> def args: : (<object 263382> (scdr (cdr s)))
> def args: : (<object 263382> (scddr (cdr scdr)))
> def args: : (<object 263450> (scdr (cdr s)))
> def args: : (<object 263450> (scddr (cdr scdr)))
> def args: : (<object 263522> (scdr (cdr s)))
> def args: : (<object 263522> (scddr (cdr scdr)))
> def args: : (<object 263590> (scdr (cdr s)))
> def args: : (<object 263590> (scddr (cdr scdr)))
> def args: : (<object 263662> (scdr (cdr s)))
> def args: : (<object 263662> (scddr (cdr scdr)))
> def args: : (<object 263730> (scdr (cdr s)))
> def args: : (<object 263730> (scddr (cdr scdr)))
> def args: : (<object 263802> (scdr (cdr s)))
> def args: : (<object 263802> (scddr (cdr scdr)))
> def args: : (<object 263870> (scdr (cdr s)))
> def args: : (<object 263870> (scddr (cdr scdr)))
> def args: : (<object 263942> (scdr (cdr s)))
> def args: : (<object 263942> (scddr (cdr scdr)))
> def args: : (<object 264010> (scdr (cdr s)))
> def args: : (<object 264010> (scddr (cdr scdr)))
> def args: : (<object 264082> (scdr (cdr s)))
> def args: : (<object 264082> (scddr (cdr scdr)))
> 666def args: : (<object 270414> (env (if (null? @) # (car @))))
>  def args: : (<object 270521> (env (if (null? @) # (car @))))
> def args: : (<object 270641> (scdr (cdr s)))
> def args: : (<object 270641> (scddr (cdr scdr)))
> def args: : (<object 270713> (scdr (cdr s)))
> def args: : (<object 270713> (scddr (cdr scdr)))
> def args: : (<object 270785> (scdr (cdr s)))
> def args: : (<object 270785> (scddr (cdr scdr)))
> def args: : (<object 270853> (scdr (cdr s)))
> def args: : (<object 270853> (scddr (cdr scdr)))
> def args: : (<object 271092> (scdr (cdr s)))
> def args: : (<object 271092> (scddr (cdr scdr)))
> def args: : (<object 271164> (scdr (cdr s)))
> def args: : (<object 271164> (scddr (cdr scdr)))
> def args: : (<object 271232> (scdr (cdr s)))
> def args: : (<object 271232> (scddr (cdr scdr)))
> def args: : (<object 271304> (scdr (cdr s)))
> def args: : (<object 271304> (scddr (cdr scdr)))
> def args: : (<object 271372> (scdr (cdr s)))
> def args: : (<object 271372> (scddr (cdr scdr)))
> def args: : (<object 271444> (scdr (cdr s)))
> def args: : (<object 271444> (scddr (cdr scdr)))
> def args: : (<object 271512> (scdr (cdr s)))
> def args: : (<object 271512> (scddr (cdr scdr)))
> def args: : (<object 271584> (scdr (cdr s)))
> def args: : (<object 271584> (scddr (cdr scdr)))
> def args: : (<object 271652> (scdr (cdr s)))
> def args: : (<object 271652> (scddr (cdr scdr)))
> def args: : (<object 271724> (scdr (cdr s)))
> def args: : (<object 271724> (scddr (cdr scdr)))
> def args: : (<object 271792> (scdr (cdr s)))
> def args: : (<object 271792> (scddr (cdr scdr)))
> def args: : (<object 271864> (scdr (cdr s)))
> def args: : (<object 271864> (scddr (cdr scdr)))
> def args: : (<object 271932> (scdr (cdr s)))
> def args: : (<object 271932> (scddr (cdr scdr)))
> def args: : (<object 272004> (scdr (cdr s)))
> def args: : (<object 272004> (scddr (cdr scdr)))
> def args: : (<object 272072> (scdr (cdr s)))
> def args: : (<object 272072> (scddr (cdr scdr)))
> def args: : (<object 272144> (scdr (cdr s)))
> def args: : (<object 272144> (scddr (cdr scdr)))
> def args: : (<object 272212> (scdr (cdr s)))
> def args: : (<object 272212> (scddr (cdr scdr)))
> def args: : (<object 272284> (scdr (cdr s)))
> def args: : (<object 272284> (scddr (cdr scdr)))
> def args: : (<object 272352> (scdr (cdr s)))
> def args: : (<object 272352> (scddr (cdr scdr)))
> def args: : (<object 272424> (scdr (cdr s)))
> def args: : (<object 272424> (scddr (cdr scdr)))
> def args: : (<object 272492> (scdr (cdr s)))
> def args: : (<object 272492> (scddr (cdr scdr)))
> def args: : (<object 272564> (scdr (cdr s)))
> def args: : (<object 272564> (scddr (cdr scdr)))
> def args: : (<object 272632> (scdr (cdr s)))
> def args: : (<object 272632> (scddr (cdr scdr)))
> def args: : (<object 272704> (scdr (cdr s)))
> def args: : (<object 272704> (scddr (cdr scdr)))
> def args: : (<object 272772> (scdr (cdr s)))
> def args: : (<object 272772> (scddr (cdr scdr)))
> def args: : (<object 272844> (scdr (cdr s)))
> def args: : (<object 272844> (scddr (cdr scdr)))
> def args: : (<object 272912> (scdr (cdr s)))
> def args: : (<object 272912> (scddr (cdr scdr)))
> def args: : (<object 272984> (scdr (cdr s)))
> def args: : (<object 272984> (scddr (cdr scdr)))
> def args: : (<object 273052> (scdr (cdr s)))
> def args: : (<object 273052> (scddr (cdr scdr)))
> def args: : (<object 273124> (scdr (cdr s)))
> def args: : (<object 273124> (scddr (cdr scdr)))
> def args: : (<object 273192> (scdr (cdr s)))
> def args: : (<object 273192> (scddr (cdr scdr)))
> def args: : (<object 273264> (scdr (cdr s)))
> def args: : (<object 273264> (scddr (cdr scdr)))
> def args: : (<object 273332> (scdr (cdr s)))
> def args: : (<object 273332> (scddr (cdr scdr)))
> def args: : (<object 273404> (scdr (cdr s)))
> def args: : (<object 273404> (scddr (cdr scdr)))
> def args: : (<object 273472> (scdr (cdr s)))
> def args: : (<object 273472> (scddr (cdr scdr)))
> def args: : (<object 273544> (scdr (cdr s)))
> def args: : (<object 273544> (scddr (cdr scdr)))
> def args: : (<object 273612> (scdr (cdr s)))
> def args: : (<object 273612> (scddr (cdr scdr)))
> def args: : (<object 273684> (scdr (cdr s)))
> def args: : (<object 273684> (scddr (cdr scdr)))
> def args: : (<object 273752> (scdr (cdr s)))
> def args: : (<object 273752> (scddr (cdr scdr)))
> def args: : (<object 273824> (scdr (cdr s)))
> def args: : (<object 273824> (scddr (cdr scdr)))
> def args: : (<object 273892> (scdr (cdr s)))
> def args: : (<object 273892> (scddr (cdr scdr)))
> def args: : (<object 273964> (scdr (cdr s)))
> def args: : (<object 273964> (scddr (cdr scdr)))
> def args: : (<object 274032> (scdr (cdr s)))
> def args: : (<object 274032> (scddr (cdr scdr)))
> def args: : (<object 274104> (scdr (cdr s)))
> def args: : (<object 274104> (scddr (cdr scdr)))
> def args: : (<object 274172> (scdr (cdr s)))
> def args: : (<object 274172> (scddr (cdr scdr)))
> def args: : (<object 274244> (scdr (cdr s)))
> def args: : (<object 274244> (scddr (cdr scdr)))
> def args: : (<object 274312> (scdr (cdr s)))
> def args: : (<object 274312> (scddr (cdr scdr)))
> def args: : (<object 274384> (scdr (cdr s)))
> def args: : (<object 274384> (scddr (cdr scdr)))
> def args: : (<object 274452> (scdr (cdr s)))
> def args: : (<object 274452> (scddr (cdr scdr)))
> def args: : (<object 274524> (scdr (cdr s)))
> def args: : (<object 274524> (scddr (cdr scdr)))
> def args: : (<object 274592> (scdr (cdr s)))
> def args: : (<object 274592> (scddr (cdr scdr)))
> def args: : (<object 274664> (scdr (cdr s)))
> def args: : (<object 274664> (scddr (cdr scdr)))
> def args: : (<object 274732> (scdr (cdr s)))
> def args: : (<object 274732> (scddr (cdr scdr)))
> def args: : (<object 274804> (scdr (cdr s)))
> def args: : (<object 274804> (scddr (cdr scdr)))
> def args: : (<object 274872> (scdr (cdr s)))
> def args: : (<object 274872> (scddr (cdr scdr)))
> def args: : (<object 274944> (scdr (cdr s)))
> def args: : (<object 274944> (scddr (cdr scdr)))
> def args: : (<object 275012> (scdr (cdr s)))
> def args: : (<object 275012> (scddr (cdr scdr)))
> def args: : (<object 275084> (scdr (cdr s)))
> def args: : (<object 275084> (scddr (cdr scdr)))
> def args: : (<object 275152> (scdr (cdr s)))
> def args: : (<object 275152> (scddr (cdr scdr)))
> def args: : (<object 275224> (scdr (cdr s)))
> def args: : (<object 275224> (scddr (cdr scdr)))
> def args: : (<object 275292> (scdr (cdr s)))
> def args: : (<object 275292> (scddr (cdr scdr)))
> def args: : (<object 275364> (scdr (cdr s)))
> def args: : (<object 275364> (scddr (cdr scdr)))
> def args: : (<object 275432> (scdr (cdr s)))
> def args: : (<object 275432> (scddr (cdr scdr)))
> def args: : (<object 275504> (scdr (cdr s)))
> def args: : (<object 275504> (scddr (cdr scdr)))
> def args: : (<object 275572> (scdr (cdr s)))
> def args: : (<object 275572> (scddr (cdr scdr)))
> def args: : (<object 275644> (scdr (cdr s)))
> def args: : (<object 275644> (scddr (cdr scdr)))
> def args: : (<object 275712> (scdr (cdr s)))
> def args: : (<object 275712> (scddr (cdr scdr)))
> def args: : (<object 275784> (scdr (cdr s)))
> def args: : (<object 275784> (scddr (cdr scdr)))
> def args: : (<object 275852> (scdr (cdr s)))
> def args: : (<object 275852> (scddr (cdr scdr)))
> def args: : (<object 275924> (scdr (cdr s)))
> def args: : (<object 275924> (scddr (cdr scdr)))
> 703def args: : (<object 282427> (env (if (null? @) # (car @))))
>  def args: : (<object 282534> (env (if (null? @) # (car @))))
> def args: : (<object 282654> (scdr (cdr s)))
> def args: : (<object 282654> (scddr (cdr scdr)))
> def args: : (<object 282726> (scdr (cdr s)))
> def args: : (<object 282726> (scddr (cdr scdr)))
> def args: : (<object 282798> (scdr (cdr s)))
> def args: : (<object 282798> (scddr (cdr scdr)))
> def args: : (<object 282866> (scdr (cdr s)))
> def args: : (<object 282866> (scddr (cdr scdr)))
> def args: : (<object 283105> (scdr (cdr s)))
> def args: : (<object 283105> (scddr (cdr scdr)))
> def args: : (<object 283177> (scdr (cdr s)))
> def args: : (<object 283177> (scddr (cdr scdr)))
> def args: : (<object 283245> (scdr (cdr s)))
> def args: : (<object 283245> (scddr (cdr scdr)))
> def args: : (<object 283317> (scdr (cdr s)))
> def args: : (<object 283317> (scddr (cdr scdr)))
> def args: : (<object 283385> (scdr (cdr s)))
> def args: : (<object 283385> (scddr (cdr scdr)))
> def args: : (<object 283457> (scdr (cdr s)))
> def args: : (<object 283457> (scddr (cdr scdr)))
> def args: : (<object 283525> (scdr (cdr s)))
> def args: : (<object 283525> (scddr (cdr scdr)))
> def args: : (<object 283597> (scdr (cdr s)))
> def args: : (<object 283597> (scddr (cdr scdr)))
> def args: : (<object 283665> (scdr (cdr s)))
> def args: : (<object 283665> (scddr (cdr scdr)))
> def args: : (<object 283737> (scdr (cdr s)))
> def args: : (<object 283737> (scddr (cdr scdr)))
> def args: : (<object 283805> (scdr (cdr s)))
> def args: : (<object 283805> (scddr (cdr scdr)))
> def args: : (<object 283877> (scdr (cdr s)))
> def args: : (<object 283877> (scddr (cdr scdr)))
> def args: : (<object 283945> (scdr (cdr s)))
> def args: : (<object 283945> (scddr (cdr scdr)))
> def args: : (<object 284017> (scdr (cdr s)))
> def args: : (<object 284017> (scddr (cdr scdr)))
> def args: : (<object 284085> (scdr (cdr s)))
> def args: : (<object 284085> (scddr (cdr scdr)))
> def args: : (<object 284157> (scdr (cdr s)))
> def args: : (<object 284157> (scddr (cdr scdr)))
> def args: : (<object 284225> (scdr (cdr s)))
> def args: : (<object 284225> (scddr (cdr scdr)))
> def args: : (<object 284297> (scdr (cdr s)))
> def args: : (<object 284297> (scddr (cdr scdr)))
> def args: : (<object 284365> (scdr (cdr s)))
> def args: : (<object 284365> (scddr (cdr scdr)))
> def args: : (<object 284437> (scdr (cdr s)))
> def args: : (<object 284437> (scddr (cdr scdr)))
> def args: : (<object 284505> (scdr (cdr s)))
> def args: : (<object 284505> (scddr (cdr scdr)))
> def args: : (<object 284577> (scdr (cdr s)))
> def args: : (<object 284577> (scddr (cdr scdr)))
> def args: : (<object 284645> (scdr (cdr s)))
> def args: : (<object 284645> (scddr (cdr scdr)))
> def args: : (<object 284717> (scdr (cdr s)))
> def args: : (<object 284717> (scddr (cdr scdr)))
> def args: : (<object 284785> (scdr (cdr s)))
> def args: : (<object 284785> (scddr (cdr scdr)))
> def args: : (<object 284857> (scdr (cdr s)))
> def args: : (<object 284857> (scddr (cdr scdr)))
> def args: : (<object 284925> (scdr (cdr s)))
> def args: : (<object 284925> (scddr (cdr scdr)))
> def args: : (<object 284997> (scdr (cdr s)))
> def args: : (<object 284997> (scddr (cdr scdr)))
> def args: : (<object 285065> (scdr (cdr s)))
> def args: : (<object 285065> (scddr (cdr scdr)))
> def args: : (<object 285137> (scdr (cdr s)))
> def args: : (<object 285137> (scddr (cdr scdr)))
> def args: : (<object 285205> (scdr (cdr s)))
> def args: : (<object 285205> (scddr (cdr scdr)))
> def args: : (<object 285277> (scdr (cdr s)))
> def args: : (<object 285277> (scddr (cdr scdr)))
> def args: : (<object 285345> (scdr (cdr s)))
> def args: : (<object 285345> (scddr (cdr scdr)))
> def args: : (<object 285417> (scdr (cdr s)))
> def args: : (<object 285417> (scddr (cdr scdr)))
> def args: : (<object 285485> (scdr (cdr s)))
> def args: : (<object 285485> (scddr (cdr scdr)))
> def args: : (<object 285557> (scdr (cdr s)))
> def args: : (<object 285557> (scddr (cdr scdr)))
> def args: : (<object 285625> (scdr (cdr s)))
> def args: : (<object 285625> (scddr (cdr scdr)))
> def args: : (<object 285697> (scdr (cdr s)))
> def args: : (<object 285697> (scddr (cdr scdr)))
> def args: : (<object 285765> (scdr (cdr s)))
> def args: : (<object 285765> (scddr (cdr scdr)))
> def args: : (<object 285837> (scdr (cdr s)))
> def args: : (<object 285837> (scddr (cdr scdr)))
> def args: : (<object 285905> (scdr (cdr s)))
> def args: : (<object 285905> (scddr (cdr scdr)))
> def args: : (<object 285977> (scdr (cdr s)))
> def args: : (<object 285977> (scddr (cdr scdr)))
> def args: : (<object 286045> (scdr (cdr s)))
> def args: : (<object 286045> (scddr (cdr scdr)))
> def args: : (<object 286117> (scdr (cdr s)))
> def args: : (<object 286117> (scddr (cdr scdr)))
> def args: : (<object 286185> (scdr (cdr s)))
> def args: : (<object 286185> (scddr (cdr scdr)))
> def args: : (<object 286257> (scdr (cdr s)))
> def args: : (<object 286257> (scddr (cdr scdr)))
> def args: : (<object 286325> (scdr (cdr s)))
> def args: : (<object 286325> (scddr (cdr scdr)))
> def args: : (<object 286397> (scdr (cdr s)))
> def args: : (<object 286397> (scddr (cdr scdr)))
> def args: : (<object 286465> (scdr (cdr s)))
> def args: : (<object 286465> (scddr (cdr scdr)))
> def args: : (<object 286537> (scdr (cdr s)))
> def args: : (<object 286537> (scddr (cdr scdr)))
> def args: : (<object 286605> (scdr (cdr s)))
> def args: : (<object 286605> (scddr (cdr scdr)))
> def args: : (<object 286677> (scdr (cdr s)))
> def args: : (<object 286677> (scddr (cdr scdr)))
> def args: : (<object 286745> (scdr (cdr s)))
> def args: : (<object 286745> (scddr (cdr scdr)))
> def args: : (<object 286817> (scdr (cdr s)))
> def args: : (<object 286817> (scddr (cdr scdr)))
> def args: : (<object 286885> (scdr (cdr s)))
> def args: : (<object 286885> (scddr (cdr scdr)))
> def args: : (<object 286957> (scdr (cdr s)))
> def args: : (<object 286957> (scddr (cdr scdr)))
> def args: : (<object 287025> (scdr (cdr s)))
> def args: : (<object 287025> (scddr (cdr scdr)))
> def args: : (<object 287097> (scdr (cdr s)))
> def args: : (<object 287097> (scddr (cdr scdr)))
> def args: : (<object 287165> (scdr (cdr s)))
> def args: : (<object 287165> (scddr (cdr scdr)))
> def args: : (<object 287237> (scdr (cdr s)))
> def args: : (<object 287237> (scddr (cdr scdr)))
> def args: : (<object 287305> (scdr (cdr s)))
> def args: : (<object 287305> (scddr (cdr scdr)))
> def args: : (<object 287377> (scdr (cdr s)))
> def args: : (<object 287377> (scddr (cdr scdr)))
> def args: : (<object 287445> (scdr (cdr s)))
> def args: : (<object 287445> (scddr (cdr scdr)))
> def args: : (<object 287517> (scdr (cdr s)))
> def args: : (<object 287517> (scddr (cdr scdr)))
> def args: : (<object 287585> (scdr (cdr s)))
> def args: : (<object 287585> (scddr (cdr scdr)))
> def args: : (<object 287657> (scdr (cdr s)))
> def args: : (<object 287657> (scddr (cdr scdr)))
> def args: : (<object 287725> (scdr (cdr s)))
> def args: : (<object 287725> (scddr (cdr scdr)))
> def args: : (<object 287797> (scdr (cdr s)))
> def args: : (<object 287797> (scddr (cdr scdr)))
> def args: : (<object 287865> (scdr (cdr s)))
> def args: : (<object 287865> (scddr (cdr scdr)))
> def args: : (<object 287937> (scdr (cdr s)))
> def args: : (<object 287937> (scddr (cdr scdr)))
> def args: : (<object 288005> (scdr (cdr s)))
> def args: : (<object 288005> (scddr (cdr scdr)))
> def args: : (<object 288077> (scdr (cdr s)))
> def args: : (<object 288077> (scddr (cdr scdr)))
> 741def args: : (<object 294751> (env (if (null? @) # (car @))))
>  def args: : (<object 294858> (env (if (null? @) # (car @))))
> def args: : (<object 294978> (scdr (cdr s)))
> def args: : (<object 294978> (scddr (cdr scdr)))
> def args: : (<object 295050> (scdr (cdr s)))
> def args: : (<object 295050> (scddr (cdr scdr)))
> def args: : (<object 295122> (scdr (cdr s)))
> def args: : (<object 295122> (scddr (cdr scdr)))
> def args: : (<object 295190> (scdr (cdr s)))
> def args: : (<object 295190> (scddr (cdr scdr)))
> def args: : (<object 295429> (scdr (cdr s)))
> def args: : (<object 295429> (scddr (cdr scdr)))
> def args: : (<object 295501> (scdr (cdr s)))
> def args: : (<object 295501> (scddr (cdr scdr)))
> def args: : (<object 295569> (scdr (cdr s)))
> def args: : (<object 295569> (scddr (cdr scdr)))
> def args: : (<object 295641> (scdr (cdr s)))
> def args: : (<object 295641> (scddr (cdr scdr)))
> def args: : (<object 295709> (scdr (cdr s)))
> def args: : (<object 295709> (scddr (cdr scdr)))
> def args: : (<object 295781> (scdr (cdr s)))
> def args: : (<object 295781> (scddr (cdr scdr)))
> def args: : (<object 295849> (scdr (cdr s)))
> def args: : (<object 295849> (scddr (cdr scdr)))
> def args: : (<object 295921> (scdr (cdr s)))
> def args: : (<object 295921> (scddr (cdr scdr)))
> def args: : (<object 295989> (scdr (cdr s)))
> def args: : (<object 295989> (scddr (cdr scdr)))
> def args: : (<object 296061> (scdr (cdr s)))
> def args: : (<object 296061> (scddr (cdr scdr)))
> def args: : (<object 296129> (scdr (cdr s)))
> def args: : (<object 296129> (scddr (cdr scdr)))
> def args: : (<object 296201> (scdr (cdr s)))
> def args: : (<object 296201> (scddr (cdr scdr)))
> def args: : (<object 296269> (scdr (cdr s)))
> def args: : (<object 296269> (scddr (cdr scdr)))
> def args: : (<object 296341> (scdr (cdr s)))
> def args: : (<object 296341> (scddr (cdr scdr)))
> def args: : (<object 296409> (scdr (cdr s)))
> def args: : (<object 296409> (scddr (cdr scdr)))
> def args: : (<object 296481> (scdr (cdr s)))
> def args: : (<object 296481> (scddr (cdr scdr)))
> def args: : (<object 296549> (scdr (cdr s)))
> def args: : (<object 296549> (scddr (cdr scdr)))
> def args: : (<object 296621> (scdr (cdr s)))
> def args: : (<object 296621> (scddr (cdr scdr)))
> def args: : (<object 296689> (scdr (cdr s)))
> def args: : (<object 296689> (scddr (cdr scdr)))
> def args: : (<object 296761> (scdr (cdr s)))
> def args: : (<object 296761> (scddr (cdr scdr)))
> def args: : (<object 296829> (scdr (cdr s)))
> def args: : (<object 296829> (scddr (cdr scdr)))
> def args: : (<object 296901> (scdr (cdr s)))
> def args: : (<object 296901> (scddr (cdr scdr)))
> def args: : (<object 296969> (scdr (cdr s)))
> def args: : (<object 296969> (scddr (cdr scdr)))
> def args: : (<object 297041> (scdr (cdr s)))
> def args: : (<object 297041> (scddr (cdr scdr)))
> def args: : (<object 297109> (scdr (cdr s)))
> def args: : (<object 297109> (scddr (cdr scdr)))
> def args: : (<object 297181> (scdr (cdr s)))
> def args: : (<object 297181> (scddr (cdr scdr)))
> def args: : (<object 297249> (scdr (cdr s)))
> def args: : (<object 297249> (scddr (cdr scdr)))
> def args: : (<object 297321> (scdr (cdr s)))
> def args: : (<object 297321> (scddr (cdr scdr)))
> def args: : (<object 297389> (scdr (cdr s)))
> def args: : (<object 297389> (scddr (cdr scdr)))
> def args: : (<object 297461> (scdr (cdr s)))
> def args: : (<object 297461> (scddr (cdr scdr)))
> def args: : (<object 297529> (scdr (cdr s)))
> def args: : (<object 297529> (scddr (cdr scdr)))
> def args: : (<object 297601> (scdr (cdr s)))
> def args: : (<object 297601> (scddr (cdr scdr)))
> def args: : (<object 297669> (scdr (cdr s)))
> def args: : (<object 297669> (scddr (cdr scdr)))
> def args: : (<object 297741> (scdr (cdr s)))
> def args: : (<object 297741> (scddr (cdr scdr)))
> def args: : (<object 297809> (scdr (cdr s)))
> def args: : (<object 297809> (scddr (cdr scdr)))
> def args: : (<object 297881> (scdr (cdr s)))
> def args: : (<object 297881> (scddr (cdr scdr)))
> def args: : (<object 297949> (scdr (cdr s)))
> def args: : (<object 297949> (scddr (cdr scdr)))
> def args: : (<object 298021> (scdr (cdr s)))
> def args: : (<object 298021> (scddr (cdr scdr)))
> def args: : (<object 298089> (scdr (cdr s)))
> def args: : (<object 298089> (scddr (cdr scdr)))
> def args: : (<object 298161> (scdr (cdr s)))
> def args: : (<object 298161> (scddr (cdr scdr)))
> def args: : (<object 298229> (scdr (cdr s)))
> def args: : (<object 298229> (scddr (cdr scdr)))
> def args: : (<object 298301> (scdr (cdr s)))
> def args: : (<object 298301> (scddr (cdr scdr)))
> def args: : (<object 298369> (scdr (cdr s)))
> def args: : (<object 298369> (scddr (cdr scdr)))
> def args: : (<object 298441> (scdr (cdr s)))
> def args: : (<object 298441> (scddr (cdr scdr)))
> def args: : (<object 298509> (scdr (cdr s)))
> def args: : (<object 298509> (scddr (cdr scdr)))
> def args: : (<object 298581> (scdr (cdr s)))
> def args: : (<object 298581> (scddr (cdr scdr)))
> def args: : (<object 298649> (scdr (cdr s)))
> def args: : (<object 298649> (scddr (cdr scdr)))
> def args: : (<object 298721> (scdr (cdr s)))
> def args: : (<object 298721> (scddr (cdr scdr)))
> def args: : (<object 298789> (scdr (cdr s)))
> def args: : (<object 298789> (scddr (cdr scdr)))
> def args: : (<object 298861> (scdr (cdr s)))
> def args: : (<object 298861> (scddr (cdr scdr)))
> def args: : (<object 298929> (scdr (cdr s)))
> def args: : (<object 298929> (scddr (cdr scdr)))
> def args: : (<object 299001> (scdr (cdr s)))
> def args: : (<object 299001> (scddr (cdr scdr)))
> def args: : (<object 299069> (scdr (cdr s)))
> def args: : (<object 299069> (scddr (cdr scdr)))
> def args: : (<object 299141> (scdr (cdr s)))
> def args: : (<object 299141> (scddr (cdr scdr)))
> def args: : (<object 299209> (scdr (cdr s)))
> def args: : (<object 299209> (scddr (cdr scdr)))
> def args: : (<object 299281> (scdr (cdr s)))
> def args: : (<object 299281> (scddr (cdr scdr)))
> def args: : (<object 299349> (scdr (cdr s)))
> def args: : (<object 299349> (scddr (cdr scdr)))
> def args: : (<object 299421> (scdr (cdr s)))
> def args: : (<object 299421> (scddr (cdr scdr)))
> def args: : (<object 299489> (scdr (cdr s)))
> def args: : (<object 299489> (scddr (cdr scdr)))
> def args: : (<object 299561> (scdr (cdr s)))
> def args: : (<object 299561> (scddr (cdr scdr)))
> def args: : (<object 299629> (scdr (cdr s)))
> def args: : (<object 299629> (scddr (cdr scdr)))
> def args: : (<object 299701> (scdr (cdr s)))
> def args: : (<object 299701> (scddr (cdr scdr)))
> def args: : (<object 299769> (scdr (cdr s)))
> def args: : (<object 299769> (scddr (cdr scdr)))
> def args: : (<object 299841> (scdr (cdr s)))
> def args: : (<object 299841> (scddr (cdr scdr)))
> def args: : (<object 299909> (scdr (cdr s)))
> def args: : (<object 299909> (scddr (cdr scdr)))
> def args: : (<object 299981> (scdr (cdr s)))
> def args: : (<object 299981> (scddr (cdr scdr)))
> def args: : (<object 300049> (scdr (cdr s)))
> def args: : (<object 300049> (scddr (cdr scdr)))
> def args: : (<object 300121> (scdr (cdr s)))
> def args: : (<object 300121> (scddr (cdr scdr)))
> def args: : (<object 300189> (scdr (cdr s)))
> def args: : (<object 300189> (scddr (cdr scdr)))
> def args: : (<object 300261> (scdr (cdr s)))
> def args: : (<object 300261> (scddr (cdr scdr)))
> def args: : (<object 300329> (scdr (cdr s)))
> def args: : (<object 300329> (scddr (cdr scdr)))
> def args: : (<object 300401> (scdr (cdr s)))
> def args: : (<object 300401> (scddr (cdr scdr)))
> def args: : (<object 300469> (scdr (cdr s)))
> def args: : (<object 300469> (scddr (cdr scdr)))
> def args: : (<object 300541> (scdr (cdr s)))
> def args: : (<object 300541> (scddr (cdr scdr)))
> 780def args: : (<object 307386> (env (if (null? @) # (car @))))
>  def args: : (<object 307493> (env (if (null? @) # (car @))))
> def args: : (<object 307613> (scdr (cdr s)))
> def args: : (<object 307613> (scddr (cdr scdr)))
> def args: : (<object 307685> (scdr (cdr s)))
> def args: : (<object 307685> (scddr (cdr scdr)))
> def args: : (<object 307757> (scdr (cdr s)))
> def args: : (<object 307757> (scddr (cdr scdr)))
> def args: : (<object 307825> (scdr (cdr s)))
> def args: : (<object 307825> (scddr (cdr scdr)))
> def args: : (<object 308064> (scdr (cdr s)))
> def args: : (<object 308064> (scddr (cdr scdr)))
> def args: : (<object 308136> (scdr (cdr s)))
> def args: : (<object 308136> (scddr (cdr scdr)))
> def args: : (<object 308204> (scdr (cdr s)))
> def args: : (<object 308204> (scddr (cdr scdr)))
> def args: : (<object 308276> (scdr (cdr s)))
> def args: : (<object 308276> (scddr (cdr scdr)))
> def args: : (<object 308344> (scdr (cdr s)))
> def args: : (<object 308344> (scddr (cdr scdr)))
> def args: : (<object 308416> (scdr (cdr s)))
> def args: : (<object 308416> (scddr (cdr scdr)))
> def args: : (<object 308484> (scdr (cdr s)))
> def args: : (<object 308484> (scddr (cdr scdr)))
> def args: : (<object 308556> (scdr (cdr s)))
> def args: : (<object 308556> (scddr (cdr scdr)))
> def args: : (<object 308624> (scdr (cdr s)))
> def args: : (<object 308624> (scddr (cdr scdr)))
> def args: : (<object 308696> (scdr (cdr s)))
> def args: : (<object 308696> (scddr (cdr scdr)))
> def args: : (<object 308764> (scdr (cdr s)))
> def args: : (<object 308764> (scddr (cdr scdr)))
> def args: : (<object 308836> (scdr (cdr s)))
> def args: : (<object 308836> (scddr (cdr scdr)))
> def args: : (<object 308904> (scdr (cdr s)))
> def args: : (<object 308904> (scddr (cdr scdr)))
> def args: : (<object 308976> (scdr (cdr s)))
> def args: : (<object 308976> (scddr (cdr scdr)))
> def args: : (<object 309044> (scdr (cdr s)))
> def args: : (<object 309044> (scddr (cdr scdr)))
> def args: : (<object 309116> (scdr (cdr s)))
> def args: : (<object 309116> (scddr (cdr scdr)))
> def args: : (<object 309184> (scdr (cdr s)))
> def args: : (<object 309184> (scddr (cdr scdr)))
> def args: : (<object 309256> (scdr (cdr s)))
> def args: : (<object 309256> (scddr (cdr scdr)))
> def args: : (<object 309324> (scdr (cdr s)))
> def args: : (<object 309324> (scddr (cdr scdr)))
> def args: : (<object 309396> (scdr (cdr s)))
> def args: : (<object 309396> (scddr (cdr scdr)))
> def args: : (<object 309464> (scdr (cdr s)))
> def args: : (<object 309464> (scddr (cdr scdr)))
> def args: : (<object 309536> (scdr (cdr s)))
> def args: : (<object 309536> (scddr (cdr scdr)))
> def args: : (<object 309604> (scdr (cdr s)))
> def args: : (<object 309604> (scddr (cdr scdr)))
> def args: : (<object 309676> (scdr (cdr s)))
> def args: : (<object 309676> (scddr (cdr scdr)))
> def args: : (<object 309744> (scdr (cdr s)))
> def args: : (<object 309744> (scddr (cdr scdr)))
> def args: : (<object 309816> (scdr (cdr s)))
> def args: : (<object 309816> (scddr (cdr scdr)))
> def args: : (<object 309884> (scdr (cdr s)))
> def args: : (<object 309884> (scddr (cdr scdr)))
> def args: : (<object 309956> (scdr (cdr s)))
> def args: : (<object 309956> (scddr (cdr scdr)))
> def args: : (<object 310024> (scdr (cdr s)))
> def args: : (<object 310024> (scddr (cdr scdr)))
> def args: : (<object 310096> (scdr (cdr s)))
> def args: : (<object 310096> (scddr (cdr scdr)))
> def args: : (<object 310164> (scdr (cdr s)))
> def args: : (<object 310164> (scddr (cdr scdr)))
> def args: : (<object 310236> (scdr (cdr s)))
> def args: : (<object 310236> (scddr (cdr scdr)))
> def args: : (<object 310304> (scdr (cdr s)))
> def args: : (<object 310304> (scddr (cdr scdr)))
> def args: : (<object 310376> (scdr (cdr s)))
> def args: : (<object 310376> (scddr (cdr scdr)))
> def args: : (<object 310444> (scdr (cdr s)))
> def args: : (<object 310444> (scddr (cdr scdr)))
> def args: : (<object 310516> (scdr (cdr s)))
> def args: : (<object 310516> (scddr (cdr scdr)))
> def args: : (<object 310584> (scdr (cdr s)))
> def args: : (<object 310584> (scddr (cdr scdr)))
> def args: : (<object 310656> (scdr (cdr s)))
> def args: : (<object 310656> (scddr (cdr scdr)))
> def args: : (<object 310724> (scdr (cdr s)))
> def args: : (<object 310724> (scddr (cdr scdr)))
> def args: : (<object 310796> (scdr (cdr s)))
> def args: : (<object 310796> (scddr (cdr scdr)))
> def args: : (<object 310864> (scdr (cdr s)))
> def args: : (<object 310864> (scddr (cdr scdr)))
> def args: : (<object 310936> (scdr (cdr s)))
> def args: : (<object 310936> (scddr (cdr scdr)))
> def args: : (<object 311004> (scdr (cdr s)))
> def args: : (<object 311004> (scddr (cdr scdr)))
> def args: : (<object 311076> (scdr (cdr s)))
> def args: : (<object 311076> (scddr (cdr scdr)))
> def args: : (<object 311144> (scdr (cdr s)))
> def args: : (<object 311144> (scddr (cdr scdr)))
> def args: : (<object 311216> (scdr (cdr s)))
> def args: : (<object 311216> (scddr (cdr scdr)))
> def args: : (<object 311284> (scdr (cdr s)))
> def args: : (<object 311284> (scddr (cdr scdr)))
> def args: : (<object 311356> (scdr (cdr s)))
> def args: : (<object 311356> (scddr (cdr scdr)))
> def args: : (<object 311424> (scdr (cdr s)))
> def args: : (<object 311424> (scddr (cdr scdr)))
> def args: : (<object 311496> (scdr (cdr s)))
> def args: : (<object 311496> (scddr (cdr scdr)))
> def args: : (<object 311564> (scdr (cdr s)))
> def args: : (<object 311564> (scddr (cdr scdr)))
> def args: : (<object 311636> (scdr (cdr s)))
> def args: : (<object 311636> (scddr (cdr scdr)))
> def args: : (<object 311704> (scdr (cdr s)))
> def args: : (<object 311704> (scddr (cdr scdr)))
> def args: : (<object 311776> (scdr (cdr s)))
> def args: : (<object 311776> (scddr (cdr scdr)))
> def args: : (<object 311844> (scdr (cdr s)))
> def args: : (<object 311844> (scddr (cdr scdr)))
> def args: : (<object 311916> (scdr (cdr s)))
> def args: : (<object 311916> (scddr (cdr scdr)))
> def args: : (<object 311984> (scdr (cdr s)))
> def args: : (<object 311984> (scddr (cdr scdr)))
> def args: : (<object 312056> (scdr (cdr s)))
> def args: : (<object 312056> (scddr (cdr scdr)))
> def args: : (<object 312124> (scdr (cdr s)))
> def args: : (<object 312124> (scddr (cdr scdr)))
> def args: : (<object 312196> (scdr (cdr s)))
> def args: : (<object 312196> (scddr (cdr scdr)))
> def args: : (<object 312264> (scdr (cdr s)))
> def args: : (<object 312264> (scddr (cdr scdr)))
> def args: : (<object 312336> (scdr (cdr s)))
> def args: : (<object 312336> (scddr (cdr scdr)))
> def args: : (<object 312404> (scdr (cdr s)))
> def args: : (<object 312404> (scddr (cdr scdr)))
> def args: : (<object 312476> (scdr (cdr s)))
> def args: : (<object 312476> (scddr (cdr scdr)))
> def args: : (<object 312544> (scdr (cdr s)))
> def args: : (<object 312544> (scddr (cdr scdr)))
> def args: : (<object 312616> (scdr (cdr s)))
> def args: : (<object 312616> (scddr (cdr scdr)))
> def args: : (<object 312684> (scdr (cdr s)))
> def args: : (<object 312684> (scddr (cdr scdr)))
> def args: : (<object 312756> (scdr (cdr s)))
> def args: : (<object 312756> (scddr (cdr scdr)))
> def args: : (<object 312824> (scdr (cdr s)))
> def args: : (<object 312824> (scddr (cdr scdr)))
> def args: : (<object 312896> (scdr (cdr s)))
> def args: : (<object 312896> (scddr (cdr scdr)))
> def args: : (<object 312964> (scdr (cdr s)))
> def args: : (<object 312964> (scddr (cdr scdr)))
> def args: : (<object 313036> (scdr (cdr s)))
> def args: : (<object 313036> (scddr (cdr scdr)))
> def args: : (<object 313104> (scdr (cdr s)))
> def args: : (<object 313104> (scddr (cdr scdr)))
> def args: : (<object 313176> (scdr (cdr s)))
> def args: : (<object 313176> (scddr (cdr scdr)))
> def args: : (<object 313244> (scdr (cdr s)))
> def args: : (<object 313244> (scddr (cdr scdr)))
> def args: : (<object 313316> (scdr (cdr s)))
> def args: : (<object 313316> (scddr (cdr scdr)))
> 820def args: : (<object 320332> (env (if (null? @) # (car @))))
>  def args: : (<object 320439> (env (if (null? @) # (car @))))
> def args: : (<object 320559> (scdr (cdr s)))
> def args: : (<object 320559> (scddr (cdr scdr)))
> def args: : (<object 320631> (scdr (cdr s)))
> def args: : (<object 320631> (scddr (cdr scdr)))
> def args: : (<object 320703> (scdr (cdr s)))
> def args: : (<object 320703> (scddr (cdr scdr)))
> def args: : (<object 320771> (scdr (cdr s)))
> def args: : (<object 320771> (scddr (cdr scdr)))
> def args: : (<object 321010> (scdr (cdr s)))
> def args: : (<object 321010> (scddr (cdr scdr)))
> def args: : (<object 321082> (scdr (cdr s)))
> def args: : (<object 321082> (scddr (cdr scdr)))
> def args: : (<object 321150> (scdr (cdr s)))
> def args: : (<object 321150> (scddr (cdr scdr)))
> def args: : (<object 321222> (scdr (cdr s)))
> def args: : (<object 321222> (scddr (cdr scdr)))
> def args: : (<object 321290> (scdr (cdr s)))
> def args: : (<object 321290> (scddr (cdr scdr)))
> def args: : (<object 321362> (scdr (cdr s)))
> def args: : (<object 321362> (scddr (cdr scdr)))
> def args: : (<object 321430> (scdr (cdr s)))
> def args: : (<object 321430> (scddr (cdr scdr)))
> def args: : (<object 321502> (scdr (cdr s)))
> def args: : (<object 321502> (scddr (cdr scdr)))
> def args: : (<object 321570> (scdr (cdr s)))
> def args: : (<object 321570> (scddr (cdr scdr)))
> def args: : (<object 321642> (scdr (cdr s)))
> def args: : (<object 321642> (scddr (cdr scdr)))
> def args: : (<object 321710> (scdr (cdr s)))
> def args: : (<object 321710> (scddr (cdr scdr)))
> def args: : (<object 321782> (scdr (cdr s)))
> def args: : (<object 321782> (scddr (cdr scdr)))
> def args: : (<object 321850> (scdr (cdr s)))
> def args: : (<object 321850> (scddr (cdr scdr)))
> def args: : (<object 321922> (scdr (cdr s)))
> def args: : (<object 321922> (scddr (cdr scdr)))
> def args: : (<object 321990> (scdr (cdr s)))
> def args: : (<object 321990> (scddr (cdr scdr)))
> def args: : (<object 322062> (scdr (cdr s)))
> def args: : (<object 322062> (scddr (cdr scdr)))
> def args: : (<object 322130> (scdr (cdr s)))
> def args: : (<object 322130> (scddr (cdr scdr)))
> def args: : (<object 322202> (scdr (cdr s)))
> def args: : (<object 322202> (scddr (cdr scdr)))
> def args: : (<object 322270> (scdr (cdr s)))
> def args: : (<object 322270> (scddr (cdr scdr)))
> def args: : (<object 322342> (scdr (cdr s)))
> def args: : (<object 322342> (scddr (cdr scdr)))
> def args: : (<object 322410> (scdr (cdr s)))
> def args: : (<object 322410> (scddr (cdr scdr)))
> def args: : (<object 322482> (scdr (cdr s)))
> def args: : (<object 322482> (scddr (cdr scdr)))
> def args: : (<object 322550> (scdr (cdr s)))
> def args: : (<object 322550> (scddr (cdr scdr)))
> def args: : (<object 322622> (scdr (cdr s)))
> def args: : (<object 322622> (scddr (cdr scdr)))
> def args: : (<object 322690> (scdr (cdr s)))
> def args: : (<object 322690> (scddr (cdr scdr)))
> def args: : (<object 322762> (scdr (cdr s)))
> def args: : (<object 322762> (scddr (cdr scdr)))
> def args: : (<object 322830> (scdr (cdr s)))
> def args: : (<object 322830> (scddr (cdr scdr)))
> def args: : (<object 322902> (scdr (cdr s)))
> def args: : (<object 322902> (scddr (cdr scdr)))
> def args: : (<object 322970> (scdr (cdr s)))
> def args: : (<object 322970> (scddr (cdr scdr)))
> def args: : (<object 323042> (scdr (cdr s)))
> def args: : (<object 323042> (scddr (cdr scdr)))
> def args: : (<object 323110> (scdr (cdr s)))
> def args: : (<object 323110> (scddr (cdr scdr)))
> def args: : (<object 323182> (scdr (cdr s)))
> def args: : (<object 323182> (scddr (cdr scdr)))
> def args: : (<object 323250> (scdr (cdr s)))
> def args: : (<object 323250> (scddr (cdr scdr)))
> def args: : (<object 323322> (scdr (cdr s)))
> def args: : (<object 323322> (scddr (cdr scdr)))
> def args: : (<object 323390> (scdr (cdr s)))
> def args: : (<object 323390> (scddr (cdr scdr)))
> def args: : (<object 323462> (scdr (cdr s)))
> def args: : (<object 323462> (scddr (cdr scdr)))
> def args: : (<object 323530> (scdr (cdr s)))
> def args: : (<object 323530> (scddr (cdr scdr)))
> def args: : (<object 323602> (scdr (cdr s)))
> def args: : (<object 323602> (scddr (cdr scdr)))
> def args: : (<object 323670> (scdr (cdr s)))
> def args: : (<object 323670> (scddr (cdr scdr)))
> def args: : (<object 323742> (scdr (cdr s)))
> def args: : (<object 323742> (scddr (cdr scdr)))
> def args: : (<object 323810> (scdr (cdr s)))
> def args: : (<object 323810> (scddr (cdr scdr)))
> def args: : (<object 323882> (scdr (cdr s)))
> def args: : (<object 323882> (scddr (cdr scdr)))
> def args: : (<object 323950> (scdr (cdr s)))
> def args: : (<object 323950> (scddr (cdr scdr)))
> def args: : (<object 324022> (scdr (cdr s)))
> def args: : (<object 324022> (scddr (cdr scdr)))
> def args: : (<object 324090> (scdr (cdr s)))
> def args: : (<object 324090> (scddr (cdr scdr)))
> def args: : (<object 324162> (scdr (cdr s)))
> def args: : (<object 324162> (scddr (cdr scdr)))
> def args: : (<object 324230> (scdr (cdr s)))
> def args: : (<object 324230> (scddr (cdr scdr)))
> def args: : (<object 324302> (scdr (cdr s)))
> def args: : (<object 324302> (scddr (cdr scdr)))
> def args: : (<object 324370> (scdr (cdr s)))
> def args: : (<object 324370> (scddr (cdr scdr)))
> def args: : (<object 324442> (scdr (cdr s)))
> def args: : (<object 324442> (scddr (cdr scdr)))
> def args: : (<object 324510> (scdr (cdr s)))
> def args: : (<object 324510> (scddr (cdr scdr)))
> def args: : (<object 324582> (scdr (cdr s)))
> def args: : (<object 324582> (scddr (cdr scdr)))
> def args: : (<object 324650> (scdr (cdr s)))
> def args: : (<object 324650> (scddr (cdr scdr)))
> def args: : (<object 324722> (scdr (cdr s)))
> def args: : (<object 324722> (scddr (cdr scdr)))
> def args: : (<object 324790> (scdr (cdr s)))
> def args: : (<object 324790> (scddr (cdr scdr)))
> def args: : (<object 324862> (scdr (cdr s)))
> def args: : (<object 324862> (scddr (cdr scdr)))
> def args: : (<object 324930> (scdr (cdr s)))
> def args: : (<object 324930> (scddr (cdr scdr)))
> def args: : (<object 325002> (scdr (cdr s)))
> def args: : (<object 325002> (scddr (cdr scdr)))
> def args: : (<object 325070> (scdr (cdr s)))
> def args: : (<object 325070> (scddr (cdr scdr)))
> def args: : (<object 325142> (scdr (cdr s)))
> def args: : (<object 325142> (scddr (cdr scdr)))
> def args: : (<object 325210> (scdr (cdr s)))
> def args: : (<object 325210> (scddr (cdr scdr)))
> def args: : (<object 325282> (scdr (cdr s)))
> def args: : (<object 325282> (scddr (cdr scdr)))
> def args: : (<object 325350> (scdr (cdr s)))
> def args: : (<object 325350> (scddr (cdr scdr)))
> def args: : (<object 325422> (scdr (cdr s)))
> def args: : (<object 325422> (scddr (cdr scdr)))
> def args: : (<object 325490> (scdr (cdr s)))
> def args: : (<object 325490> (scddr (cdr scdr)))
> def args: : (<object 325562> (scdr (cdr s)))
> def args: : (<object 325562> (scddr (cdr scdr)))
> def args: : (<object 325630> (scdr (cdr s)))
> def args: : (<object 325630> (scddr (cdr scdr)))
> def args: : (<object 325702> (scdr (cdr s)))
> def args: : (<object 325702> (scddr (cdr scdr)))
> def args: : (<object 325770> (scdr (cdr s)))
> def args: : (<object 325770> (scddr (cdr scdr)))
> def args: : (<object 325842> (scdr (cdr s)))
> def args: : (<object 325842> (scddr (cdr scdr)))
> def args: : (<object 325910> (scdr (cdr s)))
> def args: : (<object 325910> (scddr (cdr scdr)))
> def args: : (<object 325982> (scdr (cdr s)))
> def args: : (<object 325982> (scddr (cdr scdr)))
> def args: : (<object 326050> (scdr (cdr s)))
> def args: : (<object 326050> (scddr (cdr scdr)))
> def args: : (<object 326122> (scdr (cdr s)))
> def args: : (<object 326122> (scddr (cdr scdr)))
> def args: : (<object 326190> (scdr (cdr s)))
> def args: : (<object 326190> (scddr (cdr scdr)))
> def args: : (<object 326262> (scdr (cdr s)))
> def args: : (<object 326262> (scddr (cdr scdr)))
> def args: : (<object 326330> (scdr (cdr s)))
> def args: : (<object 326330> (scddr (cdr scdr)))
> def args: : (<object 326402> (scdr (cdr s)))
> def args: : (<object 326402> (scddr (cdr scdr)))
> 861def args: : (<object 333589> (env (if (null? @) # (car @))))
>  def args: : (<object 333696> (env (if (null? @) # (car @))))
> def args: : (<object 333816> (scdr (cdr s)))
> def args: : (<object 333816> (scddr (cdr scdr)))
> def args: : (<object 333888> (scdr (cdr s)))
> def args: : (<object 333888> (scddr (cdr scdr)))
> def args: : (<object 333960> (scdr (cdr s)))
> def args: : (<object 333960> (scddr (cdr scdr)))
> def args: : (<object 334028> (scdr (cdr s)))
> def args: : (<object 334028> (scddr (cdr scdr)))
> def args: : (<object 334267> (scdr (cdr s)))
> def args: : (<object 334267> (scddr (cdr scdr)))
> def args: : (<object 334339> (scdr (cdr s)))
> def args: : (<object 334339> (scddr (cdr scdr)))
> def args: : (<object 334407> (scdr (cdr s)))
> def args: : (<object 334407> (scddr (cdr scdr)))
> def args: : (<object 334479> (scdr (cdr s)))
> def args: : (<object 334479> (scddr (cdr scdr)))
> def args: : (<object 334547> (scdr (cdr s)))
> def args: : (<object 334547> (scddr (cdr scdr)))
> def args: : (<object 334619> (scdr (cdr s)))
> def args: : (<object 334619> (scddr (cdr scdr)))
> def args: : (<object 334687> (scdr (cdr s)))
> def args: : (<object 334687> (scddr (cdr scdr)))
> def args: : (<object 334759> (scdr (cdr s)))
> def args: : (<object 334759> (scddr (cdr scdr)))
> def args: : (<object 334827> (scdr (cdr s)))
> def args: : (<object 334827> (scddr (cdr scdr)))
> def args: : (<object 334899> (scdr (cdr s)))
> def args: : (<object 334899> (scddr (cdr scdr)))
> def args: : (<object 334967> (scdr (cdr s)))
> def args: : (<object 334967> (scddr (cdr scdr)))
> def args: : (<object 335039> (scdr (cdr s)))
> def args: : (<object 335039> (scddr (cdr scdr)))
> def args: : (<object 335107> (scdr (cdr s)))
> def args: : (<object 335107> (scddr (cdr scdr)))
> def args: : (<object 335179> (scdr (cdr s)))
> def args: : (<object 335179> (scddr (cdr scdr)))
> def args: : (<object 335247> (scdr (cdr s)))
> def args: : (<object 335247> (scddr (cdr scdr)))
> def args: : (<object 335319> (scdr (cdr s)))
> def args: : (<object 335319> (scddr (cdr scdr)))
> def args: : (<object 335387> (scdr (cdr s)))
> def args: : (<object 335387> (scddr (cdr scdr)))
> def args: : (<object 335459> (scdr (cdr s)))
> def args: : (<object 335459> (scddr (cdr scdr)))
> def args: : (<object 335527> (scdr (cdr s)))
> def args: : (<object 335527> (scddr (cdr scdr)))
> def args: : (<object 335599> (scdr (cdr s)))
> def args: : (<object 335599> (scddr (cdr scdr)))
> def args: : (<object 335667> (scdr (cdr s)))
> def args: : (<object 335667> (scddr (cdr scdr)))
> def args: : (<object 335739> (scdr (cdr s)))
> def args: : (<object 335739> (scddr (cdr scdr)))
> def args: : (<object 335807> (scdr (cdr s)))
> def args: : (<object 335807> (scddr (cdr scdr)))
> def args: : (<object 335879> (scdr (cdr s)))
> def args: : (<object 335879> (scddr (cdr scdr)))
> def args: : (<object 335947> (scdr (cdr s)))
> def args: : (<object 335947> (scddr (cdr scdr)))
> def args: : (<object 336019> (scdr (cdr s)))
> def args: : (<object 336019> (scddr (cdr scdr)))
> def args: : (<object 336087> (scdr (cdr s)))
> def args: : (<object 336087> (scddr (cdr scdr)))
> def args: : (<object 336159> (scdr (cdr s)))
> def args: : (<object 336159> (scddr (cdr scdr)))
> def args: : (<object 336227> (scdr (cdr s)))
> def args: : (<object 336227> (scddr (cdr scdr)))
> def args: : (<object 336299> (scdr (cdr s)))
> def args: : (<object 336299> (scddr (cdr scdr)))
> def args: : (<object 336367> (scdr (cdr s)))
> def args: : (<object 336367> (scddr (cdr scdr)))
> def args: : (<object 336439> (scdr (cdr s)))
> def args: : (<object 336439> (scddr (cdr scdr)))
> def args: : (<object 336507> (scdr (cdr s)))
> def args: : (<object 336507> (scddr (cdr scdr)))
> def args: : (<object 336579> (scdr (cdr s)))
> def args: : (<object 336579> (scddr (cdr scdr)))
> def args: : (<object 336647> (scdr (cdr s)))
> def args: : (<object 336647> (scddr (cdr scdr)))
> def args: : (<object 336719> (scdr (cdr s)))
> def args: : (<object 336719> (scddr (cdr scdr)))
> def args: : (<object 336787> (scdr (cdr s)))
> def args: : (<object 336787> (scddr (cdr scdr)))
> def args: : (<object 336859> (scdr (cdr s)))
> def args: : (<object 336859> (scddr (cdr scdr)))
> def args: : (<object 336927> (scdr (cdr s)))
> def args: : (<object 336927> (scddr (cdr scdr)))
> def args: : (<object 336999> (scdr (cdr s)))
> def args: : (<object 336999> (scddr (cdr scdr)))
> def args: : (<object 337067> (scdr (cdr s)))
> def args: : (<object 337067> (scddr (cdr scdr)))
> def args: : (<object 337139> (scdr (cdr s)))
> def args: : (<object 337139> (scddr (cdr scdr)))
> def args: : (<object 337207> (scdr (cdr s)))
> def args: : (<object 337207> (scddr (cdr scdr)))
> def args: : (<object 337279> (scdr (cdr s)))
> def args: : (<object 337279> (scddr (cdr scdr)))
> def args: : (<object 337347> (scdr (cdr s)))
> def args: : (<object 337347> (scddr (cdr scdr)))
> def args: : (<object 337419> (scdr (cdr s)))
> def args: : (<object 337419> (scddr (cdr scdr)))
> def args: : (<object 337487> (scdr (cdr s)))
> def args: : (<object 337487> (scddr (cdr scdr)))
> def args: : (<object 337559> (scdr (cdr s)))
> def args: : (<object 337559> (scddr (cdr scdr)))
> def args: : (<object 337627> (scdr (cdr s)))
> def args: : (<object 337627> (scddr (cdr scdr)))
> def args: : (<object 337699> (scdr (cdr s)))
> def args: : (<object 337699> (scddr (cdr scdr)))
> def args: : (<object 337767> (scdr (cdr s)))
> def args: : (<object 337767> (scddr (cdr scdr)))
> def args: : (<object 337839> (scdr (cdr s)))
> def args: : (<object 337839> (scddr (cdr scdr)))
> def args: : (<object 337907> (scdr (cdr s)))
> def args: : (<object 337907> (scddr (cdr scdr)))
> def args: : (<object 337979> (scdr (cdr s)))
> def args: : (<object 337979> (scddr (cdr scdr)))
> def args: : (<object 338047> (scdr (cdr s)))
> def args: : (<object 338047> (scddr (cdr scdr)))
> def args: : (<object 338119> (scdr (cdr s)))
> def args: : (<object 338119> (scddr (cdr scdr)))
> def args: : (<object 338187> (scdr (cdr s)))
> def args: : (<object 338187> (scddr (cdr scdr)))
> def args: : (<object 338259> (scdr (cdr s)))
> def args: : (<object 338259> (scddr (cdr scdr)))
> def args: : (<object 338327> (scdr (cdr s)))
> def args: : (<object 338327> (scddr (cdr scdr)))
> def args: : (<object 338399> (scdr (cdr s)))
> def args: : (<object 338399> (scddr (cdr scdr)))
> def args: : (<object 338467> (scdr (cdr s)))
> def args: : (<object 338467> (scddr (cdr scdr)))
> def args: : (<object 338539> (scdr (cdr s)))
> def args: : (<object 338539> (scddr (cdr scdr)))
> def args: : (<object 338607> (scdr (cdr s)))
> def args: : (<object 338607> (scddr (cdr scdr)))
> def args: : (<object 338679> (scdr (cdr s)))
> def args: : (<object 338679> (scddr (cdr scdr)))
> def args: : (<object 338747> (scdr (cdr s)))
> def args: : (<object 338747> (scddr (cdr scdr)))
> def args: : (<object 338819> (scdr (cdr s)))
> def args: : (<object 338819> (scddr (cdr scdr)))
> def args: : (<object 338887> (scdr (cdr s)))
> def args: : (<object 338887> (scddr (cdr scdr)))
> def args: : (<object 338959> (scdr (cdr s)))
> def args: : (<object 338959> (scddr (cdr scdr)))
> def args: : (<object 339027> (scdr (cdr s)))
> def args: : (<object 339027> (scddr (cdr scdr)))
> def args: : (<object 339099> (scdr (cdr s)))
> def args: : (<object 339099> (scddr (cdr scdr)))
> def args: : (<object 339167> (scdr (cdr s)))
> def args: : (<object 339167> (scddr (cdr scdr)))
> def args: : (<object 339239> (scdr (cdr s)))
> def args: : (<object 339239> (scddr (cdr scdr)))
> def args: : (<object 339307> (scdr (cdr s)))
> def args: : (<object 339307> (scddr (cdr scdr)))
> def args: : (<object 339379> (scdr (cdr s)))
> def args: : (<object 339379> (scddr (cdr scdr)))
> def args: : (<object 339447> (scdr (cdr s)))
> def args: : (<object 339447> (scddr (cdr scdr)))
> def args: : (<object 339519> (scdr (cdr s)))
> def args: : (<object 339519> (scddr (cdr scdr)))
> def args: : (<object 339587> (scdr (cdr s)))
> def args: : (<object 339587> (scddr (cdr scdr)))
> def args: : (<object 339659> (scdr (cdr s)))
> def args: : (<object 339659> (scddr (cdr scdr)))
> def args: : (<object 339727> (scdr (cdr s)))
> def args: : (<object 339727> (scddr (cdr scdr)))
> def args: : (<object 339799> (scdr (cdr s)))
> def args: : (<object 339799> (scddr (cdr scdr)))
> 903def args: : (<object 347157> (env (if (null? @) # (car @))))
>  def args: : (<object 347264> (env (if (null? @) # (car @))))
> def args: : (<object 347384> (scdr (cdr s)))
> def args: : (<object 347384> (scddr (cdr scdr)))
> def args: : (<object 347456> (scdr (cdr s)))
> def args: : (<object 347456> (scddr (cdr scdr)))
> def args: : (<object 347528> (scdr (cdr s)))
> def args: : (<object 347528> (scddr (cdr scdr)))
> def args: : (<object 347596> (scdr (cdr s)))
> def args: : (<object 347596> (scddr (cdr scdr)))
> def args: : (<object 347835> (scdr (cdr s)))
> def args: : (<object 347835> (scddr (cdr scdr)))
> def args: : (<object 347907> (scdr (cdr s)))
> def args: : (<object 347907> (scddr (cdr scdr)))
> def args: : (<object 347975> (scdr (cdr s)))
> def args: : (<object 347975> (scddr (cdr scdr)))
> def args: : (<object 348047> (scdr (cdr s)))
> def args: : (<object 348047> (scddr (cdr scdr)))
> def args: : (<object 348115> (scdr (cdr s)))
> def args: : (<object 348115> (scddr (cdr scdr)))
> def args: : (<object 348187> (scdr (cdr s)))
> def args: : (<object 348187> (scddr (cdr scdr)))
> def args: : (<object 348255> (scdr (cdr s)))
> def args: : (<object 348255> (scddr (cdr scdr)))
> def args: : (<object 348327> (scdr (cdr s)))
> def args: : (<object 348327> (scddr (cdr scdr)))
> def args: : (<object 348395> (scdr (cdr s)))
> def args: : (<object 348395> (scddr (cdr scdr)))
> def args: : (<object 348467> (scdr (cdr s)))
> def args: : (<object 348467> (scddr (cdr scdr)))
> def args: : (<object 348535> (scdr (cdr s)))
> def args: : (<object 348535> (scddr (cdr scdr)))
> def args: : (<object 348607> (scdr (cdr s)))
> def args: : (<object 348607> (scddr (cdr scdr)))
> def args: : (<object 348675> (scdr (cdr s)))
> def args: : (<object 348675> (scddr (cdr scdr)))
> def args: : (<object 348747> (scdr (cdr s)))
> def args: : (<object 348747> (scddr (cdr scdr)))
> def args: : (<object 348815> (scdr (cdr s)))
> def args: : (<object 348815> (scddr (cdr scdr)))
> def args: : (<object 348887> (scdr (cdr s)))
> def args: : (<object 348887> (scddr (cdr scdr)))
> def args: : (<object 348955> (scdr (cdr s)))
> def args: : (<object 348955> (scddr (cdr scdr)))
> def args: : (<object 349027> (scdr (cdr s)))
> def args: : (<object 349027> (scddr (cdr scdr)))
> def args: : (<object 349095> (scdr (cdr s)))
> def args: : (<object 349095> (scddr (cdr scdr)))
> def args: : (<object 349167> (scdr (cdr s)))
> def args: : (<object 349167> (scddr (cdr scdr)))
> def args: : (<object 349235> (scdr (cdr s)))
> def args: : (<object 349235> (scddr (cdr scdr)))
> def args: : (<object 349307> (scdr (cdr s)))
> def args: : (<object 349307> (scddr (cdr scdr)))
> def args: : (<object 349375> (scdr (cdr s)))
> def args: : (<object 349375> (scddr (cdr scdr)))
> def args: : (<object 349447> (scdr (cdr s)))
> def args: : (<object 349447> (scddr (cdr scdr)))
> def args: : (<object 349515> (scdr (cdr s)))
> def args: : (<object 349515> (scddr (cdr scdr)))
> def args: : (<object 349587> (scdr (cdr s)))
> def args: : (<object 349587> (scddr (cdr scdr)))
> def args: : (<object 349655> (scdr (cdr s)))
> def args: : (<object 349655> (scddr (cdr scdr)))
> def args: : (<object 349727> (scdr (cdr s)))
> def args: : (<object 349727> (scddr (cdr scdr)))
> def args: : (<object 349795> (scdr (cdr s)))
> def args: : (<object 349795> (scddr (cdr scdr)))
> def args: : (<object 349867> (scdr (cdr s)))
> def args: : (<object 349867> (scddr (cdr scdr)))
> def args: : (<object 349935> (scdr (cdr s)))
> def args: : (<object 349935> (scddr (cdr scdr)))
> def args: : (<object 350007> (scdr (cdr s)))
> def args: : (<object 350007> (scddr (cdr scdr)))
> def args: : (<object 350075> (scdr (cdr s)))
> def args: : (<object 350075> (scddr (cdr scdr)))
> def args: : (<object 350147> (scdr (cdr s)))
> def args: : (<object 350147> (scddr (cdr scdr)))
> def args: : (<object 350215> (scdr (cdr s)))
> def args: : (<object 350215> (scddr (cdr scdr)))
> def args: : (<object 350287> (scdr (cdr s)))
> def args: : (<object 350287> (scddr (cdr scdr)))
> def args: : (<object 350355> (scdr (cdr s)))
> def args: : (<object 350355> (scddr (cdr scdr)))
> def args: : (<object 350427> (scdr (cdr s)))
> def args: : (<object 350427> (scddr (cdr scdr)))
> def args: : (<object 350495> (scdr (cdr s)))
> def args: : (<object 350495> (scddr (cdr scdr)))
> def args: : (<object 350567> (scdr (cdr s)))
> def args: : (<object 350567> (scddr (cdr scdr)))
> def args: : (<object 350635> (scdr (cdr s)))
> def args: : (<object 350635> (scddr (cdr scdr)))
> def args: : (<object 350707> (scdr (cdr s)))
> def args: : (<object 350707> (scddr (cdr scdr)))
> def args: : (<object 350775> (scdr (cdr s)))
> def args: : (<object 350775> (scddr (cdr scdr)))
> def args: : (<object 350847> (scdr (cdr s)))
> def args: : (<object 350847> (scddr (cdr scdr)))
> def args: : (<object 350915> (scdr (cdr s)))
> def args: : (<object 350915> (scddr (cdr scdr)))
> def args: : (<object 350987> (scdr (cdr s)))
> def args: : (<object 350987> (scddr (cdr scdr)))
> def args: : (<object 351055> (scdr (cdr s)))
> def args: : (<object 351055> (scddr (cdr scdr)))
> def args: : (<object 351127> (scdr (cdr s)))
> def args: : (<object 351127> (scddr (cdr scdr)))
> def args: : (<object 351195> (scdr (cdr s)))
> def args: : (<object 351195> (scddr (cdr scdr)))
> def args: : (<object 351267> (scdr (cdr s)))
> def args: : (<object 351267> (scddr (cdr scdr)))
> def args: : (<object 351335> (scdr (cdr s)))
> def args: : (<object 351335> (scddr (cdr scdr)))
> def args: : (<object 351407> (scdr (cdr s)))
> def args: : (<object 351407> (scddr (cdr scdr)))
> def args: : (<object 351475> (scdr (cdr s)))
> def args: : (<object 351475> (scddr (cdr scdr)))
> def args: : (<object 351547> (scdr (cdr s)))
> def args: : (<object 351547> (scddr (cdr scdr)))
> def args: : (<object 351615> (scdr (cdr s)))
> def args: : (<object 351615> (scddr (cdr scdr)))
> def args: : (<object 351687> (scdr (cdr s)))
> def args: : (<object 351687> (scddr (cdr scdr)))
> def args: : (<object 351755> (scdr (cdr s)))
> def args: : (<object 351755> (scddr (cdr scdr)))
> def args: : (<object 351827> (scdr (cdr s)))
> def args: : (<object 351827> (scddr (cdr scdr)))
> def args: : (<object 351895> (scdr (cdr s)))
> def args: : (<object 351895> (scddr (cdr scdr)))
> def args: : (<object 351967> (scdr (cdr s)))
> def args: : (<object 351967> (scddr (cdr scdr)))
> def args: : (<object 352035> (scdr (cdr s)))
> def args: : (<object 352035> (scddr (cdr scdr)))
> def args: : (<object 352107> (scdr (cdr s)))
> def args: : (<object 352107> (scddr (cdr scdr)))
> def args: : (<object 352175> (scdr (cdr s)))
> def args: : (<object 352175> (scddr (cdr scdr)))
> def args: : (<object 352247> (scdr (cdr s)))
> def args: : (<object 352247> (scddr (cdr scdr)))
> def args: : (<object 352315> (scdr (cdr s)))
> def args: : (<object 352315> (scddr (cdr scdr)))
> def args: : (<object 352387> (scdr (cdr s)))
> def args: : (<object 352387> (scddr (cdr scdr)))
> def args: : (<object 352455> (scdr (cdr s)))
> def args: : (<object 352455> (scddr (cdr scdr)))
> def args: : (<object 352527> (scdr (cdr s)))
> def args: : (<object 352527> (scddr (cdr scdr)))
> def args: : (<object 352595> (scdr (cdr s)))
> def args: : (<object 352595> (scddr (cdr scdr)))
> def args: : (<object 352667> (scdr (cdr s)))
> def args: : (<object 352667> (scddr (cdr scdr)))
> def args: : (<object 352735> (scdr (cdr s)))
> def args: : (<object 352735> (scddr (cdr scdr)))
> def args: : (<object 352807> (scdr (cdr s)))
> def args: : (<object 352807> (scddr (cdr scdr)))
> def args: : (<object 352875> (scdr (cdr s)))
> def args: : (<object 352875> (scddr (cdr scdr)))
> def args: : (<object 352947> (scdr (cdr s)))
> def args: : (<object 352947> (scddr (cdr scdr)))
> def args: : (<object 353015> (scdr (cdr s)))
> def args: : (<object 353015> (scddr (cdr scdr)))
> def args: : (<object 353087> (scdr (cdr s)))
> def args: : (<object 353087> (scddr (cdr scdr)))
> def args: : (<object 353155> (scdr (cdr s)))
> def args: : (<object 353155> (scddr (cdr scdr)))
> def args: : (<object 353227> (scdr (cdr s)))
> def args: : (<object 353227> (scddr (cdr scdr)))
> def args: : (<object 353295> (scdr (cdr s)))
> def args: : (<object 353295> (scddr (cdr scdr)))
> def args: : (<object 353367> (scdr (cdr s)))
> def args: : (<object 353367> (scddr (cdr scdr)))
> def args: : (<object 353435> (scdr (cdr s)))
> def args: : (<object 353435> (scddr (cdr scdr)))
> def args: : (<object 353507> (scdr (cdr s)))
> def args: : (<object 353507> (scddr (cdr scdr)))
> 946def args: : (<object 361036> (env (if (null? @) # (car @))))
>  def args: : (<object 361143> (env (if (null? @) # (car @))))
> def args: : (<object 361263> (scdr (cdr s)))
> def args: : (<object 361263> (scddr (cdr scdr)))
> def args: : (<object 361335> (scdr (cdr s)))
> def args: : (<object 361335> (scddr (cdr scdr)))
> def args: : (<object 361407> (scdr (cdr s)))
> def args: : (<object 361407> (scddr (cdr scdr)))
> def args: : (<object 361475> (scdr (cdr s)))
> def args: : (<object 361475> (scddr (cdr scdr)))
> def args: : (<object 361714> (scdr (cdr s)))
> def args: : (<object 361714> (scddr (cdr scdr)))
> def args: : (<object 361786> (scdr (cdr s)))
> def args: : (<object 361786> (scddr (cdr scdr)))
> def args: : (<object 361854> (scdr (cdr s)))
> def args: : (<object 361854> (scddr (cdr scdr)))
> def args: : (<object 361926> (scdr (cdr s)))
> def args: : (<object 361926> (scddr (cdr scdr)))
> def args: : (<object 361994> (scdr (cdr s)))
> def args: : (<object 361994> (scddr (cdr scdr)))
> def args: : (<object 362066> (scdr (cdr s)))
> def args: : (<object 362066> (scddr (cdr scdr)))
> def args: : (<object 362134> (scdr (cdr s)))
> def args: : (<object 362134> (scddr (cdr scdr)))
> def args: : (<object 362206> (scdr (cdr s)))
> def args: : (<object 362206> (scddr (cdr scdr)))
> def args: : (<object 362274> (scdr (cdr s)))
> def args: : (<object 362274> (scddr (cdr scdr)))
> def args: : (<object 362346> (scdr (cdr s)))
> def args: : (<object 362346> (scddr (cdr scdr)))
> def args: : (<object 362414> (scdr (cdr s)))
> def args: : (<object 362414> (scddr (cdr scdr)))
> def args: : (<object 362486> (scdr (cdr s)))
> def args: : (<object 362486> (scddr (cdr scdr)))
> def args: : (<object 362554> (scdr (cdr s)))
> def args: : (<object 362554> (scddr (cdr scdr)))
> def args: : (<object 362626> (scdr (cdr s)))
> def args: : (<object 362626> (scddr (cdr scdr)))
> def args: : (<object 362694> (scdr (cdr s)))
> def args: : (<object 362694> (scddr (cdr scdr)))
> def args: : (<object 362766> (scdr (cdr s)))
> def args: : (<object 362766> (scddr (cdr scdr)))
> def args: : (<object 362834> (scdr (cdr s)))
> def args: : (<object 362834> (scddr (cdr scdr)))
> def args: : (<object 362906> (scdr (cdr s)))
> def args: : (<object 362906> (scddr (cdr scdr)))
> def args: : (<object 362974> (scdr (cdr s)))
> def args: : (<object 362974> (scddr (cdr scdr)))
> def args: : (<object 363046> (scdr (cdr s)))
> def args: : (<object 363046> (scddr (cdr scdr)))
> def args: : (<object 363114> (scdr (cdr s)))
> def args: : (<object 363114> (scddr (cdr scdr)))
> def args: : (<object 363186> (scdr (cdr s)))
> def args: : (<object 363186> (scddr (cdr scdr)))
> def args: : (<object 363254> (scdr (cdr s)))
> def args: : (<object 363254> (scddr (cdr scdr)))
> def args: : (<object 363326> (scdr (cdr s)))
> def args: : (<object 363326> (scddr (cdr scdr)))
> def args: : (<object 363394> (scdr (cdr s)))
> def args: : (<object 363394> (scddr (cdr scdr)))
> def args: : (<object 363466> (scdr (cdr s)))
> def args: : (<object 363466> (scddr (cdr scdr)))
> def args: : (<object 363534> (scdr (cdr s)))
> def args: : (<object 363534> (scddr (cdr scdr)))
> def args: : (<object 363606> (scdr (cdr s)))
> def args: : (<object 363606> (scddr (cdr scdr)))
> def args: : (<object 363674> (scdr (cdr s)))
> def args: : (<object 363674> (scddr (cdr scdr)))
> def args: : (<object 363746> (scdr (cdr s)))
> def args: : (<object 363746> (scddr (cdr scdr)))
> def args: : (<object 363814> (scdr (cdr s)))
> def args: : (<object 363814> (scddr (cdr scdr)))
> def args: : (<object 363886> (scdr (cdr s)))
> def args: : (<object 363886> (scddr (cdr scdr)))
> def args: : (<object 363954> (scdr (cdr s)))
> def args: : (<object 363954> (scddr (cdr scdr)))
> def args: : (<object 364026> (scdr (cdr s)))
> def args: : (<object 364026> (scddr (cdr scdr)))
> def args: : (<object 364094> (scdr (cdr s)))
> def args: : (<object 364094> (scddr (cdr scdr)))
> def args: : (<object 364166> (scdr (cdr s)))
> def args: : (<object 364166> (scddr (cdr scdr)))
> def args: : (<object 364234> (scdr (cdr s)))
> def args: : (<object 364234> (scddr (cdr scdr)))
> def args: : (<object 364306> (scdr (cdr s)))
> def args: : (<object 364306> (scddr (cdr scdr)))
> def args: : (<object 364374> (scdr (cdr s)))
> def args: : (<object 364374> (scddr (cdr scdr)))
> def args: : (<object 364446> (scdr (cdr s)))
> def args: : (<object 364446> (scddr (cdr scdr)))
> def args: : (<object 364514> (scdr (cdr s)))
> def args: : (<object 364514> (scddr (cdr scdr)))
> def args: : (<object 364586> (scdr (cdr s)))
> def args: : (<object 364586> (scddr (cdr scdr)))
> def args: : (<object 364654> (scdr (cdr s)))
> def args: : (<object 364654> (scddr (cdr scdr)))
> def args: : (<object 364726> (scdr (cdr s)))
> def args: : (<object 364726> (scddr (cdr scdr)))
> def args: : (<object 364794> (scdr (cdr s)))
> def args: : (<object 364794> (scddr (cdr scdr)))
> def args: : (<object 364866> (scdr (cdr s)))
> def args: : (<object 364866> (scddr (cdr scdr)))
> def args: : (<object 364934> (scdr (cdr s)))
> def args: : (<object 364934> (scddr (cdr scdr)))
> def args: : (<object 365006> (scdr (cdr s)))
> def args: : (<object 365006> (scddr (cdr scdr)))
> def args: : (<object 365074> (scdr (cdr s)))
> def args: : (<object 365074> (scddr (cdr scdr)))
> def args: : (<object 365146> (scdr (cdr s)))
> def args: : (<object 365146> (scddr (cdr scdr)))
> def args: : (<object 365214> (scdr (cdr s)))
> def args: : (<object 365214> (scddr (cdr scdr)))
> def args: : (<object 365286> (scdr (cdr s)))
> def args: : (<object 365286> (scddr (cdr scdr)))
> def args: : (<object 365354> (scdr (cdr s)))
> def args: : (<object 365354> (scddr (cdr scdr)))
> def args: : (<object 365426> (scdr (cdr s)))
> def args: : (<object 365426> (scddr (cdr scdr)))
> def args: : (<object 365494> (scdr (cdr s)))
> def args: : (<object 365494> (scddr (cdr scdr)))
> def args: : (<object 365566> (scdr (cdr s)))
> def args: : (<object 365566> (scddr (cdr scdr)))
> def args: : (<object 365634> (scdr (cdr s)))
> def args: : (<object 365634> (scddr (cdr scdr)))
> def args: : (<object 365706> (scdr (cdr s)))
> def args: : (<object 365706> (scddr (cdr scdr)))
> def args: : (<object 365774> (scdr (cdr s)))
> def args: : (<object 365774> (scddr (cdr scdr)))
> def args: : (<object 365846> (scdr (cdr s)))
> def args: : (<object 365846> (scddr (cdr scdr)))
> def args: : (<object 365914> (scdr (cdr s)))
> def args: : (<object 365914> (scddr (cdr scdr)))
> def args: : (<object 365986> (scdr (cdr s)))
> def args: : (<object 365986> (scddr (cdr scdr)))
> def args: : (<object 366054> (scdr (cdr s)))
> def args: : (<object 366054> (scddr (cdr scdr)))
> def args: : (<object 366126> (scdr (cdr s)))
> def args: : (<object 366126> (scddr (cdr scdr)))
> def args: : (<object 366194> (scdr (cdr s)))
> def args: : (<object 366194> (scddr (cdr scdr)))
> def args: : (<object 366266> (scdr (cdr s)))
> def args: : (<object 366266> (scddr (cdr scdr)))
> def args: : (<object 366334> (scdr (cdr s)))
> def args: : (<object 366334> (scddr (cdr scdr)))
> def args: : (<object 366406> (scdr (cdr s)))
> def args: : (<object 366406> (scddr (cdr scdr)))
> def args: : (<object 366474> (scdr (cdr s)))
> def args: : (<object 366474> (scddr (cdr scdr)))
> def args: : (<object 366546> (scdr (cdr s)))
> def args: : (<object 366546> (scddr (cdr scdr)))
> def args: : (<object 366614> (scdr (cdr s)))
> def args: : (<object 366614> (scddr (cdr scdr)))
> def args: : (<object 366686> (scdr (cdr s)))
> def args: : (<object 366686> (scddr (cdr scdr)))
> def args: : (<object 366754> (scdr (cdr s)))
> def args: : (<object 366754> (scddr (cdr scdr)))
> def args: : (<object 366826> (scdr (cdr s)))
> def args: : (<object 366826> (scddr (cdr scdr)))
> def args: : (<object 366894> (scdr (cdr s)))
> def args: : (<object 366894> (scddr (cdr scdr)))
> def args: : (<object 366966> (scdr (cdr s)))
> def args: : (<object 366966> (scddr (cdr scdr)))
> def args: : (<object 367034> (scdr (cdr s)))
> def args: : (<object 367034> (scddr (cdr scdr)))
> def args: : (<object 367106> (scdr (cdr s)))
> def args: : (<object 367106> (scddr (cdr scdr)))
> def args: : (<object 367174> (scdr (cdr s)))
> def args: : (<object 367174> (scddr (cdr scdr)))
> def args: : (<object 367246> (scdr (cdr s)))
> def args: : (<object 367246> (scddr (cdr scdr)))
> def args: : (<object 367314> (scdr (cdr s)))
> def args: : (<object 367314> (scddr (cdr scdr)))
> def args: : (<object 367386> (scdr (cdr s)))
> def args: : (<object 367386> (scddr (cdr scdr)))
> def args: : (<object 367454> (scdr (cdr s)))
> def args: : (<object 367454> (scddr (cdr scdr)))
> def args: : (<object 367526> (scdr (cdr s)))
> def args: : (<object 367526> (scddr (cdr scdr)))
> 990def args: : (<object 375226> (env (if (null? @) # (car @))))
>  def args: : (<object 375333> (env (if (null? @) # (car @))))
> def args: : (<object 375453> (scdr (cdr s)))
> def args: : (<object 375453> (scddr (cdr scdr)))
> def args: : (<object 375525> (scdr (cdr s)))
> def args: : (<object 375525> (scddr (cdr scdr)))
> def args: : (<object 375597> (scdr (cdr s)))
> def args: : (<object 375597> (scddr (cdr scdr)))
> def args: : (<object 375665> (scdr (cdr s)))
> def args: : (<object 375665> (scddr (cdr scdr)))
> def args: : (<object 375904> (scdr (cdr s)))
> def args: : (<object 375904> (scddr (cdr scdr)))
> def args: : (<object 375976> (scdr (cdr s)))
> def args: : (<object 375976> (scddr (cdr scdr)))
> def args: : (<object 376044> (scdr (cdr s)))
> def args: : (<object 376044> (scddr (cdr scdr)))
> def args: : (<object 376116> (scdr (cdr s)))
> def args: : (<object 376116> (scddr (cdr scdr)))
> def args: : (<object 376184> (scdr (cdr s)))
> def args: : (<object 376184> (scddr (cdr scdr)))
> def args: : (<object 376256> (scdr (cdr s)))
> def args: : (<object 376256> (scddr (cdr scdr)))
> def args: : (<object 376324> (scdr (cdr s)))
> def args: : (<object 376324> (scddr (cdr scdr)))
> def args: : (<object 376396> (scdr (cdr s)))
> def args: : (<object 376396> (scddr (cdr scdr)))
> def args: : (<object 376464> (scdr (cdr s)))
> def args: : (<object 376464> (scddr (cdr scdr)))
> def args: : (<object 376536> (scdr (cdr s)))
> def args: : (<object 376536> (scddr (cdr scdr)))
> def args: : (<object 376604> (scdr (cdr s)))
> def args: : (<object 376604> (scddr (cdr scdr)))
> def args: : (<object 376676> (scdr (cdr s)))
> def args: : (<object 376676> (scddr (cdr scdr)))
> def args: : (<object 376744> (scdr (cdr s)))
> def args: : (<object 376744> (scddr (cdr scdr)))
> def args: : (<object 376816> (scdr (cdr s)))
> def args: : (<object 376816> (scddr (cdr scdr)))
> def args: : (<object 376884> (scdr (cdr s)))
> def args: : (<object 376884> (scddr (cdr scdr)))
> def args: : (<object 376956> (scdr (cdr s)))
> def args: : (<object 376956> (scddr (cdr scdr)))
> def args: : (<object 377024> (scdr (cdr s)))
> def args: : (<object 377024> (scddr (cdr scdr)))
> def args: : (<object 377096> (scdr (cdr s)))
> def args: : (<object 377096> (scddr (cdr scdr)))
> def args: : (<object 377164> (scdr (cdr s)))
> def args: : (<object 377164> (scddr (cdr scdr)))
> def args: : (<object 377236> (scdr (cdr s)))
> def args: : (<object 377236> (scddr (cdr scdr)))
> def args: : (<object 377304> (scdr (cdr s)))
> def args: : (<object 377304> (scddr (cdr scdr)))
> def args: : (<object 377376> (scdr (cdr s)))
> def args: : (<object 377376> (scddr (cdr scdr)))
> def args: : (<object 377444> (scdr (cdr s)))
> def args: : (<object 377444> (scddr (cdr scdr)))
> def args: : (<object 377516> (scdr (cdr s)))
> def args: : (<object 377516> (scddr (cdr scdr)))
> def args: : (<object 377584> (scdr (cdr s)))
> def args: : (<object 377584> (scddr (cdr scdr)))
> def args: : (<object 377656> (scdr (cdr s)))
> def args: : (<object 377656> (scddr (cdr scdr)))
> def args: : (<object 377724> (scdr (cdr s)))
> def args: : (<object 377724> (scddr (cdr scdr)))
> def args: : (<object 377796> (scdr (cdr s)))
> def args: : (<object 377796> (scddr (cdr scdr)))
> def args: : (<object 377864> (scdr (cdr s)))
> def args: : (<object 377864> (scddr (cdr scdr)))
> def args: : (<object 377936> (scdr (cdr s)))
> def args: : (<object 377936> (scddr (cdr scdr)))
> def args: : (<object 378004> (scdr (cdr s)))
> def args: : (<object 378004> (scddr (cdr scdr)))
> def args: : (<object 378076> (scdr (cdr s)))
> def args: : (<object 378076> (scddr (cdr scdr)))
> def args: : (<object 378144> (scdr (cdr s)))
> def args: : (<object 378144> (scddr (cdr scdr)))
> def args: : (<object 378216> (scdr (cdr s)))
> def args: : (<object 378216> (scddr (cdr scdr)))
> def args: : (<object 378284> (scdr (cdr s)))
> def args: : (<object 378284> (scddr (cdr scdr)))
> def args: : (<object 378356> (scdr (cdr s)))
> def args: : (<object 378356> (scddr (cdr scdr)))
> def args: : (<object 378424> (scdr (cdr s)))
> def args: : (<object 378424> (scddr (cdr scdr)))
> def args: : (<object 378496> (scdr (cdr s)))
> def args: : (<object 378496> (scddr (cdr scdr)))
> def args: : (<object 378564> (scdr (cdr s)))
> def args: : (<object 378564> (scddr (cdr scdr)))
> def args: : (<object 378636> (scdr (cdr s)))
> def args: : (<object 378636> (scddr (cdr scdr)))
> def args: : (<object 378704> (scdr (cdr s)))
> def args: : (<object 378704> (scddr (cdr scdr)))
> def args: : (<object 378776> (scdr (cdr s)))
> def args: : (<object 378776> (scddr (cdr scdr)))
> def args: : (<object 378844> (scdr (cdr s)))
> def args: : (<object 378844> (scddr (cdr scdr)))
> def args: : (<object 378916> (scdr (cdr s)))
> def args: : (<object 378916> (scddr (cdr scdr)))
> def args: : (<object 378984> (scdr (cdr s)))
> def args: : (<object 378984> (scddr (cdr scdr)))
> def args: : (<object 379056> (scdr (cdr s)))
> def args: : (<object 379056> (scddr (cdr scdr)))
> def args: : (<object 379124> (scdr (cdr s)))
> def args: : (<object 379124> (scddr (cdr scdr)))
> def args: : (<object 379196> (scdr (cdr s)))
> def args: : (<object 379196> (scddr (cdr scdr)))
> def args: : (<object 379264> (scdr (cdr s)))
> def args: : (<object 379264> (scddr (cdr scdr)))
> def args: : (<object 379336> (scdr (cdr s)))
> def args: : (<object 379336> (scddr (cdr scdr)))
> def args: : (<object 379404> (scdr (cdr s)))
> def args: : (<object 379404> (scddr (cdr scdr)))
> def args: : (<object 379476> (scdr (cdr s)))
> def args: : (<object 379476> (scddr (cdr scdr)))
> def args: : (<object 379544> (scdr (cdr s)))
> def args: : (<object 379544> (scddr (cdr scdr)))
> def args: : (<object 379616> (scdr (cdr s)))
> def args: : (<object 379616> (scddr (cdr scdr)))
> def args: : (<object 379684> (scdr (cdr s)))
> def args: : (<object 379684> (scddr (cdr scdr)))
> def args: : (<object 379756> (scdr (cdr s)))
> def args: : (<object 379756> (scddr (cdr scdr)))
> def args: : (<object 379824> (scdr (cdr s)))
> def args: : (<object 379824> (scddr (cdr scdr)))
> def args: : (<object 379896> (scdr (cdr s)))
> def args: : (<object 379896> (scddr (cdr scdr)))
> def args: : (<object 379964> (scdr (cdr s)))
> def args: : (<object 379964> (scddr (cdr scdr)))
> def args: : (<object 380036> (scdr (cdr s)))
> def args: : (<object 380036> (scddr (cdr scdr)))
> def args: : (<object 380104> (scdr (cdr s)))
> def args: : (<object 380104> (scddr (cdr scdr)))
> def args: : (<object 380176> (scdr (cdr s)))
> def args: : (<object 380176> (scddr (cdr scdr)))
> def args: : (<object 380244> (scdr (cdr s)))
> def args: : (<object 380244> (scddr (cdr scdr)))
> def args: : (<object 380316> (scdr (cdr s)))
> def args: : (<object 380316> (scddr (cdr scdr)))
> def args: : (<object 380384> (scdr (cdr s)))
> def args: : (<object 380384> (scddr (cdr scdr)))
> def args: : (<object 380456> (scdr (cdr s)))
> def args: : (<object 380456> (scddr (cdr scdr)))
> def args: : (<object 380524> (scdr (cdr s)))
> def args: : (<object 380524> (scddr (cdr scdr)))
> def args: : (<object 380596> (scdr (cdr s)))
> def args: : (<object 380596> (scddr (cdr scdr)))
> def args: : (<object 380664> (scdr (cdr s)))
> def args: : (<object 380664> (scddr (cdr scdr)))
> def args: : (<object 380736> (scdr (cdr s)))
> def args: : (<object 380736> (scddr (cdr scdr)))
> def args: : (<object 380804> (scdr (cdr s)))
> def args: : (<object 380804> (scddr (cdr scdr)))
> def args: : (<object 380876> (scdr (cdr s)))
> def args: : (<object 380876> (scddr (cdr scdr)))
> def args: : (<object 380944> (scdr (cdr s)))
> def args: : (<object 380944> (scddr (cdr scdr)))
> def args: : (<object 381016> (scdr (cdr s)))
> def args: : (<object 381016> (scddr (cdr scdr)))
> def args: : (<object 381084> (scdr (cdr s)))
> def args: : (<object 381084> (scddr (cdr scdr)))
> def args: : (<object 381156> (scdr (cdr s)))
> def args: : (<object 381156> (scddr (cdr scdr)))
> def args: : (<object 381224> (scdr (cdr s)))
> def args: : (<object 381224> (scddr (cdr scdr)))
> def args: : (<object 381296> (scdr (cdr s)))
> def args: : (<object 381296> (scddr (cdr scdr)))
> def args: : (<object 381364> (scdr (cdr s)))
> def args: : (<object 381364> (scddr (cdr scdr)))
> def args: : (<object 381436> (scdr (cdr s)))
> def args: : (<object 381436> (scddr (cdr scdr)))
> def args: : (<object 381504> (scdr (cdr s)))
> def args: : (<object 381504> (scddr (cdr scdr)))
> def args: : (<object 381576> (scdr (cdr s)))
> def args: : (<object 381576> (scddr (cdr scdr)))
> def args: : (<object 381644> (scdr (cdr s)))
> def args: : (<object 381644> (scddr (cdr scdr)))
> def args: : (<object 381716> (scdr (cdr s)))
> def args: : (<object 381716> (scddr (cdr scdr)))
> def args: : (<object 381784> (scdr (cdr s)))
> def args: : (<object 381784> (scddr (cdr scdr)))
> def args: : (<object 381856> (scdr (cdr s)))
> def args: : (<object 381856> (scddr (cdr scdr)))
> 1035def args: : (<object 389727> (env (if (null? @) # (car @))))
>  def args: : (<object 389834> (env (if (null? @) # (car @))))
> def args: : (<object 389954> (scdr (cdr s)))
> def args: : (<object 389954> (scddr (cdr scdr)))
> def args: : (<object 390026> (scdr (cdr s)))
> def args: : (<object 390026> (scddr (cdr scdr)))
> def args: : (<object 390098> (scdr (cdr s)))
> def args: : (<object 390098> (scddr (cdr scdr)))
> def args: : (<object 390166> (scdr (cdr s)))
> def args: : (<object 390166> (scddr (cdr scdr)))
> def args: : (<object 390405> (scdr (cdr s)))
> def args: : (<object 390405> (scddr (cdr scdr)))
> def args: : (<object 390477> (scdr (cdr s)))
> def args: : (<object 390477> (scddr (cdr scdr)))
> def args: : (<object 390545> (scdr (cdr s)))
> def args: : (<object 390545> (scddr (cdr scdr)))
> def args: : (<object 390617> (scdr (cdr s)))
> def args: : (<object 390617> (scddr (cdr scdr)))
> def args: : (<object 390685> (scdr (cdr s)))
> def args: : (<object 390685> (scddr (cdr scdr)))
> def args: : (<object 390757> (scdr (cdr s)))
> def args: : (<object 390757> (scddr (cdr scdr)))
> def args: : (<object 390825> (scdr (cdr s)))
> def args: : (<object 390825> (scddr (cdr scdr)))
> def args: : (<object 390897> (scdr (cdr s)))
> def args: : (<object 390897> (scddr (cdr scdr)))
> def args: : (<object 390965> (scdr (cdr s)))
> def args: : (<object 390965> (scddr (cdr scdr)))
> def args: : (<object 391037> (scdr (cdr s)))
> def args: : (<object 391037> (scddr (cdr scdr)))
> def args: : (<object 391105> (scdr (cdr s)))
> def args: : (<object 391105> (scddr (cdr scdr)))
> def args: : (<object 391177> (scdr (cdr s)))
> def args: : (<object 391177> (scddr (cdr scdr)))
> def args: : (<object 391245> (scdr (cdr s)))
> def args: : (<object 391245> (scddr (cdr scdr)))
> def args: : (<object 391317> (scdr (cdr s)))
> def args: : (<object 391317> (scddr (cdr scdr)))
> def args: : (<object 391385> (scdr (cdr s)))
> def args: : (<object 391385> (scddr (cdr scdr)))
> def args: : (<object 391457> (scdr (cdr s)))
> def args: : (<object 391457> (scddr (cdr scdr)))
> def args: : (<object 391525> (scdr (cdr s)))
> def args: : (<object 391525> (scddr (cdr scdr)))
> def args: : (<object 391597> (scdr (cdr s)))
> def args: : (<object 391597> (scddr (cdr scdr)))
> def args: : (<object 391665> (scdr (cdr s)))
> def args: : (<object 391665> (scddr (cdr scdr)))
> def args: : (<object 391737> (scdr (cdr s)))
> def args: : (<object 391737> (scddr (cdr scdr)))
> def args: : (<object 391805> (scdr (cdr s)))
> def args: : (<object 391805> (scddr (cdr scdr)))
> def args: : (<object 391877> (scdr (cdr s)))
> def args: : (<object 391877> (scddr (cdr scdr)))
> def args: : (<object 391945> (scdr (cdr s)))
> def args: : (<object 391945> (scddr (cdr scdr)))
> def args: : (<object 392017> (scdr (cdr s)))
> def args: : (<object 392017> (scddr (cdr scdr)))
> def args: : (<object 392085> (scdr (cdr s)))
> def args: : (<object 392085> (scddr (cdr scdr)))
> def args: : (<object 392157> (scdr (cdr s)))
> def args: : (<object 392157> (scddr (cdr scdr)))
> def args: : (<object 392225> (scdr (cdr s)))
> def args: : (<object 392225> (scddr (cdr scdr)))
> def args: : (<object 392297> (scdr (cdr s)))
> def args: : (<object 392297> (scddr (cdr scdr)))
> def args: : (<object 392365> (scdr (cdr s)))
> def args: : (<object 392365> (scddr (cdr scdr)))
> def args: : (<object 392437> (scdr (cdr s)))
> def args: : (<object 392437> (scddr (cdr scdr)))
> def args: : (<object 392505> (scdr (cdr s)))
> def args: : (<object 392505> (scddr (cdr scdr)))
> def args: : (<object 392577> (scdr (cdr s)))
> def args: : (<object 392577> (scddr (cdr scdr)))
> def args: : (<object 392645> (scdr (cdr s)))
> def args: : (<object 392645> (scddr (cdr scdr)))
> def args: : (<object 392717> (scdr (cdr s)))
> def args: : (<object 392717> (scddr (cdr scdr)))
> def args: : (<object 392785> (scdr (cdr s)))
> def args: : (<object 392785> (scddr (cdr scdr)))
> def args: : (<object 392857> (scdr (cdr s)))
> def args: : (<object 392857> (scddr (cdr scdr)))
> def args: : (<object 392925> (scdr (cdr s)))
> def args: : (<object 392925> (scddr (cdr scdr)))
> def args: : (<object 392997> (scdr (cdr s)))
> def args: : (<object 392997> (scddr (cdr scdr)))
> def args: : (<object 393065> (scdr (cdr s)))
> def args: : (<object 393065> (scddr (cdr scdr)))
> def args: : (<object 393137> (scdr (cdr s)))
> def args: : (<object 393137> (scddr (cdr scdr)))
> def args: : (<object 393205> (scdr (cdr s)))
> def args: : (<object 393205> (scddr (cdr scdr)))
> def args: : (<object 393277> (scdr (cdr s)))
> def args: : (<object 393277> (scddr (cdr scdr)))
> def args: : (<object 393345> (scdr (cdr s)))
> def args: : (<object 393345> (scddr (cdr scdr)))
> def args: : (<object 393417> (scdr (cdr s)))
> def args: : (<object 393417> (scddr (cdr scdr)))
> def args: : (<object 393485> (scdr (cdr s)))
> def args: : (<object 393485> (scddr (cdr scdr)))
> def args: : (<object 393557> (scdr (cdr s)))
> def args: : (<object 393557> (scddr (cdr scdr)))
> def args: : (<object 393625> (scdr (cdr s)))
> def args: : (<object 393625> (scddr (cdr scdr)))
> def args: : (<object 393697> (scdr (cdr s)))
> def args: : (<object 393697> (scddr (cdr scdr)))
> def args: : (<object 393765> (scdr (cdr s)))
> def args: : (<object 393765> (scddr (cdr scdr)))
> def args: : (<object 393837> (scdr (cdr s)))
> def args: : (<object 393837> (scddr (cdr scdr)))
> def args: : (<object 393905> (scdr (cdr s)))
> def args: : (<object 393905> (scddr (cdr scdr)))
> def args: : (<object 393977> (scdr (cdr s)))
> def args: : (<object 393977> (scddr (cdr scdr)))
> def args: : (<object 394045> (scdr (cdr s)))
> def args: : (<object 394045> (scddr (cdr scdr)))
> def args: : (<object 394117> (scdr (cdr s)))
> def args: : (<object 394117> (scddr (cdr scdr)))
> def args: : (<object 394185> (scdr (cdr s)))
> def args: : (<object 394185> (scddr (cdr scdr)))
> def args: : (<object 394257> (scdr (cdr s)))
> def args: : (<object 394257> (scddr (cdr scdr)))
> def args: : (<object 394325> (scdr (cdr s)))
> def args: : (<object 394325> (scddr (cdr scdr)))
> def args: : (<object 394397> (scdr (cdr s)))
> def args: : (<object 394397> (scddr (cdr scdr)))
> def args: : (<object 394465> (scdr (cdr s)))
> def args: : (<object 394465> (scddr (cdr scdr)))
> def args: : (<object 394537> (scdr (cdr s)))
> def args: : (<object 394537> (scddr (cdr scdr)))
> def args: : (<object 394605> (scdr (cdr s)))
> def args: : (<object 394605> (scddr (cdr scdr)))
> def args: : (<object 394677> (scdr (cdr s)))
> def args: : (<object 394677> (scddr (cdr scdr)))
> def args: : (<object 394745> (scdr (cdr s)))
> def args: : (<object 394745> (scddr (cdr scdr)))
> def args: : (<object 394817> (scdr (cdr s)))
> def args: : (<object 394817> (scddr (cdr scdr)))
> def args: : (<object 394885> (scdr (cdr s)))
> def args: : (<object 394885> (scddr (cdr scdr)))
> def args: : (<object 394957> (scdr (cdr s)))
> def args: : (<object 394957> (scddr (cdr scdr)))
> def args: : (<object 395025> (scdr (cdr s)))
> def args: : (<object 395025> (scddr (cdr scdr)))
> def args: : (<object 395097> (scdr (cdr s)))
> def args: : (<object 395097> (scddr (cdr scdr)))
> def args: : (<object 395165> (scdr (cdr s)))
> def args: : (<object 395165> (scddr (cdr scdr)))
> def args: : (<object 395237> (scdr (cdr s)))
> def args: : (<object 395237> (scddr (cdr scdr)))
> def args: : (<object 395305> (scdr (cdr s)))
> def args: : (<object 395305> (scddr (cdr scdr)))
> def args: : (<object 395377> (scdr (cdr s)))
> def args: : (<object 395377> (scddr (cdr scdr)))
> def args: : (<object 395445> (scdr (cdr s)))
> def args: : (<object 395445> (scddr (cdr scdr)))
> def args: : (<object 395517> (scdr (cdr s)))
> def args: : (<object 395517> (scddr (cdr scdr)))
> def args: : (<object 395585> (scdr (cdr s)))
> def args: : (<object 395585> (scddr (cdr scdr)))
> def args: : (<object 395657> (scdr (cdr s)))
> def args: : (<object 395657> (scddr (cdr scdr)))
> def args: : (<object 395725> (scdr (cdr s)))
> def args: : (<object 395725> (scddr (cdr scdr)))
> def args: : (<object 395797> (scdr (cdr s)))
> def args: : (<object 395797> (scddr (cdr scdr)))
> def args: : (<object 395865> (scdr (cdr s)))
> def args: : (<object 395865> (scddr (cdr scdr)))
> def args: : (<object 395937> (scdr (cdr s)))
> def args: : (<object 395937> (scddr (cdr scdr)))
> def args: : (<object 396005> (scdr (cdr s)))
> def args: : (<object 396005> (scddr (cdr scdr)))
> def args: : (<object 396077> (scdr (cdr s)))
> def args: : (<object 396077> (scddr (cdr scdr)))
> def args: : (<object 396145> (scdr (cdr s)))
> def args: : (<object 396145> (scddr (cdr scdr)))
> def args: : (<object 396217> (scdr (cdr s)))
> def args: : (<object 396217> (scddr (cdr scdr)))
> def args: : (<object 396285> (scdr (cdr s)))
> def args: : (<object 396285> (scddr (cdr scdr)))
> def args: : (<object 396357> (scdr (cdr s)))
> def args: : (<object 396357> (scddr (cdr scdr)))
> def args: : (<object 396425> (scdr (cdr s)))
> def args: : (<object 396425> (scddr (cdr scdr)))
> def args: : (<object 396497> (scdr (cdr s)))
> def args: : (<object 396497> (scddr (cdr scdr)))
> 1081def args: : (<object 404539> (env (if (null? @) # (car @))))
>  def args: : (<object 404646> (env (if (null? @) # (car @))))
> def args: : (<object 404766> (scdr (cdr s)))
> def args: : (<object 404766> (scddr (cdr scdr)))
> def args: : (<object 404838> (scdr (cdr s)))
> def args: : (<object 404838> (scddr (cdr scdr)))
> def args: : (<object 404910> (scdr (cdr s)))
> def args: : (<object 404910> (scddr (cdr scdr)))
> def args: : (<object 404978> (scdr (cdr s)))
> def args: : (<object 404978> (scddr (cdr scdr)))
> def args: : (<object 405217> (scdr (cdr s)))
> def args: : (<object 405217> (scddr (cdr scdr)))
> def args: : (<object 405289> (scdr (cdr s)))
> def args: : (<object 405289> (scddr (cdr scdr)))
> def args: : (<object 405357> (scdr (cdr s)))
> def args: : (<object 405357> (scddr (cdr scdr)))
> def args: : (<object 405429> (scdr (cdr s)))
> def args: : (<object 405429> (scddr (cdr scdr)))
> def args: : (<object 405497> (scdr (cdr s)))
> def args: : (<object 405497> (scddr (cdr scdr)))
> def args: : (<object 405569> (scdr (cdr s)))
> def args: : (<object 405569> (scddr (cdr scdr)))
> def args: : (<object 405637> (scdr (cdr s)))
> def args: : (<object 405637> (scddr (cdr scdr)))
> def args: : (<object 405709> (scdr (cdr s)))
> def args: : (<object 405709> (scddr (cdr scdr)))
> def args: : (<object 405777> (scdr (cdr s)))
> def args: : (<object 405777> (scddr (cdr scdr)))
> def args: : (<object 405849> (scdr (cdr s)))
> def args: : (<object 405849> (scddr (cdr scdr)))
> def args: : (<object 405917> (scdr (cdr s)))
> def args: : (<object 405917> (scddr (cdr scdr)))
> def args: : (<object 405989> (scdr (cdr s)))
> def args: : (<object 405989> (scddr (cdr scdr)))
> def args: : (<object 406057> (scdr (cdr s)))
> def args: : (<object 406057> (scddr (cdr scdr)))
> def args: : (<object 406129> (scdr (cdr s)))
> def args: : (<object 406129> (scddr (cdr scdr)))
> def args: : (<object 406197> (scdr (cdr s)))
> def args: : (<object 406197> (scddr (cdr scdr)))
> def args: : (<object 406269> (scdr (cdr s)))
> def args: : (<object 406269> (scddr (cdr scdr)))
> def args: : (<object 406337> (scdr (cdr s)))
> def args: : (<object 406337> (scddr (cdr scdr)))
> def args: : (<object 406409> (scdr (cdr s)))
> def args: : (<object 406409> (scddr (cdr scdr)))
> def args: : (<object 406477> (scdr (cdr s)))
> def args: : (<object 406477> (scddr (cdr scdr)))
> def args: : (<object 406549> (scdr (cdr s)))
> def args: : (<object 406549> (scddr (cdr scdr)))
> def args: : (<object 406617> (scdr (cdr s)))
> def args: : (<object 406617> (scddr (cdr scdr)))
> def args: : (<object 406689> (scdr (cdr s)))
> def args: : (<object 406689> (scddr (cdr scdr)))
> def args: : (<object 406757> (scdr (cdr s)))
> def args: : (<object 406757> (scddr (cdr scdr)))
> def args: : (<object 406829> (scdr (cdr s)))
> def args: : (<object 406829> (scddr (cdr scdr)))
> def args: : (<object 406897> (scdr (cdr s)))
> def args: : (<object 406897> (scddr (cdr scdr)))
> def args: : (<object 406969> (scdr (cdr s)))
> def args: : (<object 406969> (scddr (cdr scdr)))
> def args: : (<object 407037> (scdr (cdr s)))
> def args: : (<object 407037> (scddr (cdr scdr)))
> def args: : (<object 407109> (scdr (cdr s)))
> def args: : (<object 407109> (scddr (cdr scdr)))
> def args: : (<object 407177> (scdr (cdr s)))
> def args: : (<object 407177> (scddr (cdr scdr)))
> def args: : (<object 407249> (scdr (cdr s)))
> def args: : (<object 407249> (scddr (cdr scdr)))
> def args: : (<object 407317> (scdr (cdr s)))
> def args: : (<object 407317> (scddr (cdr scdr)))
> def args: : (<object 407389> (scdr (cdr s)))
> def args: : (<object 407389> (scddr (cdr scdr)))
> def args: : (<object 407457> (scdr (cdr s)))
> def args: : (<object 407457> (scddr (cdr scdr)))
> def args: : (<object 407529> (scdr (cdr s)))
> def args: : (<object 407529> (scddr (cdr scdr)))
> def args: : (<object 407597> (scdr (cdr s)))
> def args: : (<object 407597> (scddr (cdr scdr)))
> def args: : (<object 407669> (scdr (cdr s)))
> def args: : (<object 407669> (scddr (cdr scdr)))
> def args: : (<object 407737> (scdr (cdr s)))
> def args: : (<object 407737> (scddr (cdr scdr)))
> def args: : (<object 407809> (scdr (cdr s)))
> def args: : (<object 407809> (scddr (cdr scdr)))
> def args: : (<object 407877> (scdr (cdr s)))
> def args: : (<object 407877> (scddr (cdr scdr)))
> def args: : (<object 407949> (scdr (cdr s)))
> def args: : (<object 407949> (scddr (cdr scdr)))
> def args: : (<object 408017> (scdr (cdr s)))
> def args: : (<object 408017> (scddr (cdr scdr)))
> def args: : (<object 408089> (scdr (cdr s)))
> def args: : (<object 408089> (scddr (cdr scdr)))
> def args: : (<object 408157> (scdr (cdr s)))
> def args: : (<object 408157> (scddr (cdr scdr)))
> def args: : (<object 408229> (scdr (cdr s)))
> def args: : (<object 408229> (scddr (cdr scdr)))
> def args: : (<object 408297> (scdr (cdr s)))
> def args: : (<object 408297> (scddr (cdr scdr)))
> def args: : (<object 408369> (scdr (cdr s)))
> def args: : (<object 408369> (scddr (cdr scdr)))
> def args: : (<object 408437> (scdr (cdr s)))
> def args: : (<object 408437> (scddr (cdr scdr)))
> def args: : (<object 408509> (scdr (cdr s)))
> def args: : (<object 408509> (scddr (cdr scdr)))
> def args: : (<object 408577> (scdr (cdr s)))
> def args: : (<object 408577> (scddr (cdr scdr)))
> def args: : (<object 408649> (scdr (cdr s)))
> def args: : (<object 408649> (scddr (cdr scdr)))
> def args: : (<object 408717> (scdr (cdr s)))
> def args: : (<object 408717> (scddr (cdr scdr)))
> def args: : (<object 408789> (scdr (cdr s)))
> def args: : (<object 408789> (scddr (cdr scdr)))
> def args: : (<object 408857> (scdr (cdr s)))
> def args: : (<object 408857> (scddr (cdr scdr)))
> def args: : (<object 408929> (scdr (cdr s)))
> def args: : (<object 408929> (scddr (cdr scdr)))
> def args: : (<object 408997> (scdr (cdr s)))
> def args: : (<object 408997> (scddr (cdr scdr)))
> def args: : (<object 409069> (scdr (cdr s)))
> def args: : (<object 409069> (scddr (cdr scdr)))
> def args: : (<object 409137> (scdr (cdr s)))
> def args: : (<object 409137> (scddr (cdr scdr)))
> def args: : (<object 409209> (scdr (cdr s)))
> def args: : (<object 409209> (scddr (cdr scdr)))
> def args: : (<object 409277> (scdr (cdr s)))
> def args: : (<object 409277> (scddr (cdr scdr)))
> def args: : (<object 409349> (scdr (cdr s)))
> def args: : (<object 409349> (scddr (cdr scdr)))
> def args: : (<object 409417> (scdr (cdr s)))
> def args: : (<object 409417> (scddr (cdr scdr)))
> def args: : (<object 409489> (scdr (cdr s)))
> def args: : (<object 409489> (scddr (cdr scdr)))
> def args: : (<object 409557> (scdr (cdr s)))
> def args: : (<object 409557> (scddr (cdr scdr)))
> def args: : (<object 409629> (scdr (cdr s)))
> def args: : (<object 409629> (scddr (cdr scdr)))
> def args: : (<object 409697> (scdr (cdr s)))
> def args: : (<object 409697> (scddr (cdr scdr)))
> def args: : (<object 409769> (scdr (cdr s)))
> def args: : (<object 409769> (scddr (cdr scdr)))
> def args: : (<object 409837> (scdr (cdr s)))
> def args: : (<object 409837> (scddr (cdr scdr)))
> def args: : (<object 409909> (scdr (cdr s)))
> def args: : (<object 409909> (scddr (cdr scdr)))
> def args: : (<object 409977> (scdr (cdr s)))
> def args: : (<object 409977> (scddr (cdr scdr)))
> def args: : (<object 410049> (scdr (cdr s)))
> def args: : (<object 410049> (scddr (cdr scdr)))
> def args: : (<object 410117> (scdr (cdr s)))
> def args: : (<object 410117> (scddr (cdr scdr)))
> def args: : (<object 410189> (scdr (cdr s)))
> def args: : (<object 410189> (scddr (cdr scdr)))
> def args: : (<object 410257> (scdr (cdr s)))
> def args: : (<object 410257> (scddr (cdr scdr)))
> def args: : (<object 410329> (scdr (cdr s)))
> def args: : (<object 410329> (scddr (cdr scdr)))
> def args: : (<object 410397> (scdr (cdr s)))
> def args: : (<object 410397> (scddr (cdr scdr)))
> def args: : (<object 410469> (scdr (cdr s)))
> def args: : (<object 410469> (scddr (cdr scdr)))
> def args: : (<object 410537> (scdr (cdr s)))
> def args: : (<object 410537> (scddr (cdr scdr)))
> def args: : (<object 410609> (scdr (cdr s)))
> def args: : (<object 410609> (scddr (cdr scdr)))
> def args: : (<object 410677> (scdr (cdr s)))
> def args: : (<object 410677> (scddr (cdr scdr)))
> def args: : (<object 410749> (scdr (cdr s)))
> def args: : (<object 410749> (scddr (cdr scdr)))
> def args: : (<object 410817> (scdr (cdr s)))
> def args: : (<object 410817> (scddr (cdr scdr)))
> def args: : (<object 410889> (scdr (cdr s)))
> def args: : (<object 410889> (scddr (cdr scdr)))
> def args: : (<object 410957> (scdr (cdr s)))
> def args: : (<object 410957> (scddr (cdr scdr)))
> def args: : (<object 411029> (scdr (cdr s)))
> def args: : (<object 411029> (scddr (cdr scdr)))
> def args: : (<object 411097> (scdr (cdr s)))
> def args: : (<object 411097> (scddr (cdr scdr)))
> def args: : (<object 411169> (scdr (cdr s)))
> def args: : (<object 411169> (scddr (cdr scdr)))
> def args: : (<object 411237> (scdr (cdr s)))
> def args: : (<object 411237> (scddr (cdr scdr)))
> def args: : (<object 411309> (scdr (cdr s)))
> def args: : (<object 411309> (scddr (cdr scdr)))
> def args: : (<object 411377> (scdr (cdr s)))
> def args: : (<object 411377> (scddr (cdr scdr)))
> def args: : (<object 411449> (scdr (cdr s)))
> def args: : (<object 411449> (scddr (cdr scdr)))
> 1128def args: : (<object 419662> (env (if (null? @) # (car @))))
>  def args: : (<object 419769> (env (if (null? @) # (car @))))
> def args: : (<object 419889> (scdr (cdr s)))
> def args: : (<object 419889> (scddr (cdr scdr)))
> def args: : (<object 419961> (scdr (cdr s)))
> def args: : (<object 419961> (scddr (cdr scdr)))
> def args: : (<object 420033> (scdr (cdr s)))
> def args: : (<object 420033> (scddr (cdr scdr)))
> def args: : (<object 420101> (scdr (cdr s)))
> def args: : (<object 420101> (scddr (cdr scdr)))
> def args: : (<object 420340> (scdr (cdr s)))
> def args: : (<object 420340> (scddr (cdr scdr)))
> def args: : (<object 420412> (scdr (cdr s)))
> def args: : (<object 420412> (scddr (cdr scdr)))
> def args: : (<object 420480> (scdr (cdr s)))
> def args: : (<object 420480> (scddr (cdr scdr)))
> def args: : (<object 420552> (scdr (cdr s)))
> def args: : (<object 420552> (scddr (cdr scdr)))
> def args: : (<object 420620> (scdr (cdr s)))
> def args: : (<object 420620> (scddr (cdr scdr)))
> def args: : (<object 420692> (scdr (cdr s)))
> def args: : (<object 420692> (scddr (cdr scdr)))
> def args: : (<object 420760> (scdr (cdr s)))
> def args: : (<object 420760> (scddr (cdr scdr)))
> def args: : (<object 420832> (scdr (cdr s)))
> def args: : (<object 420832> (scddr (cdr scdr)))
> def args: : (<object 420900> (scdr (cdr s)))
> def args: : (<object 420900> (scddr (cdr scdr)))
> def args: : (<object 420972> (scdr (cdr s)))
> def args: : (<object 420972> (scddr (cdr scdr)))
> def args: : (<object 421040> (scdr (cdr s)))
> def args: : (<object 421040> (scddr (cdr scdr)))
> def args: : (<object 421112> (scdr (cdr s)))
> def args: : (<object 421112> (scddr (cdr scdr)))
> def args: : (<object 421180> (scdr (cdr s)))
> def args: : (<object 421180> (scddr (cdr scdr)))
> def args: : (<object 421252> (scdr (cdr s)))
> def args: : (<object 421252> (scddr (cdr scdr)))
> def args: : (<object 421320> (scdr (cdr s)))
> def args: : (<object 421320> (scddr (cdr scdr)))
> def args: : (<object 421392> (scdr (cdr s)))
> def args: : (<object 421392> (scddr (cdr scdr)))
> def args: : (<object 421460> (scdr (cdr s)))
> def args: : (<object 421460> (scddr (cdr scdr)))
> def args: : (<object 421532> (scdr (cdr s)))
> def args: : (<object 421532> (scddr (cdr scdr)))
> def args: : (<object 421600> (scdr (cdr s)))
> def args: : (<object 421600> (scddr (cdr scdr)))
> def args: : (<object 421672> (scdr (cdr s)))
> def args: : (<object 421672> (scddr (cdr scdr)))
> def args: : (<object 421740> (scdr (cdr s)))
> def args: : (<object 421740> (scddr (cdr scdr)))
> def args: : (<object 421812> (scdr (cdr s)))
> def args: : (<object 421812> (scddr (cdr scdr)))
> def args: : (<object 421880> (scdr (cdr s)))
> def args: : (<object 421880> (scddr (cdr scdr)))
> def args: : (<object 421952> (scdr (cdr s)))
> def args: : (<object 421952> (scddr (cdr scdr)))
> def args: : (<object 422020> (scdr (cdr s)))
> def args: : (<object 422020> (scddr (cdr scdr)))
> def args: : (<object 422092> (scdr (cdr s)))
> def args: : (<object 422092> (scddr (cdr scdr)))
> def args: : (<object 422160> (scdr (cdr s)))
> def args: : (<object 422160> (scddr (cdr scdr)))
> def args: : (<object 422232> (scdr (cdr s)))
> def args: : (<object 422232> (scddr (cdr scdr)))
> def args: : (<object 422300> (scdr (cdr s)))
> def args: : (<object 422300> (scddr (cdr scdr)))
> def args: : (<object 422372> (scdr (cdr s)))
> def args: : (<object 422372> (scddr (cdr scdr)))
> def args: : (<object 422440> (scdr (cdr s)))
> def args: : (<object 422440> (scddr (cdr scdr)))
> def args: : (<object 422512> (scdr (cdr s)))
> def args: : (<object 422512> (scddr (cdr scdr)))
> def args: : (<object 422580> (scdr (cdr s)))
> def args: : (<object 422580> (scddr (cdr scdr)))
> def args: : (<object 422652> (scdr (cdr s)))
> def args: : (<object 422652> (scddr (cdr scdr)))
> def args: : (<object 422720> (scdr (cdr s)))
> def args: : (<object 422720> (scddr (cdr scdr)))
> def args: : (<object 422792> (scdr (cdr s)))
> def args: : (<object 422792> (scddr (cdr scdr)))
> def args: : (<object 422860> (scdr (cdr s)))
> def args: : (<object 422860> (scddr (cdr scdr)))
> def args: : (<object 422932> (scdr (cdr s)))
> def args: : (<object 422932> (scddr (cdr scdr)))
> def args: : (<object 423000> (scdr (cdr s)))
> def args: : (<object 423000> (scddr (cdr scdr)))
> def args: : (<object 423072> (scdr (cdr s)))
> def args: : (<object 423072> (scddr (cdr scdr)))
> def args: : (<object 423140> (scdr (cdr s)))
> def args: : (<object 423140> (scddr (cdr scdr)))
> def args: : (<object 423212> (scdr (cdr s)))
> def args: : (<object 423212> (scddr (cdr scdr)))
> def args: : (<object 423280> (scdr (cdr s)))
> def args: : (<object 423280> (scddr (cdr scdr)))
> def args: : (<object 423352> (scdr (cdr s)))
> def args: : (<object 423352> (scddr (cdr scdr)))
> def args: : (<object 423420> (scdr (cdr s)))
> def args: : (<object 423420> (scddr (cdr scdr)))
> def args: : (<object 423492> (scdr (cdr s)))
> def args: : (<object 423492> (scddr (cdr scdr)))
> def args: : (<object 423560> (scdr (cdr s)))
> def args: : (<object 423560> (scddr (cdr scdr)))
> def args: : (<object 423632> (scdr (cdr s)))
> def args: : (<object 423632> (scddr (cdr scdr)))
> def args: : (<object 423700> (scdr (cdr s)))
> def args: : (<object 423700> (scddr (cdr scdr)))
> def args: : (<object 423772> (scdr (cdr s)))
> def args: : (<object 423772> (scddr (cdr scdr)))
> def args: : (<object 423840> (scdr (cdr s)))
> def args: : (<object 423840> (scddr (cdr scdr)))
> def args: : (<object 423912> (scdr (cdr s)))
> def args: : (<object 423912> (scddr (cdr scdr)))
> def args: : (<object 423980> (scdr (cdr s)))
> def args: : (<object 423980> (scddr (cdr scdr)))
> def args: : (<object 424052> (scdr (cdr s)))
> def args: : (<object 424052> (scddr (cdr scdr)))
> def args: : (<object 424120> (scdr (cdr s)))
> def args: : (<object 424120> (scddr (cdr scdr)))
> def args: : (<object 424192> (scdr (cdr s)))
> def args: : (<object 424192> (scddr (cdr scdr)))
> def args: : (<object 424260> (scdr (cdr s)))
> def args: : (<object 424260> (scddr (cdr scdr)))
> def args: : (<object 424332> (scdr (cdr s)))
> def args: : (<object 424332> (scddr (cdr scdr)))
> def args: : (<object 424400> (scdr (cdr s)))
> def args: : (<object 424400> (scddr (cdr scdr)))
> def args: : (<object 424472> (scdr (cdr s)))
> def args: : (<object 424472> (scddr (cdr scdr)))
> def args: : (<object 424540> (scdr (cdr s)))
> def args: : (<object 424540> (scddr (cdr scdr)))
> def args: : (<object 424612> (scdr (cdr s)))
> def args: : (<object 424612> (scddr (cdr scdr)))
> def args: : (<object 424680> (scdr (cdr s)))
> def args: : (<object 424680> (scddr (cdr scdr)))
> def args: : (<object 424752> (scdr (cdr s)))
> def args: : (<object 424752> (scddr (cdr scdr)))
> def args: : (<object 424820> (scdr (cdr s)))
> def args: : (<object 424820> (scddr (cdr scdr)))
> def args: : (<object 424892> (scdr (cdr s)))
> def args: : (<object 424892> (scddr (cdr scdr)))
> def args: : (<object 424960> (scdr (cdr s)))
> def args: : (<object 424960> (scddr (cdr scdr)))
> def args: : (<object 425032> (scdr (cdr s)))
> def args: : (<object 425032> (scddr (cdr scdr)))
> def args: : (<object 425100> (scdr (cdr s)))
> def args: : (<object 425100> (scddr (cdr scdr)))
> def args: : (<object 425172> (scdr (cdr s)))
> def args: : (<object 425172> (scddr (cdr scdr)))
> def args: : (<object 425240> (scdr (cdr s)))
> def args: : (<object 425240> (scddr (cdr scdr)))
> def args: : (<object 425312> (scdr (cdr s)))
> def args: : (<object 425312> (scddr (cdr scdr)))
> def args: : (<object 425380> (scdr (cdr s)))
> def args: : (<object 425380> (scddr (cdr scdr)))
> def args: : (<object 425452> (scdr (cdr s)))
> def args: : (<object 425452> (scddr (cdr scdr)))
> def args: : (<object 425520> (scdr (cdr s)))
> def args: : (<object 425520> (scddr (cdr scdr)))
> def args: : (<object 425592> (scdr (cdr s)))
> def args: : (<object 425592> (scddr (cdr scdr)))
> def args: : (<object 425660> (scdr (cdr s)))
> def args: : (<object 425660> (scddr (cdr scdr)))
> def args: : (<object 425732> (scdr (cdr s)))
> def args: : (<object 425732> (scddr (cdr scdr)))
> def args: : (<object 425800> (scdr (cdr s)))
> def args: : (<object 425800> (scddr (cdr scdr)))
> def args: : (<object 425872> (scdr (cdr s)))
> def args: : (<object 425872> (scddr (cdr scdr)))
> def args: : (<object 425940> (scdr (cdr s)))
> def args: : (<object 425940> (scddr (cdr scdr)))
> def args: : (<object 426012> (scdr (cdr s)))
> def args: : (<object 426012> (scddr (cdr scdr)))
> def args: : (<object 426080> (scdr (cdr s)))
> def args: : (<object 426080> (scddr (cdr scdr)))
> def args: : (<object 426152> (scdr (cdr s)))
> def args: : (<object 426152> (scddr (cdr scdr)))
> def args: : (<object 426220> (scdr (cdr s)))
> def args: : (<object 426220> (scddr (cdr scdr)))
> def args: : (<object 426292> (scdr (cdr s)))
> def args: : (<object 426292> (scddr (cdr scdr)))
> def args: : (<object 426360> (scdr (cdr s)))
> def args: : (<object 426360> (scddr (cdr scdr)))
> def args: : (<object 426432> (scdr (cdr s)))
> def args: : (<object 426432> (scddr (cdr scdr)))
> def args: : (<object 426500> (scdr (cdr s)))
> def args: : (<object 426500> (scddr (cdr scdr)))
> def args: : (<object 426572> (scdr (cdr s)))
> def args: : (<object 426572> (scddr (cdr scdr)))
> def args: : (<object 426640> (scdr (cdr s)))
> def args: : (<object 426640> (scddr (cdr scdr)))
> def args: : (<object 426712> (scdr (cdr s)))
> def args: : (<object 426712> (scddr (cdr scdr)))
> 1176def args: : (<object 435096> (env (if (null? @) # (car @))))
>  def args: : (<object 435203> (env (if (null? @) # (car @))))
> def args: : (<object 435323> (scdr (cdr s)))
> def args: : (<object 435323> (scddr (cdr scdr)))
> def args: : (<object 435395> (scdr (cdr s)))
> def args: : (<object 435395> (scddr (cdr scdr)))
> def args: : (<object 435467> (scdr (cdr s)))
> def args: : (<object 435467> (scddr (cdr scdr)))
> def args: : (<object 435535> (scdr (cdr s)))
> def args: : (<object 435535> (scddr (cdr scdr)))
> def args: : (<object 435774> (scdr (cdr s)))
> def args: : (<object 435774> (scddr (cdr scdr)))
> def args: : (<object 435846> (scdr (cdr s)))
> def args: : (<object 435846> (scddr (cdr scdr)))
> def args: : (<object 435914> (scdr (cdr s)))
> def args: : (<object 435914> (scddr (cdr scdr)))
> def args: : (<object 435986> (scdr (cdr s)))
> def args: : (<object 435986> (scddr (cdr scdr)))
> def args: : (<object 436054> (scdr (cdr s)))
> def args: : (<object 436054> (scddr (cdr scdr)))
> def args: : (<object 436126> (scdr (cdr s)))
> def args: : (<object 436126> (scddr (cdr scdr)))
> def args: : (<object 436194> (scdr (cdr s)))
> def args: : (<object 436194> (scddr (cdr scdr)))
> def args: : (<object 436266> (scdr (cdr s)))
> def args: : (<object 436266> (scddr (cdr scdr)))
> def args: : (<object 436334> (scdr (cdr s)))
> def args: : (<object 436334> (scddr (cdr scdr)))
> def args: : (<object 436406> (scdr (cdr s)))
> def args: : (<object 436406> (scddr (cdr scdr)))
> def args: : (<object 436474> (scdr (cdr s)))
> def args: : (<object 436474> (scddr (cdr scdr)))
> def args: : (<object 436546> (scdr (cdr s)))
> def args: : (<object 436546> (scddr (cdr scdr)))
> def args: : (<object 436614> (scdr (cdr s)))
> def args: : (<object 436614> (scddr (cdr scdr)))
> def args: : (<object 436686> (scdr (cdr s)))
> def args: : (<object 436686> (scddr (cdr scdr)))
> def args: : (<object 436754> (scdr (cdr s)))
> def args: : (<object 436754> (scddr (cdr scdr)))
> def args: : (<object 436826> (scdr (cdr s)))
> def args: : (<object 436826> (scddr (cdr scdr)))
> def args: : (<object 436894> (scdr (cdr s)))
> def args: : (<object 436894> (scddr (cdr scdr)))
> def args: : (<object 436966> (scdr (cdr s)))
> def args: : (<object 436966> (scddr (cdr scdr)))
> def args: : (<object 437034> (scdr (cdr s)))
> def args: : (<object 437034> (scddr (cdr scdr)))
> def args: : (<object 437106> (scdr (cdr s)))
> def args: : (<object 437106> (scddr (cdr scdr)))
> def args: : (<object 437174> (scdr (cdr s)))
> def args: : (<object 437174> (scddr (cdr scdr)))
> def args: : (<object 437246> (scdr (cdr s)))
> def args: : (<object 437246> (scddr (cdr scdr)))
> def args: : (<object 437314> (scdr (cdr s)))
> def args: : (<object 437314> (scddr (cdr scdr)))
> def args: : (<object 437386> (scdr (cdr s)))
> def args: : (<object 437386> (scddr (cdr scdr)))
> def args: : (<object 437454> (scdr (cdr s)))
> def args: : (<object 437454> (scddr (cdr scdr)))
> def args: : (<object 437526> (scdr (cdr s)))
> def args: : (<object 437526> (scddr (cdr scdr)))
> def args: : (<object 437594> (scdr (cdr s)))
> def args: : (<object 437594> (scddr (cdr scdr)))
> def args: : (<object 437666> (scdr (cdr s)))
> def args: : (<object 437666> (scddr (cdr scdr)))
> def args: : (<object 437734> (scdr (cdr s)))
> def args: : (<object 437734> (scddr (cdr scdr)))
> def args: : (<object 437806> (scdr (cdr s)))
> def args: : (<object 437806> (scddr (cdr scdr)))
> def args: : (<object 437874> (scdr (cdr s)))
> def args: : (<object 437874> (scddr (cdr scdr)))
> def args: : (<object 437946> (scdr (cdr s)))
> def args: : (<object 437946> (scddr (cdr scdr)))
> def args: : (<object 438014> (scdr (cdr s)))
> def args: : (<object 438014> (scddr (cdr scdr)))
> def args: : (<object 438086> (scdr (cdr s)))
> def args: : (<object 438086> (scddr (cdr scdr)))
> def args: : (<object 438154> (scdr (cdr s)))
> def args: : (<object 438154> (scddr (cdr scdr)))
> def args: : (<object 438226> (scdr (cdr s)))
> def args: : (<object 438226> (scddr (cdr scdr)))
> def args: : (<object 438294> (scdr (cdr s)))
> def args: : (<object 438294> (scddr (cdr scdr)))
> def args: : (<object 438366> (scdr (cdr s)))
> def args: : (<object 438366> (scddr (cdr scdr)))
> def args: : (<object 438434> (scdr (cdr s)))
> def args: : (<object 438434> (scddr (cdr scdr)))
> def args: : (<object 438506> (scdr (cdr s)))
> def args: : (<object 438506> (scddr (cdr scdr)))
> def args: : (<object 438574> (scdr (cdr s)))
> def args: : (<object 438574> (scddr (cdr scdr)))
> def args: : (<object 438646> (scdr (cdr s)))
> def args: : (<object 438646> (scddr (cdr scdr)))
> def args: : (<object 438714> (scdr (cdr s)))
> def args: : (<object 438714> (scddr (cdr scdr)))
> def args: : (<object 438786> (scdr (cdr s)))
> def args: : (<object 438786> (scddr (cdr scdr)))
> def args: : (<object 438854> (scdr (cdr s)))
> def args: : (<object 438854> (scddr (cdr scdr)))
> def args: : (<object 438926> (scdr (cdr s)))
> def args: : (<object 438926> (scddr (cdr scdr)))
> def args: : (<object 438994> (scdr (cdr s)))
> def args: : (<object 438994> (scddr (cdr scdr)))
> def args: : (<object 439066> (scdr (cdr s)))
> def args: : (<object 439066> (scddr (cdr scdr)))
> def args: : (<object 439134> (scdr (cdr s)))
> def args: : (<object 439134> (scddr (cdr scdr)))
> def args: : (<object 439206> (scdr (cdr s)))
> def args: : (<object 439206> (scddr (cdr scdr)))
> def args: : (<object 439274> (scdr (cdr s)))
> def args: : (<object 439274> (scddr (cdr scdr)))
> def args: : (<object 439346> (scdr (cdr s)))
> def args: : (<object 439346> (scddr (cdr scdr)))
> def args: : (<object 439414> (scdr (cdr s)))
> def args: : (<object 439414> (scddr (cdr scdr)))
> def args: : (<object 439486> (scdr (cdr s)))
> def args: : (<object 439486> (scddr (cdr scdr)))
> def args: : (<object 439554> (scdr (cdr s)))
> def args: : (<object 439554> (scddr (cdr scdr)))
> def args: : (<object 439626> (scdr (cdr s)))
> def args: : (<object 439626> (scddr (cdr scdr)))
> def args: : (<object 439694> (scdr (cdr s)))
> def args: : (<object 439694> (scddr (cdr scdr)))
> def args: : (<object 439766> (scdr (cdr s)))
> def args: : (<object 439766> (scddr (cdr scdr)))
> def args: : (<object 439834> (scdr (cdr s)))
> def args: : (<object 439834> (scddr (cdr scdr)))
> def args: : (<object 439906> (scdr (cdr s)))
> def args: : (<object 439906> (scddr (cdr scdr)))
> def args: : (<object 439974> (scdr (cdr s)))
> def args: : (<object 439974> (scddr (cdr scdr)))
> def args: : (<object 440046> (scdr (cdr s)))
> def args: : (<object 440046> (scddr (cdr scdr)))
> def args: : (<object 440114> (scdr (cdr s)))
> def args: : (<object 440114> (scddr (cdr scdr)))
> def args: : (<object 440186> (scdr (cdr s)))
> def args: : (<object 440186> (scddr (cdr scdr)))
> def args: : (<object 440254> (scdr (cdr s)))
> def args: : (<object 440254> (scddr (cdr scdr)))
> def args: : (<object 440326> (scdr (cdr s)))
> def args: : (<object 440326> (scddr (cdr scdr)))
> def args: : (<object 440394> (scdr (cdr s)))
> def args: : (<object 440394> (scddr (cdr scdr)))
> def args: : (<object 440466> (scdr (cdr s)))
> def args: : (<object 440466> (scddr (cdr scdr)))
> def args: : (<object 440534> (scdr (cdr s)))
> def args: : (<object 440534> (scddr (cdr scdr)))
> def args: : (<object 440606> (scdr (cdr s)))
> def args: : (<object 440606> (scddr (cdr scdr)))
> def args: : (<object 440674> (scdr (cdr s)))
> def args: : (<object 440674> (scddr (cdr scdr)))
> def args: : (<object 440746> (scdr (cdr s)))
> def args: : (<object 440746> (scddr (cdr scdr)))
> def args: : (<object 440814> (scdr (cdr s)))
> def args: : (<object 440814> (scddr (cdr scdr)))
> def args: : (<object 440886> (scdr (cdr s)))
> def args: : (<object 440886> (scddr (cdr scdr)))
> def args: : (<object 440954> (scdr (cdr s)))
> def args: : (<object 440954> (scddr (cdr scdr)))
> def args: : (<object 441026> (scdr (cdr s)))
> def args: : (<object 441026> (scddr (cdr scdr)))
> def args: : (<object 441094> (scdr (cdr s)))
> def args: : (<object 441094> (scddr (cdr scdr)))
> def args: : (<object 441166> (scdr (cdr s)))
> def args: : (<object 441166> (scddr (cdr scdr)))
> def args: : (<object 441234> (scdr (cdr s)))
> def args: : (<object 441234> (scddr (cdr scdr)))
> def args: : (<object 441306> (scdr (cdr s)))
> def args: : (<object 441306> (scddr (cdr scdr)))
> def args: : (<object 441374> (scdr (cdr s)))
> def args: : (<object 441374> (scddr (cdr scdr)))
> def args: : (<object 441446> (scdr (cdr s)))
> def args: : (<object 441446> (scddr (cdr scdr)))
> def args: : (<object 441514> (scdr (cdr s)))
> def args: : (<object 441514> (scddr (cdr scdr)))
> def args: : (<object 441586> (scdr (cdr s)))
> def args: : (<object 441586> (scddr (cdr scdr)))
> def args: : (<object 441654> (scdr (cdr s)))
> def args: : (<object 441654> (scddr (cdr scdr)))
> def args: : (<object 441726> (scdr (cdr s)))
> def args: : (<object 441726> (scddr (cdr scdr)))
> def args: : (<object 441794> (scdr (cdr s)))
> def args: : (<object 441794> (scddr (cdr scdr)))
> def args: : (<object 441866> (scdr (cdr s)))
> def args: : (<object 441866> (scddr (cdr scdr)))
> def args: : (<object 441934> (scdr (cdr s)))
> def args: : (<object 441934> (scddr (cdr scdr)))
> def args: : (<object 442006> (scdr (cdr s)))
> def args: : (<object 442006> (scddr (cdr scdr)))
> def args: : (<object 442074> (scdr (cdr s)))
> def args: : (<object 442074> (scddr (cdr scdr)))
> def args: : (<object 442146> (scdr (cdr s)))
> def args: : (<object 442146> (scddr (cdr scdr)))
> def args: : (<object 442214> (scdr (cdr s)))
> def args: : (<object 442214> (scddr (cdr scdr)))
> def args: : (<object 442286> (scdr (cdr s)))
> def args: : (<object 442286> (scddr (cdr scdr)))
> 1225def args: : (<object 450841> (env (if (null? @) # (car @))))
>  def args: : (<object 450948> (env (if (null? @) # (car @))))
> def args: : (<object 451068> (scdr (cdr s)))
> def args: : (<object 451068> (scddr (cdr scdr)))
> def args: : (<object 451140> (scdr (cdr s)))
> def args: : (<object 451140> (scddr (cdr scdr)))
> def args: : (<object 451212> (scdr (cdr s)))
> def args: : (<object 451212> (scddr (cdr scdr)))
> def args: : (<object 451280> (scdr (cdr s)))
> def args: : (<object 451280> (scddr (cdr scdr)))
> def args: : (<object 451519> (scdr (cdr s)))
> def args: : (<object 451519> (scddr (cdr scdr)))
> def args: : (<object 451591> (scdr (cdr s)))
> def args: : (<object 451591> (scddr (cdr scdr)))
> def args: : (<object 451659> (scdr (cdr s)))
> def args: : (<object 451659> (scddr (cdr scdr)))
> def args: : (<object 451731> (scdr (cdr s)))
> def args: : (<object 451731> (scddr (cdr scdr)))
> def args: : (<object 451799> (scdr (cdr s)))
> def args: : (<object 451799> (scddr (cdr scdr)))
> def args: : (<object 451871> (scdr (cdr s)))
> def args: : (<object 451871> (scddr (cdr scdr)))
> def args: : (<object 451939> (scdr (cdr s)))
> def args: : (<object 451939> (scddr (cdr scdr)))
> def args: : (<object 452011> (scdr (cdr s)))
> def args: : (<object 452011> (scddr (cdr scdr)))
> def args: : (<object 452079> (scdr (cdr s)))
> def args: : (<object 452079> (scddr (cdr scdr)))
> def args: : (<object 452151> (scdr (cdr s)))
> def args: : (<object 452151> (scddr (cdr scdr)))
> def args: : (<object 452219> (scdr (cdr s)))
> def args: : (<object 452219> (scddr (cdr scdr)))
> def args: : (<object 452291> (scdr (cdr s)))
> def args: : (<object 452291> (scddr (cdr scdr)))
> def args: : (<object 452359> (scdr (cdr s)))
> def args: : (<object 452359> (scddr (cdr scdr)))
> def args: : (<object 452431> (scdr (cdr s)))
> def args: : (<object 452431> (scddr (cdr scdr)))
> def args: : (<object 452499> (scdr (cdr s)))
> def args: : (<object 452499> (scddr (cdr scdr)))
> def args: : (<object 452571> (scdr (cdr s)))
> def args: : (<object 452571> (scddr (cdr scdr)))
> def args: : (<object 452639> (scdr (cdr s)))
> def args: : (<object 452639> (scddr (cdr scdr)))
> def args: : (<object 452711> (scdr (cdr s)))
> def args: : (<object 452711> (scddr (cdr scdr)))
> def args: : (<object 452779> (scdr (cdr s)))
> def args: : (<object 452779> (scddr (cdr scdr)))
> def args: : (<object 452851> (scdr (cdr s)))
> def args: : (<object 452851> (scddr (cdr scdr)))
> def args: : (<object 452919> (scdr (cdr s)))
> def args: : (<object 452919> (scddr (cdr scdr)))
> def args: : (<object 452991> (scdr (cdr s)))
> def args: : (<object 452991> (scddr (cdr scdr)))
> def args: : (<object 453059> (scdr (cdr s)))
> def args: : (<object 453059> (scddr (cdr scdr)))
> def args: : (<object 453131> (scdr (cdr s)))
> def args: : (<object 453131> (scddr (cdr scdr)))
> def args: : (<object 453199> (scdr (cdr s)))
> def args: : (<object 453199> (scddr (cdr scdr)))
> def args: : (<object 453271> (scdr (cdr s)))
> def args: : (<object 453271> (scddr (cdr scdr)))
> def args: : (<object 453339> (scdr (cdr s)))
> def args: : (<object 453339> (scddr (cdr scdr)))
> def args: : (<object 453411> (scdr (cdr s)))
> def args: : (<object 453411> (scddr (cdr scdr)))
> def args: : (<object 453479> (scdr (cdr s)))
> def args: : (<object 453479> (scddr (cdr scdr)))
> def args: : (<object 453551> (scdr (cdr s)))
> def args: : (<object 453551> (scddr (cdr scdr)))
> def args: : (<object 453619> (scdr (cdr s)))
> def args: : (<object 453619> (scddr (cdr scdr)))
> def args: : (<object 453691> (scdr (cdr s)))
> def args: : (<object 453691> (scddr (cdr scdr)))
> def args: : (<object 453759> (scdr (cdr s)))
> def args: : (<object 453759> (scddr (cdr scdr)))
> def args: : (<object 453831> (scdr (cdr s)))
> def args: : (<object 453831> (scddr (cdr scdr)))
> def args: : (<object 453899> (scdr (cdr s)))
> def args: : (<object 453899> (scddr (cdr scdr)))
> def args: : (<object 453971> (scdr (cdr s)))
> def args: : (<object 453971> (scddr (cdr scdr)))
> def args: : (<object 454039> (scdr (cdr s)))
> def args: : (<object 454039> (scddr (cdr scdr)))
> def args: : (<object 454111> (scdr (cdr s)))
> def args: : (<object 454111> (scddr (cdr scdr)))
> def args: : (<object 454179> (scdr (cdr s)))
> def args: : (<object 454179> (scddr (cdr scdr)))
> def args: : (<object 454251> (scdr (cdr s)))
> def args: : (<object 454251> (scddr (cdr scdr)))
> def args: : (<object 454319> (scdr (cdr s)))
> def args: : (<object 454319> (scddr (cdr scdr)))
> def args: : (<object 454391> (scdr (cdr s)))
> def args: : (<object 454391> (scddr (cdr scdr)))
> def args: : (<object 454459> (scdr (cdr s)))
> def args: : (<object 454459> (scddr (cdr scdr)))
> def args: : (<object 454531> (scdr (cdr s)))
> def args: : (<object 454531> (scddr (cdr scdr)))
> def args: : (<object 454599> (scdr (cdr s)))
> def args: : (<object 454599> (scddr (cdr scdr)))
> def args: : (<object 454671> (scdr (cdr s)))
> def args: : (<object 454671> (scddr (cdr scdr)))
> def args: : (<object 454739> (scdr (cdr s)))
> def args: : (<object 454739> (scddr (cdr scdr)))
> def args: : (<object 454811> (scdr (cdr s)))
> def args: : (<object 454811> (scddr (cdr scdr)))
> def args: : (<object 454879> (scdr (cdr s)))
> def args: : (<object 454879> (scddr (cdr scdr)))
> def args: : (<object 454951> (scdr (cdr s)))
> def args: : (<object 454951> (scddr (cdr scdr)))
> def args: : (<object 455019> (scdr (cdr s)))
> def args: : (<object 455019> (scddr (cdr scdr)))
> def args: : (<object 455091> (scdr (cdr s)))
> def args: : (<object 455091> (scddr (cdr scdr)))
> def args: : (<object 455159> (scdr (cdr s)))
> def args: : (<object 455159> (scddr (cdr scdr)))
> def args: : (<object 455231> (scdr (cdr s)))
> def args: : (<object 455231> (scddr (cdr scdr)))
> def args: : (<object 455299> (scdr (cdr s)))
> def args: : (<object 455299> (scddr (cdr scdr)))
> def args: : (<object 455371> (scdr (cdr s)))
> def args: : (<object 455371> (scddr (cdr scdr)))
> def args: : (<object 455439> (scdr (cdr s)))
> def args: : (<object 455439> (scddr (cdr scdr)))
> def args: : (<object 455511> (scdr (cdr s)))
> def args: : (<object 455511> (scddr (cdr scdr)))
> def args: : (<object 455579> (scdr (cdr s)))
> def args: : (<object 455579> (scddr (cdr scdr)))
> def args: : (<object 455651> (scdr (cdr s)))
> def args: : (<object 455651> (scddr (cdr scdr)))
> def args: : (<object 455719> (scdr (cdr s)))
> def args: : (<object 455719> (scddr (cdr scdr)))
> def args: : (<object 455791> (scdr (cdr s)))
> def args: : (<object 455791> (scddr (cdr scdr)))
> def args: : (<object 455859> (scdr (cdr s)))
> def args: : (<object 455859> (scddr (cdr scdr)))
> def args: : (<object 455931> (scdr (cdr s)))
> def args: : (<object 455931> (scddr (cdr scdr)))
> def args: : (<object 455999> (scdr (cdr s)))
> def args: : (<object 455999> (scddr (cdr scdr)))
> def args: : (<object 456071> (scdr (cdr s)))
> def args: : (<object 456071> (scddr (cdr scdr)))
> def args: : (<object 456139> (scdr (cdr s)))
> def args: : (<object 456139> (scddr (cdr scdr)))
> def args: : (<object 456211> (scdr (cdr s)))
> def args: : (<object 456211> (scddr (cdr scdr)))
> def args: : (<object 456279> (scdr (cdr s)))
> def args: : (<object 456279> (scddr (cdr scdr)))
> def args: : (<object 456351> (scdr (cdr s)))
> def args: : (<object 456351> (scddr (cdr scdr)))
> def args: : (<object 456419> (scdr (cdr s)))
> def args: : (<object 456419> (scddr (cdr scdr)))
> def args: : (<object 456491> (scdr (cdr s)))
> def args: : (<object 456491> (scddr (cdr scdr)))
> def args: : (<object 456559> (scdr (cdr s)))
> def args: : (<object 456559> (scddr (cdr scdr)))
> def args: : (<object 456631> (scdr (cdr s)))
> def args: : (<object 456631> (scddr (cdr scdr)))
> def args: : (<object 456699> (scdr (cdr s)))
> def args: : (<object 456699> (scddr (cdr scdr)))
> def args: : (<object 456771> (scdr (cdr s)))
> def args: : (<object 456771> (scddr (cdr scdr)))
> def args: : (<object 456839> (scdr (cdr s)))
> def args: : (<object 456839> (scddr (cdr scdr)))
> def args: : (<object 456911> (scdr (cdr s)))
> def args: : (<object 456911> (scddr (cdr scdr)))
> def args: : (<object 456979> (scdr (cdr s)))
> def args: : (<object 456979> (scddr (cdr scdr)))
> def args: : (<object 457051> (scdr (cdr s)))
> def args: : (<object 457051> (scddr (cdr scdr)))
> def args: : (<object 457119> (scdr (cdr s)))
> def args: : (<object 457119> (scddr (cdr scdr)))
> def args: : (<object 457191> (scdr (cdr s)))
> def args: : (<object 457191> (scddr (cdr scdr)))
> def args: : (<object 457259> (scdr (cdr s)))
> def args: : (<object 457259> (scddr (cdr scdr)))
> def args: : (<object 457331> (scdr (cdr s)))
> def args: : (<object 457331> (scddr (cdr scdr)))
> def args: : (<object 457399> (scdr (cdr s)))
> def args: : (<object 457399> (scddr (cdr scdr)))
> def args: : (<object 457471> (scdr (cdr s)))
> def args: : (<object 457471> (scddr (cdr scdr)))
> def args: : (<object 457539> (scdr (cdr s)))
> def args: : (<object 457539> (scddr (cdr scdr)))
> def args: : (<object 457611> (scdr (cdr s)))
> def args: : (<object 457611> (scddr (cdr scdr)))
> def args: : (<object 457679> (scdr (cdr s)))
> def args: : (<object 457679> (scddr (cdr scdr)))
> def args: : (<object 457751> (scdr (cdr s)))
> def args: : (<object 457751> (scddr (cdr scdr)))
> def args: : (<object 457819> (scdr (cdr s)))
> def args: : (<object 457819> (scddr (cdr scdr)))
> def args: : (<object 457891> (scdr (cdr s)))
> def args: : (<object 457891> (scddr (cdr scdr)))
> def args: : (<object 457959> (scdr (cdr s)))
> def args: : (<object 457959> (scddr (cdr scdr)))
> def args: : (<object 458031> (scdr (cdr s)))
> def args: : (<object 458031> (scddr (cdr scdr)))
> def args: : (<object 458099> (scdr (cdr s)))
> def args: : (<object 458099> (scddr (cdr scdr)))
> def args: : (<object 458171> (scdr (cdr s)))
> def args: : (<object 458171> (scddr (cdr scdr)))
> 1275def args: : (<object 466897> (env (if (null? @) # (car @))))
>  def args: : (<object 467004> (env (if (null? @) # (car @))))
> def args: : (<object 467124> (scdr (cdr s)))
> def args: : (<object 467124> (scddr (cdr scdr)))
> def args: : (<object 467196> (scdr (cdr s)))
> def args: : (<object 467196> (scddr (cdr scdr)))
> def args: : (<object 467268> (scdr (cdr s)))
> def args: : (<object 467268> (scddr (cdr scdr)))
> def args: : (<object 467336> (scdr (cdr s)))
> def args: : (<object 467336> (scddr (cdr scdr)))
> def args: : (<object 467575> (scdr (cdr s)))
> def args: : (<object 467575> (scddr (cdr scdr)))
> def args: : (<object 467647> (scdr (cdr s)))
> def args: : (<object 467647> (scddr (cdr scdr)))
> def args: : (<object 467715> (scdr (cdr s)))
> def args: : (<object 467715> (scddr (cdr scdr)))
> def args: : (<object 467787> (scdr (cdr s)))
> def args: : (<object 467787> (scddr (cdr scdr)))
> def args: : (<object 467855> (scdr (cdr s)))
> def args: : (<object 467855> (scddr (cdr scdr)))
> def args: : (<object 467927> (scdr (cdr s)))
> def args: : (<object 467927> (scddr (cdr scdr)))
> def args: : (<object 467995> (scdr (cdr s)))
> def args: : (<object 467995> (scddr (cdr scdr)))
> def args: : (<object 468067> (scdr (cdr s)))
> def args: : (<object 468067> (scddr (cdr scdr)))
> def args: : (<object 468135> (scdr (cdr s)))
> def args: : (<object 468135> (scddr (cdr scdr)))
> def args: : (<object 468207> (scdr (cdr s)))
> def args: : (<object 468207> (scddr (cdr scdr)))
> def args: : (<object 468275> (scdr (cdr s)))
> def args: : (<object 468275> (scddr (cdr scdr)))
> def args: : (<object 468347> (scdr (cdr s)))
> def args: : (<object 468347> (scddr (cdr scdr)))
> def args: : (<object 468415> (scdr (cdr s)))
> def args: : (<object 468415> (scddr (cdr scdr)))
> def args: : (<object 468487> (scdr (cdr s)))
> def args: : (<object 468487> (scddr (cdr scdr)))
> def args: : (<object 468555> (scdr (cdr s)))
> def args: : (<object 468555> (scddr (cdr scdr)))
> def args: : (<object 468627> (scdr (cdr s)))
> def args: : (<object 468627> (scddr (cdr scdr)))
> def args: : (<object 468695> (scdr (cdr s)))
> def args: : (<object 468695> (scddr (cdr scdr)))
> def args: : (<object 468767> (scdr (cdr s)))
> def args: : (<object 468767> (scddr (cdr scdr)))
> def args: : (<object 468835> (scdr (cdr s)))
> def args: : (<object 468835> (scddr (cdr scdr)))
> def args: : (<object 468907> (scdr (cdr s)))
> def args: : (<object 468907> (scddr (cdr scdr)))
> def args: : (<object 468975> (scdr (cdr s)))
> def args: : (<object 468975> (scddr (cdr scdr)))
> def args: : (<object 469047> (scdr (cdr s)))
> def args: : (<object 469047> (scddr (cdr scdr)))
> def args: : (<object 469115> (scdr (cdr s)))
> def args: : (<object 469115> (scddr (cdr scdr)))
> def args: : (<object 469187> (scdr (cdr s)))
> def args: : (<object 469187> (scddr (cdr scdr)))
> def args: : (<object 469255> (scdr (cdr s)))
> def args: : (<object 469255> (scddr (cdr scdr)))
> def args: : (<object 469327> (scdr (cdr s)))
> def args: : (<object 469327> (scddr (cdr scdr)))
> def args: : (<object 469395> (scdr (cdr s)))
> def args: : (<object 469395> (scddr (cdr scdr)))
> def args: : (<object 469467> (scdr (cdr s)))
> def args: : (<object 469467> (scddr (cdr scdr)))
> def args: : (<object 469535> (scdr (cdr s)))
> def args: : (<object 469535> (scddr (cdr scdr)))
> def args: : (<object 469607> (scdr (cdr s)))
> def args: : (<object 469607> (scddr (cdr scdr)))
> def args: : (<object 469675> (scdr (cdr s)))
> def args: : (<object 469675> (scddr (cdr scdr)))
> def args: : (<object 469747> (scdr (cdr s)))
> def args: : (<object 469747> (scddr (cdr scdr)))
> def args: : (<object 469815> (scdr (cdr s)))
> def args: : (<object 469815> (scddr (cdr scdr)))
> def args: : (<object 469887> (scdr (cdr s)))
> def args: : (<object 469887> (scddr (cdr scdr)))
> def args: : (<object 469955> (scdr (cdr s)))
> def args: : (<object 469955> (scddr (cdr scdr)))
> def args: : (<object 470027> (scdr (cdr s)))
> def args: : (<object 470027> (scddr (cdr scdr)))
> def args: : (<object 470095> (scdr (cdr s)))
> def args: : (<object 470095> (scddr (cdr scdr)))
> def args: : (<object 470167> (scdr (cdr s)))
> def args: : (<object 470167> (scddr (cdr scdr)))
> def args: : (<object 470235> (scdr (cdr s)))
> def args: : (<object 470235> (scddr (cdr scdr)))
> def args: : (<object 470307> (scdr (cdr s)))
> def args: : (<object 470307> (scddr (cdr scdr)))
> def args: : (<object 470375> (scdr (cdr s)))
> def args: : (<object 470375> (scddr (cdr scdr)))
> def args: : (<object 470447> (scdr (cdr s)))
> def args: : (<object 470447> (scddr (cdr scdr)))
> def args: : (<object 470515> (scdr (cdr s)))
> def args: : (<object 470515> (scddr (cdr scdr)))
> def args: : (<object 470587> (scdr (cdr s)))
> def args: : (<object 470587> (scddr (cdr scdr)))
> def args: : (<object 470655> (scdr (cdr s)))
> def args: : (<object 470655> (scddr (cdr scdr)))
> def args: : (<object 470727> (scdr (cdr s)))
> def args: : (<object 470727> (scddr (cdr scdr)))
> def args: : (<object 470795> (scdr (cdr s)))
> def args: : (<object 470795> (scddr (cdr scdr)))
> def args: : (<object 470867> (scdr (cdr s)))
> def args: : (<object 470867> (scddr (cdr scdr)))
> def args: : (<object 470935> (scdr (cdr s)))
> def args: : (<object 470935> (scddr (cdr scdr)))
> def args: : (<object 471007> (scdr (cdr s)))
> def args: : (<object 471007> (scddr (cdr scdr)))
> def args: : (<object 471075> (scdr (cdr s)))
> def args: : (<object 471075> (scddr (cdr scdr)))
> def args: : (<object 471147> (scdr (cdr s)))
> def args: : (<object 471147> (scddr (cdr scdr)))
> def args: : (<object 471215> (scdr (cdr s)))
> def args: : (<object 471215> (scddr (cdr scdr)))
> def args: : (<object 471287> (scdr (cdr s)))
> def args: : (<object 471287> (scddr (cdr scdr)))
> def args: : (<object 471355> (scdr (cdr s)))
> def args: : (<object 471355> (scddr (cdr scdr)))
> def args: : (<object 471427> (scdr (cdr s)))
> def args: : (<object 471427> (scddr (cdr scdr)))
> def args: : (<object 471495> (scdr (cdr s)))
> def args: : (<object 471495> (scddr (cdr scdr)))
> def args: : (<object 471567> (scdr (cdr s)))
> def args: : (<object 471567> (scddr (cdr scdr)))
> def args: : (<object 471635> (scdr (cdr s)))
> def args: : (<object 471635> (scddr (cdr scdr)))
> def args: : (<object 471707> (scdr (cdr s)))
> def args: : (<object 471707> (scddr (cdr scdr)))
> def args: : (<object 471775> (scdr (cdr s)))
> def args: : (<object 471775> (scddr (cdr scdr)))
> def args: : (<object 471847> (scdr (cdr s)))
> def args: : (<object 471847> (scddr (cdr scdr)))
> def args: : (<object 471915> (scdr (cdr s)))
> def args: : (<object 471915> (scddr (cdr scdr)))
> def args: : (<object 471987> (scdr (cdr s)))
> def args: : (<object 471987> (scddr (cdr scdr)))
> def args: : (<object 472055> (scdr (cdr s)))
> def args: : (<object 472055> (scddr (cdr scdr)))
> def args: : (<object 472127> (scdr (cdr s)))
> def args: : (<object 472127> (scddr (cdr scdr)))
> def args: : (<object 472195> (scdr (cdr s)))
> def args: : (<object 472195> (scddr (cdr scdr)))
> def args: : (<object 472267> (scdr (cdr s)))
> def args: : (<object 472267> (scddr (cdr scdr)))
> def args: : (<object 472335> (scdr (cdr s)))
> def args: : (<object 472335> (scddr (cdr scdr)))
> def args: : (<object 472407> (scdr (cdr s)))
> def args: : (<object 472407> (scddr (cdr scdr)))
> def args: : (<object 472475> (scdr (cdr s)))
> def args: : (<object 472475> (scddr (cdr scdr)))
> def args: : (<object 472547> (scdr (cdr s)))
> def args: : (<object 472547> (scddr (cdr scdr)))
> def args: : (<object 472615> (scdr (cdr s)))
> def args: : (<object 472615> (scddr (cdr scdr)))
> def args: : (<object 472687> (scdr (cdr s)))
> def args: : (<object 472687> (scddr (cdr scdr)))
> def args: : (<object 472755> (scdr (cdr s)))
> def args: : (<object 472755> (scddr (cdr scdr)))
> def args: : (<object 472827> (scdr (cdr s)))
> def args: : (<object 472827> (scddr (cdr scdr)))
> def args: : (<object 472895> (scdr (cdr s)))
> def args: : (<object 472895> (scddr (cdr scdr)))
> def args: : (<object 472967> (scdr (cdr s)))
> def args: : (<object 472967> (scddr (cdr scdr)))
> def args: : (<object 473035> (scdr (cdr s)))
> def args: : (<object 473035> (scddr (cdr scdr)))
> def args: : (<object 473107> (scdr (cdr s)))
> def args: : (<object 473107> (scddr (cdr scdr)))
> def args: : (<object 473175> (scdr (cdr s)))
> def args: : (<object 473175> (scddr (cdr scdr)))
> def args: : (<object 473247> (scdr (cdr s)))
> def args: : (<object 473247> (scddr (cdr scdr)))
> def args: : (<object 473315> (scdr (cdr s)))
> def args: : (<object 473315> (scddr (cdr scdr)))
> def args: : (<object 473387> (scdr (cdr s)))
> def args: : (<object 473387> (scddr (cdr scdr)))
> def args: : (<object 473455> (scdr (cdr s)))
> def args: : (<object 473455> (scddr (cdr scdr)))
> def args: : (<object 473527> (scdr (cdr s)))
> def args: : (<object 473527> (scddr (cdr scdr)))
> def args: : (<object 473595> (scdr (cdr s)))
> def args: : (<object 473595> (scddr (cdr scdr)))
> def args: : (<object 473667> (scdr (cdr s)))
> def args: : (<object 473667> (scddr (cdr scdr)))
> def args: : (<object 473735> (scdr (cdr s)))
> def args: : (<object 473735> (scddr (cdr scdr)))
> def args: : (<object 473807> (scdr (cdr s)))
> def args: : (<object 473807> (scddr (cdr scdr)))
> def args: : (<object 473875> (scdr (cdr s)))
> def args: : (<object 473875> (scddr (cdr scdr)))
> def args: : (<object 473947> (scdr (cdr s)))
> def args: : (<object 473947> (scddr (cdr scdr)))
> def args: : (<object 474015> (scdr (cdr s)))
> def args: : (<object 474015> (scddr (cdr scdr)))
> def args: : (<object 474087> (scdr (cdr s)))
> def args: : (<object 474087> (scddr (cdr scdr)))
> def args: : (<object 474155> (scdr (cdr s)))
> def args: : (<object 474155> (scddr (cdr scdr)))
> def args: : (<object 474227> (scdr (cdr s)))
> def args: : (<object 474227> (scddr (cdr scdr)))
> def args: : (<object 474295> (scdr (cdr s)))
> def args: : (<object 474295> (scddr (cdr scdr)))
> def args: : (<object 474367> (scdr (cdr s)))
> def args: : (<object 474367> (scddr (cdr scdr)))
> 1326def args: : (<object 483264> (env (if (null? @) # (car @))))
>  def args: : (<object 483371> (env (if (null? @) # (car @))))
> def args: : (<object 483491> (scdr (cdr s)))
> def args: : (<object 483491> (scddr (cdr scdr)))
> def args: : (<object 483563> (scdr (cdr s)))
> def args: : (<object 483563> (scddr (cdr scdr)))
> def args: : (<object 483635> (scdr (cdr s)))
> def args: : (<object 483635> (scddr (cdr scdr)))
> def args: : (<object 483703> (scdr (cdr s)))
> def args: : (<object 483703> (scddr (cdr scdr)))
> def args: : (<object 483942> (scdr (cdr s)))
> def args: : (<object 483942> (scddr (cdr scdr)))
> def args: : (<object 484014> (scdr (cdr s)))
> def args: : (<object 484014> (scddr (cdr scdr)))
> def args: : (<object 484082> (scdr (cdr s)))
> def args: : (<object 484082> (scddr (cdr scdr)))
> def args: : (<object 484154> (scdr (cdr s)))
> def args: : (<object 484154> (scddr (cdr scdr)))
> def args: : (<object 484222> (scdr (cdr s)))
> def args: : (<object 484222> (scddr (cdr scdr)))
> def args: : (<object 484294> (scdr (cdr s)))
> def args: : (<object 484294> (scddr (cdr scdr)))
> def args: : (<object 484362> (scdr (cdr s)))
> def args: : (<object 484362> (scddr (cdr scdr)))
> def args: : (<object 484434> (scdr (cdr s)))
> def args: : (<object 484434> (scddr (cdr scdr)))
> def args: : (<object 484502> (scdr (cdr s)))
> def args: : (<object 484502> (scddr (cdr scdr)))
> def args: : (<object 484574> (scdr (cdr s)))
> def args: : (<object 484574> (scddr (cdr scdr)))
> def args: : (<object 484642> (scdr (cdr s)))
> def args: : (<object 484642> (scddr (cdr scdr)))
> def args: : (<object 484714> (scdr (cdr s)))
> def args: : (<object 484714> (scddr (cdr scdr)))
> def args: : (<object 484782> (scdr (cdr s)))
> def args: : (<object 484782> (scddr (cdr scdr)))
> def args: : (<object 484854> (scdr (cdr s)))
> def args: : (<object 484854> (scddr (cdr scdr)))
> def args: : (<object 484922> (scdr (cdr s)))
> def args: : (<object 484922> (scddr (cdr scdr)))
> def args: : (<object 484994> (scdr (cdr s)))
> def args: : (<object 484994> (scddr (cdr scdr)))
> def args: : (<object 485062> (scdr (cdr s)))
> def args: : (<object 485062> (scddr (cdr scdr)))
> def args: : (<object 485134> (scdr (cdr s)))
> def args: : (<object 485134> (scddr (cdr scdr)))
> def args: : (<object 485202> (scdr (cdr s)))
> def args: : (<object 485202> (scddr (cdr scdr)))
> def args: : (<object 485274> (scdr (cdr s)))
> def args: : (<object 485274> (scddr (cdr scdr)))
> def args: : (<object 485342> (scdr (cdr s)))
> def args: : (<object 485342> (scddr (cdr scdr)))
> def args: : (<object 485414> (scdr (cdr s)))
> def args: : (<object 485414> (scddr (cdr scdr)))
> def args: : (<object 485482> (scdr (cdr s)))
> def args: : (<object 485482> (scddr (cdr scdr)))
> def args: : (<object 485554> (scdr (cdr s)))
> def args: : (<object 485554> (scddr (cdr scdr)))
> def args: : (<object 485622> (scdr (cdr s)))
> def args: : (<object 485622> (scddr (cdr scdr)))
> def args: : (<object 485694> (scdr (cdr s)))
> def args: : (<object 485694> (scddr (cdr scdr)))
> def args: : (<object 485762> (scdr (cdr s)))
> def args: : (<object 485762> (scddr (cdr scdr)))
> def args: : (<object 485834> (scdr (cdr s)))
> def args: : (<object 485834> (scddr (cdr scdr)))
> def args: : (<object 485902> (scdr (cdr s)))
> def args: : (<object 485902> (scddr (cdr scdr)))
> def args: : (<object 485974> (scdr (cdr s)))
> def args: : (<object 485974> (scddr (cdr scdr)))
> def args: : (<object 486042> (scdr (cdr s)))
> def args: : (<object 486042> (scddr (cdr scdr)))
> def args: : (<object 486114> (scdr (cdr s)))
> def args: : (<object 486114> (scddr (cdr scdr)))
> def args: : (<object 486182> (scdr (cdr s)))
> def args: : (<object 486182> (scddr (cdr scdr)))
> def args: : (<object 486254> (scdr (cdr s)))
> def args: : (<object 486254> (scddr (cdr scdr)))
> def args: : (<object 486322> (scdr (cdr s)))
> def args: : (<object 486322> (scddr (cdr scdr)))
> def args: : (<object 486394> (scdr (cdr s)))
> def args: : (<object 486394> (scddr (cdr scdr)))
> def args: : (<object 486462> (scdr (cdr s)))
> def args: : (<object 486462> (scddr (cdr scdr)))
> def args: : (<object 486534> (scdr (cdr s)))
> def args: : (<object 486534> (scddr (cdr scdr)))
> def args: : (<object 486602> (scdr (cdr s)))
> def args: : (<object 486602> (scddr (cdr scdr)))
> def args: : (<object 486674> (scdr (cdr s)))
> def args: : (<object 486674> (scddr (cdr scdr)))
> def args: : (<object 486742> (scdr (cdr s)))
> def args: : (<object 486742> (scddr (cdr scdr)))
> def args: : (<object 486814> (scdr (cdr s)))
> def args: : (<object 486814> (scddr (cdr scdr)))
> def args: : (<object 486882> (scdr (cdr s)))
> def args: : (<object 486882> (scddr (cdr scdr)))
> def args: : (<object 486954> (scdr (cdr s)))
> def args: : (<object 486954> (scddr (cdr scdr)))
> def args: : (<object 487022> (scdr (cdr s)))
> def args: : (<object 487022> (scddr (cdr scdr)))
> def args: : (<object 487094> (scdr (cdr s)))
> def args: : (<object 487094> (scddr (cdr scdr)))
> def args: : (<object 487162> (scdr (cdr s)))
> def args: : (<object 487162> (scddr (cdr scdr)))
> def args: : (<object 487234> (scdr (cdr s)))
> def args: : (<object 487234> (scddr (cdr scdr)))
> def args: : (<object 487302> (scdr (cdr s)))
> def args: : (<object 487302> (scddr (cdr scdr)))
> def args: : (<object 487374> (scdr (cdr s)))
> def args: : (<object 487374> (scddr (cdr scdr)))
> def args: : (<object 487442> (scdr (cdr s)))
> def args: : (<object 487442> (scddr (cdr scdr)))
> def args: : (<object 487514> (scdr (cdr s)))
> def args: : (<object 487514> (scddr (cdr scdr)))
> def args: : (<object 487582> (scdr (cdr s)))
> def args: : (<object 487582> (scddr (cdr scdr)))
> def args: : (<object 487654> (scdr (cdr s)))
> def args: : (<object 487654> (scddr (cdr scdr)))
> def args: : (<object 487722> (scdr (cdr s)))
> def args: : (<object 487722> (scddr (cdr scdr)))
> def args: : (<object 487794> (scdr (cdr s)))
> def args: : (<object 487794> (scddr (cdr scdr)))
> def args: : (<object 487862> (scdr (cdr s)))
> def args: : (<object 487862> (scddr (cdr scdr)))
> def args: : (<object 487934> (scdr (cdr s)))
> def args: : (<object 487934> (scddr (cdr scdr)))
> def args: : (<object 488002> (scdr (cdr s)))
> def args: : (<object 488002> (scddr (cdr scdr)))
> def args: : (<object 488074> (scdr (cdr s)))
> def args: : (<object 488074> (scddr (cdr scdr)))
> def args: : (<object 488142> (scdr (cdr s)))
> def args: : (<object 488142> (scddr (cdr scdr)))
> def args: : (<object 488214> (scdr (cdr s)))
> def args: : (<object 488214> (scddr (cdr scdr)))
> def args: : (<object 488282> (scdr (cdr s)))
> def args: : (<object 488282> (scddr (cdr scdr)))
> def args: : (<object 488354> (scdr (cdr s)))
> def args: : (<object 488354> (scddr (cdr scdr)))
> def args: : (<object 488422> (scdr (cdr s)))
> def args: : (<object 488422> (scddr (cdr scdr)))
> def args: : (<object 488494> (scdr (cdr s)))
> def args: : (<object 488494> (scddr (cdr scdr)))
> def args: : (<object 488562> (scdr (cdr s)))
> def args: : (<object 488562> (scddr (cdr scdr)))
> def args: : (<object 488634> (scdr (cdr s)))
> def args: : (<object 488634> (scddr (cdr scdr)))
> def args: : (<object 488702> (scdr (cdr s)))
> def args: : (<object 488702> (scddr (cdr scdr)))
> def args: : (<object 488774> (scdr (cdr s)))
> def args: : (<object 488774> (scddr (cdr scdr)))
> def args: : (<object 488842> (scdr (cdr s)))
> def args: : (<object 488842> (scddr (cdr scdr)))
> def args: : (<object 488914> (scdr (cdr s)))
> def args: : (<object 488914> (scddr (cdr scdr)))
> def args: : (<object 488982> (scdr (cdr s)))
> def args: : (<object 488982> (scddr (cdr scdr)))
> def args: : (<object 489054> (scdr (cdr s)))
> def args: : (<object 489054> (scddr (cdr scdr)))
> def args: : (<object 489122> (scdr (cdr s)))
> def args: : (<object 489122> (scddr (cdr scdr)))
> def args: : (<object 489194> (scdr (cdr s)))
> def args: : (<object 489194> (scddr (cdr scdr)))
> def args: : (<object 489262> (scdr (cdr s)))
> def args: : (<object 489262> (scddr (cdr scdr)))
> def args: : (<object 489334> (scdr (cdr s)))
> def args: : (<object 489334> (scddr (cdr scdr)))
> def args: : (<object 489402> (scdr (cdr s)))
> def args: : (<object 489402> (scddr (cdr scdr)))
> def args: : (<object 489474> (scdr (cdr s)))
> def args: : (<object 489474> (scddr (cdr scdr)))
> def args: : (<object 489542> (scdr (cdr s)))
> def args: : (<object 489542> (scddr (cdr scdr)))
> def args: : (<object 489614> (scdr (cdr s)))
> def args: : (<object 489614> (scddr (cdr scdr)))
> def args: : (<object 489682> (scdr (cdr s)))
> def args: : (<object 489682> (scddr (cdr scdr)))
> def args: : (<object 489754> (scdr (cdr s)))
> def args: : (<object 489754> (scddr (cdr scdr)))
> def args: : (<object 489822> (scdr (cdr s)))
> def args: : (<object 489822> (scddr (cdr scdr)))
> def args: : (<object 489894> (scdr (cdr s)))
> def args: : (<object 489894> (scddr (cdr scdr)))
> def args: : (<object 489962> (scdr (cdr s)))
> def args: : (<object 489962> (scddr (cdr scdr)))
> def args: : (<object 490034> (scdr (cdr s)))
> def args: : (<object 490034> (scddr (cdr scdr)))
> def args: : (<object 490102> (scdr (cdr s)))
> def args: : (<object 490102> (scddr (cdr scdr)))
> def args: : (<object 490174> (scdr (cdr s)))
> def args: : (<object 490174> (scddr (cdr scdr)))
> def args: : (<object 490242> (scdr (cdr s)))
> def args: : (<object 490242> (scddr (cdr scdr)))
> def args: : (<object 490314> (scdr (cdr s)))
> def args: : (<object 490314> (scddr (cdr scdr)))
> def args: : (<object 490382> (scdr (cdr s)))
> def args: : (<object 490382> (scddr (cdr scdr)))
> def args: : (<object 490454> (scdr (cdr s)))
> def args: : (<object 490454> (scddr (cdr scdr)))
> def args: : (<object 490522> (scdr (cdr s)))
> def args: : (<object 490522> (scddr (cdr scdr)))
> def args: : (<object 490594> (scdr (cdr s)))
> def args: : (<object 490594> (scddr (cdr scdr)))
> def args: : (<object 490662> (scdr (cdr s)))
> def args: : (<object 490662> (scddr (cdr scdr)))
> def args: : (<object 490734> (scdr (cdr s)))
> def args: : (<object 490734> (scddr (cdr scdr)))
> def args: : (<object 490802> (scdr (cdr s)))
> def args: : (<object 490802> (scddr (cdr scdr)))
> def args: : (<object 490874> (scdr (cdr s)))
> def args: : (<object 490874> (scddr (cdr scdr)))
> 1378def args: : (<object 499942> (env (if (null? @) # (car @))))
>  def args: : (<object 500049> (env (if (null? @) # (car @))))
> def args: : (<object 500169> (scdr (cdr s)))
> def args: : (<object 500169> (scddr (cdr scdr)))
> def args: : (<object 500241> (scdr (cdr s)))
> def args: : (<object 500241> (scddr (cdr scdr)))
> def args: : (<object 500313> (scdr (cdr s)))
> def args: : (<object 500313> (scddr (cdr scdr)))
> def args: : (<object 500381> (scdr (cdr s)))
> def args: : (<object 500381> (scddr (cdr scdr)))
> def args: : (<object 500620> (scdr (cdr s)))
> def args: : (<object 500620> (scddr (cdr scdr)))
> def args: : (<object 500692> (scdr (cdr s)))
> def args: : (<object 500692> (scddr (cdr scdr)))
> def args: : (<object 500760> (scdr (cdr s)))
> def args: : (<object 500760> (scddr (cdr scdr)))
> def args: : (<object 500832> (scdr (cdr s)))
> def args: : (<object 500832> (scddr (cdr scdr)))
> def args: : (<object 500900> (scdr (cdr s)))
> def args: : (<object 500900> (scddr (cdr scdr)))
> def args: : (<object 500972> (scdr (cdr s)))
> def args: : (<object 500972> (scddr (cdr scdr)))
> def args: : (<object 501040> (scdr (cdr s)))
> def args: : (<object 501040> (scddr (cdr scdr)))
> def args: : (<object 501112> (scdr (cdr s)))
> def args: : (<object 501112> (scddr (cdr scdr)))
> def args: : (<object 501180> (scdr (cdr s)))
> def args: : (<object 501180> (scddr (cdr scdr)))
> def args: : (<object 501252> (scdr (cdr s)))
> def args: : (<object 501252> (scddr (cdr scdr)))
> def args: : (<object 501320> (scdr (cdr s)))
> def args: : (<object 501320> (scddr (cdr scdr)))
> def args: : (<object 501392> (scdr (cdr s)))
> def args: : (<object 501392> (scddr (cdr scdr)))
> def args: : (<object 501460> (scdr (cdr s)))
> def args: : (<object 501460> (scddr (cdr scdr)))
> def args: : (<object 501532> (scdr (cdr s)))
> def args: : (<object 501532> (scddr (cdr scdr)))
> def args: : (<object 501600> (scdr (cdr s)))
> def args: : (<object 501600> (scddr (cdr scdr)))
> def args: : (<object 501672> (scdr (cdr s)))
> def args: : (<object 501672> (scddr (cdr scdr)))
> def args: : (<object 501740> (scdr (cdr s)))
> def args: : (<object 501740> (scddr (cdr scdr)))
> def args: : (<object 501812> (scdr (cdr s)))
> def args: : (<object 501812> (scddr (cdr scdr)))
> def args: : (<object 501880> (scdr (cdr s)))
> def args: : (<object 501880> (scddr (cdr scdr)))
> def args: : (<object 501952> (scdr (cdr s)))
> def args: : (<object 501952> (scddr (cdr scdr)))
> def args: : (<object 502020> (scdr (cdr s)))
> def args: : (<object 502020> (scddr (cdr scdr)))
> def args: : (<object 502092> (scdr (cdr s)))
> def args: : (<object 502092> (scddr (cdr scdr)))
> def args: : (<object 502160> (scdr (cdr s)))
> def args: : (<object 502160> (scddr (cdr scdr)))
> def args: : (<object 502232> (scdr (cdr s)))
> def args: : (<object 502232> (scddr (cdr scdr)))
> def args: : (<object 502300> (scdr (cdr s)))
> def args: : (<object 502300> (scddr (cdr scdr)))
> def args: : (<object 502372> (scdr (cdr s)))
> def args: : (<object 502372> (scddr (cdr scdr)))
> def args: : (<object 502440> (scdr (cdr s)))
> def args: : (<object 502440> (scddr (cdr scdr)))
> def args: : (<object 502512> (scdr (cdr s)))
> def args: : (<object 502512> (scddr (cdr scdr)))
> def args: : (<object 502580> (scdr (cdr s)))
> def args: : (<object 502580> (scddr (cdr scdr)))
> def args: : (<object 502652> (scdr (cdr s)))
> def args: : (<object 502652> (scddr (cdr scdr)))
> def args: : (<object 502720> (scdr (cdr s)))
> def args: : (<object 502720> (scddr (cdr scdr)))
> def args: : (<object 502792> (scdr (cdr s)))
> def args: : (<object 502792> (scddr (cdr scdr)))
> def args: : (<object 502860> (scdr (cdr s)))
> def args: : (<object 502860> (scddr (cdr scdr)))
> def args: : (<object 502932> (scdr (cdr s)))
> def args: : (<object 502932> (scddr (cdr scdr)))
> def args: : (<object 503000> (scdr (cdr s)))
> def args: : (<object 503000> (scddr (cdr scdr)))
> def args: : (<object 503072> (scdr (cdr s)))
> def args: : (<object 503072> (scddr (cdr scdr)))
> def args: : (<object 503140> (scdr (cdr s)))
> def args: : (<object 503140> (scddr (cdr scdr)))
> def args: : (<object 503212> (scdr (cdr s)))
> def args: : (<object 503212> (scddr (cdr scdr)))
> def args: : (<object 503280> (scdr (cdr s)))
> def args: : (<object 503280> (scddr (cdr scdr)))
> def args: : (<object 503352> (scdr (cdr s)))
> def args: : (<object 503352> (scddr (cdr scdr)))
> def args: : (<object 503420> (scdr (cdr s)))
> def args: : (<object 503420> (scddr (cdr scdr)))
> def args: : (<object 503492> (scdr (cdr s)))
> def args: : (<object 503492> (scddr (cdr scdr)))
> def args: : (<object 503560> (scdr (cdr s)))
> def args: : (<object 503560> (scddr (cdr scdr)))
> def args: : (<object 503632> (scdr (cdr s)))
> def args: : (<object 503632> (scddr (cdr scdr)))
> def args: : (<object 503700> (scdr (cdr s)))
> def args: : (<object 503700> (scddr (cdr scdr)))
> def args: : (<object 503772> (scdr (cdr s)))
> def args: : (<object 503772> (scddr (cdr scdr)))
> def args: : (<object 503840> (scdr (cdr s)))
> def args: : (<object 503840> (scddr (cdr scdr)))
> def args: : (<object 503912> (scdr (cdr s)))
> def args: : (<object 503912> (scddr (cdr scdr)))
> def args: : (<object 503980> (scdr (cdr s)))
> def args: : (<object 503980> (scddr (cdr scdr)))
> def args: : (<object 504052> (scdr (cdr s)))
> def args: : (<object 504052> (scddr (cdr scdr)))
> def args: : (<object 504120> (scdr (cdr s)))
> def args: : (<object 504120> (scddr (cdr scdr)))
> def args: : (<object 504192> (scdr (cdr s)))
> def args: : (<object 504192> (scddr (cdr scdr)))
> def args: : (<object 504260> (scdr (cdr s)))
> def args: : (<object 504260> (scddr (cdr scdr)))
> def args: : (<object 504332> (scdr (cdr s)))
> def args: : (<object 504332> (scddr (cdr scdr)))
> def args: : (<object 504400> (scdr (cdr s)))
> def args: : (<object 504400> (scddr (cdr scdr)))
> def args: : (<object 504472> (scdr (cdr s)))
> def args: : (<object 504472> (scddr (cdr scdr)))
> def args: : (<object 504540> (scdr (cdr s)))
> def args: : (<object 504540> (scddr (cdr scdr)))
> def args: : (<object 504612> (scdr (cdr s)))
> def args: : (<object 504612> (scddr (cdr scdr)))
> def args: : (<object 504680> (scdr (cdr s)))
> def args: : (<object 504680> (scddr (cdr scdr)))
> def args: : (<object 504752> (scdr (cdr s)))
> def args: : (<object 504752> (scddr (cdr scdr)))
> def args: : (<object 504820> (scdr (cdr s)))
> def args: : (<object 504820> (scddr (cdr scdr)))
> def args: : (<object 504892> (scdr (cdr s)))
> def args: : (<object 504892> (scddr (cdr scdr)))
> def args: : (<object 504960> (scdr (cdr s)))
> def args: : (<object 504960> (scddr (cdr scdr)))
> def args: : (<object 505032> (scdr (cdr s)))
> def args: : (<object 505032> (scddr (cdr scdr)))
> def args: : (<object 505100> (scdr (cdr s)))
> def args: : (<object 505100> (scddr (cdr scdr)))
> def args: : (<object 505172> (scdr (cdr s)))
> def args: : (<object 505172> (scddr (cdr scdr)))
> def args: : (<object 505240> (scdr (cdr s)))
> def args: : (<object 505240> (scddr (cdr scdr)))
> def args: : (<object 505312> (scdr (cdr s)))
> def args: : (<object 505312> (scddr (cdr scdr)))
> def args: : (<object 505380> (scdr (cdr s)))
> def args: : (<object 505380> (scddr (cdr scdr)))
> def args: : (<object 505452> (scdr (cdr s)))
> def args: : (<object 505452> (scddr (cdr scdr)))
> def args: : (<object 505520> (scdr (cdr s)))
> def args: : (<object 505520> (scddr (cdr scdr)))
> def args: : (<object 505592> (scdr (cdr s)))
> def args: : (<object 505592> (scddr (cdr scdr)))
> def args: : (<object 505660> (scdr (cdr s)))
> def args: : (<object 505660> (scddr (cdr scdr)))
> def args: : (<object 505732> (scdr (cdr s)))
> def args: : (<object 505732> (scddr (cdr scdr)))
> def args: : (<object 505800> (scdr (cdr s)))
> def args: : (<object 505800> (scddr (cdr scdr)))
> def args: : (<object 505872> (scdr (cdr s)))
> def args: : (<object 505872> (scddr (cdr scdr)))
> def args: : (<object 505940> (scdr (cdr s)))
> def args: : (<object 505940> (scddr (cdr scdr)))
> def args: : (<object 506012> (scdr (cdr s)))
> def args: : (<object 506012> (scddr (cdr scdr)))
> def args: : (<object 506080> (scdr (cdr s)))
> def args: : (<object 506080> (scddr (cdr scdr)))
> def args: : (<object 506152> (scdr (cdr s)))
> def args: : (<object 506152> (scddr (cdr scdr)))
> def args: : (<object 506220> (scdr (cdr s)))
> def args: : (<object 506220> (scddr (cdr scdr)))
> def args: : (<object 506292> (scdr (cdr s)))
> def args: : (<object 506292> (scddr (cdr scdr)))
> def args: : (<object 506360> (scdr (cdr s)))
> def args: : (<object 506360> (scddr (cdr scdr)))
> def args: : (<object 506432> (scdr (cdr s)))
> def args: : (<object 506432> (scddr (cdr scdr)))
> def args: : (<object 506500> (scdr (cdr s)))
> def args: : (<object 506500> (scddr (cdr scdr)))
> def args: : (<object 506572> (scdr (cdr s)))
> def args: : (<object 506572> (scddr (cdr scdr)))
> def args: : (<object 506640> (scdr (cdr s)))
> def args: : (<object 506640> (scddr (cdr scdr)))
> def args: : (<object 506712> (scdr (cdr s)))
> def args: : (<object 506712> (scddr (cdr scdr)))
> def args: : (<object 506780> (scdr (cdr s)))
> def args: : (<object 506780> (scddr (cdr scdr)))
> def args: : (<object 506852> (scdr (cdr s)))
> def args: : (<object 506852> (scddr (cdr scdr)))
> def args: : (<object 506920> (scdr (cdr s)))
> def args: : (<object 506920> (scddr (cdr scdr)))
> def args: : (<object 506992> (scdr (cdr s)))
> def args: : (<object 506992> (scddr (cdr scdr)))
> def args: : (<object 507060> (scdr (cdr s)))
> def args: : (<object 507060> (scddr (cdr scdr)))
> def args: : (<object 507132> (scdr (cdr s)))
> def args: : (<object 507132> (scddr (cdr scdr)))
> def args: : (<object 507200> (scdr (cdr s)))
> def args: : (<object 507200> (scddr (cdr scdr)))
> def args: : (<object 507272> (scdr (cdr s)))
> def args: : (<object 507272> (scddr (cdr scdr)))
> def args: : (<object 507340> (scdr (cdr s)))
> def args: : (<object 507340> (scddr (cdr scdr)))
> def args: : (<object 507412> (scdr (cdr s)))
> def args: : (<object 507412> (scddr (cdr scdr)))
> def args: : (<object 507480> (scdr (cdr s)))
> def args: : (<object 507480> (scddr (cdr scdr)))
> def args: : (<object 507552> (scdr (cdr s)))
> def args: : (<object 507552> (scddr (cdr scdr)))
> def args: : (<object 507620> (scdr (cdr s)))
> def args: : (<object 507620> (scddr (cdr scdr)))
> def args: : (<object 507692> (scdr (cdr s)))
> def args: : (<object 507692> (scddr (cdr scdr)))
> 1431def args: : (<object 516931> (env (if (null? @) # (car @))))
>  def args: : (<object 517038> (env (if (null? @) # (car @))))
> def args: : (<object 517158> (scdr (cdr s)))
> def args: : (<object 517158> (scddr (cdr scdr)))
> def args: : (<object 517230> (scdr (cdr s)))
> def args: : (<object 517230> (scddr (cdr scdr)))
> def args: : (<object 517302> (scdr (cdr s)))
> def args: : (<object 517302> (scddr (cdr scdr)))
> def args: : (<object 517370> (scdr (cdr s)))
> def args: : (<object 517370> (scddr (cdr scdr)))
> def args: : (<object 517609> (scdr (cdr s)))
> def args: : (<object 517609> (scddr (cdr scdr)))
> def args: : (<object 517681> (scdr (cdr s)))
> def args: : (<object 517681> (scddr (cdr scdr)))
> def args: : (<object 517749> (scdr (cdr s)))
> def args: : (<object 517749> (scddr (cdr scdr)))
> def args: : (<object 517821> (scdr (cdr s)))
> def args: : (<object 517821> (scddr (cdr scdr)))
> def args: : (<object 517889> (scdr (cdr s)))
> def args: : (<object 517889> (scddr (cdr scdr)))
> def args: : (<object 517961> (scdr (cdr s)))
> def args: : (<object 517961> (scddr (cdr scdr)))
> def args: : (<object 518029> (scdr (cdr s)))
> def args: : (<object 518029> (scddr (cdr scdr)))
> def args: : (<object 518101> (scdr (cdr s)))
> def args: : (<object 518101> (scddr (cdr scdr)))
> def args: : (<object 518169> (scdr (cdr s)))
> def args: : (<object 518169> (scddr (cdr scdr)))
> def args: : (<object 518241> (scdr (cdr s)))
> def args: : (<object 518241> (scddr (cdr scdr)))
> def args: : (<object 518309> (scdr (cdr s)))
> def args: : (<object 518309> (scddr (cdr scdr)))
> def args: : (<object 518381> (scdr (cdr s)))
> def args: : (<object 518381> (scddr (cdr scdr)))
> def args: : (<object 518449> (scdr (cdr s)))
> def args: : (<object 518449> (scddr (cdr scdr)))
> def args: : (<object 518521> (scdr (cdr s)))
> def args: : (<object 518521> (scddr (cdr scdr)))
> def args: : (<object 518589> (scdr (cdr s)))
> def args: : (<object 518589> (scddr (cdr scdr)))
> def args: : (<object 518661> (scdr (cdr s)))
> def args: : (<object 518661> (scddr (cdr scdr)))
> def args: : (<object 518729> (scdr (cdr s)))
> def args: : (<object 518729> (scddr (cdr scdr)))
> def args: : (<object 518801> (scdr (cdr s)))
> def args: : (<object 518801> (scddr (cdr scdr)))
> def args: : (<object 518869> (scdr (cdr s)))
> def args: : (<object 518869> (scddr (cdr scdr)))
> def args: : (<object 518941> (scdr (cdr s)))
> def args: : (<object 518941> (scddr (cdr scdr)))
> def args: : (<object 519009> (scdr (cdr s)))
> def args: : (<object 519009> (scddr (cdr scdr)))
> def args: : (<object 519081> (scdr (cdr s)))
> def args: : (<object 519081> (scddr (cdr scdr)))
> def args: : (<object 519149> (scdr (cdr s)))
> def args: : (<object 519149> (scddr (cdr scdr)))
> def args: : (<object 519221> (scdr (cdr s)))
> def args: : (<object 519221> (scddr (cdr scdr)))
> def args: : (<object 519289> (scdr (cdr s)))
> def args: : (<object 519289> (scddr (cdr scdr)))
> def args: : (<object 519361> (scdr (cdr s)))
> def args: : (<object 519361> (scddr (cdr scdr)))
> def args: : (<object 519429> (scdr (cdr s)))
> def args: : (<object 519429> (scddr (cdr scdr)))
> def args: : (<object 519501> (scdr (cdr s)))
> def args: : (<object 519501> (scddr (cdr scdr)))
> def args: : (<object 519569> (scdr (cdr s)))
> def args: : (<object 519569> (scddr (cdr scdr)))
> def args: : (<object 519641> (scdr (cdr s)))
> def args: : (<object 519641> (scddr (cdr scdr)))
> def args: : (<object 519709> (scdr (cdr s)))
> def args: : (<object 519709> (scddr (cdr scdr)))
> def args: : (<object 519781> (scdr (cdr s)))
> def args: : (<object 519781> (scddr (cdr scdr)))
> def args: : (<object 519849> (scdr (cdr s)))
> def args: : (<object 519849> (scddr (cdr scdr)))
> def args: : (<object 519921> (scdr (cdr s)))
> def args: : (<object 519921> (scddr (cdr scdr)))
> def args: : (<object 519989> (scdr (cdr s)))
> def args: : (<object 519989> (scddr (cdr scdr)))
> def args: : (<object 520061> (scdr (cdr s)))
> def args: : (<object 520061> (scddr (cdr scdr)))
> def args: : (<object 520129> (scdr (cdr s)))
> def args: : (<object 520129> (scddr (cdr scdr)))
> def args: : (<object 520201> (scdr (cdr s)))
> def args: : (<object 520201> (scddr (cdr scdr)))
> def args: : (<object 520269> (scdr (cdr s)))
> def args: : (<object 520269> (scddr (cdr scdr)))
> def args: : (<object 520341> (scdr (cdr s)))
> def args: : (<object 520341> (scddr (cdr scdr)))
> def args: : (<object 520409> (scdr (cdr s)))
> def args: : (<object 520409> (scddr (cdr scdr)))
> def args: : (<object 520481> (scdr (cdr s)))
> def args: : (<object 520481> (scddr (cdr scdr)))
> def args: : (<object 520549> (scdr (cdr s)))
> def args: : (<object 520549> (scddr (cdr scdr)))
> def args: : (<object 520621> (scdr (cdr s)))
> def args: : (<object 520621> (scddr (cdr scdr)))
> def args: : (<object 520689> (scdr (cdr s)))
> def args: : (<object 520689> (scddr (cdr scdr)))
> def args: : (<object 520761> (scdr (cdr s)))
> def args: : (<object 520761> (scddr (cdr scdr)))
> def args: : (<object 520829> (scdr (cdr s)))
> def args: : (<object 520829> (scddr (cdr scdr)))
> def args: : (<object 520901> (scdr (cdr s)))
> def args: : (<object 520901> (scddr (cdr scdr)))
> def args: : (<object 520969> (scdr (cdr s)))
> def args: : (<object 520969> (scddr (cdr scdr)))
> def args: : (<object 521041> (scdr (cdr s)))
> def args: : (<object 521041> (scddr (cdr scdr)))
> def args: : (<object 521109> (scdr (cdr s)))
> def args: : (<object 521109> (scddr (cdr scdr)))
> def args: : (<object 521181> (scdr (cdr s)))
> def args: : (<object 521181> (scddr (cdr scdr)))
> def args: : (<object 521249> (scdr (cdr s)))
> def args: : (<object 521249> (scddr (cdr scdr)))
> def args: : (<object 521321> (scdr (cdr s)))
> def args: : (<object 521321> (scddr (cdr scdr)))
> def args: : (<object 521389> (scdr (cdr s)))
> def args: : (<object 521389> (scddr (cdr scdr)))
> def args: : (<object 521461> (scdr (cdr s)))
> def args: : (<object 521461> (scddr (cdr scdr)))
> def args: : (<object 521529> (scdr (cdr s)))
> def args: : (<object 521529> (scddr (cdr scdr)))
> def args: : (<object 521601> (scdr (cdr s)))
> def args: : (<object 521601> (scddr (cdr scdr)))
> def args: : (<object 521669> (scdr (cdr s)))
> def args: : (<object 521669> (scddr (cdr scdr)))
> def args: : (<object 521741> (scdr (cdr s)))
> def args: : (<object 521741> (scddr (cdr scdr)))
> def args: : (<object 521809> (scdr (cdr s)))
> def args: : (<object 521809> (scddr (cdr scdr)))
> def args: : (<object 521881> (scdr (cdr s)))
> def args: : (<object 521881> (scddr (cdr scdr)))
> def args: : (<object 521949> (scdr (cdr s)))
> def args: : (<object 521949> (scddr (cdr scdr)))
> def args: : (<object 522021> (scdr (cdr s)))
> def args: : (<object 522021> (scddr (cdr scdr)))
> def args: : (<object 522089> (scdr (cdr s)))
> def args: : (<object 522089> (scddr (cdr scdr)))
> def args: : (<object 522161> (scdr (cdr s)))
> def args: : (<object 522161> (scddr (cdr scdr)))
> def args: : (<object 522229> (scdr (cdr s)))
> def args: : (<object 522229> (scddr (cdr scdr)))
> def args: : (<object 522301> (scdr (cdr s)))
> def args: : (<object 522301> (scddr (cdr scdr)))
> def args: : (<object 522369> (scdr (cdr s)))
> def args: : (<object 522369> (scddr (cdr scdr)))
> def args: : (<object 522441> (scdr (cdr s)))
> def args: : (<object 522441> (scddr (cdr scdr)))
> def args: : (<object 522509> (scdr (cdr s)))
> def args: : (<object 522509> (scddr (cdr scdr)))
> def args: : (<object 522581> (scdr (cdr s)))
> def args: : (<object 522581> (scddr (cdr scdr)))
> def args: : (<object 522649> (scdr (cdr s)))
> def args: : (<object 522649> (scddr (cdr scdr)))
> def args: : (<object 522721> (scdr (cdr s)))
> def args: : (<object 522721> (scddr (cdr scdr)))
> def args: : (<object 522789> (scdr (cdr s)))
> def args: : (<object 522789> (scddr (cdr scdr)))
> def args: : (<object 522861> (scdr (cdr s)))
> def args: : (<object 522861> (scddr (cdr scdr)))
> def args: : (<object 522929> (scdr (cdr s)))
> def args: : (<object 522929> (scddr (cdr scdr)))
> def args: : (<object 523001> (scdr (cdr s)))
> def args: : (<object 523001> (scddr (cdr scdr)))
> def args: : (<object 523069> (scdr (cdr s)))
> def args: : (<object 523069> (scddr (cdr scdr)))
> def args: : (<object 523141> (scdr (cdr s)))
> def args: : (<object 523141> (scddr (cdr scdr)))
> def args: : (<object 523209> (scdr (cdr s)))
> def args: : (<object 523209> (scddr (cdr scdr)))
> def args: : (<object 523281> (scdr (cdr s)))
> def args: : (<object 523281> (scddr (cdr scdr)))
> def args: : (<object 523349> (scdr (cdr s)))
> def args: : (<object 523349> (scddr (cdr scdr)))
> def args: : (<object 523421> (scdr (cdr s)))
> def args: : (<object 523421> (scddr (cdr scdr)))
> def args: : (<object 523489> (scdr (cdr s)))
> def args: : (<object 523489> (scddr (cdr scdr)))
> def args: : (<object 523561> (scdr (cdr s)))
> def args: : (<object 523561> (scddr (cdr scdr)))
> def args: : (<object 523629> (scdr (cdr s)))
> def args: : (<object 523629> (scddr (cdr scdr)))
> def args: : (<object 523701> (scdr (cdr s)))
> def args: : (<object 523701> (scddr (cdr scdr)))
> def args: : (<object 523769> (scdr (cdr s)))
> def args: : (<object 523769> (scddr (cdr scdr)))
> def args: : (<object 523841> (scdr (cdr s)))
> def args: : (<object 523841> (scddr (cdr scdr)))
> def args: : (<object 523909> (scdr (cdr s)))
> def args: : (<object 523909> (scddr (cdr scdr)))
> def args: : (<object 523981> (scdr (cdr s)))
> def args: : (<object 523981> (scddr (cdr scdr)))
> def args: : (<object 524049> (scdr (cdr s)))
> def args: : (<object 524049> (scddr (cdr scdr)))
> def args: : (<object 524121> (scdr (cdr s)))
> def args: : (<object 524121> (scddr (cdr scdr)))
> def args: : (<object 524189> (scdr (cdr s)))
> def args: : (<object 524189> (scddr (cdr scdr)))
> def args: : (<object 524261> (scdr (cdr s)))
> def args: : (<object 524261> (scddr (cdr scdr)))
> def args: : (<object 524329> (scdr (cdr s)))
> def args: : (<object 524329> (scddr (cdr scdr)))
> def args: : (<object 524401> (scdr (cdr s)))
> def args: : (<object 524401> (scddr (cdr scdr)))
> def args: : (<object 524469> (scdr (cdr s)))
> def args: : (<object 524469> (scddr (cdr scdr)))
> def args: : (<object 524541> (scdr (cdr s)))
> def args: : (<object 524541> (scddr (cdr scdr)))
> def args: : (<object 524609> (scdr (cdr s)))
> def args: : (<object 524609> (scddr (cdr scdr)))
> def args: : (<object 524681> (scdr (cdr s)))
> def args: : (<object 524681> (scddr (cdr scdr)))
> def args: : (<object 524749> (scdr (cdr s)))
> def args: : (<object 524749> (scddr (cdr scdr)))
> def args: : (<object 524821> (scdr (cdr s)))
> def args: : (<object 524821> (scddr (cdr scdr)))
> 1485def args: : (<object 534231> (env (if (null? @) # (car @))))
>  def args: : (<object 534338> (env (if (null? @) # (car @))))
> def args: : (<object 534458> (scdr (cdr s)))
> def args: : (<object 534458> (scddr (cdr scdr)))
> def args: : (<object 534530> (scdr (cdr s)))
> def args: : (<object 534530> (scddr (cdr scdr)))
> def args: : (<object 534602> (scdr (cdr s)))
> def args: : (<object 534602> (scddr (cdr scdr)))
> def args: : (<object 534670> (scdr (cdr s)))
> def args: : (<object 534670> (scddr (cdr scdr)))
> def args: : (<object 534909> (scdr (cdr s)))
> def args: : (<object 534909> (scddr (cdr scdr)))
> def args: : (<object 534981> (scdr (cdr s)))
> def args: : (<object 534981> (scddr (cdr scdr)))
> def args: : (<object 535049> (scdr (cdr s)))
> def args: : (<object 535049> (scddr (cdr scdr)))
> def args: : (<object 535121> (scdr (cdr s)))
> def args: : (<object 535121> (scddr (cdr scdr)))
> def args: : (<object 535189> (scdr (cdr s)))
> def args: : (<object 535189> (scddr (cdr scdr)))
> def args: : (<object 535261> (scdr (cdr s)))
> def args: : (<object 535261> (scddr (cdr scdr)))
> def args: : (<object 535329> (scdr (cdr s)))
> def args: : (<object 535329> (scddr (cdr scdr)))
> def args: : (<object 535401> (scdr (cdr s)))
> def args: : (<object 535401> (scddr (cdr scdr)))
> def args: : (<object 535469> (scdr (cdr s)))
> def args: : (<object 535469> (scddr (cdr scdr)))
> def args: : (<object 535541> (scdr (cdr s)))
> def args: : (<object 535541> (scddr (cdr scdr)))
> def args: : (<object 535609> (scdr (cdr s)))
> def args: : (<object 535609> (scddr (cdr scdr)))
> def args: : (<object 535681> (scdr (cdr s)))
> def args: : (<object 535681> (scddr (cdr scdr)))
> def args: : (<object 535749> (scdr (cdr s)))
> def args: : (<object 535749> (scddr (cdr scdr)))
> def args: : (<object 535821> (scdr (cdr s)))
> def args: : (<object 535821> (scddr (cdr scdr)))
> def args: : (<object 535889> (scdr (cdr s)))
> def args: : (<object 535889> (scddr (cdr scdr)))
> def args: : (<object 535961> (scdr (cdr s)))
> def args: : (<object 535961> (scddr (cdr scdr)))
> def args: : (<object 536029> (scdr (cdr s)))
> def args: : (<object 536029> (scddr (cdr scdr)))
> def args: : (<object 536101> (scdr (cdr s)))
> def args: : (<object 536101> (scddr (cdr scdr)))
> def args: : (<object 536169> (scdr (cdr s)))
> def args: : (<object 536169> (scddr (cdr scdr)))
> def args: : (<object 536241> (scdr (cdr s)))
> def args: : (<object 536241> (scddr (cdr scdr)))
> def args: : (<object 536309> (scdr (cdr s)))
> def args: : (<object 536309> (scddr (cdr scdr)))
> def args: : (<object 536381> (scdr (cdr s)))
> def args: : (<object 536381> (scddr (cdr scdr)))
> def args: : (<object 536449> (scdr (cdr s)))
> def args: : (<object 536449> (scddr (cdr scdr)))
> def args: : (<object 536521> (scdr (cdr s)))
> def args: : (<object 536521> (scddr (cdr scdr)))
> def args: : (<object 536589> (scdr (cdr s)))
> def args: : (<object 536589> (scddr (cdr scdr)))
> def args: : (<object 536661> (scdr (cdr s)))
> def args: : (<object 536661> (scddr (cdr scdr)))
> def args: : (<object 536729> (scdr (cdr s)))
> def args: : (<object 536729> (scddr (cdr scdr)))
> def args: : (<object 536801> (scdr (cdr s)))
> def args: : (<object 536801> (scddr (cdr scdr)))
> def args: : (<object 536869> (scdr (cdr s)))
> def args: : (<object 536869> (scddr (cdr scdr)))
> def args: : (<object 536941> (scdr (cdr s)))
> def args: : (<object 536941> (scddr (cdr scdr)))
> def args: : (<object 537009> (scdr (cdr s)))
> def args: : (<object 537009> (scddr (cdr scdr)))
> def args: : (<object 537081> (scdr (cdr s)))
> def args: : (<object 537081> (scddr (cdr scdr)))
> def args: : (<object 537149> (scdr (cdr s)))
> def args: : (<object 537149> (scddr (cdr scdr)))
> def args: : (<object 537221> (scdr (cdr s)))
> def args: : (<object 537221> (scddr (cdr scdr)))
> def args: : (<object 537289> (scdr (cdr s)))
> def args: : (<object 537289> (scddr (cdr scdr)))
> def args: : (<object 537361> (scdr (cdr s)))
> def args: : (<object 537361> (scddr (cdr scdr)))
> def args: : (<object 537429> (scdr (cdr s)))
> def args: : (<object 537429> (scddr (cdr scdr)))
> def args: : (<object 537501> (scdr (cdr s)))
> def args: : (<object 537501> (scddr (cdr scdr)))
> def args: : (<object 537569> (scdr (cdr s)))
> def args: : (<object 537569> (scddr (cdr scdr)))
> def args: : (<object 537641> (scdr (cdr s)))
> def args: : (<object 537641> (scddr (cdr scdr)))
> def args: : (<object 537709> (scdr (cdr s)))
> def args: : (<object 537709> (scddr (cdr scdr)))
> def args: : (<object 537781> (scdr (cdr s)))
> def args: : (<object 537781> (scddr (cdr scdr)))
> def args: : (<object 537849> (scdr (cdr s)))
> def args: : (<object 537849> (scddr (cdr scdr)))
> def args: : (<object 537921> (scdr (cdr s)))
> def args: : (<object 537921> (scddr (cdr scdr)))
> def args: : (<object 537989> (scdr (cdr s)))
> def args: : (<object 537989> (scddr (cdr scdr)))
> def args: : (<object 538061> (scdr (cdr s)))
> def args: : (<object 538061> (scddr (cdr scdr)))
> def args: : (<object 538129> (scdr (cdr s)))
> def args: : (<object 538129> (scddr (cdr scdr)))
> def args: : (<object 538201> (scdr (cdr s)))
> def args: : (<object 538201> (scddr (cdr scdr)))
> def args: : (<object 538269> (scdr (cdr s)))
> def args: : (<object 538269> (scddr (cdr scdr)))
> def args: : (<object 538341> (scdr (cdr s)))
> def args: : (<object 538341> (scddr (cdr scdr)))
> def args: : (<object 538409> (scdr (cdr s)))
> def args: : (<object 538409> (scddr (cdr scdr)))
> def args: : (<object 538481> (scdr (cdr s)))
> def args: : (<object 538481> (scddr (cdr scdr)))
> def args: : (<object 538549> (scdr (cdr s)))
> def args: : (<object 538549> (scddr (cdr scdr)))
> def args: : (<object 538621> (scdr (cdr s)))
> def args: : (<object 538621> (scddr (cdr scdr)))
> def args: : (<object 538689> (scdr (cdr s)))
> def args: : (<object 538689> (scddr (cdr scdr)))
> def args: : (<object 538761> (scdr (cdr s)))
> def args: : (<object 538761> (scddr (cdr scdr)))
> def args: : (<object 538829> (scdr (cdr s)))
> def args: : (<object 538829> (scddr (cdr scdr)))
> def args: : (<object 538901> (scdr (cdr s)))
> def args: : (<object 538901> (scddr (cdr scdr)))
> def args: : (<object 538969> (scdr (cdr s)))
> def args: : (<object 538969> (scddr (cdr scdr)))
> def args: : (<object 539041> (scdr (cdr s)))
> def args: : (<object 539041> (scddr (cdr scdr)))
> def args: : (<object 539109> (scdr (cdr s)))
> def args: : (<object 539109> (scddr (cdr scdr)))
> def args: : (<object 539181> (scdr (cdr s)))
> def args: : (<object 539181> (scddr (cdr scdr)))
> def args: : (<object 539249> (scdr (cdr s)))
> def args: : (<object 539249> (scddr (cdr scdr)))
> def args: : (<object 539321> (scdr (cdr s)))
> def args: : (<object 539321> (scddr (cdr scdr)))
> def args: : (<object 539389> (scdr (cdr s)))
> def args: : (<object 539389> (scddr (cdr scdr)))
> def args: : (<object 539461> (scdr (cdr s)))
> def args: : (<object 539461> (scddr (cdr scdr)))
> def args: : (<object 539529> (scdr (cdr s)))
> def args: : (<object 539529> (scddr (cdr scdr)))
> def args: : (<object 539601> (scdr (cdr s)))
> def args: : (<object 539601> (scddr (cdr scdr)))
> def args: : (<object 539669> (scdr (cdr s)))
> def args: : (<object 539669> (scddr (cdr scdr)))
> def args: : (<object 539741> (scdr (cdr s)))
> def args: : (<object 539741> (scddr (cdr scdr)))
> def args: : (<object 539809> (scdr (cdr s)))
> def args: : (<object 539809> (scddr (cdr scdr)))
> def args: : (<object 539881> (scdr (cdr s)))
> def args: : (<object 539881> (scddr (cdr scdr)))
> def args: : (<object 539949> (scdr (cdr s)))
> def args: : (<object 539949> (scddr (cdr scdr)))
> def args: : (<object 540021> (scdr (cdr s)))
> def args: : (<object 540021> (scddr (cdr scdr)))
> def args: : (<object 540089> (scdr (cdr s)))
> def args: : (<object 540089> (scddr (cdr scdr)))
> def args: : (<object 540161> (scdr (cdr s)))
> def args: : (<object 540161> (scddr (cdr scdr)))
> def args: : (<object 540229> (scdr (cdr s)))
> def args: : (<object 540229> (scddr (cdr scdr)))
> def args: : (<object 540301> (scdr (cdr s)))
> def args: : (<object 540301> (scddr (cdr scdr)))
> def args: : (<object 540369> (scdr (cdr s)))
> def args: : (<object 540369> (scddr (cdr scdr)))
> def args: : (<object 540441> (scdr (cdr s)))
> def args: : (<object 540441> (scddr (cdr scdr)))
> def args: : (<object 540509> (scdr (cdr s)))
> def args: : (<object 540509> (scddr (cdr scdr)))
> def args: : (<object 540581> (scdr (cdr s)))
> def args: : (<object 540581> (scddr (cdr scdr)))
> def args: : (<object 540649> (scdr (cdr s)))
> def args: : (<object 540649> (scddr (cdr scdr)))
> def args: : (<object 540721> (scdr (cdr s)))
> def args: : (<object 540721> (scddr (cdr scdr)))
> def args: : (<object 540789> (scdr (cdr s)))
> def args: : (<object 540789> (scddr (cdr scdr)))
> def args: : (<object 540861> (scdr (cdr s)))
> def args: : (<object 540861> (scddr (cdr scdr)))
> def args: : (<object 540929> (scdr (cdr s)))
> def args: : (<object 540929> (scddr (cdr scdr)))
> def args: : (<object 541001> (scdr (cdr s)))
> def args: : (<object 541001> (scddr (cdr scdr)))
> def args: : (<object 541069> (scdr (cdr s)))
> def args: : (<object 541069> (scddr (cdr scdr)))
> def args: : (<object 541141> (scdr (cdr s)))
> def args: : (<object 541141> (scddr (cdr scdr)))
> def args: : (<object 541209> (scdr (cdr s)))
> def args: : (<object 541209> (scddr (cdr scdr)))
> def args: : (<object 541281> (scdr (cdr s)))
> def args: : (<object 541281> (scddr (cdr scdr)))
> def args: : (<object 541349> (scdr (cdr s)))
> def args: : (<object 541349> (scddr (cdr scdr)))
> def args: : (<object 541421> (scdr (cdr s)))
> def args: : (<object 541421> (scddr (cdr scdr)))
> def args: : (<object 541489> (scdr (cdr s)))
> def args: : (<object 541489> (scddr (cdr scdr)))
> def args: : (<object 541561> (scdr (cdr s)))
> def args: : (<object 541561> (scddr (cdr scdr)))
> def args: : (<object 541629> (scdr (cdr s)))
> def args: : (<object 541629> (scddr (cdr scdr)))
> def args: : (<object 541701> (scdr (cdr s)))
> def args: : (<object 541701> (scddr (cdr scdr)))
> def args: : (<object 541769> (scdr (cdr s)))
> def args: : (<object 541769> (scddr (cdr scdr)))
> def args: : (<object 541841> (scdr (cdr s)))
> def args: : (<object 541841> (scddr (cdr scdr)))
> def args: : (<object 541909> (scdr (cdr s)))
> def args: : (<object 541909> (scddr (cdr scdr)))
> def args: : (<object 541981> (scdr (cdr s)))
> def args: : (<object 541981> (scddr (cdr scdr)))
> def args: : (<object 542049> (scdr (cdr s)))
> def args: : (<object 542049> (scddr (cdr scdr)))
> def args: : (<object 542121> (scdr (cdr s)))
> def args: : (<object 542121> (scddr (cdr scdr)))
> def args: : (<object 542189> (scdr (cdr s)))
> def args: : (<object 542189> (scddr (cdr scdr)))
> def args: : (<object 542261> (scdr (cdr s)))
> def args: : (<object 542261> (scddr (cdr scdr)))
> 1540def args: : (<object 551842> (env (if (null? @) # (car @))))
>  def args: : (<object 551949> (env (if (null? @) # (car @))))
> def args: : (<object 552069> (scdr (cdr s)))
> def args: : (<object 552069> (scddr (cdr scdr)))
> def args: : (<object 552141> (scdr (cdr s)))
> def args: : (<object 552141> (scddr (cdr scdr)))
> def args: : (<object 552213> (scdr (cdr s)))
> def args: : (<object 552213> (scddr (cdr scdr)))
> def args: : (<object 552281> (scdr (cdr s)))
> def args: : (<object 552281> (scddr (cdr scdr)))
> def args: : (<object 552520> (scdr (cdr s)))
> def args: : (<object 552520> (scddr (cdr scdr)))
> def args: : (<object 552592> (scdr (cdr s)))
> def args: : (<object 552592> (scddr (cdr scdr)))
> def args: : (<object 552660> (scdr (cdr s)))
> def args: : (<object 552660> (scddr (cdr scdr)))
> def args: : (<object 552732> (scdr (cdr s)))
> def args: : (<object 552732> (scddr (cdr scdr)))
> def args: : (<object 552800> (scdr (cdr s)))
> def args: : (<object 552800> (scddr (cdr scdr)))
> def args: : (<object 552872> (scdr (cdr s)))
> def args: : (<object 552872> (scddr (cdr scdr)))
> def args: : (<object 552940> (scdr (cdr s)))
> def args: : (<object 552940> (scddr (cdr scdr)))
> def args: : (<object 553012> (scdr (cdr s)))
> def args: : (<object 553012> (scddr (cdr scdr)))
> def args: : (<object 553080> (scdr (cdr s)))
> def args: : (<object 553080> (scddr (cdr scdr)))
> def args: : (<object 553152> (scdr (cdr s)))
> def args: : (<object 553152> (scddr (cdr scdr)))
> def args: : (<object 553220> (scdr (cdr s)))
> def args: : (<object 553220> (scddr (cdr scdr)))
> def args: : (<object 553292> (scdr (cdr s)))
> def args: : (<object 553292> (scddr (cdr scdr)))
> def args: : (<object 553360> (scdr (cdr s)))
> def args: : (<object 553360> (scddr (cdr scdr)))
> def args: : (<object 553432> (scdr (cdr s)))
> def args: : (<object 553432> (scddr (cdr scdr)))
> def args: : (<object 553500> (scdr (cdr s)))
> def args: : (<object 553500> (scddr (cdr scdr)))
> def args: : (<object 553572> (scdr (cdr s)))
> def args: : (<object 553572> (scddr (cdr scdr)))
> def args: : (<object 553640> (scdr (cdr s)))
> def args: : (<object 553640> (scddr (cdr scdr)))
> def args: : (<object 553712> (scdr (cdr s)))
> def args: : (<object 553712> (scddr (cdr scdr)))
> def args: : (<object 553780> (scdr (cdr s)))
> def args: : (<object 553780> (scddr (cdr scdr)))
> def args: : (<object 553852> (scdr (cdr s)))
> def args: : (<object 553852> (scddr (cdr scdr)))
> def args: : (<object 553920> (scdr (cdr s)))
> def args: : (<object 553920> (scddr (cdr scdr)))
> def args: : (<object 553992> (scdr (cdr s)))
> def args: : (<object 553992> (scddr (cdr scdr)))
> def args: : (<object 554060> (scdr (cdr s)))
> def args: : (<object 554060> (scddr (cdr scdr)))
> def args: : (<object 554132> (scdr (cdr s)))
> def args: : (<object 554132> (scddr (cdr scdr)))
> def args: : (<object 554200> (scdr (cdr s)))
> def args: : (<object 554200> (scddr (cdr scdr)))
> def args: : (<object 554272> (scdr (cdr s)))
> def args: : (<object 554272> (scddr (cdr scdr)))
> def args: : (<object 554340> (scdr (cdr s)))
> def args: : (<object 554340> (scddr (cdr scdr)))
> def args: : (<object 554412> (scdr (cdr s)))
> def args: : (<object 554412> (scddr (cdr scdr)))
> def args: : (<object 554480> (scdr (cdr s)))
> def args: : (<object 554480> (scddr (cdr scdr)))
> def args: : (<object 554552> (scdr (cdr s)))
> def args: : (<object 554552> (scddr (cdr scdr)))
> def args: : (<object 554620> (scdr (cdr s)))
> def args: : (<object 554620> (scddr (cdr scdr)))
> def args: : (<object 554692> (scdr (cdr s)))
> def args: : (<object 554692> (scddr (cdr scdr)))
> def args: : (<object 554760> (scdr (cdr s)))
> def args: : (<object 554760> (scddr (cdr scdr)))
> def args: : (<object 554832> (scdr (cdr s)))
> def args: : (<object 554832> (scddr (cdr scdr)))
> def args: : (<object 554900> (scdr (cdr s)))
> def args: : (<object 554900> (scddr (cdr scdr)))
> def args: : (<object 554972> (scdr (cdr s)))
> def args: : (<object 554972> (scddr (cdr scdr)))
> def args: : (<object 555040> (scdr (cdr s)))
> def args: : (<object 555040> (scddr (cdr scdr)))
> def args: : (<object 555112> (scdr (cdr s)))
> def args: : (<object 555112> (scddr (cdr scdr)))
> def args: : (<object 555180> (scdr (cdr s)))
> def args: : (<object 555180> (scddr (cdr scdr)))
> def args: : (<object 555252> (scdr (cdr s)))
> def args: : (<object 555252> (scddr (cdr scdr)))
> def args: : (<object 555320> (scdr (cdr s)))
> def args: : (<object 555320> (scddr (cdr scdr)))
> def args: : (<object 555392> (scdr (cdr s)))
> def args: : (<object 555392> (scddr (cdr scdr)))
> def args: : (<object 555460> (scdr (cdr s)))
> def args: : (<object 555460> (scddr (cdr scdr)))
> def args: : (<object 555532> (scdr (cdr s)))
> def args: : (<object 555532> (scddr (cdr scdr)))
> def args: : (<object 555600> (scdr (cdr s)))
> def args: : (<object 555600> (scddr (cdr scdr)))
> def args: : (<object 555672> (scdr (cdr s)))
> def args: : (<object 555672> (scddr (cdr scdr)))
> def args: : (<object 555740> (scdr (cdr s)))
> def args: : (<object 555740> (scddr (cdr scdr)))
> def args: : (<object 555812> (scdr (cdr s)))
> def args: : (<object 555812> (scddr (cdr scdr)))
> def args: : (<object 555880> (scdr (cdr s)))
> def args: : (<object 555880> (scddr (cdr scdr)))
> def args: : (<object 555952> (scdr (cdr s)))
> def args: : (<object 555952> (scddr (cdr scdr)))
> def args: : (<object 556020> (scdr (cdr s)))
> def args: : (<object 556020> (scddr (cdr scdr)))
> def args: : (<object 556092> (scdr (cdr s)))
> def args: : (<object 556092> (scddr (cdr scdr)))
> def args: : (<object 556160> (scdr (cdr s)))
> def args: : (<object 556160> (scddr (cdr scdr)))
> def args: : (<object 556232> (scdr (cdr s)))
> def args: : (<object 556232> (scddr (cdr scdr)))
> def args: : (<object 556300> (scdr (cdr s)))
> def args: : (<object 556300> (scddr (cdr scdr)))
> def args: : (<object 556372> (scdr (cdr s)))
> def args: : (<object 556372> (scddr (cdr scdr)))
> def args: : (<object 556440> (scdr (cdr s)))
> def args: : (<object 556440> (scddr (cdr scdr)))
> def args: : (<object 556512> (scdr (cdr s)))
> def args: : (<object 556512> (scddr (cdr scdr)))
> def args: : (<object 556580> (scdr (cdr s)))
> def args: : (<object 556580> (scddr (cdr scdr)))
> def args: : (<object 556652> (scdr (cdr s)))
> def args: : (<object 556652> (scddr (cdr scdr)))
> def args: : (<object 556720> (scdr (cdr s)))
> def args: : (<object 556720> (scddr (cdr scdr)))
> def args: : (<object 556792> (scdr (cdr s)))
> def args: : (<object 556792> (scddr (cdr scdr)))
> def args: : (<object 556860> (scdr (cdr s)))
> def args: : (<object 556860> (scddr (cdr scdr)))
> def args: : (<object 556932> (scdr (cdr s)))
> def args: : (<object 556932> (scddr (cdr scdr)))
> def args: : (<object 557000> (scdr (cdr s)))
> def args: : (<object 557000> (scddr (cdr scdr)))
> def args: : (<object 557072> (scdr (cdr s)))
> def args: : (<object 557072> (scddr (cdr scdr)))
> def args: : (<object 557140> (scdr (cdr s)))
> def args: : (<object 557140> (scddr (cdr scdr)))
> def args: : (<object 557212> (scdr (cdr s)))
> def args: : (<object 557212> (scddr (cdr scdr)))
> def args: : (<object 557280> (scdr (cdr s)))
> def args: : (<object 557280> (scddr (cdr scdr)))
> def args: : (<object 557352> (scdr (cdr s)))
> def args: : (<object 557352> (scddr (cdr scdr)))
> def args: : (<object 557420> (scdr (cdr s)))
> def args: : (<object 557420> (scddr (cdr scdr)))
> def args: : (<object 557492> (scdr (cdr s)))
> def args: : (<object 557492> (scddr (cdr scdr)))
> def args: : (<object 557560> (scdr (cdr s)))
> def args: : (<object 557560> (scddr (cdr scdr)))
> def args: : (<object 557632> (scdr (cdr s)))
> def args: : (<object 557632> (scddr (cdr scdr)))
> def args: : (<object 557700> (scdr (cdr s)))
> def args: : (<object 557700> (scddr (cdr scdr)))
> def args: : (<object 557772> (scdr (cdr s)))
> def args: : (<object 557772> (scddr (cdr scdr)))
> def args: : (<object 557840> (scdr (cdr s)))
> def args: : (<object 557840> (scddr (cdr scdr)))
> def args: : (<object 557912> (scdr (cdr s)))
> def args: : (<object 557912> (scddr (cdr scdr)))
> def args: : (<object 557980> (scdr (cdr s)))
> def args: : (<object 557980> (scddr (cdr scdr)))
> def args: : (<object 558052> (scdr (cdr s)))
> def args: : (<object 558052> (scddr (cdr scdr)))
> def args: : (<object 558120> (scdr (cdr s)))
> def args: : (<object 558120> (scddr (cdr scdr)))
> def args: : (<object 558192> (scdr (cdr s)))
> def args: : (<object 558192> (scddr (cdr scdr)))
> def args: : (<object 558260> (scdr (cdr s)))
> def args: : (<object 558260> (scddr (cdr scdr)))
> def args: : (<object 558332> (scdr (cdr s)))
> def args: : (<object 558332> (scddr (cdr scdr)))
> def args: : (<object 558400> (scdr (cdr s)))
> def args: : (<object 558400> (scddr (cdr scdr)))
> def args: : (<object 558472> (scdr (cdr s)))
> def args: : (<object 558472> (scddr (cdr scdr)))
> def args: : (<object 558540> (scdr (cdr s)))
> def args: : (<object 558540> (scddr (cdr scdr)))
> def args: : (<object 558612> (scdr (cdr s)))
> def args: : (<object 558612> (scddr (cdr scdr)))
> def args: : (<object 558680> (scdr (cdr s)))
> def args: : (<object 558680> (scddr (cdr scdr)))
> def args: : (<object 558752> (scdr (cdr s)))
> def args: : (<object 558752> (scddr (cdr scdr)))
> def args: : (<object 558820> (scdr (cdr s)))
> def args: : (<object 558820> (scddr (cdr scdr)))
> def args: : (<object 558892> (scdr (cdr s)))
> def args: : (<object 558892> (scddr (cdr scdr)))
> def args: : (<object 558960> (scdr (cdr s)))
> def args: : (<object 558960> (scddr (cdr scdr)))
> def args: : (<object 559032> (scdr (cdr s)))
> def args: : (<object 559032> (scddr (cdr scdr)))
> def args: : (<object 559100> (scdr (cdr s)))
> def args: : (<object 559100> (scddr (cdr scdr)))
> def args: : (<object 559172> (scdr (cdr s)))
> def args: : (<object 559172> (scddr (cdr scdr)))
> def args: : (<object 559240> (scdr (cdr s)))
> def args: : (<object 559240> (scddr (cdr scdr)))
> def args: : (<object 559312> (scdr (cdr s)))
> def args: : (<object 559312> (scddr (cdr scdr)))
> def args: : (<object 559380> (scdr (cdr s)))
> def args: : (<object 559380> (scddr (cdr scdr)))
> def args: : (<object 559452> (scdr (cdr s)))
> def args: : (<object 559452> (scddr (cdr scdr)))
> def args: : (<object 559520> (scdr (cdr s)))
> def args: : (<object 559520> (scddr (cdr scdr)))
> def args: : (<object 559592> (scdr (cdr s)))
> def args: : (<object 559592> (scddr (cdr scdr)))
> def args: : (<object 559660> (scdr (cdr s)))
> def args: : (<object 559660> (scddr (cdr scdr)))
> def args: : (<object 559732> (scdr (cdr s)))
> def args: : (<object 559732> (scddr (cdr scdr)))
> def args: : (<object 559800> (scdr (cdr s)))
> def args: : (<object 559800> (scddr (cdr scdr)))
> def args: : (<object 559872> (scdr (cdr s)))
> def args: : (<object 559872> (scddr (cdr scdr)))
> def args: : (<object 559940> (scdr (cdr s)))
> def args: : (<object 559940> (scddr (cdr scdr)))
> def args: : (<object 560012> (scdr (cdr s)))
> def args: : (<object 560012> (scddr (cdr scdr)))
> 1596def args: : (<object 569764> (env (if (null? @) # (car @))))
>  def args: : (<object 569871> (env (if (null? @) # (car @))))
> def args: : (<object 569991> (scdr (cdr s)))
> def args: : (<object 569991> (scddr (cdr scdr)))
> def args: : (<object 570063> (scdr (cdr s)))
> def args: : (<object 570063> (scddr (cdr scdr)))
> def args: : (<object 570135> (scdr (cdr s)))
> def args: : (<object 570135> (scddr (cdr scdr)))
> def args: : (<object 570203> (scdr (cdr s)))
> def args: : (<object 570203> (scddr (cdr scdr)))
> def args: : (<object 570442> (scdr (cdr s)))
> def args: : (<object 570442> (scddr (cdr scdr)))
> def args: : (<object 570514> (scdr (cdr s)))
> def args: : (<object 570514> (scddr (cdr scdr)))
> def args: : (<object 570582> (scdr (cdr s)))
> def args: : (<object 570582> (scddr (cdr scdr)))
> def args: : (<object 570654> (scdr (cdr s)))
> def args: : (<object 570654> (scddr (cdr scdr)))
> def args: : (<object 570722> (scdr (cdr s)))
> def args: : (<object 570722> (scddr (cdr scdr)))
> def args: : (<object 570794> (scdr (cdr s)))
> def args: : (<object 570794> (scddr (cdr scdr)))
> def args: : (<object 570862> (scdr (cdr s)))
> def args: : (<object 570862> (scddr (cdr scdr)))
> def args: : (<object 570934> (scdr (cdr s)))
> def args: : (<object 570934> (scddr (cdr scdr)))
> def args: : (<object 571002> (scdr (cdr s)))
> def args: : (<object 571002> (scddr (cdr scdr)))
> def args: : (<object 571074> (scdr (cdr s)))
> def args: : (<object 571074> (scddr (cdr scdr)))
> def args: : (<object 571142> (scdr (cdr s)))
> def args: : (<object 571142> (scddr (cdr scdr)))
> def args: : (<object 571214> (scdr (cdr s)))
> def args: : (<object 571214> (scddr (cdr scdr)))
> def args: : (<object 571282> (scdr (cdr s)))
> def args: : (<object 571282> (scddr (cdr scdr)))
> def args: : (<object 571354> (scdr (cdr s)))
> def args: : (<object 571354> (scddr (cdr scdr)))
> def args: : (<object 571422> (scdr (cdr s)))
> def args: : (<object 571422> (scddr (cdr scdr)))
> def args: : (<object 571494> (scdr (cdr s)))
> def args: : (<object 571494> (scddr (cdr scdr)))
> def args: : (<object 571562> (scdr (cdr s)))
> def args: : (<object 571562> (scddr (cdr scdr)))
> def args: : (<object 571634> (scdr (cdr s)))
> def args: : (<object 571634> (scddr (cdr scdr)))
> def args: : (<object 571702> (scdr (cdr s)))
> def args: : (<object 571702> (scddr (cdr scdr)))
> def args: : (<object 571774> (scdr (cdr s)))
> def args: : (<object 571774> (scddr (cdr scdr)))
> def args: : (<object 571842> (scdr (cdr s)))
> def args: : (<object 571842> (scddr (cdr scdr)))
> def args: : (<object 571914> (scdr (cdr s)))
> def args: : (<object 571914> (scddr (cdr scdr)))
> def args: : (<object 571982> (scdr (cdr s)))
> def args: : (<object 571982> (scddr (cdr scdr)))
> def args: : (<object 572054> (scdr (cdr s)))
> def args: : (<object 572054> (scddr (cdr scdr)))
> def args: : (<object 572122> (scdr (cdr s)))
> def args: : (<object 572122> (scddr (cdr scdr)))
> def args: : (<object 572194> (scdr (cdr s)))
> def args: : (<object 572194> (scddr (cdr scdr)))
> def args: : (<object 572262> (scdr (cdr s)))
> def args: : (<object 572262> (scddr (cdr scdr)))
> def args: : (<object 572334> (scdr (cdr s)))
> def args: : (<object 572334> (scddr (cdr scdr)))
> def args: : (<object 572402> (scdr (cdr s)))
> def args: : (<object 572402> (scddr (cdr scdr)))
> def args: : (<object 572474> (scdr (cdr s)))
> def args: : (<object 572474> (scddr (cdr scdr)))
> def args: : (<object 572542> (scdr (cdr s)))
> def args: : (<object 572542> (scddr (cdr scdr)))
> def args: : (<object 572614> (scdr (cdr s)))
> def args: : (<object 572614> (scddr (cdr scdr)))
> def args: : (<object 572682> (scdr (cdr s)))
> def args: : (<object 572682> (scddr (cdr scdr)))
> def args: : (<object 572754> (scdr (cdr s)))
> def args: : (<object 572754> (scddr (cdr scdr)))
> def args: : (<object 572822> (scdr (cdr s)))
> def args: : (<object 572822> (scddr (cdr scdr)))
> def args: : (<object 572894> (scdr (cdr s)))
> def args: : (<object 572894> (scddr (cdr scdr)))
> def args: : (<object 572962> (scdr (cdr s)))
> def args: : (<object 572962> (scddr (cdr scdr)))
> def args: : (<object 573034> (scdr (cdr s)))
> def args: : (<object 573034> (scddr (cdr scdr)))
> def args: : (<object 573102> (scdr (cdr s)))
> def args: : (<object 573102> (scddr (cdr scdr)))
> def args: : (<object 573174> (scdr (cdr s)))
> def args: : (<object 573174> (scddr (cdr scdr)))
> def args: : (<object 573242> (scdr (cdr s)))
> def args: : (<object 573242> (scddr (cdr scdr)))
> def args: : (<object 573314> (scdr (cdr s)))
> def args: : (<object 573314> (scddr (cdr scdr)))
> def args: : (<object 573382> (scdr (cdr s)))
> def args: : (<object 573382> (scddr (cdr scdr)))
> def args: : (<object 573454> (scdr (cdr s)))
> def args: : (<object 573454> (scddr (cdr scdr)))
> def args: : (<object 573522> (scdr (cdr s)))
> def args: : (<object 573522> (scddr (cdr scdr)))
> def args: : (<object 573594> (scdr (cdr s)))
> def args: : (<object 573594> (scddr (cdr scdr)))
> def args: : (<object 573662> (scdr (cdr s)))
> def args: : (<object 573662> (scddr (cdr scdr)))
> def args: : (<object 573734> (scdr (cdr s)))
> def args: : (<object 573734> (scddr (cdr scdr)))
> def args: : (<object 573802> (scdr (cdr s)))
> def args: : (<object 573802> (scddr (cdr scdr)))
> def args: : (<object 573874> (scdr (cdr s)))
> def args: : (<object 573874> (scddr (cdr scdr)))
> def args: : (<object 573942> (scdr (cdr s)))
> def args: : (<object 573942> (scddr (cdr scdr)))
> def args: : (<object 574014> (scdr (cdr s)))
> def args: : (<object 574014> (scddr (cdr scdr)))
> def args: : (<object 574082> (scdr (cdr s)))
> def args: : (<object 574082> (scddr (cdr scdr)))
> def args: : (<object 574154> (scdr (cdr s)))
> def args: : (<object 574154> (scddr (cdr scdr)))
> def args: : (<object 574222> (scdr (cdr s)))
> def args: : (<object 574222> (scddr (cdr scdr)))
> def args: : (<object 574294> (scdr (cdr s)))
> def args: : (<object 574294> (scddr (cdr scdr)))
> def args: : (<object 574362> (scdr (cdr s)))
> def args: : (<object 574362> (scddr (cdr scdr)))
> def args: : (<object 574434> (scdr (cdr s)))
> def args: : (<object 574434> (scddr (cdr scdr)))
> def args: : (<object 574502> (scdr (cdr s)))
> def args: : (<object 574502> (scddr (cdr scdr)))
> def args: : (<object 574574> (scdr (cdr s)))
> def args: : (<object 574574> (scddr (cdr scdr)))
> def args: : (<object 574642> (scdr (cdr s)))
> def args: : (<object 574642> (scddr (cdr scdr)))
> def args: : (<object 574714> (scdr (cdr s)))
> def args: : (<object 574714> (scddr (cdr scdr)))
> def args: : (<object 574782> (scdr (cdr s)))
> def args: : (<object 574782> (scddr (cdr scdr)))
> def args: : (<object 574854> (scdr (cdr s)))
> def args: : (<object 574854> (scddr (cdr scdr)))
> def args: : (<object 574922> (scdr (cdr s)))
> def args: : (<object 574922> (scddr (cdr scdr)))
> def args: : (<object 574994> (scdr (cdr s)))
> def args: : (<object 574994> (scddr (cdr scdr)))
> def args: : (<object 575062> (scdr (cdr s)))
> def args: : (<object 575062> (scddr (cdr scdr)))
> def args: : (<object 575134> (scdr (cdr s)))
> def args: : (<object 575134> (scddr (cdr scdr)))
> def args: : (<object 575202> (scdr (cdr s)))
> def args: : (<object 575202> (scddr (cdr scdr)))
> def args: : (<object 575274> (scdr (cdr s)))
> def args: : (<object 575274> (scddr (cdr scdr)))
> def args: : (<object 575342> (scdr (cdr s)))
> def args: : (<object 575342> (scddr (cdr scdr)))
> def args: : (<object 575414> (scdr (cdr s)))
> def args: : (<object 575414> (scddr (cdr scdr)))
> def args: : (<object 575482> (scdr (cdr s)))
> def args: : (<object 575482> (scddr (cdr scdr)))
> def args: : (<object 575554> (scdr (cdr s)))
> def args: : (<object 575554> (scddr (cdr scdr)))
> def args: : (<object 575622> (scdr (cdr s)))
> def args: : (<object 575622> (scddr (cdr scdr)))
> def args: : (<object 575694> (scdr (cdr s)))
> def args: : (<object 575694> (scddr (cdr scdr)))
> def args: : (<object 575762> (scdr (cdr s)))
> def args: : (<object 575762> (scddr (cdr scdr)))
> def args: : (<object 575834> (scdr (cdr s)))
> def args: : (<object 575834> (scddr (cdr scdr)))
> def args: : (<object 575902> (scdr (cdr s)))
> def args: : (<object 575902> (scddr (cdr scdr)))
> def args: : (<object 575974> (scdr (cdr s)))
> def args: : (<object 575974> (scddr (cdr scdr)))
> def args: : (<object 576042> (scdr (cdr s)))
> def args: : (<object 576042> (scddr (cdr scdr)))
> def args: : (<object 576114> (scdr (cdr s)))
> def args: : (<object 576114> (scddr (cdr scdr)))
> def args: : (<object 576182> (scdr (cdr s)))
> def args: : (<object 576182> (scddr (cdr scdr)))
> def args: : (<object 576254> (scdr (cdr s)))
> def args: : (<object 576254> (scddr (cdr scdr)))
> def args: : (<object 576322> (scdr (cdr s)))
> def args: : (<object 576322> (scddr (cdr scdr)))
> def args: : (<object 576394> (scdr (cdr s)))
> def args: : (<object 576394> (scddr (cdr scdr)))
> def args: : (<object 576462> (scdr (cdr s)))
> def args: : (<object 576462> (scddr (cdr scdr)))
> def args: : (<object 576534> (scdr (cdr s)))
> def args: : (<object 576534> (scddr (cdr scdr)))
> def args: : (<object 576602> (scdr (cdr s)))
> def args: : (<object 576602> (scddr (cdr scdr)))
> def args: : (<object 576674> (scdr (cdr s)))
> def args: : (<object 576674> (scddr (cdr scdr)))
> def args: : (<object 576742> (scdr (cdr s)))
> def args: : (<object 576742> (scddr (cdr scdr)))
> def args: : (<object 576814> (scdr (cdr s)))
> def args: : (<object 576814> (scddr (cdr scdr)))
> def args: : (<object 576882> (scdr (cdr s)))
> def args: : (<object 576882> (scddr (cdr scdr)))
> def args: : (<object 576954> (scdr (cdr s)))
> def args: : (<object 576954> (scddr (cdr scdr)))
> def args: : (<object 577022> (scdr (cdr s)))
> def args: : (<object 577022> (scddr (cdr scdr)))
> def args: : (<object 577094> (scdr (cdr s)))
> def args: : (<object 577094> (scddr (cdr scdr)))
> def args: : (<object 577162> (scdr (cdr s)))
> def args: : (<object 577162> (scddr (cdr scdr)))
> def args: : (<object 577234> (scdr (cdr s)))
> def args: : (<object 577234> (scddr (cdr scdr)))
> def args: : (<object 577302> (scdr (cdr s)))
> def args: : (<object 577302> (scddr (cdr scdr)))
> def args: : (<object 577374> (scdr (cdr s)))
> def args: : (<object 577374> (scddr (cdr scdr)))
> def args: : (<object 577442> (scdr (cdr s)))
> def args: : (<object 577442> (scddr (cdr scdr)))
> def args: : (<object 577514> (scdr (cdr s)))
> def args: : (<object 577514> (scddr (cdr scdr)))
> def args: : (<object 577582> (scdr (cdr s)))
> def args: : (<object 577582> (scddr (cdr scdr)))
> def args: : (<object 577654> (scdr (cdr s)))
> def args: : (<object 577654> (scddr (cdr scdr)))
> def args: : (<object 577722> (scdr (cdr s)))
> def args: : (<object 577722> (scddr (cdr scdr)))
> def args: : (<object 577794> (scdr (cdr s)))
> def args: : (<object 577794> (scddr (cdr scdr)))
> def args: : (<object 577862> (scdr (cdr s)))
> def args: : (<object 577862> (scddr (cdr scdr)))
> def args: : (<object 577934> (scdr (cdr s)))
> def args: : (<object 577934> (scddr (cdr scdr)))
> def args: : (<object 578002> (scdr (cdr s)))
> def args: : (<object 578002> (scddr (cdr scdr)))
> def args: : (<object 578074> (scdr (cdr s)))
> def args: : (<object 578074> (scddr (cdr scdr)))
> 1653def args: : (<object 587997> (env (if (null? @) # (car @))))
>  def args: : (<object 588104> (env (if (null? @) # (car @))))
> def args: : (<object 588224> (scdr (cdr s)))
> def args: : (<object 588224> (scddr (cdr scdr)))
> def args: : (<object 588296> (scdr (cdr s)))
> def args: : (<object 588296> (scddr (cdr scdr)))
> def args: : (<object 588368> (scdr (cdr s)))
> def args: : (<object 588368> (scddr (cdr scdr)))
> def args: : (<object 588436> (scdr (cdr s)))
> def args: : (<object 588436> (scddr (cdr scdr)))
> def args: : (<object 588675> (scdr (cdr s)))
> def args: : (<object 588675> (scddr (cdr scdr)))
> def args: : (<object 588747> (scdr (cdr s)))
> def args: : (<object 588747> (scddr (cdr scdr)))
> def args: : (<object 588815> (scdr (cdr s)))
> def args: : (<object 588815> (scddr (cdr scdr)))
> def args: : (<object 588887> (scdr (cdr s)))
> def args: : (<object 588887> (scddr (cdr scdr)))
> def args: : (<object 588955> (scdr (cdr s)))
> def args: : (<object 588955> (scddr (cdr scdr)))
> def args: : (<object 589027> (scdr (cdr s)))
> def args: : (<object 589027> (scddr (cdr scdr)))
> def args: : (<object 589095> (scdr (cdr s)))
> def args: : (<object 589095> (scddr (cdr scdr)))
> def args: : (<object 589167> (scdr (cdr s)))
> def args: : (<object 589167> (scddr (cdr scdr)))
> def args: : (<object 589235> (scdr (cdr s)))
> def args: : (<object 589235> (scddr (cdr scdr)))
> def args: : (<object 589307> (scdr (cdr s)))
> def args: : (<object 589307> (scddr (cdr scdr)))
> def args: : (<object 589375> (scdr (cdr s)))
> def args: : (<object 589375> (scddr (cdr scdr)))
> def args: : (<object 589447> (scdr (cdr s)))
> def args: : (<object 589447> (scddr (cdr scdr)))
> def args: : (<object 589515> (scdr (cdr s)))
> def args: : (<object 589515> (scddr (cdr scdr)))
> def args: : (<object 589587> (scdr (cdr s)))
> def args: : (<object 589587> (scddr (cdr scdr)))
> def args: : (<object 589655> (scdr (cdr s)))
> def args: : (<object 589655> (scddr (cdr scdr)))
> def args: : (<object 589727> (scdr (cdr s)))
> def args: : (<object 589727> (scddr (cdr scdr)))
> def args: : (<object 589795> (scdr (cdr s)))
> def args: : (<object 589795> (scddr (cdr scdr)))
> def args: : (<object 589867> (scdr (cdr s)))
> def args: : (<object 589867> (scddr (cdr scdr)))
> def args: : (<object 589935> (scdr (cdr s)))
> def args: : (<object 589935> (scddr (cdr scdr)))
> def args: : (<object 590007> (scdr (cdr s)))
> def args: : (<object 590007> (scddr (cdr scdr)))
> def args: : (<object 590075> (scdr (cdr s)))
> def args: : (<object 590075> (scddr (cdr scdr)))
> def args: : (<object 590147> (scdr (cdr s)))
> def args: : (<object 590147> (scddr (cdr scdr)))
> def args: : (<object 590215> (scdr (cdr s)))
> def args: : (<object 590215> (scddr (cdr scdr)))
> def args: : (<object 590287> (scdr (cdr s)))
> def args: : (<object 590287> (scddr (cdr scdr)))
> def args: : (<object 590355> (scdr (cdr s)))
> def args: : (<object 590355> (scddr (cdr scdr)))
> def args: : (<object 590427> (scdr (cdr s)))
> def args: : (<object 590427> (scddr (cdr scdr)))
> def args: : (<object 590495> (scdr (cdr s)))
> def args: : (<object 590495> (scddr (cdr scdr)))
> def args: : (<object 590567> (scdr (cdr s)))
> def args: : (<object 590567> (scddr (cdr scdr)))
> def args: : (<object 590635> (scdr (cdr s)))
> def args: : (<object 590635> (scddr (cdr scdr)))
> def args: : (<object 590707> (scdr (cdr s)))
> def args: : (<object 590707> (scddr (cdr scdr)))
> def args: : (<object 590775> (scdr (cdr s)))
> def args: : (<object 590775> (scddr (cdr scdr)))
> def args: : (<object 590847> (scdr (cdr s)))
> def args: : (<object 590847> (scddr (cdr scdr)))
> def args: : (<object 590915> (scdr (cdr s)))
> def args: : (<object 590915> (scddr (cdr scdr)))
> def args: : (<object 590987> (scdr (cdr s)))
> def args: : (<object 590987> (scddr (cdr scdr)))
> def args: : (<object 591055> (scdr (cdr s)))
> def args: : (<object 591055> (scddr (cdr scdr)))
> def args: : (<object 591127> (scdr (cdr s)))
> def args: : (<object 591127> (scddr (cdr scdr)))
> def args: : (<object 591195> (scdr (cdr s)))
> def args: : (<object 591195> (scddr (cdr scdr)))
> def args: : (<object 591267> (scdr (cdr s)))
> def args: : (<object 591267> (scddr (cdr scdr)))
> def args: : (<object 591335> (scdr (cdr s)))
> def args: : (<object 591335> (scddr (cdr scdr)))
> def args: : (<object 591407> (scdr (cdr s)))
> def args: : (<object 591407> (scddr (cdr scdr)))
> def args: : (<object 591475> (scdr (cdr s)))
> def args: : (<object 591475> (scddr (cdr scdr)))
> def args: : (<object 591547> (scdr (cdr s)))
> def args: : (<object 591547> (scddr (cdr scdr)))
> def args: : (<object 591615> (scdr (cdr s)))
> def args: : (<object 591615> (scddr (cdr scdr)))
> def args: : (<object 591687> (scdr (cdr s)))
> def args: : (<object 591687> (scddr (cdr scdr)))
> def args: : (<object 591755> (scdr (cdr s)))
> def args: : (<object 591755> (scddr (cdr scdr)))
> def args: : (<object 591827> (scdr (cdr s)))
> def args: : (<object 591827> (scddr (cdr scdr)))
> def args: : (<object 591895> (scdr (cdr s)))
> def args: : (<object 591895> (scddr (cdr scdr)))
> def args: : (<object 591967> (scdr (cdr s)))
> def args: : (<object 591967> (scddr (cdr scdr)))
> def args: : (<object 592035> (scdr (cdr s)))
> def args: : (<object 592035> (scddr (cdr scdr)))
> def args: : (<object 592107> (scdr (cdr s)))
> def args: : (<object 592107> (scddr (cdr scdr)))
> def args: : (<object 592175> (scdr (cdr s)))
> def args: : (<object 592175> (scddr (cdr scdr)))
> def args: : (<object 592247> (scdr (cdr s)))
> def args: : (<object 592247> (scddr (cdr scdr)))
> def args: : (<object 592315> (scdr (cdr s)))
> def args: : (<object 592315> (scddr (cdr scdr)))
> def args: : (<object 592387> (scdr (cdr s)))
> def args: : (<object 592387> (scddr (cdr scdr)))
> def args: : (<object 592455> (scdr (cdr s)))
> def args: : (<object 592455> (scddr (cdr scdr)))
> def args: : (<object 592527> (scdr (cdr s)))
> def args: : (<object 592527> (scddr (cdr scdr)))
> def args: : (<object 592595> (scdr (cdr s)))
> def args: : (<object 592595> (scddr (cdr scdr)))
> def args: : (<object 592667> (scdr (cdr s)))
> def args: : (<object 592667> (scddr (cdr scdr)))
> def args: : (<object 592735> (scdr (cdr s)))
> def args: : (<object 592735> (scddr (cdr scdr)))
> def args: : (<object 592807> (scdr (cdr s)))
> def args: : (<object 592807> (scddr (cdr scdr)))
> def args: : (<object 592875> (scdr (cdr s)))
> def args: : (<object 592875> (scddr (cdr scdr)))
> def args: : (<object 592947> (scdr (cdr s)))
> def args: : (<object 592947> (scddr (cdr scdr)))
> def args: : (<object 593015> (scdr (cdr s)))
> def args: : (<object 593015> (scddr (cdr scdr)))
> def args: : (<object 593087> (scdr (cdr s)))
> def args: : (<object 593087> (scddr (cdr scdr)))
> def args: : (<object 593155> (scdr (cdr s)))
> def args: : (<object 593155> (scddr (cdr scdr)))
> def args: : (<object 593227> (scdr (cdr s)))
> def args: : (<object 593227> (scddr (cdr scdr)))
> def args: : (<object 593295> (scdr (cdr s)))
> def args: : (<object 593295> (scddr (cdr scdr)))
> def args: : (<object 593367> (scdr (cdr s)))
> def args: : (<object 593367> (scddr (cdr scdr)))
> def args: : (<object 593435> (scdr (cdr s)))
> def args: : (<object 593435> (scddr (cdr scdr)))
> def args: : (<object 593507> (scdr (cdr s)))
> def args: : (<object 593507> (scddr (cdr scdr)))
> def args: : (<object 593575> (scdr (cdr s)))
> def args: : (<object 593575> (scddr (cdr scdr)))
> def args: : (<object 593647> (scdr (cdr s)))
> def args: : (<object 593647> (scddr (cdr scdr)))
> def args: : (<object 593715> (scdr (cdr s)))
> def args: : (<object 593715> (scddr (cdr scdr)))
> def args: : (<object 593787> (scdr (cdr s)))
> def args: : (<object 593787> (scddr (cdr scdr)))
> def args: : (<object 593855> (scdr (cdr s)))
> def args: : (<object 593855> (scddr (cdr scdr)))
> def args: : (<object 593927> (scdr (cdr s)))
> def args: : (<object 593927> (scddr (cdr scdr)))
> def args: : (<object 593995> (scdr (cdr s)))
> def args: : (<object 593995> (scddr (cdr scdr)))
> def args: : (<object 594067> (scdr (cdr s)))
> def args: : (<object 594067> (scddr (cdr scdr)))
> def args: : (<object 594135> (scdr (cdr s)))
> def args: : (<object 594135> (scddr (cdr scdr)))
> def args: : (<object 594207> (scdr (cdr s)))
> def args: : (<object 594207> (scddr (cdr scdr)))
> def args: : (<object 594275> (scdr (cdr s)))
> def args: : (<object 594275> (scddr (cdr scdr)))
> def args: : (<object 594347> (scdr (cdr s)))
> def args: : (<object 594347> (scddr (cdr scdr)))
> def args: : (<object 594415> (scdr (cdr s)))
> def args: : (<object 594415> (scddr (cdr scdr)))
> def args: : (<object 594487> (scdr (cdr s)))
> def args: : (<object 594487> (scddr (cdr scdr)))
> def args: : (<object 594555> (scdr (cdr s)))
> def args: : (<object 594555> (scddr (cdr scdr)))
> def args: : (<object 594627> (scdr (cdr s)))
> def args: : (<object 594627> (scddr (cdr scdr)))
> def args: : (<object 594695> (scdr (cdr s)))
> def args: : (<object 594695> (scddr (cdr scdr)))
> def args: : (<object 594767> (scdr (cdr s)))
> def args: : (<object 594767> (scddr (cdr scdr)))
> def args: : (<object 594835> (scdr (cdr s)))
> def args: : (<object 594835> (scddr (cdr scdr)))
> def args: : (<object 594907> (scdr (cdr s)))
> def args: : (<object 594907> (scddr (cdr scdr)))
> def args: : (<object 594975> (scdr (cdr s)))
> def args: : (<object 594975> (scddr (cdr scdr)))
> def args: : (<object 595047> (scdr (cdr s)))
> def args: : (<object 595047> (scddr (cdr scdr)))
> def args: : (<object 595115> (scdr (cdr s)))
> def args: : (<object 595115> (scddr (cdr scdr)))
> def args: : (<object 595187> (scdr (cdr s)))
> def args: : (<object 595187> (scddr (cdr scdr)))
> def args: : (<object 595255> (scdr (cdr s)))
> def args: : (<object 595255> (scddr (cdr scdr)))
> def args: : (<object 595327> (scdr (cdr s)))
> def args: : (<object 595327> (scddr (cdr scdr)))
> def args: : (<object 595395> (scdr (cdr s)))
> def args: : (<object 595395> (scddr (cdr scdr)))
> def args: : (<object 595467> (scdr (cdr s)))
> def args: : (<object 595467> (scddr (cdr scdr)))
> def args: : (<object 595535> (scdr (cdr s)))
> def args: : (<object 595535> (scddr (cdr scdr)))
> def args: : (<object 595607> (scdr (cdr s)))
> def args: : (<object 595607> (scddr (cdr scdr)))
> def args: : (<object 595675> (scdr (cdr s)))
> def args: : (<object 595675> (scddr (cdr scdr)))
> def args: : (<object 595747> (scdr (cdr s)))
> def args: : (<object 595747> (scddr (cdr scdr)))
> def args: : (<object 595815> (scdr (cdr s)))
> def args: : (<object 595815> (scddr (cdr scdr)))
> def args: : (<object 595887> (scdr (cdr s)))
> def args: : (<object 595887> (scddr (cdr scdr)))
> def args: : (<object 595955> (scdr (cdr s)))
> def args: : (<object 595955> (scddr (cdr scdr)))
> def args: : (<object 596027> (scdr (cdr s)))
> def args: : (<object 596027> (scddr (cdr scdr)))
> def args: : (<object 596095> (scdr (cdr s)))
> def args: : (<object 596095> (scddr (cdr scdr)))
> def args: : (<object 596167> (scdr (cdr s)))
> def args: : (<object 596167> (scddr (cdr scdr)))
> def args: : (<object 596235> (scdr (cdr s)))
> def args: : (<object 596235> (scddr (cdr scdr)))
> def args: : (<object 596307> (scdr (cdr s)))
> def args: : (<object 596307> (scddr (cdr scdr)))
> def args: : (<object 596375> (scdr (cdr s)))
> def args: : (<object 596375> (scddr (cdr scdr)))
> def args: : (<object 596447> (scdr (cdr s)))
> def args: : (<object 596447> (scddr (cdr scdr)))
> 1711def args: : (<object 606541> (env (if (null? @) # (car @))))
>  def args: : (<object 606648> (env (if (null? @) # (car @))))
> def args: : (<object 606768> (scdr (cdr s)))
> def args: : (<object 606768> (scddr (cdr scdr)))
> def args: : (<object 606840> (scdr (cdr s)))
> def args: : (<object 606840> (scddr (cdr scdr)))
> def args: : (<object 606912> (scdr (cdr s)))
> def args: : (<object 606912> (scddr (cdr scdr)))
> def args: : (<object 606980> (scdr (cdr s)))
> def args: : (<object 606980> (scddr (cdr scdr)))
> def args: : (<object 607219> (scdr (cdr s)))
> def args: : (<object 607219> (scddr (cdr scdr)))
> def args: : (<object 607291> (scdr (cdr s)))
> def args: : (<object 607291> (scddr (cdr scdr)))
> def args: : (<object 607359> (scdr (cdr s)))
> def args: : (<object 607359> (scddr (cdr scdr)))
> def args: : (<object 607431> (scdr (cdr s)))
> def args: : (<object 607431> (scddr (cdr scdr)))
> def args: : (<object 607499> (scdr (cdr s)))
> def args: : (<object 607499> (scddr (cdr scdr)))
> def args: : (<object 607571> (scdr (cdr s)))
> def args: : (<object 607571> (scddr (cdr scdr)))
> def args: : (<object 607639> (scdr (cdr s)))
> def args: : (<object 607639> (scddr (cdr scdr)))
> def args: : (<object 607711> (scdr (cdr s)))
> def args: : (<object 607711> (scddr (cdr scdr)))
> def args: : (<object 607779> (scdr (cdr s)))
> def args: : (<object 607779> (scddr (cdr scdr)))
> def args: : (<object 607851> (scdr (cdr s)))
> def args: : (<object 607851> (scddr (cdr scdr)))
> def args: : (<object 607919> (scdr (cdr s)))
> def args: : (<object 607919> (scddr (cdr scdr)))
> def args: : (<object 607991> (scdr (cdr s)))
> def args: : (<object 607991> (scddr (cdr scdr)))
> def args: : (<object 608059> (scdr (cdr s)))
> def args: : (<object 608059> (scddr (cdr scdr)))
> def args: : (<object 608131> (scdr (cdr s)))
> def args: : (<object 608131> (scddr (cdr scdr)))
> def args: : (<object 608199> (scdr (cdr s)))
> def args: : (<object 608199> (scddr (cdr scdr)))
> def args: : (<object 608271> (scdr (cdr s)))
> def args: : (<object 608271> (scddr (cdr scdr)))
> def args: : (<object 608339> (scdr (cdr s)))
> def args: : (<object 608339> (scddr (cdr scdr)))
> def args: : (<object 608411> (scdr (cdr s)))
> def args: : (<object 608411> (scddr (cdr scdr)))
> def args: : (<object 608479> (scdr (cdr s)))
> def args: : (<object 608479> (scddr (cdr scdr)))
> def args: : (<object 608551> (scdr (cdr s)))
> def args: : (<object 608551> (scddr (cdr scdr)))
> def args: : (<object 608619> (scdr (cdr s)))
> def args: : (<object 608619> (scddr (cdr scdr)))
> def args: : (<object 608691> (scdr (cdr s)))
> def args: : (<object 608691> (scddr (cdr scdr)))
> def args: : (<object 608759> (scdr (cdr s)))
> def args: : (<object 608759> (scddr (cdr scdr)))
> def args: : (<object 608831> (scdr (cdr s)))
> def args: : (<object 608831> (scddr (cdr scdr)))
> def args: : (<object 608899> (scdr (cdr s)))
> def args: : (<object 608899> (scddr (cdr scdr)))
> def args: : (<object 608971> (scdr (cdr s)))
> def args: : (<object 608971> (scddr (cdr scdr)))
> def args: : (<object 609039> (scdr (cdr s)))
> def args: : (<object 609039> (scddr (cdr scdr)))
> def args: : (<object 609111> (scdr (cdr s)))
> def args: : (<object 609111> (scddr (cdr scdr)))
> def args: : (<object 609179> (scdr (cdr s)))
> def args: : (<object 609179> (scddr (cdr scdr)))
> def args: : (<object 609251> (scdr (cdr s)))
> def args: : (<object 609251> (scddr (cdr scdr)))
> def args: : (<object 609319> (scdr (cdr s)))
> def args: : (<object 609319> (scddr (cdr scdr)))
> def args: : (<object 609391> (scdr (cdr s)))
> def args: : (<object 609391> (scddr (cdr scdr)))
> def args: : (<object 609459> (scdr (cdr s)))
> def args: : (<object 609459> (scddr (cdr scdr)))
> def args: : (<object 609531> (scdr (cdr s)))
> def args: : (<object 609531> (scddr (cdr scdr)))
> def args: : (<object 609599> (scdr (cdr s)))
> def args: : (<object 609599> (scddr (cdr scdr)))
> def args: : (<object 609671> (scdr (cdr s)))
> def args: : (<object 609671> (scddr (cdr scdr)))
> def args: : (<object 609739> (scdr (cdr s)))
> def args: : (<object 609739> (scddr (cdr scdr)))
> def args: : (<object 609811> (scdr (cdr s)))
> def args: : (<object 609811> (scddr (cdr scdr)))
> def args: : (<object 609879> (scdr (cdr s)))
> def args: : (<object 609879> (scddr (cdr scdr)))
> def args: : (<object 609951> (scdr (cdr s)))
> def args: : (<object 609951> (scddr (cdr scdr)))
> def args: : (<object 610019> (scdr (cdr s)))
> def args: : (<object 610019> (scddr (cdr scdr)))
> def args: : (<object 610091> (scdr (cdr s)))
> def args: : (<object 610091> (scddr (cdr scdr)))
> def args: : (<object 610159> (scdr (cdr s)))
> def args: : (<object 610159> (scddr (cdr scdr)))
> def args: : (<object 610231> (scdr (cdr s)))
> def args: : (<object 610231> (scddr (cdr scdr)))
> def args: : (<object 610299> (scdr (cdr s)))
> def args: : (<object 610299> (scddr (cdr scdr)))
> def args: : (<object 610371> (scdr (cdr s)))
> def args: : (<object 610371> (scddr (cdr scdr)))
> def args: : (<object 610439> (scdr (cdr s)))
> def args: : (<object 610439> (scddr (cdr scdr)))
> def args: : (<object 610511> (scdr (cdr s)))
> def args: : (<object 610511> (scddr (cdr scdr)))
> def args: : (<object 610579> (scdr (cdr s)))
> def args: : (<object 610579> (scddr (cdr scdr)))
> def args: : (<object 610651> (scdr (cdr s)))
> def args: : (<object 610651> (scddr (cdr scdr)))
> def args: : (<object 610719> (scdr (cdr s)))
> def args: : (<object 610719> (scddr (cdr scdr)))
> def args: : (<object 610791> (scdr (cdr s)))
> def args: : (<object 610791> (scddr (cdr scdr)))
> def args: : (<object 610859> (scdr (cdr s)))
> def args: : (<object 610859> (scddr (cdr scdr)))
> def args: : (<object 610931> (scdr (cdr s)))
> def args: : (<object 610931> (scddr (cdr scdr)))
> def args: : (<object 610999> (scdr (cdr s)))
> def args: : (<object 610999> (scddr (cdr scdr)))
> def args: : (<object 611071> (scdr (cdr s)))
> def args: : (<object 611071> (scddr (cdr scdr)))
> def args: : (<object 611139> (scdr (cdr s)))
> def args: : (<object 611139> (scddr (cdr scdr)))
> def args: : (<object 611211> (scdr (cdr s)))
> def args: : (<object 611211> (scddr (cdr scdr)))
> def args: : (<object 611279> (scdr (cdr s)))
> def args: : (<object 611279> (scddr (cdr scdr)))
> def args: : (<object 611351> (scdr (cdr s)))
> def args: : (<object 611351> (scddr (cdr scdr)))
> def args: : (<object 611419> (scdr (cdr s)))
> def args: : (<object 611419> (scddr (cdr scdr)))
> def args: : (<object 611491> (scdr (cdr s)))
> def args: : (<object 611491> (scddr (cdr scdr)))
> def args: : (<object 611559> (scdr (cdr s)))
> def args: : (<object 611559> (scddr (cdr scdr)))
> def args: : (<object 611631> (scdr (cdr s)))
> def args: : (<object 611631> (scddr (cdr scdr)))
> def args: : (<object 611699> (scdr (cdr s)))
> def args: : (<object 611699> (scddr (cdr scdr)))
> def args: : (<object 611771> (scdr (cdr s)))
> def args: : (<object 611771> (scddr (cdr scdr)))
> def args: : (<object 611839> (scdr (cdr s)))
> def args: : (<object 611839> (scddr (cdr scdr)))
> def args: : (<object 611911> (scdr (cdr s)))
> def args: : (<object 611911> (scddr (cdr scdr)))
> def args: : (<object 611979> (scdr (cdr s)))
> def args: : (<object 611979> (scddr (cdr scdr)))
> def args: : (<object 612051> (scdr (cdr s)))
> def args: : (<object 612051> (scddr (cdr scdr)))
> def args: : (<object 612119> (scdr (cdr s)))
> def args: : (<object 612119> (scddr (cdr scdr)))
> def args: : (<object 612191> (scdr (cdr s)))
> def args: : (<object 612191> (scddr (cdr scdr)))
> def args: : (<object 612259> (scdr (cdr s)))
> def args: : (<object 612259> (scddr (cdr scdr)))
> def args: : (<object 612331> (scdr (cdr s)))
> def args: : (<object 612331> (scddr (cdr scdr)))
> def args: : (<object 612399> (scdr (cdr s)))
> def args: : (<object 612399> (scddr (cdr scdr)))
> def args: : (<object 612471> (scdr (cdr s)))
> def args: : (<object 612471> (scddr (cdr scdr)))
> def args: : (<object 612539> (scdr (cdr s)))
> def args: : (<object 612539> (scddr (cdr scdr)))
> def args: : (<object 612611> (scdr (cdr s)))
> def args: : (<object 612611> (scddr (cdr scdr)))
> def args: : (<object 612679> (scdr (cdr s)))
> def args: : (<object 612679> (scddr (cdr scdr)))
> def args: : (<object 612751> (scdr (cdr s)))
> def args: : (<object 612751> (scddr (cdr scdr)))
> def args: : (<object 612819> (scdr (cdr s)))
> def args: : (<object 612819> (scddr (cdr scdr)))
> def args: : (<object 612891> (scdr (cdr s)))
> def args: : (<object 612891> (scddr (cdr scdr)))
> def args: : (<object 612959> (scdr (cdr s)))
> def args: : (<object 612959> (scddr (cdr scdr)))
> def args: : (<object 613031> (scdr (cdr s)))
> def args: : (<object 613031> (scddr (cdr scdr)))
> def args: : (<object 613099> (scdr (cdr s)))
> def args: : (<object 613099> (scddr (cdr scdr)))
> def args: : (<object 613171> (scdr (cdr s)))
> def args: : (<object 613171> (scddr (cdr scdr)))
> def args: : (<object 613239> (scdr (cdr s)))
> def args: : (<object 613239> (scddr (cdr scdr)))
> def args: : (<object 613311> (scdr (cdr s)))
> def args: : (<object 613311> (scddr (cdr scdr)))
> def args: : (<object 613379> (scdr (cdr s)))
> def args: : (<object 613379> (scddr (cdr scdr)))
> def args: : (<object 613451> (scdr (cdr s)))
> def args: : (<object 613451> (scddr (cdr scdr)))
> def args: : (<object 613519> (scdr (cdr s)))
> def args: : (<object 613519> (scddr (cdr scdr)))
> def args: : (<object 613591> (scdr (cdr s)))
> def args: : (<object 613591> (scddr (cdr scdr)))
> def args: : (<object 613659> (scdr (cdr s)))
> def args: : (<object 613659> (scddr (cdr scdr)))
> def args: : (<object 613731> (scdr (cdr s)))
> def args: : (<object 613731> (scddr (cdr scdr)))
> def args: : (<object 613799> (scdr (cdr s)))
> def args: : (<object 613799> (scddr (cdr scdr)))
> def args: : (<object 613871> (scdr (cdr s)))
> def args: : (<object 613871> (scddr (cdr scdr)))
> def args: : (<object 613939> (scdr (cdr s)))
> def args: : (<object 613939> (scddr (cdr scdr)))
> def args: : (<object 614011> (scdr (cdr s)))
> def args: : (<object 614011> (scddr (cdr scdr)))
> def args: : (<object 614079> (scdr (cdr s)))
> def args: : (<object 614079> (scddr (cdr scdr)))
> def args: : (<object 614151> (scdr (cdr s)))
> def args: : (<object 614151> (scddr (cdr scdr)))
> def args: : (<object 614219> (scdr (cdr s)))
> def args: : (<object 614219> (scddr (cdr scdr)))
> def args: : (<object 614291> (scdr (cdr s)))
> def args: : (<object 614291> (scddr (cdr scdr)))
> def args: : (<object 614359> (scdr (cdr s)))
> def args: : (<object 614359> (scddr (cdr scdr)))
> def args: : (<object 614431> (scdr (cdr s)))
> def args: : (<object 614431> (scddr (cdr scdr)))
> def args: : (<object 614499> (scdr (cdr s)))
> def args: : (<object 614499> (scddr (cdr scdr)))
> def args: : (<object 614571> (scdr (cdr s)))
> def args: : (<object 614571> (scddr (cdr scdr)))
> def args: : (<object 614639> (scdr (cdr s)))
> def args: : (<object 614639> (scddr (cdr scdr)))
> def args: : (<object 614711> (scdr (cdr s)))
> def args: : (<object 614711> (scddr (cdr scdr)))
> def args: : (<object 614779> (scdr (cdr s)))
> def args: : (<object 614779> (scddr (cdr scdr)))
> def args: : (<object 614851> (scdr (cdr s)))
> def args: : (<object 614851> (scddr (cdr scdr)))
> def args: : (<object 614919> (scdr (cdr s)))
> def args: : (<object 614919> (scddr (cdr scdr)))
> def args: : (<object 614991> (scdr (cdr s)))
> def args: : (<object 614991> (scddr (cdr scdr)))
> def args: : (<object 615059> (scdr (cdr s)))
> def args: : (<object 615059> (scddr (cdr scdr)))
> def args: : (<object 615131> (scdr (cdr s)))
> def args: : (<object 615131> (scddr (cdr scdr)))
> 1770def args: : (<object 625396> (env (if (null? @) # (car @))))
>  def args: : (<object 625503> (env (if (null? @) # (car @))))
> def args: : (<object 625623> (scdr (cdr s)))
> def args: : (<object 625623> (scddr (cdr scdr)))
> def args: : (<object 625695> (scdr (cdr s)))
> def args: : (<object 625695> (scddr (cdr scdr)))
> def args: : (<object 625767> (scdr (cdr s)))
> def args: : (<object 625767> (scddr (cdr scdr)))
> def args: : (<object 625835> (scdr (cdr s)))
> def args: : (<object 625835> (scddr (cdr scdr)))
> def args: : (<object 626074> (scdr (cdr s)))
> def args: : (<object 626074> (scddr (cdr scdr)))
> def args: : (<object 626146> (scdr (cdr s)))
> def args: : (<object 626146> (scddr (cdr scdr)))
> def args: : (<object 626214> (scdr (cdr s)))
> def args: : (<object 626214> (scddr (cdr scdr)))
> def args: : (<object 626286> (scdr (cdr s)))
> def args: : (<object 626286> (scddr (cdr scdr)))
> def args: : (<object 626354> (scdr (cdr s)))
> def args: : (<object 626354> (scddr (cdr scdr)))
> def args: : (<object 626426> (scdr (cdr s)))
> def args: : (<object 626426> (scddr (cdr scdr)))
> def args: : (<object 626494> (scdr (cdr s)))
> def args: : (<object 626494> (scddr (cdr scdr)))
> def args: : (<object 626566> (scdr (cdr s)))
> def args: : (<object 626566> (scddr (cdr scdr)))
> def args: : (<object 626634> (scdr (cdr s)))
> def args: : (<object 626634> (scddr (cdr scdr)))
> def args: : (<object 626706> (scdr (cdr s)))
> def args: : (<object 626706> (scddr (cdr scdr)))
> def args: : (<object 626774> (scdr (cdr s)))
> def args: : (<object 626774> (scddr (cdr scdr)))
> def args: : (<object 626846> (scdr (cdr s)))
> def args: : (<object 626846> (scddr (cdr scdr)))
> def args: : (<object 626914> (scdr (cdr s)))
> def args: : (<object 626914> (scddr (cdr scdr)))
> def args: : (<object 626986> (scdr (cdr s)))
> def args: : (<object 626986> (scddr (cdr scdr)))
> def args: : (<object 627054> (scdr (cdr s)))
> def args: : (<object 627054> (scddr (cdr scdr)))
> def args: : (<object 627126> (scdr (cdr s)))
> def args: : (<object 627126> (scddr (cdr scdr)))
> def args: : (<object 627194> (scdr (cdr s)))
> def args: : (<object 627194> (scddr (cdr scdr)))
> def args: : (<object 627266> (scdr (cdr s)))
> def args: : (<object 627266> (scddr (cdr scdr)))
> def args: : (<object 627334> (scdr (cdr s)))
> def args: : (<object 627334> (scddr (cdr scdr)))
> def args: : (<object 627406> (scdr (cdr s)))
> def args: : (<object 627406> (scddr (cdr scdr)))
> def args: : (<object 627474> (scdr (cdr s)))
> def args: : (<object 627474> (scddr (cdr scdr)))
> def args: : (<object 627546> (scdr (cdr s)))
> def args: : (<object 627546> (scddr (cdr scdr)))
> def args: : (<object 627614> (scdr (cdr s)))
> def args: : (<object 627614> (scddr (cdr scdr)))
> def args: : (<object 627686> (scdr (cdr s)))
> def args: : (<object 627686> (scddr (cdr scdr)))
> def args: : (<object 627754> (scdr (cdr s)))
> def args: : (<object 627754> (scddr (cdr scdr)))
> def args: : (<object 627826> (scdr (cdr s)))
> def args: : (<object 627826> (scddr (cdr scdr)))
> def args: : (<object 627894> (scdr (cdr s)))
> def args: : (<object 627894> (scddr (cdr scdr)))
> def args: : (<object 627966> (scdr (cdr s)))
> def args: : (<object 627966> (scddr (cdr scdr)))
> def args: : (<object 628034> (scdr (cdr s)))
> def args: : (<object 628034> (scddr (cdr scdr)))
> def args: : (<object 628106> (scdr (cdr s)))
> def args: : (<object 628106> (scddr (cdr scdr)))
> def args: : (<object 628174> (scdr (cdr s)))
> def args: : (<object 628174> (scddr (cdr scdr)))
> def args: : (<object 628246> (scdr (cdr s)))
> def args: : (<object 628246> (scddr (cdr scdr)))
> def args: : (<object 628314> (scdr (cdr s)))
> def args: : (<object 628314> (scddr (cdr scdr)))
> def args: : (<object 628386> (scdr (cdr s)))
> def args: : (<object 628386> (scddr (cdr scdr)))
> def args: : (<object 628454> (scdr (cdr s)))
> def args: : (<object 628454> (scddr (cdr scdr)))
> def args: : (<object 628526> (scdr (cdr s)))
> def args: : (<object 628526> (scddr (cdr scdr)))
> def args: : (<object 628594> (scdr (cdr s)))
> def args: : (<object 628594> (scddr (cdr scdr)))
> def args: : (<object 628666> (scdr (cdr s)))
> def args: : (<object 628666> (scddr (cdr scdr)))
> def args: : (<object 628734> (scdr (cdr s)))
> def args: : (<object 628734> (scddr (cdr scdr)))
> def args: : (<object 628806> (scdr (cdr s)))
> def args: : (<object 628806> (scddr (cdr scdr)))
> def args: : (<object 628874> (scdr (cdr s)))
> def args: : (<object 628874> (scddr (cdr scdr)))
> def args: : (<object 628946> (scdr (cdr s)))
> def args: : (<object 628946> (scddr (cdr scdr)))
> def args: : (<object 629014> (scdr (cdr s)))
> def args: : (<object 629014> (scddr (cdr scdr)))
> def args: : (<object 629086> (scdr (cdr s)))
> def args: : (<object 629086> (scddr (cdr scdr)))
> def args: : (<object 629154> (scdr (cdr s)))
> def args: : (<object 629154> (scddr (cdr scdr)))
> def args: : (<object 629226> (scdr (cdr s)))
> def args: : (<object 629226> (scddr (cdr scdr)))
> def args: : (<object 629294> (scdr (cdr s)))
> def args: : (<object 629294> (scddr (cdr scdr)))
> def args: : (<object 629366> (scdr (cdr s)))
> def args: : (<object 629366> (scddr (cdr scdr)))
> def args: : (<object 629434> (scdr (cdr s)))
> def args: : (<object 629434> (scddr (cdr scdr)))
> def args: : (<object 629506> (scdr (cdr s)))
> def args: : (<object 629506> (scddr (cdr scdr)))
> def args: : (<object 629574> (scdr (cdr s)))
> def args: : (<object 629574> (scddr (cdr scdr)))
> def args: : (<object 629646> (scdr (cdr s)))
> def args: : (<object 629646> (scddr (cdr scdr)))
> def args: : (<object 629714> (scdr (cdr s)))
> def args: : (<object 629714> (scddr (cdr scdr)))
> def args: : (<object 629786> (scdr (cdr s)))
> def args: : (<object 629786> (scddr (cdr scdr)))
> def args: : (<object 629854> (scdr (cdr s)))
> def args: : (<object 629854> (scddr (cdr scdr)))
> def args: : (<object 629926> (scdr (cdr s)))
> def args: : (<object 629926> (scddr (cdr scdr)))
> def args: : (<object 629994> (scdr (cdr s)))
> def args: : (<object 629994> (scddr (cdr scdr)))
> def args: : (<object 630066> (scdr (cdr s)))
> def args: : (<object 630066> (scddr (cdr scdr)))
> def args: : (<object 630134> (scdr (cdr s)))
> def args: : (<object 630134> (scddr (cdr scdr)))
> def args: : (<object 630206> (scdr (cdr s)))
> def args: : (<object 630206> (scddr (cdr scdr)))
> def args: : (<object 630274> (scdr (cdr s)))
> def args: : (<object 630274> (scddr (cdr scdr)))
> def args: : (<object 630346> (scdr (cdr s)))
> def args: : (<object 630346> (scddr (cdr scdr)))
> def args: : (<object 630414> (scdr (cdr s)))
> def args: : (<object 630414> (scddr (cdr scdr)))
> def args: : (<object 630486> (scdr (cdr s)))
> def args: : (<object 630486> (scddr (cdr scdr)))
> def args: : (<object 630554> (scdr (cdr s)))
> def args: : (<object 630554> (scddr (cdr scdr)))
> def args: : (<object 630626> (scdr (cdr s)))
> def args: : (<object 630626> (scddr (cdr scdr)))
> def args: : (<object 630694> (scdr (cdr s)))
> def args: : (<object 630694> (scddr (cdr scdr)))
> def args: : (<object 630766> (scdr (cdr s)))
> def args: : (<object 630766> (scddr (cdr scdr)))
> def args: : (<object 630834> (scdr (cdr s)))
> def args: : (<object 630834> (scddr (cdr scdr)))
> def args: : (<object 630906> (scdr (cdr s)))
> def args: : (<object 630906> (scddr (cdr scdr)))
> def args: : (<object 630974> (scdr (cdr s)))
> def args: : (<object 630974> (scddr (cdr scdr)))
> def args: : (<object 631046> (scdr (cdr s)))
> def args: : (<object 631046> (scddr (cdr scdr)))
> def args: : (<object 631114> (scdr (cdr s)))
> def args: : (<object 631114> (scddr (cdr scdr)))
> def args: : (<object 631186> (scdr (cdr s)))
> def args: : (<object 631186> (scddr (cdr scdr)))
> def args: : (<object 631254> (scdr (cdr s)))
> def args: : (<object 631254> (scddr (cdr scdr)))
> def args: : (<object 631326> (scdr (cdr s)))
> def args: : (<object 631326> (scddr (cdr scdr)))
> def args: : (<object 631394> (scdr (cdr s)))
> def args: : (<object 631394> (scddr (cdr scdr)))
> def args: : (<object 631466> (scdr (cdr s)))
> def args: : (<object 631466> (scddr (cdr scdr)))
> def args: : (<object 631534> (scdr (cdr s)))
> def args: : (<object 631534> (scddr (cdr scdr)))
> def args: : (<object 631606> (scdr (cdr s)))
> def args: : (<object 631606> (scddr (cdr scdr)))
> def args: : (<object 631674> (scdr (cdr s)))
> def args: : (<object 631674> (scddr (cdr scdr)))
> def args: : (<object 631746> (scdr (cdr s)))
> def args: : (<object 631746> (scddr (cdr scdr)))
> def args: : (<object 631814> (scdr (cdr s)))
> def args: : (<object 631814> (scddr (cdr scdr)))
> def args: : (<object 631886> (scdr (cdr s)))
> def args: : (<object 631886> (scddr (cdr scdr)))
> def args: : (<object 631954> (scdr (cdr s)))
> def args: : (<object 631954> (scddr (cdr scdr)))
> def args: : (<object 632026> (scdr (cdr s)))
> def args: : (<object 632026> (scddr (cdr scdr)))
> def args: : (<object 632094> (scdr (cdr s)))
> def args: : (<object 632094> (scddr (cdr scdr)))
> def args: : (<object 632166> (scdr (cdr s)))
> def args: : (<object 632166> (scddr (cdr scdr)))
> def args: : (<object 632234> (scdr (cdr s)))
> def args: : (<object 632234> (scddr (cdr scdr)))
> def args: : (<object 632306> (scdr (cdr s)))
> def args: : (<object 632306> (scddr (cdr scdr)))
> def args: : (<object 632374> (scdr (cdr s)))
> def args: : (<object 632374> (scddr (cdr scdr)))
> def args: : (<object 632446> (scdr (cdr s)))
> def args: : (<object 632446> (scddr (cdr scdr)))
> def args: : (<object 632514> (scdr (cdr s)))
> def args: : (<object 632514> (scddr (cdr scdr)))
> def args: : (<object 632586> (scdr (cdr s)))
> def args: : (<object 632586> (scddr (cdr scdr)))
> def args: : (<object 632654> (scdr (cdr s)))
> def args: : (<object 632654> (scddr (cdr scdr)))
> def args: : (<object 632726> (scdr (cdr s)))
> def args: : (<object 632726> (scddr (cdr scdr)))
> def args: : (<object 632794> (scdr (cdr s)))
> def args: : (<object 632794> (scddr (cdr scdr)))
> def args: : (<object 632866> (scdr (cdr s)))
> def args: : (<object 632866> (scddr (cdr scdr)))
> def args: : (<object 632934> (scdr (cdr s)))
> def args: : (<object 632934> (scddr (cdr scdr)))
> def args: : (<object 633006> (scdr (cdr s)))
> def args: : (<object 633006> (scddr (cdr scdr)))
> def args: : (<object 633074> (scdr (cdr s)))
> def args: : (<object 633074> (scddr (cdr scdr)))
> def args: : (<object 633146> (scdr (cdr s)))
> def args: : (<object 633146> (scddr (cdr scdr)))
> def args: : (<object 633214> (scdr (cdr s)))
> def args: : (<object 633214> (scddr (cdr scdr)))
> def args: : (<object 633286> (scdr (cdr s)))
> def args: : (<object 633286> (scddr (cdr scdr)))
> def args: : (<object 633354> (scdr (cdr s)))
> def args: : (<object 633354> (scddr (cdr scdr)))
> def args: : (<object 633426> (scdr (cdr s)))
> def args: : (<object 633426> (scddr (cdr scdr)))
> def args: : (<object 633494> (scdr (cdr s)))
> def args: : (<object 633494> (scddr (cdr scdr)))
> def args: : (<object 633566> (scdr (cdr s)))
> def args: : (<object 633566> (scddr (cdr scdr)))
> def args: : (<object 633634> (scdr (cdr s)))
> def args: : (<object 633634> (scddr (cdr scdr)))
> def args: : (<object 633706> (scdr (cdr s)))
> def args: : (<object 633706> (scddr (cdr scdr)))
> def args: : (<object 633774> (scdr (cdr s)))
> def args: : (<object 633774> (scddr (cdr scdr)))
> def args: : (<object 633846> (scdr (cdr s)))
> def args: : (<object 633846> (scddr (cdr scdr)))
> def args: : (<object 633914> (scdr (cdr s)))
> def args: : (<object 633914> (scddr (cdr scdr)))
> def args: : (<object 633986> (scdr (cdr s)))
> def args: : (<object 633986> (scddr (cdr scdr)))
> def args: : (<object 634054> (scdr (cdr s)))
> def args: : (<object 634054> (scddr (cdr scdr)))
> def args: : (<object 634126> (scdr (cdr s)))
> def args: : (<object 634126> (scddr (cdr scdr)))
> 1830def args: : (<object 644562> (env (if (null? @) # (car @))))
>  def args: : (<object 644669> (env (if (null? @) # (car @))))
> def args: : (<object 644789> (scdr (cdr s)))
> def args: : (<object 644789> (scddr (cdr scdr)))
> def args: : (<object 644861> (scdr (cdr s)))
> def args: : (<object 644861> (scddr (cdr scdr)))
> def args: : (<object 644933> (scdr (cdr s)))
> def args: : (<object 644933> (scddr (cdr scdr)))
> def args: : (<object 645001> (scdr (cdr s)))
> def args: : (<object 645001> (scddr (cdr scdr)))
> def args: : (<object 645240> (scdr (cdr s)))
> def args: : (<object 645240> (scddr (cdr scdr)))
> def args: : (<object 645312> (scdr (cdr s)))
> def args: : (<object 645312> (scddr (cdr scdr)))
> def args: : (<object 645380> (scdr (cdr s)))
> def args: : (<object 645380> (scddr (cdr scdr)))
> def args: : (<object 645452> (scdr (cdr s)))
> def args: : (<object 645452> (scddr (cdr scdr)))
> def args: : (<object 645520> (scdr (cdr s)))
> def args: : (<object 645520> (scddr (cdr scdr)))
> def args: : (<object 645592> (scdr (cdr s)))
> def args: : (<object 645592> (scddr (cdr scdr)))
> def args: : (<object 645660> (scdr (cdr s)))
> def args: : (<object 645660> (scddr (cdr scdr)))
> def args: : (<object 645732> (scdr (cdr s)))
> def args: : (<object 645732> (scddr (cdr scdr)))
> def args: : (<object 645800> (scdr (cdr s)))
> def args: : (<object 645800> (scddr (cdr scdr)))
> def args: : (<object 645872> (scdr (cdr s)))
> def args: : (<object 645872> (scddr (cdr scdr)))
> def args: : (<object 645940> (scdr (cdr s)))
> def args: : (<object 645940> (scddr (cdr scdr)))
> def args: : (<object 646012> (scdr (cdr s)))
> def args: : (<object 646012> (scddr (cdr scdr)))
> def args: : (<object 646080> (scdr (cdr s)))
> def args: : (<object 646080> (scddr (cdr scdr)))
> def args: : (<object 646152> (scdr (cdr s)))
> def args: : (<object 646152> (scddr (cdr scdr)))
> def args: : (<object 646220> (scdr (cdr s)))
> def args: : (<object 646220> (scddr (cdr scdr)))
> def args: : (<object 646292> (scdr (cdr s)))
> def args: : (<object 646292> (scddr (cdr scdr)))
> def args: : (<object 646360> (scdr (cdr s)))
> def args: : (<object 646360> (scddr (cdr scdr)))
> def args: : (<object 646432> (scdr (cdr s)))
> def args: : (<object 646432> (scddr (cdr scdr)))
> def args: : (<object 646500> (scdr (cdr s)))
> def args: : (<object 646500> (scddr (cdr scdr)))
> def args: : (<object 646572> (scdr (cdr s)))
> def args: : (<object 646572> (scddr (cdr scdr)))
> def args: : (<object 646640> (scdr (cdr s)))
> def args: : (<object 646640> (scddr (cdr scdr)))
> def args: : (<object 646712> (scdr (cdr s)))
> def args: : (<object 646712> (scddr (cdr scdr)))
> def args: : (<object 646780> (scdr (cdr s)))
> def args: : (<object 646780> (scddr (cdr scdr)))
> def args: : (<object 646852> (scdr (cdr s)))
> def args: : (<object 646852> (scddr (cdr scdr)))
> def args: : (<object 646920> (scdr (cdr s)))
> def args: : (<object 646920> (scddr (cdr scdr)))
> def args: : (<object 646992> (scdr (cdr s)))
> def args: : (<object 646992> (scddr (cdr scdr)))
> def args: : (<object 647060> (scdr (cdr s)))
> def args: : (<object 647060> (scddr (cdr scdr)))
> def args: : (<object 647132> (scdr (cdr s)))
> def args: : (<object 647132> (scddr (cdr scdr)))
> def args: : (<object 647200> (scdr (cdr s)))
> def args: : (<object 647200> (scddr (cdr scdr)))
> def args: : (<object 647272> (scdr (cdr s)))
> def args: : (<object 647272> (scddr (cdr scdr)))
> def args: : (<object 647340> (scdr (cdr s)))
> def args: : (<object 647340> (scddr (cdr scdr)))
> def args: : (<object 647412> (scdr (cdr s)))
> def args: : (<object 647412> (scddr (cdr scdr)))
> def args: : (<object 647480> (scdr (cdr s)))
> def args: : (<object 647480> (scddr (cdr scdr)))
> def args: : (<object 647552> (scdr (cdr s)))
> def args: : (<object 647552> (scddr (cdr scdr)))
> def args: : (<object 647620> (scdr (cdr s)))
> def args: : (<object 647620> (scddr (cdr scdr)))
> def args: : (<object 647692> (scdr (cdr s)))
> def args: : (<object 647692> (scddr (cdr scdr)))
> def args: : (<object 647760> (scdr (cdr s)))
> def args: : (<object 647760> (scddr (cdr scdr)))
> def args: : (<object 647832> (scdr (cdr s)))
> def args: : (<object 647832> (scddr (cdr scdr)))
> def args: : (<object 647900> (scdr (cdr s)))
> def args: : (<object 647900> (scddr (cdr scdr)))
> def args: : (<object 647972> (scdr (cdr s)))
> def args: : (<object 647972> (scddr (cdr scdr)))
> def args: : (<object 648040> (scdr (cdr s)))
> def args: : (<object 648040> (scddr (cdr scdr)))
> def args: : (<object 648112> (scdr (cdr s)))
> def args: : (<object 648112> (scddr (cdr scdr)))
> def args: : (<object 648180> (scdr (cdr s)))
> def args: : (<object 648180> (scddr (cdr scdr)))
> def args: : (<object 648252> (scdr (cdr s)))
> def args: : (<object 648252> (scddr (cdr scdr)))
> def args: : (<object 648320> (scdr (cdr s)))
> def args: : (<object 648320> (scddr (cdr scdr)))
> def args: : (<object 648392> (scdr (cdr s)))
> def args: : (<object 648392> (scddr (cdr scdr)))
> def args: : (<object 648460> (scdr (cdr s)))
> def args: : (<object 648460> (scddr (cdr scdr)))
> def args: : (<object 648532> (scdr (cdr s)))
> def args: : (<object 648532> (scddr (cdr scdr)))
> def args: : (<object 648600> (scdr (cdr s)))
> def args: : (<object 648600> (scddr (cdr scdr)))
> def args: : (<object 648672> (scdr (cdr s)))
> def args: : (<object 648672> (scddr (cdr scdr)))
> def args: : (<object 648740> (scdr (cdr s)))
> def args: : (<object 648740> (scddr (cdr scdr)))
> def args: : (<object 648812> (scdr (cdr s)))
> def args: : (<object 648812> (scddr (cdr scdr)))
> def args: : (<object 648880> (scdr (cdr s)))
> def args: : (<object 648880> (scddr (cdr scdr)))
> def args: : (<object 648952> (scdr (cdr s)))
> def args: : (<object 648952> (scddr (cdr scdr)))
> def args: : (<object 649020> (scdr (cdr s)))
> def args: : (<object 649020> (scddr (cdr scdr)))
> def args: : (<object 649092> (scdr (cdr s)))
> def args: : (<object 649092> (scddr (cdr scdr)))
> def args: : (<object 649160> (scdr (cdr s)))
> def args: : (<object 649160> (scddr (cdr scdr)))
> def args: : (<object 649232> (scdr (cdr s)))
> def args: : (<object 649232> (scddr (cdr scdr)))
> def args: : (<object 649300> (scdr (cdr s)))
> def args: : (<object 649300> (scddr (cdr scdr)))
> def args: : (<object 649372> (scdr (cdr s)))
> def args: : (<object 649372> (scddr (cdr scdr)))
> def args: : (<object 649440> (scdr (cdr s)))
> def args: : (<object 649440> (scddr (cdr scdr)))
> def args: : (<object 649512> (scdr (cdr s)))
> def args: : (<object 649512> (scddr (cdr scdr)))
> def args: : (<object 649580> (scdr (cdr s)))
> def args: : (<object 649580> (scddr (cdr scdr)))
> def args: : (<object 649652> (scdr (cdr s)))
> def args: : (<object 649652> (scddr (cdr scdr)))
> def args: : (<object 649720> (scdr (cdr s)))
> def args: : (<object 649720> (scddr (cdr scdr)))
> def args: : (<object 649792> (scdr (cdr s)))
> def args: : (<object 649792> (scddr (cdr scdr)))
> def args: : (<object 649860> (scdr (cdr s)))
> def args: : (<object 649860> (scddr (cdr scdr)))
> def args: : (<object 649932> (scdr (cdr s)))
> def args: : (<object 649932> (scddr (cdr scdr)))
> def args: : (<object 650000> (scdr (cdr s)))
> def args: : (<object 650000> (scddr (cdr scdr)))
> def args: : (<object 650072> (scdr (cdr s)))
> def args: : (<object 650072> (scddr (cdr scdr)))
> def args: : (<object 650140> (scdr (cdr s)))
> def args: : (<object 650140> (scddr (cdr scdr)))
> def args: : (<object 650212> (scdr (cdr s)))
> def args: : (<object 650212> (scddr (cdr scdr)))
> def args: : (<object 650280> (scdr (cdr s)))
> def args: : (<object 650280> (scddr (cdr scdr)))
> def args: : (<object 650352> (scdr (cdr s)))
> def args: : (<object 650352> (scddr (cdr scdr)))
> def args: : (<object 650420> (scdr (cdr s)))
> def args: : (<object 650420> (scddr (cdr scdr)))
> def args: : (<object 650492> (scdr (cdr s)))
> def args: : (<object 650492> (scddr (cdr scdr)))
> def args: : (<object 650560> (scdr (cdr s)))
> def args: : (<object 650560> (scddr (cdr scdr)))
> def args: : (<object 650632> (scdr (cdr s)))
> def args: : (<object 650632> (scddr (cdr scdr)))
> def args: : (<object 650700> (scdr (cdr s)))
> def args: : (<object 650700> (scddr (cdr scdr)))
> def args: : (<object 650772> (scdr (cdr s)))
> def args: : (<object 650772> (scddr (cdr scdr)))
> def args: : (<object 650840> (scdr (cdr s)))
> def args: : (<object 650840> (scddr (cdr scdr)))
> def args: : (<object 650912> (scdr (cdr s)))
> def args: : (<object 650912> (scddr (cdr scdr)))
> def args: : (<object 650980> (scdr (cdr s)))
> def args: : (<object 650980> (scddr (cdr scdr)))
> def args: : (<object 651052> (scdr (cdr s)))
> def args: : (<object 651052> (scddr (cdr scdr)))
> def args: : (<object 651120> (scdr (cdr s)))
> def args: : (<object 651120> (scddr (cdr scdr)))
> def args: : (<object 651192> (scdr (cdr s)))
> def args: : (<object 651192> (scddr (cdr scdr)))
> def args: : (<object 651260> (scdr (cdr s)))
> def args: : (<object 651260> (scddr (cdr scdr)))
> def args: : (<object 651332> (scdr (cdr s)))
> def args: : (<object 651332> (scddr (cdr scdr)))
> def args: : (<object 651400> (scdr (cdr s)))
> def args: : (<object 651400> (scddr (cdr scdr)))
> def args: : (<object 651472> (scdr (cdr s)))
> def args: : (<object 651472> (scddr (cdr scdr)))
> def args: : (<object 651540> (scdr (cdr s)))
> def args: : (<object 651540> (scddr (cdr scdr)))
> def args: : (<object 651612> (scdr (cdr s)))
> def args: : (<object 651612> (scddr (cdr scdr)))
> def args: : (<object 651680> (scdr (cdr s)))
> def args: : (<object 651680> (scddr (cdr scdr)))
> def args: : (<object 651752> (scdr (cdr s)))
> def args: : (<object 651752> (scddr (cdr scdr)))
> def args: : (<object 651820> (scdr (cdr s)))
> def args: : (<object 651820> (scddr (cdr scdr)))
> def args: : (<object 651892> (scdr (cdr s)))
> def args: : (<object 651892> (scddr (cdr scdr)))
> def args: : (<object 651960> (scdr (cdr s)))
> def args: : (<object 651960> (scddr (cdr scdr)))
> def args: : (<object 652032> (scdr (cdr s)))
> def args: : (<object 652032> (scddr (cdr scdr)))
> def args: : (<object 652100> (scdr (cdr s)))
> def args: : (<object 652100> (scddr (cdr scdr)))
> def args: : (<object 652172> (scdr (cdr s)))
> def args: : (<object 652172> (scddr (cdr scdr)))
> def args: : (<object 652240> (scdr (cdr s)))
> def args: : (<object 652240> (scddr (cdr scdr)))
> def args: : (<object 652312> (scdr (cdr s)))
> def args: : (<object 652312> (scddr (cdr scdr)))
> def args: : (<object 652380> (scdr (cdr s)))
> def args: : (<object 652380> (scddr (cdr scdr)))
> def args: : (<object 652452> (scdr (cdr s)))
> def args: : (<object 652452> (scddr (cdr scdr)))
> def args: : (<object 652520> (scdr (cdr s)))
> def args: : (<object 652520> (scddr (cdr scdr)))
> def args: : (<object 652592> (scdr (cdr s)))
> def args: : (<object 652592> (scddr (cdr scdr)))
> def args: : (<object 652660> (scdr (cdr s)))
> def args: : (<object 652660> (scddr (cdr scdr)))
> def args: : (<object 652732> (scdr (cdr s)))
> def args: : (<object 652732> (scddr (cdr scdr)))
> def args: : (<object 652800> (scdr (cdr s)))
> def args: : (<object 652800> (scddr (cdr scdr)))
> def args: : (<object 652872> (scdr (cdr s)))
> def args: : (<object 652872> (scddr (cdr scdr)))
> def args: : (<object 652940> (scdr (cdr s)))
> def args: : (<object 652940> (scddr (cdr scdr)))
> def args: : (<object 653012> (scdr (cdr s)))
> def args: : (<object 653012> (scddr (cdr scdr)))
> def args: : (<object 653080> (scdr (cdr s)))
> def args: : (<object 653080> (scddr (cdr scdr)))
> def args: : (<object 653152> (scdr (cdr s)))
> def args: : (<object 653152> (scddr (cdr scdr)))
> def args: : (<object 653220> (scdr (cdr s)))
> def args: : (<object 653220> (scddr (cdr scdr)))
> def args: : (<object 653292> (scdr (cdr s)))
> def args: : (<object 653292> (scddr (cdr scdr)))
> def args: : (<object 653360> (scdr (cdr s)))
> def args: : (<object 653360> (scddr (cdr scdr)))
> def args: : (<object 653432> (scdr (cdr s)))
> def args: : (<object 653432> (scddr (cdr scdr)))
> 1891def args: : (<object 664039> (env (if (null? @) # (car @))))
>  def args: : (<object 664146> (env (if (null? @) # (car @))))
> def args: : (<object 664266> (scdr (cdr s)))
> def args: : (<object 664266> (scddr (cdr scdr)))
> def args: : (<object 664338> (scdr (cdr s)))
> def args: : (<object 664338> (scddr (cdr scdr)))
> def args: : (<object 664410> (scdr (cdr s)))
> def args: : (<object 664410> (scddr (cdr scdr)))
> def args: : (<object 664478> (scdr (cdr s)))
> def args: : (<object 664478> (scddr (cdr scdr)))
> def args: : (<object 664717> (scdr (cdr s)))
> def args: : (<object 664717> (scddr (cdr scdr)))
> def args: : (<object 664789> (scdr (cdr s)))
> def args: : (<object 664789> (scddr (cdr scdr)))
> def args: : (<object 664857> (scdr (cdr s)))
> def args: : (<object 664857> (scddr (cdr scdr)))
> def args: : (<object 664929> (scdr (cdr s)))
> def args: : (<object 664929> (scddr (cdr scdr)))
> def args: : (<object 664997> (scdr (cdr s)))
> def args: : (<object 664997> (scddr (cdr scdr)))
> def args: : (<object 665069> (scdr (cdr s)))
> def args: : (<object 665069> (scddr (cdr scdr)))
> def args: : (<object 665137> (scdr (cdr s)))
> def args: : (<object 665137> (scddr (cdr scdr)))
> def args: : (<object 665209> (scdr (cdr s)))
> def args: : (<object 665209> (scddr (cdr scdr)))
> def args: : (<object 665277> (scdr (cdr s)))
> def args: : (<object 665277> (scddr (cdr scdr)))
> def args: : (<object 665349> (scdr (cdr s)))
> def args: : (<object 665349> (scddr (cdr scdr)))
> def args: : (<object 665417> (scdr (cdr s)))
> def args: : (<object 665417> (scddr (cdr scdr)))
> def args: : (<object 665489> (scdr (cdr s)))
> def args: : (<object 665489> (scddr (cdr scdr)))
> def args: : (<object 665557> (scdr (cdr s)))
> def args: : (<object 665557> (scddr (cdr scdr)))
> def args: : (<object 665629> (scdr (cdr s)))
> def args: : (<object 665629> (scddr (cdr scdr)))
> def args: : (<object 665697> (scdr (cdr s)))
> def args: : (<object 665697> (scddr (cdr scdr)))
> def args: : (<object 665769> (scdr (cdr s)))
> def args: : (<object 665769> (scddr (cdr scdr)))
> def args: : (<object 665837> (scdr (cdr s)))
> def args: : (<object 665837> (scddr (cdr scdr)))
> def args: : (<object 665909> (scdr (cdr s)))
> def args: : (<object 665909> (scddr (cdr scdr)))
> def args: : (<object 665977> (scdr (cdr s)))
> def args: : (<object 665977> (scddr (cdr scdr)))
> def args: : (<object 666049> (scdr (cdr s)))
> def args: : (<object 666049> (scddr (cdr scdr)))
> def args: : (<object 666117> (scdr (cdr s)))
> def args: : (<object 666117> (scddr (cdr scdr)))
> def args: : (<object 666189> (scdr (cdr s)))
> def args: : (<object 666189> (scddr (cdr scdr)))
> def args: : (<object 666257> (scdr (cdr s)))
> def args: : (<object 666257> (scddr (cdr scdr)))
> def args: : (<object 666329> (scdr (cdr s)))
> def args: : (<object 666329> (scddr (cdr scdr)))
> def args: : (<object 666397> (scdr (cdr s)))
> def args: : (<object 666397> (scddr (cdr scdr)))
> def args: : (<object 666469> (scdr (cdr s)))
> def args: : (<object 666469> (scddr (cdr scdr)))
> def args: : (<object 666537> (scdr (cdr s)))
> def args: : (<object 666537> (scddr (cdr scdr)))
> def args: : (<object 666609> (scdr (cdr s)))
> def args: : (<object 666609> (scddr (cdr scdr)))
> def args: : (<object 666677> (scdr (cdr s)))
> def args: : (<object 666677> (scddr (cdr scdr)))
> def args: : (<object 666749> (scdr (cdr s)))
> def args: : (<object 666749> (scddr (cdr scdr)))
> def args: : (<object 666817> (scdr (cdr s)))
> def args: : (<object 666817> (scddr (cdr scdr)))
> def args: : (<object 666889> (scdr (cdr s)))
> def args: : (<object 666889> (scddr (cdr scdr)))
> def args: : (<object 666957> (scdr (cdr s)))
> def args: : (<object 666957> (scddr (cdr scdr)))
> def args: : (<object 667029> (scdr (cdr s)))
> def args: : (<object 667029> (scddr (cdr scdr)))
> def args: : (<object 667097> (scdr (cdr s)))
> def args: : (<object 667097> (scddr (cdr scdr)))
> def args: : (<object 667169> (scdr (cdr s)))
> def args: : (<object 667169> (scddr (cdr scdr)))
> def args: : (<object 667237> (scdr (cdr s)))
> def args: : (<object 667237> (scddr (cdr scdr)))
> def args: : (<object 667309> (scdr (cdr s)))
> def args: : (<object 667309> (scddr (cdr scdr)))
> def args: : (<object 667377> (scdr (cdr s)))
> def args: : (<object 667377> (scddr (cdr scdr)))
> def args: : (<object 667449> (scdr (cdr s)))
> def args: : (<object 667449> (scddr (cdr scdr)))
> def args: : (<object 667517> (scdr (cdr s)))
> def args: : (<object 667517> (scddr (cdr scdr)))
> def args: : (<object 667589> (scdr (cdr s)))
> def args: : (<object 667589> (scddr (cdr scdr)))
> def args: : (<object 667657> (scdr (cdr s)))
> def args: : (<object 667657> (scddr (cdr scdr)))
> def args: : (<object 667729> (scdr (cdr s)))
> def args: : (<object 667729> (scddr (cdr scdr)))
> def args: : (<object 667797> (scdr (cdr s)))
> def args: : (<object 667797> (scddr (cdr scdr)))
> def args: : (<object 667869> (scdr (cdr s)))
> def args: : (<object 667869> (scddr (cdr scdr)))
> def args: : (<object 667937> (scdr (cdr s)))
> def args: : (<object 667937> (scddr (cdr scdr)))
> def args: : (<object 668009> (scdr (cdr s)))
> def args: : (<object 668009> (scddr (cdr scdr)))
> def args: : (<object 668077> (scdr (cdr s)))
> def args: : (<object 668077> (scddr (cdr scdr)))
> def args: : (<object 668149> (scdr (cdr s)))
> def args: : (<object 668149> (scddr (cdr scdr)))
> def args: : (<object 668217> (scdr (cdr s)))
> def args: : (<object 668217> (scddr (cdr scdr)))
> def args: : (<object 668289> (scdr (cdr s)))
> def args: : (<object 668289> (scddr (cdr scdr)))
> def args: : (<object 668357> (scdr (cdr s)))
> def args: : (<object 668357> (scddr (cdr scdr)))
> def args: : (<object 668429> (scdr (cdr s)))
> def args: : (<object 668429> (scddr (cdr scdr)))
> def args: : (<object 668497> (scdr (cdr s)))
> def args: : (<object 668497> (scddr (cdr scdr)))
> def args: : (<object 668569> (scdr (cdr s)))
> def args: : (<object 668569> (scddr (cdr scdr)))
> def args: : (<object 668637> (scdr (cdr s)))
> def args: : (<object 668637> (scddr (cdr scdr)))
> def args: : (<object 668709> (scdr (cdr s)))
> def args: : (<object 668709> (scddr (cdr scdr)))
> def args: : (<object 668777> (scdr (cdr s)))
> def args: : (<object 668777> (scddr (cdr scdr)))
> def args: : (<object 668849> (scdr (cdr s)))
> def args: : (<object 668849> (scddr (cdr scdr)))
> def args: : (<object 668917> (scdr (cdr s)))
> def args: : (<object 668917> (scddr (cdr scdr)))
> def args: : (<object 668989> (scdr (cdr s)))
> def args: : (<object 668989> (scddr (cdr scdr)))
> def args: : (<object 669057> (scdr (cdr s)))
> def args: : (<object 669057> (scddr (cdr scdr)))
> def args: : (<object 669129> (scdr (cdr s)))
> def args: : (<object 669129> (scddr (cdr scdr)))
> def args: : (<object 669197> (scdr (cdr s)))
> def args: : (<object 669197> (scddr (cdr scdr)))
> def args: : (<object 669269> (scdr (cdr s)))
> def args: : (<object 669269> (scddr (cdr scdr)))
> def args: : (<object 669337> (scdr (cdr s)))
> def args: : (<object 669337> (scddr (cdr scdr)))
> def args: : (<object 669409> (scdr (cdr s)))
> def args: : (<object 669409> (scddr (cdr scdr)))
> def args: : (<object 669477> (scdr (cdr s)))
> def args: : (<object 669477> (scddr (cdr scdr)))
> def args: : (<object 669549> (scdr (cdr s)))
> def args: : (<object 669549> (scddr (cdr scdr)))
> def args: : (<object 669617> (scdr (cdr s)))
> def args: : (<object 669617> (scddr (cdr scdr)))
> def args: : (<object 669689> (scdr (cdr s)))
> def args: : (<object 669689> (scddr (cdr scdr)))
> def args: : (<object 669757> (scdr (cdr s)))
> def args: : (<object 669757> (scddr (cdr scdr)))
> def args: : (<object 669829> (scdr (cdr s)))
> def args: : (<object 669829> (scddr (cdr scdr)))
> def args: : (<object 669897> (scdr (cdr s)))
> def args: : (<object 669897> (scddr (cdr scdr)))
> def args: : (<object 669969> (scdr (cdr s)))
> def args: : (<object 669969> (scddr (cdr scdr)))
> def args: : (<object 670037> (scdr (cdr s)))
> def args: : (<object 670037> (scddr (cdr scdr)))
> def args: : (<object 670109> (scdr (cdr s)))
> def args: : (<object 670109> (scddr (cdr scdr)))
> def args: : (<object 670177> (scdr (cdr s)))
> def args: : (<object 670177> (scddr (cdr scdr)))
> def args: : (<object 670249> (scdr (cdr s)))
> def args: : (<object 670249> (scddr (cdr scdr)))
> def args: : (<object 670317> (scdr (cdr s)))
> def args: : (<object 670317> (scddr (cdr scdr)))
> def args: : (<object 670389> (scdr (cdr s)))
> def args: : (<object 670389> (scddr (cdr scdr)))
> def args: : (<object 670457> (scdr (cdr s)))
> def args: : (<object 670457> (scddr (cdr scdr)))
> def args: : (<object 670529> (scdr (cdr s)))
> def args: : (<object 670529> (scddr (cdr scdr)))
> def args: : (<object 670597> (scdr (cdr s)))
> def args: : (<object 670597> (scddr (cdr scdr)))
> def args: : (<object 670669> (scdr (cdr s)))
> def args: : (<object 670669> (scddr (cdr scdr)))
> def args: : (<object 670737> (scdr (cdr s)))
> def args: : (<object 670737> (scddr (cdr scdr)))
> def args: : (<object 670809> (scdr (cdr s)))
> def args: : (<object 670809> (scddr (cdr scdr)))
> def args: : (<object 670877> (scdr (cdr s)))
> def args: : (<object 670877> (scddr (cdr scdr)))
> def args: : (<object 670949> (scdr (cdr s)))
> def args: : (<object 670949> (scddr (cdr scdr)))
> def args: : (<object 671017> (scdr (cdr s)))
> def args: : (<object 671017> (scddr (cdr scdr)))
> def args: : (<object 671089> (scdr (cdr s)))
> def args: : (<object 671089> (scddr (cdr scdr)))
> def args: : (<object 671157> (scdr (cdr s)))
> def args: : (<object 671157> (scddr (cdr scdr)))
> def args: : (<object 671229> (scdr (cdr s)))
> def args: : (<object 671229> (scddr (cdr scdr)))
> def args: : (<object 671297> (scdr (cdr s)))
> def args: : (<object 671297> (scddr (cdr scdr)))
> def args: : (<object 671369> (scdr (cdr s)))
> def args: : (<object 671369> (scddr (cdr scdr)))
> def args: : (<object 671437> (scdr (cdr s)))
> def args: : (<object 671437> (scddr (cdr scdr)))
> def args: : (<object 671509> (scdr (cdr s)))
> def args: : (<object 671509> (scddr (cdr scdr)))
> def args: : (<object 671577> (scdr (cdr s)))
> def args: : (<object 671577> (scddr (cdr scdr)))
> def args: : (<object 671649> (scdr (cdr s)))
> def args: : (<object 671649> (scddr (cdr scdr)))
> def args: : (<object 671717> (scdr (cdr s)))
> def args: : (<object 671717> (scddr (cdr scdr)))
> def args: : (<object 671789> (scdr (cdr s)))
> def args: : (<object 671789> (scddr (cdr scdr)))
> def args: : (<object 671857> (scdr (cdr s)))
> def args: : (<object 671857> (scddr (cdr scdr)))
> def args: : (<object 671929> (scdr (cdr s)))
> def args: : (<object 671929> (scddr (cdr scdr)))
> def args: : (<object 671997> (scdr (cdr s)))
> def args: : (<object 671997> (scddr (cdr scdr)))
> def args: : (<object 672069> (scdr (cdr s)))
> def args: : (<object 672069> (scddr (cdr scdr)))
> def args: : (<object 672137> (scdr (cdr s)))
> def args: : (<object 672137> (scddr (cdr scdr)))
> def args: : (<object 672209> (scdr (cdr s)))
> def args: : (<object 672209> (scddr (cdr scdr)))
> def args: : (<object 672277> (scdr (cdr s)))
> def args: : (<object 672277> (scddr (cdr scdr)))
> def args: : (<object 672349> (scdr (cdr s)))
> def args: : (<object 672349> (scddr (cdr scdr)))
> def args: : (<object 672417> (scdr (cdr s)))
> def args: : (<object 672417> (scddr (cdr scdr)))
> def args: : (<object 672489> (scdr (cdr s)))
> def args: : (<object 672489> (scddr (cdr scdr)))
> def args: : (<object 672557> (scdr (cdr s)))
> def args: : (<object 672557> (scddr (cdr scdr)))
> def args: : (<object 672629> (scdr (cdr s)))
> def args: : (<object 672629> (scddr (cdr scdr)))
> def args: : (<object 672697> (scdr (cdr s)))
> def args: : (<object 672697> (scddr (cdr scdr)))
> def args: : (<object 672769> (scdr (cdr s)))
> def args: : (<object 672769> (scddr (cdr scdr)))
> def args: : (<object 672837> (scdr (cdr s)))
> def args: : (<object 672837> (scddr (cdr scdr)))
> def args: : (<object 672909> (scdr (cdr s)))
> def args: : (<object 672909> (scddr (cdr scdr)))
> def args: : (<object 672977> (scdr (cdr s)))
> def args: : (<object 672977> (scddr (cdr scdr)))
> def args: : (<object 673049> (scdr (cdr s)))
> def args: : (<object 673049> (scddr (cdr scdr)))
> 1953def args: : (<object 683827> (env (if (null? @) # (car @))))
>  def args: : (<object 683934> (env (if (null? @) # (car @))))
> def args: : (<object 684054> (scdr (cdr s)))
> def args: : (<object 684054> (scddr (cdr scdr)))
> def args: : (<object 684126> (scdr (cdr s)))
> def args: : (<object 684126> (scddr (cdr scdr)))
> def args: : (<object 684198> (scdr (cdr s)))
> def args: : (<object 684198> (scddr (cdr scdr)))
> def args: : (<object 684266> (scdr (cdr s)))
> def args: : (<object 684266> (scddr (cdr scdr)))
> def args: : (<object 684505> (scdr (cdr s)))
> def args: : (<object 684505> (scddr (cdr scdr)))
> def args: : (<object 684577> (scdr (cdr s)))
> def args: : (<object 684577> (scddr (cdr scdr)))
> def args: : (<object 684645> (scdr (cdr s)))
> def args: : (<object 684645> (scddr (cdr scdr)))
> def args: : (<object 684717> (scdr (cdr s)))
> def args: : (<object 684717> (scddr (cdr scdr)))
> def args: : (<object 684785> (scdr (cdr s)))
> def args: : (<object 684785> (scddr (cdr scdr)))
> def args: : (<object 684857> (scdr (cdr s)))
> def args: : (<object 684857> (scddr (cdr scdr)))
> def args: : (<object 684925> (scdr (cdr s)))
> def args: : (<object 684925> (scddr (cdr scdr)))
> def args: : (<object 684997> (scdr (cdr s)))
> def args: : (<object 684997> (scddr (cdr scdr)))
> def args: : (<object 685065> (scdr (cdr s)))
> def args: : (<object 685065> (scddr (cdr scdr)))
> def args: : (<object 685137> (scdr (cdr s)))
> def args: : (<object 685137> (scddr (cdr scdr)))
> def args: : (<object 685205> (scdr (cdr s)))
> def args: : (<object 685205> (scddr (cdr scdr)))
> def args: : (<object 685277> (scdr (cdr s)))
> def args: : (<object 685277> (scddr (cdr scdr)))
> def args: : (<object 685345> (scdr (cdr s)))
> def args: : (<object 685345> (scddr (cdr scdr)))
> def args: : (<object 685417> (scdr (cdr s)))
> def args: : (<object 685417> (scddr (cdr scdr)))
> def args: : (<object 685485> (scdr (cdr s)))
> def args: : (<object 685485> (scddr (cdr scdr)))
> def args: : (<object 685557> (scdr (cdr s)))
> def args: : (<object 685557> (scddr (cdr scdr)))
> def args: : (<object 685625> (scdr (cdr s)))
> def args: : (<object 685625> (scddr (cdr scdr)))
> def args: : (<object 685697> (scdr (cdr s)))
> def args: : (<object 685697> (scddr (cdr scdr)))
> def args: : (<object 685765> (scdr (cdr s)))
> def args: : (<object 685765> (scddr (cdr scdr)))
> def args: : (<object 685837> (scdr (cdr s)))
> def args: : (<object 685837> (scddr (cdr scdr)))
> def args: : (<object 685905> (scdr (cdr s)))
> def args: : (<object 685905> (scddr (cdr scdr)))
> def args: : (<object 685977> (scdr (cdr s)))
> def args: : (<object 685977> (scddr (cdr scdr)))
> def args: : (<object 686045> (scdr (cdr s)))
> def args: : (<object 686045> (scddr (cdr scdr)))
> def args: : (<object 686117> (scdr (cdr s)))
> def args: : (<object 686117> (scddr (cdr scdr)))
> def args: : (<object 686185> (scdr (cdr s)))
> def args: : (<object 686185> (scddr (cdr scdr)))
> def args: : (<object 686257> (scdr (cdr s)))
> def args: : (<object 686257> (scddr (cdr scdr)))
> def args: : (<object 686325> (scdr (cdr s)))
> def args: : (<object 686325> (scddr (cdr scdr)))
> def args: : (<object 686397> (scdr (cdr s)))
> def args: : (<object 686397> (scddr (cdr scdr)))
> def args: : (<object 686465> (scdr (cdr s)))
> def args: : (<object 686465> (scddr (cdr scdr)))
> def args: : (<object 686537> (scdr (cdr s)))
> def args: : (<object 686537> (scddr (cdr scdr)))
> def args: : (<object 686605> (scdr (cdr s)))
> def args: : (<object 686605> (scddr (cdr scdr)))
> def args: : (<object 686677> (scdr (cdr s)))
> def args: : (<object 686677> (scddr (cdr scdr)))
> def args: : (<object 686745> (scdr (cdr s)))
> def args: : (<object 686745> (scddr (cdr scdr)))
> def args: : (<object 686817> (scdr (cdr s)))
> def args: : (<object 686817> (scddr (cdr scdr)))
> def args: : (<object 686885> (scdr (cdr s)))
> def args: : (<object 686885> (scddr (cdr scdr)))
> def args: : (<object 686957> (scdr (cdr s)))
> def args: : (<object 686957> (scddr (cdr scdr)))
> def args: : (<object 687025> (scdr (cdr s)))
> def args: : (<object 687025> (scddr (cdr scdr)))
> def args: : (<object 687097> (scdr (cdr s)))
> def args: : (<object 687097> (scddr (cdr scdr)))
> def args: : (<object 687165> (scdr (cdr s)))
> def args: : (<object 687165> (scddr (cdr scdr)))
> def args: : (<object 687237> (scdr (cdr s)))
> def args: : (<object 687237> (scddr (cdr scdr)))
> def args: : (<object 687305> (scdr (cdr s)))
> def args: : (<object 687305> (scddr (cdr scdr)))
> def args: : (<object 687377> (scdr (cdr s)))
> def args: : (<object 687377> (scddr (cdr scdr)))
> def args: : (<object 687445> (scdr (cdr s)))
> def args: : (<object 687445> (scddr (cdr scdr)))
> def args: : (<object 687517> (scdr (cdr s)))
> def args: : (<object 687517> (scddr (cdr scdr)))
> def args: : (<object 687585> (scdr (cdr s)))
> def args: : (<object 687585> (scddr (cdr scdr)))
> def args: : (<object 687657> (scdr (cdr s)))
> def args: : (<object 687657> (scddr (cdr scdr)))
> def args: : (<object 687725> (scdr (cdr s)))
> def args: : (<object 687725> (scddr (cdr scdr)))
> def args: : (<object 687797> (scdr (cdr s)))
> def args: : (<object 687797> (scddr (cdr scdr)))
> def args: : (<object 687865> (scdr (cdr s)))
> def args: : (<object 687865> (scddr (cdr scdr)))
> def args: : (<object 687937> (scdr (cdr s)))
> def args: : (<object 687937> (scddr (cdr scdr)))
> def args: : (<object 688005> (scdr (cdr s)))
> def args: : (<object 688005> (scddr (cdr scdr)))
> def args: : (<object 688077> (scdr (cdr s)))
> def args: : (<object 688077> (scddr (cdr scdr)))
> def args: : (<object 688145> (scdr (cdr s)))
> def args: : (<object 688145> (scddr (cdr scdr)))
> def args: : (<object 688217> (scdr (cdr s)))
> def args: : (<object 688217> (scddr (cdr scdr)))
> def args: : (<object 688285> (scdr (cdr s)))
> def args: : (<object 688285> (scddr (cdr scdr)))
> def args: : (<object 688357> (scdr (cdr s)))
> def args: : (<object 688357> (scddr (cdr scdr)))
> def args: : (<object 688425> (scdr (cdr s)))
> def args: : (<object 688425> (scddr (cdr scdr)))
> def args: : (<object 688497> (scdr (cdr s)))
> def args: : (<object 688497> (scddr (cdr scdr)))
> def args: : (<object 688565> (scdr (cdr s)))
> def args: : (<object 688565> (scddr (cdr scdr)))
> def args: : (<object 688637> (scdr (cdr s)))
> def args: : (<object 688637> (scddr (cdr scdr)))
> def args: : (<object 688705> (scdr (cdr s)))
> def args: : (<object 688705> (scddr (cdr scdr)))
> def args: : (<object 688777> (scdr (cdr s)))
> def args: : (<object 688777> (scddr (cdr scdr)))
> def args: : (<object 688845> (scdr (cdr s)))
> def args: : (<object 688845> (scddr (cdr scdr)))
> def args: : (<object 688917> (scdr (cdr s)))
> def args: : (<object 688917> (scddr (cdr scdr)))
> def args: : (<object 688985> (scdr (cdr s)))
> def args: : (<object 688985> (scddr (cdr scdr)))
> def args: : (<object 689057> (scdr (cdr s)))
> def args: : (<object 689057> (scddr (cdr scdr)))
> def args: : (<object 689125> (scdr (cdr s)))
> def args: : (<object 689125> (scddr (cdr scdr)))
> def args: : (<object 689197> (scdr (cdr s)))
> def args: : (<object 689197> (scddr (cdr scdr)))
> def args: : (<object 689265> (scdr (cdr s)))
> def args: : (<object 689265> (scddr (cdr scdr)))
> def args: : (<object 689337> (scdr (cdr s)))
> def args: : (<object 689337> (scddr (cdr scdr)))
> def args: : (<object 689405> (scdr (cdr s)))
> def args: : (<object 689405> (scddr (cdr scdr)))
> def args: : (<object 689477> (scdr (cdr s)))
> def args: : (<object 689477> (scddr (cdr scdr)))
> def args: : (<object 689545> (scdr (cdr s)))
> def args: : (<object 689545> (scddr (cdr scdr)))
> def args: : (<object 689617> (scdr (cdr s)))
> def args: : (<object 689617> (scddr (cdr scdr)))
> def args: : (<object 689685> (scdr (cdr s)))
> def args: : (<object 689685> (scddr (cdr scdr)))
> def args: : (<object 689757> (scdr (cdr s)))
> def args: : (<object 689757> (scddr (cdr scdr)))
> def args: : (<object 689825> (scdr (cdr s)))
> def args: : (<object 689825> (scddr (cdr scdr)))
> def args: : (<object 689897> (scdr (cdr s)))
> def args: : (<object 689897> (scddr (cdr scdr)))
> def args: : (<object 689965> (scdr (cdr s)))
> def args: : (<object 689965> (scddr (cdr scdr)))
> def args: : (<object 690037> (scdr (cdr s)))
> def args: : (<object 690037> (scddr (cdr scdr)))
> def args: : (<object 690105> (scdr (cdr s)))
> def args: : (<object 690105> (scddr (cdr scdr)))
> def args: : (<object 690177> (scdr (cdr s)))
> def args: : (<object 690177> (scddr (cdr scdr)))
> def args: : (<object 690245> (scdr (cdr s)))
> def args: : (<object 690245> (scddr (cdr scdr)))
> def args: : (<object 690317> (scdr (cdr s)))
> def args: : (<object 690317> (scddr (cdr scdr)))
> def args: : (<object 690385> (scdr (cdr s)))
> def args: : (<object 690385> (scddr (cdr scdr)))
> def args: : (<object 690457> (scdr (cdr s)))
> def args: : (<object 690457> (scddr (cdr scdr)))
> def args: : (<object 690525> (scdr (cdr s)))
> def args: : (<object 690525> (scddr (cdr scdr)))
> def args: : (<object 690597> (scdr (cdr s)))
> def args: : (<object 690597> (scddr (cdr scdr)))
> def args: : (<object 690665> (scdr (cdr s)))
> def args: : (<object 690665> (scddr (cdr scdr)))
> def args: : (<object 690737> (scdr (cdr s)))
> def args: : (<object 690737> (scddr (cdr scdr)))
> def args: : (<object 690805> (scdr (cdr s)))
> def args: : (<object 690805> (scddr (cdr scdr)))
> def args: : (<object 690877> (scdr (cdr s)))
> def args: : (<object 690877> (scddr (cdr scdr)))
> def args: : (<object 690945> (scdr (cdr s)))
> def args: : (<object 690945> (scddr (cdr scdr)))
> def args: : (<object 691017> (scdr (cdr s)))
> def args: : (<object 691017> (scddr (cdr scdr)))
> def args: : (<object 691085> (scdr (cdr s)))
> def args: : (<object 691085> (scddr (cdr scdr)))
> def args: : (<object 691157> (scdr (cdr s)))
> def args: : (<object 691157> (scddr (cdr scdr)))
> def args: : (<object 691225> (scdr (cdr s)))
> def args: : (<object 691225> (scddr (cdr scdr)))
> def args: : (<object 691297> (scdr (cdr s)))
> def args: : (<object 691297> (scddr (cdr scdr)))
> def args: : (<object 691365> (scdr (cdr s)))
> def args: : (<object 691365> (scddr (cdr scdr)))
> def args: : (<object 691437> (scdr (cdr s)))
> def args: : (<object 691437> (scddr (cdr scdr)))
> def args: : (<object 691505> (scdr (cdr s)))
> def args: : (<object 691505> (scddr (cdr scdr)))
> def args: : (<object 691577> (scdr (cdr s)))
> def args: : (<object 691577> (scddr (cdr scdr)))
> def args: : (<object 691645> (scdr (cdr s)))
> def args: : (<object 691645> (scddr (cdr scdr)))
> def args: : (<object 691717> (scdr (cdr s)))
> def args: : (<object 691717> (scddr (cdr scdr)))
> def args: : (<object 691785> (scdr (cdr s)))
> def args: : (<object 691785> (scddr (cdr scdr)))
> def args: : (<object 691857> (scdr (cdr s)))
> def args: : (<object 691857> (scddr (cdr scdr)))
> def args: : (<object 691925> (scdr (cdr s)))
> def args: : (<object 691925> (scddr (cdr scdr)))
> def args: : (<object 691997> (scdr (cdr s)))
> def args: : (<object 691997> (scddr (cdr scdr)))
> def args: : (<object 692065> (scdr (cdr s)))
> def args: : (<object 692065> (scddr (cdr scdr)))
> def args: : (<object 692137> (scdr (cdr s)))
> def args: : (<object 692137> (scddr (cdr scdr)))
> def args: : (<object 692205> (scdr (cdr s)))
> def args: : (<object 692205> (scddr (cdr scdr)))
> def args: : (<object 692277> (scdr (cdr s)))
> def args: : (<object 692277> (scddr (cdr scdr)))
> def args: : (<object 692345> (scdr (cdr s)))
> def args: : (<object 692345> (scddr (cdr scdr)))
> def args: : (<object 692417> (scdr (cdr s)))
> def args: : (<object 692417> (scddr (cdr scdr)))
> def args: : (<object 692485> (scdr (cdr s)))
> def args: : (<object 692485> (scddr (cdr scdr)))
> def args: : (<object 692557> (scdr (cdr s)))
> def args: : (<object 692557> (scddr (cdr scdr)))
> def args: : (<object 692625> (scdr (cdr s)))
> def args: : (<object 692625> (scddr (cdr scdr)))
> def args: : (<object 692697> (scdr (cdr s)))
> def args: : (<object 692697> (scddr (cdr scdr)))
> def args: : (<object 692765> (scdr (cdr s)))
> def args: : (<object 692765> (scddr (cdr scdr)))
> def args: : (<object 692837> (scdr (cdr s)))
> def args: : (<object 692837> (scddr (cdr scdr)))
> def args: : (<object 692905> (scdr (cdr s)))
> def args: : (<object 692905> (scddr (cdr scdr)))
> def args: : (<object 692977> (scdr (cdr s)))
> def args: : (<object 692977> (scddr (cdr scdr)))
> 2016def args: : (<object 703926> (env (if (null? @) # (car @))))
>  def args: : (<object 704033> (env (if (null? @) # (car @))))
> def args: : (<object 704153> (scdr (cdr s)))
> def args: : (<object 704153> (scddr (cdr scdr)))
> def args: : (<object 704225> (scdr (cdr s)))
> def args: : (<object 704225> (scddr (cdr scdr)))
> def args: : (<object 704297> (scdr (cdr s)))
> def args: : (<object 704297> (scddr (cdr scdr)))
> def args: : (<object 704365> (scdr (cdr s)))
> def args: : (<object 704365> (scddr (cdr scdr)))
> def args: : (<object 704604> (scdr (cdr s)))
> def args: : (<object 704604> (scddr (cdr scdr)))
> def args: : (<object 704676> (scdr (cdr s)))
> def args: : (<object 704676> (scddr (cdr scdr)))
> def args: : (<object 704744> (scdr (cdr s)))
> def args: : (<object 704744> (scddr (cdr scdr)))
> def args: : (<object 704816> (scdr (cdr s)))
> def args: : (<object 704816> (scddr (cdr scdr)))
> def args: : (<object 704884> (scdr (cdr s)))
> def args: : (<object 704884> (scddr (cdr scdr)))
> def args: : (<object 704956> (scdr (cdr s)))
> def args: : (<object 704956> (scddr (cdr scdr)))
> def args: : (<object 705024> (scdr (cdr s)))
> def args: : (<object 705024> (scddr (cdr scdr)))
> def args: : (<object 705096> (scdr (cdr s)))
> def args: : (<object 705096> (scddr (cdr scdr)))
> def args: : (<object 705164> (scdr (cdr s)))
> def args: : (<object 705164> (scddr (cdr scdr)))
> def args: : (<object 705236> (scdr (cdr s)))
> def args: : (<object 705236> (scddr (cdr scdr)))
> def args: : (<object 705304> (scdr (cdr s)))
> def args: : (<object 705304> (scddr (cdr scdr)))
> def args: : (<object 705376> (scdr (cdr s)))
> def args: : (<object 705376> (scddr (cdr scdr)))
> def args: : (<object 705444> (scdr (cdr s)))
> def args: : (<object 705444> (scddr (cdr scdr)))
> def args: : (<object 705516> (scdr (cdr s)))
> def args: : (<object 705516> (scddr (cdr scdr)))
> def args: : (<object 705584> (scdr (cdr s)))
> def args: : (<object 705584> (scddr (cdr scdr)))
> def args: : (<object 705656> (scdr (cdr s)))
> def args: : (<object 705656> (scddr (cdr scdr)))
> def args: : (<object 705724> (scdr (cdr s)))
> def args: : (<object 705724> (scddr (cdr scdr)))
> def args: : (<object 705796> (scdr (cdr s)))
> def args: : (<object 705796> (scddr (cdr scdr)))
> def args: : (<object 705864> (scdr (cdr s)))
> def args: : (<object 705864> (scddr (cdr scdr)))
> def args: : (<object 705936> (scdr (cdr s)))
> def args: : (<object 705936> (scddr (cdr scdr)))
> def args: : (<object 706004> (scdr (cdr s)))
> def args: : (<object 706004> (scddr (cdr scdr)))
> def args: : (<object 706076> (scdr (cdr s)))
> def args: : (<object 706076> (scddr (cdr scdr)))
> def args: : (<object 706144> (scdr (cdr s)))
> def args: : (<object 706144> (scddr (cdr scdr)))
> def args: : (<object 706216> (scdr (cdr s)))
> def args: : (<object 706216> (scddr (cdr scdr)))
> def args: : (<object 706284> (scdr (cdr s)))
> def args: : (<object 706284> (scddr (cdr scdr)))
> def args: : (<object 706356> (scdr (cdr s)))
> def args: : (<object 706356> (scddr (cdr scdr)))
> def args: : (<object 706424> (scdr (cdr s)))
> def args: : (<object 706424> (scddr (cdr scdr)))
> def args: : (<object 706496> (scdr (cdr s)))
> def args: : (<object 706496> (scddr (cdr scdr)))
> def args: : (<object 706564> (scdr (cdr s)))
> def args: : (<object 706564> (scddr (cdr scdr)))
> def args: : (<object 706636> (scdr (cdr s)))
> def args: : (<object 706636> (scddr (cdr scdr)))
> def args: : (<object 706704> (scdr (cdr s)))
> def args: : (<object 706704> (scddr (cdr scdr)))
> def args: : (<object 706776> (scdr (cdr s)))
> def args: : (<object 706776> (scddr (cdr scdr)))
> def args: : (<object 706844> (scdr (cdr s)))
> def args: : (<object 706844> (scddr (cdr scdr)))
> def args: : (<object 706916> (scdr (cdr s)))
> def args: : (<object 706916> (scddr (cdr scdr)))
> def args: : (<object 706984> (scdr (cdr s)))
> def args: : (<object 706984> (scddr (cdr scdr)))
> def args: : (<object 707056> (scdr (cdr s)))
> def args: : (<object 707056> (scddr (cdr scdr)))
> def args: : (<object 707124> (scdr (cdr s)))
> def args: : (<object 707124> (scddr (cdr scdr)))
> def args: : (<object 707196> (scdr (cdr s)))
> def args: : (<object 707196> (scddr (cdr scdr)))
> def args: : (<object 707264> (scdr (cdr s)))
> def args: : (<object 707264> (scddr (cdr scdr)))
> def args: : (<object 707336> (scdr (cdr s)))
> def args: : (<object 707336> (scddr (cdr scdr)))
> def args: : (<object 707404> (scdr (cdr s)))
> def args: : (<object 707404> (scddr (cdr scdr)))
> def args: : (<object 707476> (scdr (cdr s)))
> def args: : (<object 707476> (scddr (cdr scdr)))
> def args: : (<object 707544> (scdr (cdr s)))
> def args: : (<object 707544> (scddr (cdr scdr)))
> def args: : (<object 707616> (scdr (cdr s)))
> def args: : (<object 707616> (scddr (cdr scdr)))
> def args: : (<object 707684> (scdr (cdr s)))
> def args: : (<object 707684> (scddr (cdr scdr)))
> def args: : (<object 707756> (scdr (cdr s)))
> def args: : (<object 707756> (scddr (cdr scdr)))
> def args: : (<object 707824> (scdr (cdr s)))
> def args: : (<object 707824> (scddr (cdr scdr)))
> def args: : (<object 707896> (scdr (cdr s)))
> def args: : (<object 707896> (scddr (cdr scdr)))
> def args: : (<object 707964> (scdr (cdr s)))
> def args: : (<object 707964> (scddr (cdr scdr)))
> def args: : (<object 708036> (scdr (cdr s)))
> def args: : (<object 708036> (scddr (cdr scdr)))
> def args: : (<object 708104> (scdr (cdr s)))
> def args: : (<object 708104> (scddr (cdr scdr)))
> def args: : (<object 708176> (scdr (cdr s)))
> def args: : (<object 708176> (scddr (cdr scdr)))
> def args: : (<object 708244> (scdr (cdr s)))
> def args: : (<object 708244> (scddr (cdr scdr)))
> def args: : (<object 708316> (scdr (cdr s)))
> def args: : (<object 708316> (scddr (cdr scdr)))
> def args: : (<object 708384> (scdr (cdr s)))
> def args: : (<object 708384> (scddr (cdr scdr)))
> def args: : (<object 708456> (scdr (cdr s)))
> def args: : (<object 708456> (scddr (cdr scdr)))
> def args: : (<object 708524> (scdr (cdr s)))
> def args: : (<object 708524> (scddr (cdr scdr)))
> def args: : (<object 708596> (scdr (cdr s)))
> def args: : (<object 708596> (scddr (cdr scdr)))
> def args: : (<object 708664> (scdr (cdr s)))
> def args: : (<object 708664> (scddr (cdr scdr)))
> def args: : (<object 708736> (scdr (cdr s)))
> def args: : (<object 708736> (scddr (cdr scdr)))
> def args: : (<object 708804> (scdr (cdr s)))
> def args: : (<object 708804> (scddr (cdr scdr)))
> def args: : (<object 708876> (scdr (cdr s)))
> def args: : (<object 708876> (scddr (cdr scdr)))
> def args: : (<object 708944> (scdr (cdr s)))
> def args: : (<object 708944> (scddr (cdr scdr)))
> def args: : (<object 709016> (scdr (cdr s)))
> def args: : (<object 709016> (scddr (cdr scdr)))
> def args: : (<object 709084> (scdr (cdr s)))
> def args: : (<object 709084> (scddr (cdr scdr)))
> def args: : (<object 709156> (scdr (cdr s)))
> def args: : (<object 709156> (scddr (cdr scdr)))
> def args: : (<object 709224> (scdr (cdr s)))
> def args: : (<object 709224> (scddr (cdr scdr)))
> def args: : (<object 709296> (scdr (cdr s)))
> def args: : (<object 709296> (scddr (cdr scdr)))
> def args: : (<object 709364> (scdr (cdr s)))
> def args: : (<object 709364> (scddr (cdr scdr)))
> def args: : (<object 709436> (scdr (cdr s)))
> def args: : (<object 709436> (scddr (cdr scdr)))
> def args: : (<object 709504> (scdr (cdr s)))
> def args: : (<object 709504> (scddr (cdr scdr)))
> def args: : (<object 709576> (scdr (cdr s)))
> def args: : (<object 709576> (scddr (cdr scdr)))
> def args: : (<object 709644> (scdr (cdr s)))
> def args: : (<object 709644> (scddr (cdr scdr)))
> def args: : (<object 709716> (scdr (cdr s)))
> def args: : (<object 709716> (scddr (cdr scdr)))
> def args: : (<object 709784> (scdr (cdr s)))
> def args: : (<object 709784> (scddr (cdr scdr)))
> def args: : (<object 709856> (scdr (cdr s)))
> def args: : (<object 709856> (scddr (cdr scdr)))
> def args: : (<object 709924> (scdr (cdr s)))
> def args: : (<object 709924> (scddr (cdr scdr)))
> def args: : (<object 709996> (scdr (cdr s)))
> def args: : (<object 709996> (scddr (cdr scdr)))
> def args: : (<object 710064> (scdr (cdr s)))
> def args: : (<object 710064> (scddr (cdr scdr)))
> def args: : (<object 710136> (scdr (cdr s)))
> def args: : (<object 710136> (scddr (cdr scdr)))
> def args: : (<object 710204> (scdr (cdr s)))
> def args: : (<object 710204> (scddr (cdr scdr)))
> def args: : (<object 710276> (scdr (cdr s)))
> def args: : (<object 710276> (scddr (cdr scdr)))
> def args: : (<object 710344> (scdr (cdr s)))
> def args: : (<object 710344> (scddr (cdr scdr)))
> def args: : (<object 710416> (scdr (cdr s)))
> def args: : (<object 710416> (scddr (cdr scdr)))
> def args: : (<object 710484> (scdr (cdr s)))
> def args: : (<object 710484> (scddr (cdr scdr)))
> def args: : (<object 710556> (scdr (cdr s)))
> def args: : (<object 710556> (scddr (cdr scdr)))
> def args: : (<object 710624> (scdr (cdr s)))
> def args: : (<object 710624> (scddr (cdr scdr)))
> def args: : (<object 710696> (scdr (cdr s)))
> def args: : (<object 710696> (scddr (cdr scdr)))
> def args: : (<object 710764> (scdr (cdr s)))
> def args: : (<object 710764> (scddr (cdr scdr)))
> def args: : (<object 710836> (scdr (cdr s)))
> def args: : (<object 710836> (scddr (cdr scdr)))
> def args: : (<object 710904> (scdr (cdr s)))
> def args: : (<object 710904> (scddr (cdr scdr)))
> def args: : (<object 710976> (scdr (cdr s)))
> def args: : (<object 710976> (scddr (cdr scdr)))
> def args: : (<object 711044> (scdr (cdr s)))
> def args: : (<object 711044> (scddr (cdr scdr)))
> def args: : (<object 711116> (scdr (cdr s)))
> def args: : (<object 711116> (scddr (cdr scdr)))
> def args: : (<object 711184> (scdr (cdr s)))
> def args: : (<object 711184> (scddr (cdr scdr)))
> def args: : (<object 711256> (scdr (cdr s)))
> def args: : (<object 711256> (scddr (cdr scdr)))
> def args: : (<object 711324> (scdr (cdr s)))
> def args: : (<object 711324> (scddr (cdr scdr)))
> def args: : (<object 711396> (scdr (cdr s)))
> def args: : (<object 711396> (scddr (cdr scdr)))
> def args: : (<object 711464> (scdr (cdr s)))
> def args: : (<object 711464> (scddr (cdr scdr)))
> def args: : (<object 711536> (scdr (cdr s)))
> def args: : (<object 711536> (scddr (cdr scdr)))
> def args: : (<object 711604> (scdr (cdr s)))
> def args: : (<object 711604> (scddr (cdr scdr)))
> def args: : (<object 711676> (scdr (cdr s)))
> def args: : (<object 711676> (scddr (cdr scdr)))
> def args: : (<object 711744> (scdr (cdr s)))
> def args: : (<object 711744> (scddr (cdr scdr)))
> def args: : (<object 711816> (scdr (cdr s)))
> def args: : (<object 711816> (scddr (cdr scdr)))
> def args: : (<object 711884> (scdr (cdr s)))
> def args: : (<object 711884> (scddr (cdr scdr)))
> def args: : (<object 711956> (scdr (cdr s)))
> def args: : (<object 711956> (scddr (cdr scdr)))
> def args: : (<object 712024> (scdr (cdr s)))
> def args: : (<object 712024> (scddr (cdr scdr)))
> def args: : (<object 712096> (scdr (cdr s)))
> def args: : (<object 712096> (scddr (cdr scdr)))
> def args: : (<object 712164> (scdr (cdr s)))
> def args: : (<object 712164> (scddr (cdr scdr)))
> def args: : (<object 712236> (scdr (cdr s)))
> def args: : (<object 712236> (scddr (cdr scdr)))
> def args: : (<object 712304> (scdr (cdr s)))
> def args: : (<object 712304> (scddr (cdr scdr)))
> def args: : (<object 712376> (scdr (cdr s)))
> def args: : (<object 712376> (scddr (cdr scdr)))
> def args: : (<object 712444> (scdr (cdr s)))
> def args: : (<object 712444> (scddr (cdr scdr)))
> def args: : (<object 712516> (scdr (cdr s)))
> def args: : (<object 712516> (scddr (cdr scdr)))
> def args: : (<object 712584> (scdr (cdr s)))
> def args: : (<object 712584> (scddr (cdr scdr)))
> def args: : (<object 712656> (scdr (cdr s)))
> def args: : (<object 712656> (scddr (cdr scdr)))
> def args: : (<object 712724> (scdr (cdr s)))
> def args: : (<object 712724> (scddr (cdr scdr)))
> def args: : (<object 712796> (scdr (cdr s)))
> def args: : (<object 712796> (scddr (cdr scdr)))
> def args: : (<object 712864> (scdr (cdr s)))
> def args: : (<object 712864> (scddr (cdr scdr)))
> def args: : (<object 712936> (scdr (cdr s)))
> def args: : (<object 712936> (scddr (cdr scdr)))
> def args: : (<object 713004> (scdr (cdr s)))
> def args: : (<object 713004> (scddr (cdr scdr)))
> def args: : (<object 713076> (scdr (cdr s)))
> def args: : (<object 713076> (scddr (cdr scdr)))
> def args: : (<object 713144> (scdr (cdr s)))
> def args: : (<object 713144> (scddr (cdr scdr)))
> def args: : (<object 713216> (scdr (cdr s)))
> def args: : (<object 713216> (scddr (cdr scdr)))
> 2080def args: : (<object 724336> (env (if (null? @) # (car @))))
>  def args: : (<object 724443> (env (if (null? @) # (car @))))
> def args: : (<object 724563> (scdr (cdr s)))
> def args: : (<object 724563> (scddr (cdr scdr)))
> def args: : (<object 724635> (scdr (cdr s)))
> def args: : (<object 724635> (scddr (cdr scdr)))
> def args: : (<object 724707> (scdr (cdr s)))
> def args: : (<object 724707> (scddr (cdr scdr)))
> def args: : (<object 724775> (scdr (cdr s)))
> def args: : (<object 724775> (scddr (cdr scdr)))
> def args: : (<object 725014> (scdr (cdr s)))
> def args: : (<object 725014> (scddr (cdr scdr)))
> def args: : (<object 725086> (scdr (cdr s)))
> def args: : (<object 725086> (scddr (cdr scdr)))
> def args: : (<object 725154> (scdr (cdr s)))
> def args: : (<object 725154> (scddr (cdr scdr)))
> def args: : (<object 725226> (scdr (cdr s)))
> def args: : (<object 725226> (scddr (cdr scdr)))
> def args: : (<object 725294> (scdr (cdr s)))
> def args: : (<object 725294> (scddr (cdr scdr)))
> def args: : (<object 725366> (scdr (cdr s)))
> def args: : (<object 725366> (scddr (cdr scdr)))
> def args: : (<object 725434> (scdr (cdr s)))
> def args: : (<object 725434> (scddr (cdr scdr)))
> def args: : (<object 725506> (scdr (cdr s)))
> def args: : (<object 725506> (scddr (cdr scdr)))
> def args: : (<object 725574> (scdr (cdr s)))
> def args: : (<object 725574> (scddr (cdr scdr)))
> def args: : (<object 725646> (scdr (cdr s)))
> def args: : (<object 725646> (scddr (cdr scdr)))
> def args: : (<object 725714> (scdr (cdr s)))
> def args: : (<object 725714> (scddr (cdr scdr)))
> def args: : (<object 725786> (scdr (cdr s)))
> def args: : (<object 725786> (scddr (cdr scdr)))
> def args: : (<object 725854> (scdr (cdr s)))
> def args: : (<object 725854> (scddr (cdr scdr)))
> def args: : (<object 725926> (scdr (cdr s)))
> def args: : (<object 725926> (scddr (cdr scdr)))
> def args: : (<object 725994> (scdr (cdr s)))
> def args: : (<object 725994> (scddr (cdr scdr)))
> def args: : (<object 726066> (scdr (cdr s)))
> def args: : (<object 726066> (scddr (cdr scdr)))
> def args: : (<object 726134> (scdr (cdr s)))
> def args: : (<object 726134> (scddr (cdr scdr)))
> def args: : (<object 726206> (scdr (cdr s)))
> def args: : (<object 726206> (scddr (cdr scdr)))
> def args: : (<object 726274> (scdr (cdr s)))
> def args: : (<object 726274> (scddr (cdr scdr)))
> def args: : (<object 726346> (scdr (cdr s)))
> def args: : (<object 726346> (scddr (cdr scdr)))
> def args: : (<object 726414> (scdr (cdr s)))
> def args: : (<object 726414> (scddr (cdr scdr)))
> def args: : (<object 726486> (scdr (cdr s)))
> def args: : (<object 726486> (scddr (cdr scdr)))
> def args: : (<object 726554> (scdr (cdr s)))
> def args: : (<object 726554> (scddr (cdr scdr)))
> def args: : (<object 726626> (scdr (cdr s)))
> def args: : (<object 726626> (scddr (cdr scdr)))
> def args: : (<object 726694> (scdr (cdr s)))
> def args: : (<object 726694> (scddr (cdr scdr)))
> def args: : (<object 726766> (scdr (cdr s)))
> def args: : (<object 726766> (scddr (cdr scdr)))
> def args: : (<object 726834> (scdr (cdr s)))
> def args: : (<object 726834> (scddr (cdr scdr)))
> def args: : (<object 726906> (scdr (cdr s)))
> def args: : (<object 726906> (scddr (cdr scdr)))
> def args: : (<object 726974> (scdr (cdr s)))
> def args: : (<object 726974> (scddr (cdr scdr)))
> def args: : (<object 727046> (scdr (cdr s)))
> def args: : (<object 727046> (scddr (cdr scdr)))
> def args: : (<object 727114> (scdr (cdr s)))
> def args: : (<object 727114> (scddr (cdr scdr)))
> def args: : (<object 727186> (scdr (cdr s)))
> def args: : (<object 727186> (scddr (cdr scdr)))
> def args: : (<object 727254> (scdr (cdr s)))
> def args: : (<object 727254> (scddr (cdr scdr)))
> def args: : (<object 727326> (scdr (cdr s)))
> def args: : (<object 727326> (scddr (cdr scdr)))
> def args: : (<object 727394> (scdr (cdr s)))
> def args: : (<object 727394> (scddr (cdr scdr)))
> def args: : (<object 727466> (scdr (cdr s)))
> def args: : (<object 727466> (scddr (cdr scdr)))
> def args: : (<object 727534> (scdr (cdr s)))
> def args: : (<object 727534> (scddr (cdr scdr)))
> def args: : (<object 727606> (scdr (cdr s)))
> def args: : (<object 727606> (scddr (cdr scdr)))
> def args: : (<object 727674> (scdr (cdr s)))
> def args: : (<object 727674> (scddr (cdr scdr)))
> def args: : (<object 727746> (scdr (cdr s)))
> def args: : (<object 727746> (scddr (cdr scdr)))
> def args: : (<object 727814> (scdr (cdr s)))
> def args: : (<object 727814> (scddr (cdr scdr)))
> def args: : (<object 727886> (scdr (cdr s)))
> def args: : (<object 727886> (scddr (cdr scdr)))
> def args: : (<object 727954> (scdr (cdr s)))
> def args: : (<object 727954> (scddr (cdr scdr)))
> def args: : (<object 728026> (scdr (cdr s)))
> def args: : (<object 728026> (scddr (cdr scdr)))
> def args: : (<object 728094> (scdr (cdr s)))
> def args: : (<object 728094> (scddr (cdr scdr)))
> def args: : (<object 728166> (scdr (cdr s)))
> def args: : (<object 728166> (scddr (cdr scdr)))
> def args: : (<object 728234> (scdr (cdr s)))
> def args: : (<object 728234> (scddr (cdr scdr)))
> def args: : (<object 728306> (scdr (cdr s)))
> def args: : (<object 728306> (scddr (cdr scdr)))
> def args: : (<object 728374> (scdr (cdr s)))
> def args: : (<object 728374> (scddr (cdr scdr)))
> def args: : (<object 728446> (scdr (cdr s)))
> def args: : (<object 728446> (scddr (cdr scdr)))
> def args: : (<object 728514> (scdr (cdr s)))
> def args: : (<object 728514> (scddr (cdr scdr)))
> def args: : (<object 728586> (scdr (cdr s)))
> def args: : (<object 728586> (scddr (cdr scdr)))
> def args: : (<object 728654> (scdr (cdr s)))
> def args: : (<object 728654> (scddr (cdr scdr)))
> def args: : (<object 728726> (scdr (cdr s)))
> def args: : (<object 728726> (scddr (cdr scdr)))
> def args: : (<object 728794> (scdr (cdr s)))
> def args: : (<object 728794> (scddr (cdr scdr)))
> def args: : (<object 728866> (scdr (cdr s)))
> def args: : (<object 728866> (scddr (cdr scdr)))
> def args: : (<object 728934> (scdr (cdr s)))
> def args: : (<object 728934> (scddr (cdr scdr)))
> def args: : (<object 729006> (scdr (cdr s)))
> def args: : (<object 729006> (scddr (cdr scdr)))
> def args: : (<object 729074> (scdr (cdr s)))
> def args: : (<object 729074> (scddr (cdr scdr)))
> def args: : (<object 729146> (scdr (cdr s)))
> def args: : (<object 729146> (scddr (cdr scdr)))
> def args: : (<object 729214> (scdr (cdr s)))
> def args: : (<object 729214> (scddr (cdr scdr)))
> def args: : (<object 729286> (scdr (cdr s)))
> def args: : (<object 729286> (scddr (cdr scdr)))
> def args: : (<object 729354> (scdr (cdr s)))
> def args: : (<object 729354> (scddr (cdr scdr)))
> def args: : (<object 729426> (scdr (cdr s)))
> def args: : (<object 729426> (scddr (cdr scdr)))
> def args: : (<object 729494> (scdr (cdr s)))
> def args: : (<object 729494> (scddr (cdr scdr)))
> def args: : (<object 729566> (scdr (cdr s)))
> def args: : (<object 729566> (scddr (cdr scdr)))
> def args: : (<object 729634> (scdr (cdr s)))
> def args: : (<object 729634> (scddr (cdr scdr)))
> def args: : (<object 729706> (scdr (cdr s)))
> def args: : (<object 729706> (scddr (cdr scdr)))
> def args: : (<object 729774> (scdr (cdr s)))
> def args: : (<object 729774> (scddr (cdr scdr)))
> def args: : (<object 729846> (scdr (cdr s)))
> def args: : (<object 729846> (scddr (cdr scdr)))
> def args: : (<object 729914> (scdr (cdr s)))
> def args: : (<object 729914> (scddr (cdr scdr)))
> def args: : (<object 729986> (scdr (cdr s)))
> def args: : (<object 729986> (scddr (cdr scdr)))
> def args: : (<object 730054> (scdr (cdr s)))
> def args: : (<object 730054> (scddr (cdr scdr)))
> def args: : (<object 730126> (scdr (cdr s)))
> def args: : (<object 730126> (scddr (cdr scdr)))
> def args: : (<object 730194> (scdr (cdr s)))
> def args: : (<object 730194> (scddr (cdr scdr)))
> def args: : (<object 730266> (scdr (cdr s)))
> def args: : (<object 730266> (scddr (cdr scdr)))
> def args: : (<object 730334> (scdr (cdr s)))
> def args: : (<object 730334> (scddr (cdr scdr)))
> def args: : (<object 730406> (scdr (cdr s)))
> def args: : (<object 730406> (scddr (cdr scdr)))
> def args: : (<object 730474> (scdr (cdr s)))
> def args: : (<object 730474> (scddr (cdr scdr)))
> def args: : (<object 730546> (scdr (cdr s)))
> def args: : (<object 730546> (scddr (cdr scdr)))
> def args: : (<object 730614> (scdr (cdr s)))
> def args: : (<object 730614> (scddr (cdr scdr)))
> def args: : (<object 730686> (scdr (cdr s)))
> def args: : (<object 730686> (scddr (cdr scdr)))
> def args: : (<object 730754> (scdr (cdr s)))
> def args: : (<object 730754> (scddr (cdr scdr)))
> def args: : (<object 730826> (scdr (cdr s)))
> def args: : (<object 730826> (scddr (cdr scdr)))
> def args: : (<object 730894> (scdr (cdr s)))
> def args: : (<object 730894> (scddr (cdr scdr)))
> def args: : (<object 730966> (scdr (cdr s)))
> def args: : (<object 730966> (scddr (cdr scdr)))
> def args: : (<object 731034> (scdr (cdr s)))
> def args: : (<object 731034> (scddr (cdr scdr)))
> def args: : (<object 731106> (scdr (cdr s)))
> def args: : (<object 731106> (scddr (cdr scdr)))
> def args: : (<object 731174> (scdr (cdr s)))
> def args: : (<object 731174> (scddr (cdr scdr)))
> def args: : (<object 731246> (scdr (cdr s)))
> def args: : (<object 731246> (scddr (cdr scdr)))
> def args: : (<object 731314> (scdr (cdr s)))
> def args: : (<object 731314> (scddr (cdr scdr)))
> def args: : (<object 731386> (scdr (cdr s)))
> def args: : (<object 731386> (scddr (cdr scdr)))
> def args: : (<object 731454> (scdr (cdr s)))
> def args: : (<object 731454> (scddr (cdr scdr)))
> def args: : (<object 731526> (scdr (cdr s)))
> def args: : (<object 731526> (scddr (cdr scdr)))
> def args: : (<object 731594> (scdr (cdr s)))
> def args: : (<object 731594> (scddr (cdr scdr)))
> def args: : (<object 731666> (scdr (cdr s)))
> def args: : (<object 731666> (scddr (cdr scdr)))
> def args: : (<object 731734> (scdr (cdr s)))
> def args: : (<object 731734> (scddr (cdr scdr)))
> def args: : (<object 731806> (scdr (cdr s)))
> def args: : (<object 731806> (scddr (cdr scdr)))
> def args: : (<object 731874> (scdr (cdr s)))
> def args: : (<object 731874> (scddr (cdr scdr)))
> def args: : (<object 731946> (scdr (cdr s)))
> def args: : (<object 731946> (scddr (cdr scdr)))
> def args: : (<object 732014> (scdr (cdr s)))
> def args: : (<object 732014> (scddr (cdr scdr)))
> def args: : (<object 732086> (scdr (cdr s)))
> def args: : (<object 732086> (scddr (cdr scdr)))
> def args: : (<object 732154> (scdr (cdr s)))
> def args: : (<object 732154> (scddr (cdr scdr)))
> def args: : (<object 732226> (scdr (cdr s)))
> def args: : (<object 732226> (scddr (cdr scdr)))
> def args: : (<object 732294> (scdr (cdr s)))
> def args: : (<object 732294> (scddr (cdr scdr)))
> def args: : (<object 732366> (scdr (cdr s)))
> def args: : (<object 732366> (scddr (cdr scdr)))
> def args: : (<object 732434> (scdr (cdr s)))
> def args: : (<object 732434> (scddr (cdr scdr)))
> def args: : (<object 732506> (scdr (cdr s)))
> def args: : (<object 732506> (scddr (cdr scdr)))
> def args: : (<object 732574> (scdr (cdr s)))
> def args: : (<object 732574> (scddr (cdr scdr)))
> def args: : (<object 732646> (scdr (cdr s)))
> def args: : (<object 732646> (scddr (cdr scdr)))
> def args: : (<object 732714> (scdr (cdr s)))
> def args: : (<object 732714> (scddr (cdr scdr)))
> def args: : (<object 732786> (scdr (cdr s)))
> def args: : (<object 732786> (scddr (cdr scdr)))
> def args: : (<object 732854> (scdr (cdr s)))
> def args: : (<object 732854> (scddr (cdr scdr)))
> def args: : (<object 732926> (scdr (cdr s)))
> def args: : (<object 732926> (scddr (cdr scdr)))
> def args: : (<object 732994> (scdr (cdr s)))
> def args: : (<object 732994> (scddr (cdr scdr)))
> def args: : (<object 733066> (scdr (cdr s)))
> def args: : (<object 733066> (scddr (cdr scdr)))
> def args: : (<object 733134> (scdr (cdr s)))
> def args: : (<object 733134> (scddr (cdr scdr)))
> def args: : (<object 733206> (scdr (cdr s)))
> def args: : (<object 733206> (scddr (cdr scdr)))
> def args: : (<object 733274> (scdr (cdr s)))
> def args: : (<object 733274> (scddr (cdr scdr)))
> def args: : (<object 733346> (scdr (cdr s)))
> def args: : (<object 733346> (scddr (cdr scdr)))
> def args: : (<object 733414> (scdr (cdr s)))
> def args: : (<object 733414> (scddr (cdr scdr)))
> def args: : (<object 733486> (scdr (cdr s)))
> def args: : (<object 733486> (scddr (cdr scdr)))
> def args: : (<object 733554> (scdr (cdr s)))
> def args: : (<object 733554> (scddr (cdr scdr)))
> def args: : (<object 733626> (scdr (cdr s)))
> def args: : (<object 733626> (scddr (cdr scdr)))
> def args: : (<object 733694> (scdr (cdr s)))
> def args: : (<object 733694> (scddr (cdr scdr)))
> def args: : (<object 733766> (scdr (cdr s)))
> def args: : (<object 733766> (scddr (cdr scdr)))
> 2145def args: : (<object 745057> (env (if (null? @) # (car @))))
>  def args: : (<object 745164> (env (if (null? @) # (car @))))
> def args: : (<object 745284> (scdr (cdr s)))
> def args: : (<object 745284> (scddr (cdr scdr)))
> def args: : (<object 745356> (scdr (cdr s)))
> def args: : (<object 745356> (scddr (cdr scdr)))
> def args: : (<object 745428> (scdr (cdr s)))
> def args: : (<object 745428> (scddr (cdr scdr)))
> def args: : (<object 745496> (scdr (cdr s)))
> def args: : (<object 745496> (scddr (cdr scdr)))
> def args: : (<object 745735> (scdr (cdr s)))
> def args: : (<object 745735> (scddr (cdr scdr)))
> def args: : (<object 745807> (scdr (cdr s)))
> def args: : (<object 745807> (scddr (cdr scdr)))
> def args: : (<object 745875> (scdr (cdr s)))
> def args: : (<object 745875> (scddr (cdr scdr)))
> def args: : (<object 745947> (scdr (cdr s)))
> def args: : (<object 745947> (scddr (cdr scdr)))
> def args: : (<object 746015> (scdr (cdr s)))
> def args: : (<object 746015> (scddr (cdr scdr)))
> def args: : (<object 746087> (scdr (cdr s)))
> def args: : (<object 746087> (scddr (cdr scdr)))
> def args: : (<object 746155> (scdr (cdr s)))
> def args: : (<object 746155> (scddr (cdr scdr)))
> def args: : (<object 746227> (scdr (cdr s)))
> def args: : (<object 746227> (scddr (cdr scdr)))
> def args: : (<object 746295> (scdr (cdr s)))
> def args: : (<object 746295> (scddr (cdr scdr)))
> def args: : (<object 746367> (scdr (cdr s)))
> def args: : (<object 746367> (scddr (cdr scdr)))
> def args: : (<object 746435> (scdr (cdr s)))
> def args: : (<object 746435> (scddr (cdr scdr)))
> def args: : (<object 746507> (scdr (cdr s)))
> def args: : (<object 746507> (scddr (cdr scdr)))
> def args: : (<object 746575> (scdr (cdr s)))
> def args: : (<object 746575> (scddr (cdr scdr)))
> def args: : (<object 746647> (scdr (cdr s)))
> def args: : (<object 746647> (scddr (cdr scdr)))
> def args: : (<object 746715> (scdr (cdr s)))
> def args: : (<object 746715> (scddr (cdr scdr)))
> def args: : (<object 746787> (scdr (cdr s)))
> def args: : (<object 746787> (scddr (cdr scdr)))
> def args: : (<object 746855> (scdr (cdr s)))
> def args: : (<object 746855> (scddr (cdr scdr)))
> def args: : (<object 746927> (scdr (cdr s)))
> def args: : (<object 746927> (scddr (cdr scdr)))
> def args: : (<object 746995> (scdr (cdr s)))
> def args: : (<object 746995> (scddr (cdr scdr)))
> def args: : (<object 747067> (scdr (cdr s)))
> def args: : (<object 747067> (scddr (cdr scdr)))
> def args: : (<object 747135> (scdr (cdr s)))
> def args: : (<object 747135> (scddr (cdr scdr)))
> def args: : (<object 747207> (scdr (cdr s)))
> def args: : (<object 747207> (scddr (cdr scdr)))
> def args: : (<object 747275> (scdr (cdr s)))
> def args: : (<object 747275> (scddr (cdr scdr)))
> def args: : (<object 747347> (scdr (cdr s)))
> def args: : (<object 747347> (scddr (cdr scdr)))
> def args: : (<object 747415> (scdr (cdr s)))
> def args: : (<object 747415> (scddr (cdr scdr)))
> def args: : (<object 747487> (scdr (cdr s)))
> def args: : (<object 747487> (scddr (cdr scdr)))
> def args: : (<object 747555> (scdr (cdr s)))
> def args: : (<object 747555> (scddr (cdr scdr)))
> def args: : (<object 747627> (scdr (cdr s)))
> def args: : (<object 747627> (scddr (cdr scdr)))
> def args: : (<object 747695> (scdr (cdr s)))
> def args: : (<object 747695> (scddr (cdr scdr)))
> def args: : (<object 747767> (scdr (cdr s)))
> def args: : (<object 747767> (scddr (cdr scdr)))
> def args: : (<object 747835> (scdr (cdr s)))
> def args: : (<object 747835> (scddr (cdr scdr)))
> def args: : (<object 747907> (scdr (cdr s)))
> def args: : (<object 747907> (scddr (cdr scdr)))
> def args: : (<object 747975> (scdr (cdr s)))
> def args: : (<object 747975> (scddr (cdr scdr)))
> def args: : (<object 748047> (scdr (cdr s)))
> def args: : (<object 748047> (scddr (cdr scdr)))
> def args: : (<object 748115> (scdr (cdr s)))
> def args: : (<object 748115> (scddr (cdr scdr)))
> def args: : (<object 748187> (scdr (cdr s)))
> def args: : (<object 748187> (scddr (cdr scdr)))
> def args: : (<object 748255> (scdr (cdr s)))
> def args: : (<object 748255> (scddr (cdr scdr)))
> def args: : (<object 748327> (scdr (cdr s)))
> def args: : (<object 748327> (scddr (cdr scdr)))
> def args: : (<object 748395> (scdr (cdr s)))
> def args: : (<object 748395> (scddr (cdr scdr)))
> def args: : (<object 748467> (scdr (cdr s)))
> def args: : (<object 748467> (scddr (cdr scdr)))
> def args: : (<object 748535> (scdr (cdr s)))
> def args: : (<object 748535> (scddr (cdr scdr)))
> def args: : (<object 748607> (scdr (cdr s)))
> def args: : (<object 748607> (scddr (cdr scdr)))
> def args: : (<object 748675> (scdr (cdr s)))
> def args: : (<object 748675> (scddr (cdr scdr)))
> def args: : (<object 748747> (scdr (cdr s)))
> def args: : (<object 748747> (scddr (cdr scdr)))
> def args: : (<object 748815> (scdr (cdr s)))
> def args: : (<object 748815> (scddr (cdr scdr)))
> def args: : (<object 748887> (scdr (cdr s)))
> def args: : (<object 748887> (scddr (cdr scdr)))
> def args: : (<object 748955> (scdr (cdr s)))
> def args: : (<object 748955> (scddr (cdr scdr)))
> def args: : (<object 749027> (scdr (cdr s)))
> def args: : (<object 749027> (scddr (cdr scdr)))
> def args: : (<object 749095> (scdr (cdr s)))
> def args: : (<object 749095> (scddr (cdr scdr)))
> def args: : (<object 749167> (scdr (cdr s)))
> def args: : (<object 749167> (scddr (cdr scdr)))
> def args: : (<object 749235> (scdr (cdr s)))
> def args: : (<object 749235> (scddr (cdr scdr)))
> def args: : (<object 749307> (scdr (cdr s)))
> def args: : (<object 749307> (scddr (cdr scdr)))
> def args: : (<object 749375> (scdr (cdr s)))
> def args: : (<object 749375> (scddr (cdr scdr)))
> def args: : (<object 749447> (scdr (cdr s)))
> def args: : (<object 749447> (scddr (cdr scdr)))
> def args: : (<object 749515> (scdr (cdr s)))
> def args: : (<object 749515> (scddr (cdr scdr)))
> def args: : (<object 749587> (scdr (cdr s)))
> def args: : (<object 749587> (scddr (cdr scdr)))
> def args: : (<object 749655> (scdr (cdr s)))
> def args: : (<object 749655> (scddr (cdr scdr)))
> def args: : (<object 749727> (scdr (cdr s)))
> def args: : (<object 749727> (scddr (cdr scdr)))
> def args: : (<object 749795> (scdr (cdr s)))
> def args: : (<object 749795> (scddr (cdr scdr)))
> def args: : (<object 749867> (scdr (cdr s)))
> def args: : (<object 749867> (scddr (cdr scdr)))
> def args: : (<object 749935> (scdr (cdr s)))
> def args: : (<object 749935> (scddr (cdr scdr)))
> def args: : (<object 750007> (scdr (cdr s)))
> def args: : (<object 750007> (scddr (cdr scdr)))
> def args: : (<object 750075> (scdr (cdr s)))
> def args: : (<object 750075> (scddr (cdr scdr)))
> def args: : (<object 750147> (scdr (cdr s)))
> def args: : (<object 750147> (scddr (cdr scdr)))
> def args: : (<object 750215> (scdr (cdr s)))
> def args: : (<object 750215> (scddr (cdr scdr)))
> def args: : (<object 750287> (scdr (cdr s)))
> def args: : (<object 750287> (scddr (cdr scdr)))
> def args: : (<object 750355> (scdr (cdr s)))
> def args: : (<object 750355> (scddr (cdr scdr)))
> def args: : (<object 750427> (scdr (cdr s)))
> def args: : (<object 750427> (scddr (cdr scdr)))
> def args: : (<object 750495> (scdr (cdr s)))
> def args: : (<object 750495> (scddr (cdr scdr)))
> def args: : (<object 750567> (scdr (cdr s)))
> def args: : (<object 750567> (scddr (cdr scdr)))
> def args: : (<object 750635> (scdr (cdr s)))
> def args: : (<object 750635> (scddr (cdr scdr)))
> def args: : (<object 750707> (scdr (cdr s)))
> def args: : (<object 750707> (scddr (cdr scdr)))
> def args: : (<object 750775> (scdr (cdr s)))
> def args: : (<object 750775> (scddr (cdr scdr)))
> def args: : (<object 750847> (scdr (cdr s)))
> def args: : (<object 750847> (scddr (cdr scdr)))
> def args: : (<object 750915> (scdr (cdr s)))
> def args: : (<object 750915> (scddr (cdr scdr)))
> def args: : (<object 750987> (scdr (cdr s)))
> def args: : (<object 750987> (scddr (cdr scdr)))
> def args: : (<object 751055> (scdr (cdr s)))
> def args: : (<object 751055> (scddr (cdr scdr)))
> def args: : (<object 751127> (scdr (cdr s)))
> def args: : (<object 751127> (scddr (cdr scdr)))
> def args: : (<object 751195> (scdr (cdr s)))
> def args: : (<object 751195> (scddr (cdr scdr)))
> def args: : (<object 751267> (scdr (cdr s)))
> def args: : (<object 751267> (scddr (cdr scdr)))
> def args: : (<object 751335> (scdr (cdr s)))
> def args: : (<object 751335> (scddr (cdr scdr)))
> def args: : (<object 751407> (scdr (cdr s)))
> def args: : (<object 751407> (scddr (cdr scdr)))
> def args: : (<object 751475> (scdr (cdr s)))
> def args: : (<object 751475> (scddr (cdr scdr)))
> def args: : (<object 751547> (scdr (cdr s)))
> def args: : (<object 751547> (scddr (cdr scdr)))
> def args: : (<object 751615> (scdr (cdr s)))
> def args: : (<object 751615> (scddr (cdr scdr)))
> def args: : (<object 751687> (scdr (cdr s)))
> def args: : (<object 751687> (scddr (cdr scdr)))
> def args: : (<object 751755> (scdr (cdr s)))
> def args: : (<object 751755> (scddr (cdr scdr)))
> def args: : (<object 751827> (scdr (cdr s)))
> def args: : (<object 751827> (scddr (cdr scdr)))
> def args: : (<object 751895> (scdr (cdr s)))
> def args: : (<object 751895> (scddr (cdr scdr)))
> def args: : (<object 751967> (scdr (cdr s)))
> def args: : (<object 751967> (scddr (cdr scdr)))
> def args: : (<object 752035> (scdr (cdr s)))
> def args: : (<object 752035> (scddr (cdr scdr)))
> def args: : (<object 752107> (scdr (cdr s)))
> def args: : (<object 752107> (scddr (cdr scdr)))
> def args: : (<object 752175> (scdr (cdr s)))
> def args: : (<object 752175> (scddr (cdr scdr)))
> def args: : (<object 752247> (scdr (cdr s)))
> def args: : (<object 752247> (scddr (cdr scdr)))
> def args: : (<object 752315> (scdr (cdr s)))
> def args: : (<object 752315> (scddr (cdr scdr)))
> def args: : (<object 752387> (scdr (cdr s)))
> def args: : (<object 752387> (scddr (cdr scdr)))
> def args: : (<object 752455> (scdr (cdr s)))
> def args: : (<object 752455> (scddr (cdr scdr)))
> def args: : (<object 752527> (scdr (cdr s)))
> def args: : (<object 752527> (scddr (cdr scdr)))
> def args: : (<object 752595> (scdr (cdr s)))
> def args: : (<object 752595> (scddr (cdr scdr)))
> def args: : (<object 752667> (scdr (cdr s)))
> def args: : (<object 752667> (scddr (cdr scdr)))
> def args: : (<object 752735> (scdr (cdr s)))
> def args: : (<object 752735> (scddr (cdr scdr)))
> def args: : (<object 752807> (scdr (cdr s)))
> def args: : (<object 752807> (scddr (cdr scdr)))
> def args: : (<object 752875> (scdr (cdr s)))
> def args: : (<object 752875> (scddr (cdr scdr)))
> def args: : (<object 752947> (scdr (cdr s)))
> def args: : (<object 752947> (scddr (cdr scdr)))
> def args: : (<object 753015> (scdr (cdr s)))
> def args: : (<object 753015> (scddr (cdr scdr)))
> def args: : (<object 753087> (scdr (cdr s)))
> def args: : (<object 753087> (scddr (cdr scdr)))
> def args: : (<object 753155> (scdr (cdr s)))
> def args: : (<object 753155> (scddr (cdr scdr)))
> def args: : (<object 753227> (scdr (cdr s)))
> def args: : (<object 753227> (scddr (cdr scdr)))
> def args: : (<object 753295> (scdr (cdr s)))
> def args: : (<object 753295> (scddr (cdr scdr)))
> def args: : (<object 753367> (scdr (cdr s)))
> def args: : (<object 753367> (scddr (cdr scdr)))
> def args: : (<object 753435> (scdr (cdr s)))
> def args: : (<object 753435> (scddr (cdr scdr)))
> def args: : (<object 753507> (scdr (cdr s)))
> def args: : (<object 753507> (scddr (cdr scdr)))
> def args: : (<object 753575> (scdr (cdr s)))
> def args: : (<object 753575> (scddr (cdr scdr)))
> def args: : (<object 753647> (scdr (cdr s)))
> def args: : (<object 753647> (scddr (cdr scdr)))
> def args: : (<object 753715> (scdr (cdr s)))
> def args: : (<object 753715> (scddr (cdr scdr)))
> def args: : (<object 753787> (scdr (cdr s)))
> def args: : (<object 753787> (scddr (cdr scdr)))
> def args: : (<object 753855> (scdr (cdr s)))
> def args: : (<object 753855> (scddr (cdr scdr)))
> def args: : (<object 753927> (scdr (cdr s)))
> def args: : (<object 753927> (scddr (cdr scdr)))
> def args: : (<object 753995> (scdr (cdr s)))
> def args: : (<object 753995> (scddr (cdr scdr)))
> def args: : (<object 754067> (scdr (cdr s)))
> def args: : (<object 754067> (scddr (cdr scdr)))
> def args: : (<object 754135> (scdr (cdr s)))
> def args: : (<object 754135> (scddr (cdr scdr)))
> def args: : (<object 754207> (scdr (cdr s)))
> def args: : (<object 754207> (scddr (cdr scdr)))
> def args: : (<object 754275> (scdr (cdr s)))
> def args: : (<object 754275> (scddr (cdr scdr)))
> def args: : (<object 754347> (scdr (cdr s)))
> def args: : (<object 754347> (scddr (cdr scdr)))
> def args: : (<object 754415> (scdr (cdr s)))
> def args: : (<object 754415> (scddr (cdr scdr)))
> def args: : (<object 754487> (scdr (cdr s)))
> def args: : (<object 754487> (scddr (cdr scdr)))
> def args: : (<object 754555> (scdr (cdr s)))
> def args: : (<object 754555> (scddr (cdr scdr)))
> def args: : (<object 754627> (scdr (cdr s)))
> def args: : (<object 754627> (scddr (cdr scdr)))
> 2211def args: : (<object 766089> (env (if (null? @) # (car @))))
>  def args: : (<object 766196> (env (if (null? @) # (car @))))
> def args: : (<object 766316> (scdr (cdr s)))
> def args: : (<object 766316> (scddr (cdr scdr)))
> def args: : (<object 766388> (scdr (cdr s)))
> def args: : (<object 766388> (scddr (cdr scdr)))
> def args: : (<object 766460> (scdr (cdr s)))
> def args: : (<object 766460> (scddr (cdr scdr)))
> def args: : (<object 766528> (scdr (cdr s)))
> def args: : (<object 766528> (scddr (cdr scdr)))
> def args: : (<object 766767> (scdr (cdr s)))
> def args: : (<object 766767> (scddr (cdr scdr)))
> def args: : (<object 766839> (scdr (cdr s)))
> def args: : (<object 766839> (scddr (cdr scdr)))
> def args: : (<object 766907> (scdr (cdr s)))
> def args: : (<object 766907> (scddr (cdr scdr)))
> def args: : (<object 766979> (scdr (cdr s)))
> def args: : (<object 766979> (scddr (cdr scdr)))
> def args: : (<object 767047> (scdr (cdr s)))
> def args: : (<object 767047> (scddr (cdr scdr)))
> def args: : (<object 767119> (scdr (cdr s)))
> def args: : (<object 767119> (scddr (cdr scdr)))
> def args: : (<object 767187> (scdr (cdr s)))
> def args: : (<object 767187> (scddr (cdr scdr)))
> def args: : (<object 767259> (scdr (cdr s)))
> def args: : (<object 767259> (scddr (cdr scdr)))
> def args: : (<object 767327> (scdr (cdr s)))
> def args: : (<object 767327> (scddr (cdr scdr)))
> def args: : (<object 767399> (scdr (cdr s)))
> def args: : (<object 767399> (scddr (cdr scdr)))
> def args: : (<object 767467> (scdr (cdr s)))
> def args: : (<object 767467> (scddr (cdr scdr)))
> def args: : (<object 767539> (scdr (cdr s)))
> def args: : (<object 767539> (scddr (cdr scdr)))
> def args: : (<object 767607> (scdr (cdr s)))
> def args: : (<object 767607> (scddr (cdr scdr)))
> def args: : (<object 767679> (scdr (cdr s)))
> def args: : (<object 767679> (scddr (cdr scdr)))
> def args: : (<object 767747> (scdr (cdr s)))
> def args: : (<object 767747> (scddr (cdr scdr)))
> def args: : (<object 767819> (scdr (cdr s)))
> def args: : (<object 767819> (scddr (cdr scdr)))
> def args: : (<object 767887> (scdr (cdr s)))
> def args: : (<object 767887> (scddr (cdr scdr)))
> def args: : (<object 767959> (scdr (cdr s)))
> def args: : (<object 767959> (scddr (cdr scdr)))
> def args: : (<object 768027> (scdr (cdr s)))
> def args: : (<object 768027> (scddr (cdr scdr)))
> def args: : (<object 768099> (scdr (cdr s)))
> def args: : (<object 768099> (scddr (cdr scdr)))
> def args: : (<object 768167> (scdr (cdr s)))
> def args: : (<object 768167> (scddr (cdr scdr)))
> def args: : (<object 768239> (scdr (cdr s)))
> def args: : (<object 768239> (scddr (cdr scdr)))
> def args: : (<object 768307> (scdr (cdr s)))
> def args: : (<object 768307> (scddr (cdr scdr)))
> def args: : (<object 768379> (scdr (cdr s)))
> def args: : (<object 768379> (scddr (cdr scdr)))
> def args: : (<object 768447> (scdr (cdr s)))
> def args: : (<object 768447> (scddr (cdr scdr)))
> def args: : (<object 768519> (scdr (cdr s)))
> def args: : (<object 768519> (scddr (cdr scdr)))
> def args: : (<object 768587> (scdr (cdr s)))
> def args: : (<object 768587> (scddr (cdr scdr)))
> def args: : (<object 768659> (scdr (cdr s)))
> def args: : (<object 768659> (scddr (cdr scdr)))
> def args: : (<object 768727> (scdr (cdr s)))
> def args: : (<object 768727> (scddr (cdr scdr)))
> def args: : (<object 768799> (scdr (cdr s)))
> def args: : (<object 768799> (scddr (cdr scdr)))
> def args: : (<object 768867> (scdr (cdr s)))
> def args: : (<object 768867> (scddr (cdr scdr)))
> def args: : (<object 768939> (scdr (cdr s)))
> def args: : (<object 768939> (scddr (cdr scdr)))
> def args: : (<object 769007> (scdr (cdr s)))
> def args: : (<object 769007> (scddr (cdr scdr)))
> def args: : (<object 769079> (scdr (cdr s)))
> def args: : (<object 769079> (scddr (cdr scdr)))
> def args: : (<object 769147> (scdr (cdr s)))
> def args: : (<object 769147> (scddr (cdr scdr)))
> def args: : (<object 769219> (scdr (cdr s)))
> def args: : (<object 769219> (scddr (cdr scdr)))
> def args: : (<object 769287> (scdr (cdr s)))
> def args: : (<object 769287> (scddr (cdr scdr)))
> def args: : (<object 769359> (scdr (cdr s)))
> def args: : (<object 769359> (scddr (cdr scdr)))
> def args: : (<object 769427> (scdr (cdr s)))
> def args: : (<object 769427> (scddr (cdr scdr)))
> def args: : (<object 769499> (scdr (cdr s)))
> def args: : (<object 769499> (scddr (cdr scdr)))
> def args: : (<object 769567> (scdr (cdr s)))
> def args: : (<object 769567> (scddr (cdr scdr)))
> def args: : (<object 769639> (scdr (cdr s)))
> def args: : (<object 769639> (scddr (cdr scdr)))
> def args: : (<object 769707> (scdr (cdr s)))
> def args: : (<object 769707> (scddr (cdr scdr)))
> def args: : (<object 769779> (scdr (cdr s)))
> def args: : (<object 769779> (scddr (cdr scdr)))
> def args: : (<object 769847> (scdr (cdr s)))
> def args: : (<object 769847> (scddr (cdr scdr)))
> def args: : (<object 769919> (scdr (cdr s)))
> def args: : (<object 769919> (scddr (cdr scdr)))
> def args: : (<object 769987> (scdr (cdr s)))
> def args: : (<object 769987> (scddr (cdr scdr)))
> def args: : (<object 770059> (scdr (cdr s)))
> def args: : (<object 770059> (scddr (cdr scdr)))
> def args: : (<object 770127> (scdr (cdr s)))
> def args: : (<object 770127> (scddr (cdr scdr)))
> def args: : (<object 770199> (scdr (cdr s)))
> def args: : (<object 770199> (scddr (cdr scdr)))
> def args: : (<object 770267> (scdr (cdr s)))
> def args: : (<object 770267> (scddr (cdr scdr)))
> def args: : (<object 770339> (scdr (cdr s)))
> def args: : (<object 770339> (scddr (cdr scdr)))
> def args: : (<object 770407> (scdr (cdr s)))
> def args: : (<object 770407> (scddr (cdr scdr)))
> def args: : (<object 770479> (scdr (cdr s)))
> def args: : (<object 770479> (scddr (cdr scdr)))
> def args: : (<object 770547> (scdr (cdr s)))
> def args: : (<object 770547> (scddr (cdr scdr)))
> def args: : (<object 770619> (scdr (cdr s)))
> def args: : (<object 770619> (scddr (cdr scdr)))
> def args: : (<object 770687> (scdr (cdr s)))
> def args: : (<object 770687> (scddr (cdr scdr)))
> def args: : (<object 770759> (scdr (cdr s)))
> def args: : (<object 770759> (scddr (cdr scdr)))
> def args: : (<object 770827> (scdr (cdr s)))
> def args: : (<object 770827> (scddr (cdr scdr)))
> def args: : (<object 770899> (scdr (cdr s)))
> def args: : (<object 770899> (scddr (cdr scdr)))
> def args: : (<object 770967> (scdr (cdr s)))
> def args: : (<object 770967> (scddr (cdr scdr)))
> def args: : (<object 771039> (scdr (cdr s)))
> def args: : (<object 771039> (scddr (cdr scdr)))
> def args: : (<object 771107> (scdr (cdr s)))
> def args: : (<object 771107> (scddr (cdr scdr)))
> def args: : (<object 771179> (scdr (cdr s)))
> def args: : (<object 771179> (scddr (cdr scdr)))
> def args: : (<object 771247> (scdr (cdr s)))
> def args: : (<object 771247> (scddr (cdr scdr)))
> def args: : (<object 771319> (scdr (cdr s)))
> def args: : (<object 771319> (scddr (cdr scdr)))
> def args: : (<object 771387> (scdr (cdr s)))
> def args: : (<object 771387> (scddr (cdr scdr)))
> def args: : (<object 771459> (scdr (cdr s)))
> def args: : (<object 771459> (scddr (cdr scdr)))
> def args: : (<object 771527> (scdr (cdr s)))
> def args: : (<object 771527> (scddr (cdr scdr)))
> def args: : (<object 771599> (scdr (cdr s)))
> def args: : (<object 771599> (scddr (cdr scdr)))
> def args: : (<object 771667> (scdr (cdr s)))
> def args: : (<object 771667> (scddr (cdr scdr)))
> def args: : (<object 771739> (scdr (cdr s)))
> def args: : (<object 771739> (scddr (cdr scdr)))
> def args: : (<object 771807> (scdr (cdr s)))
> def args: : (<object 771807> (scddr (cdr scdr)))
> def args: : (<object 771879> (scdr (cdr s)))
> def args: : (<object 771879> (scddr (cdr scdr)))
> def args: : (<object 771947> (scdr (cdr s)))
> def args: : (<object 771947> (scddr (cdr scdr)))
> def args: : (<object 772019> (scdr (cdr s)))
> def args: : (<object 772019> (scddr (cdr scdr)))
> def args: : (<object 772087> (scdr (cdr s)))
> def args: : (<object 772087> (scddr (cdr scdr)))
> def args: : (<object 772159> (scdr (cdr s)))
> def args: : (<object 772159> (scddr (cdr scdr)))
> def args: : (<object 772227> (scdr (cdr s)))
> def args: : (<object 772227> (scddr (cdr scdr)))
> def args: : (<object 772299> (scdr (cdr s)))
> def args: : (<object 772299> (scddr (cdr scdr)))
> def args: : (<object 772367> (scdr (cdr s)))
> def args: : (<object 772367> (scddr (cdr scdr)))
> def args: : (<object 772439> (scdr (cdr s)))
> def args: : (<object 772439> (scddr (cdr scdr)))
> def args: : (<object 772507> (scdr (cdr s)))
> def args: : (<object 772507> (scddr (cdr scdr)))
> def args: : (<object 772579> (scdr (cdr s)))
> def args: : (<object 772579> (scddr (cdr scdr)))
> def args: : (<object 772647> (scdr (cdr s)))
> def args: : (<object 772647> (scddr (cdr scdr)))
> def args: : (<object 772719> (scdr (cdr s)))
> def args: : (<object 772719> (scddr (cdr scdr)))
> def args: : (<object 772787> (scdr (cdr s)))
> def args: : (<object 772787> (scddr (cdr scdr)))
> def args: : (<object 772859> (scdr (cdr s)))
> def args: : (<object 772859> (scddr (cdr scdr)))
> def args: : (<object 772927> (scdr (cdr s)))
> def args: : (<object 772927> (scddr (cdr scdr)))
> def args: : (<object 772999> (scdr (cdr s)))
> def args: : (<object 772999> (scddr (cdr scdr)))
> def args: : (<object 773067> (scdr (cdr s)))
> def args: : (<object 773067> (scddr (cdr scdr)))
> def args: : (<object 773139> (scdr (cdr s)))
> def args: : (<object 773139> (scddr (cdr scdr)))
> def args: : (<object 773207> (scdr (cdr s)))
> def args: : (<object 773207> (scddr (cdr scdr)))
> def args: : (<object 773279> (scdr (cdr s)))
> def args: : (<object 773279> (scddr (cdr scdr)))
> def args: : (<object 773347> (scdr (cdr s)))
> def args: : (<object 773347> (scddr (cdr scdr)))
> def args: : (<object 773419> (scdr (cdr s)))
> def args: : (<object 773419> (scddr (cdr scdr)))
> def args: : (<object 773487> (scdr (cdr s)))
> def args: : (<object 773487> (scddr (cdr scdr)))
> def args: : (<object 773559> (scdr (cdr s)))
> def args: : (<object 773559> (scddr (cdr scdr)))
> def args: : (<object 773627> (scdr (cdr s)))
> def args: : (<object 773627> (scddr (cdr scdr)))
> def args: : (<object 773699> (scdr (cdr s)))
> def args: : (<object 773699> (scddr (cdr scdr)))
> def args: : (<object 773767> (scdr (cdr s)))
> def args: : (<object 773767> (scddr (cdr scdr)))
> def args: : (<object 773839> (scdr (cdr s)))
> def args: : (<object 773839> (scddr (cdr scdr)))
> def args: : (<object 773907> (scdr (cdr s)))
> def args: : (<object 773907> (scddr (cdr scdr)))
> def args: : (<object 773979> (scdr (cdr s)))
> def args: : (<object 773979> (scddr (cdr scdr)))
> def args: : (<object 774047> (scdr (cdr s)))
> def args: : (<object 774047> (scddr (cdr scdr)))
> def args: : (<object 774119> (scdr (cdr s)))
> def args: : (<object 774119> (scddr (cdr scdr)))
> def args: : (<object 774187> (scdr (cdr s)))
> def args: : (<object 774187> (scddr (cdr scdr)))
> def args: : (<object 774259> (scdr (cdr s)))
> def args: : (<object 774259> (scddr (cdr scdr)))
> def args: : (<object 774327> (scdr (cdr s)))
> def args: : (<object 774327> (scddr (cdr scdr)))
> def args: : (<object 774399> (scdr (cdr s)))
> def args: : (<object 774399> (scddr (cdr scdr)))
> def args: : (<object 774467> (scdr (cdr s)))
> def args: : (<object 774467> (scddr (cdr scdr)))
> def args: : (<object 774539> (scdr (cdr s)))
> def args: : (<object 774539> (scddr (cdr scdr)))
> def args: : (<object 774607> (scdr (cdr s)))
> def args: : (<object 774607> (scddr (cdr scdr)))
> def args: : (<object 774679> (scdr (cdr s)))
> def args: : (<object 774679> (scddr (cdr scdr)))
> def args: : (<object 774747> (scdr (cdr s)))
> def args: : (<object 774747> (scddr (cdr scdr)))
> def args: : (<object 774819> (scdr (cdr s)))
> def args: : (<object 774819> (scddr (cdr scdr)))
> def args: : (<object 774887> (scdr (cdr s)))
> def args: : (<object 774887> (scddr (cdr scdr)))
> def args: : (<object 774959> (scdr (cdr s)))
> def args: : (<object 774959> (scddr (cdr scdr)))
> def args: : (<object 775027> (scdr (cdr s)))
> def args: : (<object 775027> (scddr (cdr scdr)))
> def args: : (<object 775099> (scdr (cdr s)))
> def args: : (<object 775099> (scddr (cdr scdr)))
> def args: : (<object 775167> (scdr (cdr s)))
> def args: : (<object 775167> (scddr (cdr scdr)))
> def args: : (<object 775239> (scdr (cdr s)))
> def args: : (<object 775239> (scddr (cdr scdr)))
> def args: : (<object 775307> (scdr (cdr s)))
> def args: : (<object 775307> (scddr (cdr scdr)))
> def args: : (<object 775379> (scdr (cdr s)))
> def args: : (<object 775379> (scddr (cdr scdr)))
> def args: : (<object 775447> (scdr (cdr s)))
> def args: : (<object 775447> (scddr (cdr scdr)))
> def args: : (<object 775519> (scdr (cdr s)))
> def args: : (<object 775519> (scddr (cdr scdr)))
> def args: : (<object 775587> (scdr (cdr s)))
> def args: : (<object 775587> (scddr (cdr scdr)))
> def args: : (<object 775659> (scdr (cdr s)))
> def args: : (<object 775659> (scddr (cdr scdr)))
> def args: : (<object 775727> (scdr (cdr s)))
> def args: : (<object 775727> (scddr (cdr scdr)))
> def args: : (<object 775799> (scdr (cdr s)))
> def args: : (<object 775799> (scddr (cdr scdr)))
> 2278def args: : (<object 787432> (env (if (null? @) # (car @))))
>  def args: : (<object 787539> (env (if (null? @) # (car @))))
> def args: : (<object 787659> (scdr (cdr s)))
> def args: : (<object 787659> (scddr (cdr scdr)))
> def args: : (<object 787731> (scdr (cdr s)))
> def args: : (<object 787731> (scddr (cdr scdr)))
> def args: : (<object 787803> (scdr (cdr s)))
> def args: : (<object 787803> (scddr (cdr scdr)))
> def args: : (<object 787871> (scdr (cdr s)))
> def args: : (<object 787871> (scddr (cdr scdr)))
> def args: : (<object 788110> (scdr (cdr s)))
> def args: : (<object 788110> (scddr (cdr scdr)))
> def args: : (<object 788182> (scdr (cdr s)))
> def args: : (<object 788182> (scddr (cdr scdr)))
> def args: : (<object 788250> (scdr (cdr s)))
> def args: : (<object 788250> (scddr (cdr scdr)))
> def args: : (<object 788322> (scdr (cdr s)))
> def args: : (<object 788322> (scddr (cdr scdr)))
> def args: : (<object 788390> (scdr (cdr s)))
> def args: : (<object 788390> (scddr (cdr scdr)))
> def args: : (<object 788462> (scdr (cdr s)))
> def args: : (<object 788462> (scddr (cdr scdr)))
> def args: : (<object 788530> (scdr (cdr s)))
> def args: : (<object 788530> (scddr (cdr scdr)))
> def args: : (<object 788602> (scdr (cdr s)))
> def args: : (<object 788602> (scddr (cdr scdr)))
> def args: : (<object 788670> (scdr (cdr s)))
> def args: : (<object 788670> (scddr (cdr scdr)))
> def args: : (<object 788742> (scdr (cdr s)))
> def args: : (<object 788742> (scddr (cdr scdr)))
> def args: : (<object 788810> (scdr (cdr s)))
> def args: : (<object 788810> (scddr (cdr scdr)))
> def args: : (<object 788882> (scdr (cdr s)))
> def args: : (<object 788882> (scddr (cdr scdr)))
> def args: : (<object 788950> (scdr (cdr s)))
> def args: : (<object 788950> (scddr (cdr scdr)))
> def args: : (<object 789022> (scdr (cdr s)))
> def args: : (<object 789022> (scddr (cdr scdr)))
> def args: : (<object 789090> (scdr (cdr s)))
> def args: : (<object 789090> (scddr (cdr scdr)))
> def args: : (<object 789162> (scdr (cdr s)))
> def args: : (<object 789162> (scddr (cdr scdr)))
> def args: : (<object 789230> (scdr (cdr s)))
> def args: : (<object 789230> (scddr (cdr scdr)))
> def args: : (<object 789302> (scdr (cdr s)))
> def args: : (<object 789302> (scddr (cdr scdr)))
> def args: : (<object 789370> (scdr (cdr s)))
> def args: : (<object 789370> (scddr (cdr scdr)))
> def args: : (<object 789442> (scdr (cdr s)))
> def args: : (<object 789442> (scddr (cdr scdr)))
> def args: : (<object 789510> (scdr (cdr s)))
> def args: : (<object 789510> (scddr (cdr scdr)))
> def args: : (<object 789582> (scdr (cdr s)))
> def args: : (<object 789582> (scddr (cdr scdr)))
> def args: : (<object 789650> (scdr (cdr s)))
> def args: : (<object 789650> (scddr (cdr scdr)))
> def args: : (<object 789722> (scdr (cdr s)))
> def args: : (<object 789722> (scddr (cdr scdr)))
> def args: : (<object 789790> (scdr (cdr s)))
> def args: : (<object 789790> (scddr (cdr scdr)))
> def args: : (<object 789862> (scdr (cdr s)))
> def args: : (<object 789862> (scddr (cdr scdr)))
> def args: : (<object 789930> (scdr (cdr s)))
> def args: : (<object 789930> (scddr (cdr scdr)))
> def args: : (<object 790002> (scdr (cdr s)))
> def args: : (<object 790002> (scddr (cdr scdr)))
> def args: : (<object 790070> (scdr (cdr s)))
> def args: : (<object 790070> (scddr (cdr scdr)))
> def args: : (<object 790142> (scdr (cdr s)))
> def args: : (<object 790142> (scddr (cdr scdr)))
> def args: : (<object 790210> (scdr (cdr s)))
> def args: : (<object 790210> (scddr (cdr scdr)))
> def args: : (<object 790282> (scdr (cdr s)))
> def args: : (<object 790282> (scddr (cdr scdr)))
> def args: : (<object 790350> (scdr (cdr s)))
> def args: : (<object 790350> (scddr (cdr scdr)))
> def args: : (<object 790422> (scdr (cdr s)))
> def args: : (<object 790422> (scddr (cdr scdr)))
> def args: : (<object 790490> (scdr (cdr s)))
> def args: : (<object 790490> (scddr (cdr scdr)))
> def args: : (<object 790562> (scdr (cdr s)))
> def args: : (<object 790562> (scddr (cdr scdr)))
> def args: : (<object 790630> (scdr (cdr s)))
> def args: : (<object 790630> (scddr (cdr scdr)))
> def args: : (<object 790702> (scdr (cdr s)))
> def args: : (<object 790702> (scddr (cdr scdr)))
> def args: : (<object 790770> (scdr (cdr s)))
> def args: : (<object 790770> (scddr (cdr scdr)))
> def args: : (<object 790842> (scdr (cdr s)))
> def args: : (<object 790842> (scddr (cdr scdr)))
> def args: : (<object 790910> (scdr (cdr s)))
> def args: : (<object 790910> (scddr (cdr scdr)))
> def args: : (<object 790982> (scdr (cdr s)))
> def args: : (<object 790982> (scddr (cdr scdr)))
> def args: : (<object 791050> (scdr (cdr s)))
> def args: : (<object 791050> (scddr (cdr scdr)))
> def args: : (<object 791122> (scdr (cdr s)))
> def args: : (<object 791122> (scddr (cdr scdr)))
> def args: : (<object 791190> (scdr (cdr s)))
> def args: : (<object 791190> (scddr (cdr scdr)))
> def args: : (<object 791262> (scdr (cdr s)))
> def args: : (<object 791262> (scddr (cdr scdr)))
> def args: : (<object 791330> (scdr (cdr s)))
> def args: : (<object 791330> (scddr (cdr scdr)))
> def args: : (<object 791402> (scdr (cdr s)))
> def args: : (<object 791402> (scddr (cdr scdr)))
> def args: : (<object 791470> (scdr (cdr s)))
> def args: : (<object 791470> (scddr (cdr scdr)))
> def args: : (<object 791542> (scdr (cdr s)))
> def args: : (<object 791542> (scddr (cdr scdr)))
> def args: : (<object 791610> (scdr (cdr s)))
> def args: : (<object 791610> (scddr (cdr scdr)))
> def args: : (<object 791682> (scdr (cdr s)))
> def args: : (<object 791682> (scddr (cdr scdr)))
> def args: : (<object 791750> (scdr (cdr s)))
> def args: : (<object 791750> (scddr (cdr scdr)))
> def args: : (<object 791822> (scdr (cdr s)))
> def args: : (<object 791822> (scddr (cdr scdr)))
> def args: : (<object 791890> (scdr (cdr s)))
> def args: : (<object 791890> (scddr (cdr scdr)))
> def args: : (<object 791962> (scdr (cdr s)))
> def args: : (<object 791962> (scddr (cdr scdr)))
> def args: : (<object 792030> (scdr (cdr s)))
> def args: : (<object 792030> (scddr (cdr scdr)))
> def args: : (<object 792102> (scdr (cdr s)))
> def args: : (<object 792102> (scddr (cdr scdr)))
> def args: : (<object 792170> (scdr (cdr s)))
> def args: : (<object 792170> (scddr (cdr scdr)))
> def args: : (<object 792242> (scdr (cdr s)))
> def args: : (<object 792242> (scddr (cdr scdr)))
> def args: : (<object 792310> (scdr (cdr s)))
> def args: : (<object 792310> (scddr (cdr scdr)))
> def args: : (<object 792382> (scdr (cdr s)))
> def args: : (<object 792382> (scddr (cdr scdr)))
> def args: : (<object 792450> (scdr (cdr s)))
> def args: : (<object 792450> (scddr (cdr scdr)))
> def args: : (<object 792522> (scdr (cdr s)))
> def args: : (<object 792522> (scddr (cdr scdr)))
> def args: : (<object 792590> (scdr (cdr s)))
> def args: : (<object 792590> (scddr (cdr scdr)))
> def args: : (<object 792662> (scdr (cdr s)))
> def args: : (<object 792662> (scddr (cdr scdr)))
> def args: : (<object 792730> (scdr (cdr s)))
> def args: : (<object 792730> (scddr (cdr scdr)))
> def args: : (<object 792802> (scdr (cdr s)))
> def args: : (<object 792802> (scddr (cdr scdr)))
> def args: : (<object 792870> (scdr (cdr s)))
> def args: : (<object 792870> (scddr (cdr scdr)))
> def args: : (<object 792942> (scdr (cdr s)))
> def args: : (<object 792942> (scddr (cdr scdr)))
> def args: : (<object 793010> (scdr (cdr s)))
> def args: : (<object 793010> (scddr (cdr scdr)))
> def args: : (<object 793082> (scdr (cdr s)))
> def args: : (<object 793082> (scddr (cdr scdr)))
> def args: : (<object 793150> (scdr (cdr s)))
> def args: : (<object 793150> (scddr (cdr scdr)))
> def args: : (<object 793222> (scdr (cdr s)))
> def args: : (<object 793222> (scddr (cdr scdr)))
> def args: : (<object 793290> (scdr (cdr s)))
> def args: : (<object 793290> (scddr (cdr scdr)))
> def args: : (<object 793362> (scdr (cdr s)))
> def args: : (<object 793362> (scddr (cdr scdr)))
> def args: : (<object 793430> (scdr (cdr s)))
> def args: : (<object 793430> (scddr (cdr scdr)))
> def args: : (<object 793502> (scdr (cdr s)))
> def args: : (<object 793502> (scddr (cdr scdr)))
> def args: : (<object 793570> (scdr (cdr s)))
> def args: : (<object 793570> (scddr (cdr scdr)))
> def args: : (<object 793642> (scdr (cdr s)))
> def args: : (<object 793642> (scddr (cdr scdr)))
> def args: : (<object 793710> (scdr (cdr s)))
> def args: : (<object 793710> (scddr (cdr scdr)))
> def args: : (<object 793782> (scdr (cdr s)))
> def args: : (<object 793782> (scddr (cdr scdr)))
> def args: : (<object 793850> (scdr (cdr s)))
> def args: : (<object 793850> (scddr (cdr scdr)))
> def args: : (<object 793922> (scdr (cdr s)))
> def args: : (<object 793922> (scddr (cdr scdr)))
> def args: : (<object 793990> (scdr (cdr s)))
> def args: : (<object 793990> (scddr (cdr scdr)))
> def args: : (<object 794062> (scdr (cdr s)))
> def args: : (<object 794062> (scddr (cdr scdr)))
> def args: : (<object 794130> (scdr (cdr s)))
> def args: : (<object 794130> (scddr (cdr scdr)))
> def args: : (<object 794202> (scdr (cdr s)))
> def args: : (<object 794202> (scddr (cdr scdr)))
> def args: : (<object 794270> (scdr (cdr s)))
> def args: : (<object 794270> (scddr (cdr scdr)))
> def args: : (<object 794342> (scdr (cdr s)))
> def args: : (<object 794342> (scddr (cdr scdr)))
> def args: : (<object 794410> (scdr (cdr s)))
> def args: : (<object 794410> (scddr (cdr scdr)))
> def args: : (<object 794482> (scdr (cdr s)))
> def args: : (<object 794482> (scddr (cdr scdr)))
> def args: : (<object 794550> (scdr (cdr s)))
> def args: : (<object 794550> (scddr (cdr scdr)))
> def args: : (<object 794622> (scdr (cdr s)))
> def args: : (<object 794622> (scddr (cdr scdr)))
> def args: : (<object 794690> (scdr (cdr s)))
> def args: : (<object 794690> (scddr (cdr scdr)))
> def args: : (<object 794762> (scdr (cdr s)))
> def args: : (<object 794762> (scddr (cdr scdr)))
> def args: : (<object 794830> (scdr (cdr s)))
> def args: : (<object 794830> (scddr (cdr scdr)))
> def args: : (<object 794902> (scdr (cdr s)))
> def args: : (<object 794902> (scddr (cdr scdr)))
> def args: : (<object 794970> (scdr (cdr s)))
> def args: : (<object 794970> (scddr (cdr scdr)))
> def args: : (<object 795042> (scdr (cdr s)))
> def args: : (<object 795042> (scddr (cdr scdr)))
> def args: : (<object 795110> (scdr (cdr s)))
> def args: : (<object 795110> (scddr (cdr scdr)))
> def args: : (<object 795182> (scdr (cdr s)))
> def args: : (<object 795182> (scddr (cdr scdr)))
> def args: : (<object 795250> (scdr (cdr s)))
> def args: : (<object 795250> (scddr (cdr scdr)))
> def args: : (<object 795322> (scdr (cdr s)))
> def args: : (<object 795322> (scddr (cdr scdr)))
> def args: : (<object 795390> (scdr (cdr s)))
> def args: : (<object 795390> (scddr (cdr scdr)))
> def args: : (<object 795462> (scdr (cdr s)))
> def args: : (<object 795462> (scddr (cdr scdr)))
> def args: : (<object 795530> (scdr (cdr s)))
> def args: : (<object 795530> (scddr (cdr scdr)))
> def args: : (<object 795602> (scdr (cdr s)))
> def args: : (<object 795602> (scddr (cdr scdr)))
> def args: : (<object 795670> (scdr (cdr s)))
> def args: : (<object 795670> (scddr (cdr scdr)))
> def args: : (<object 795742> (scdr (cdr s)))
> def args: : (<object 795742> (scddr (cdr scdr)))
> def args: : (<object 795810> (scdr (cdr s)))
> def args: : (<object 795810> (scddr (cdr scdr)))
> def args: : (<object 795882> (scdr (cdr s)))
> def args: : (<object 795882> (scddr (cdr scdr)))
> def args: : (<object 795950> (scdr (cdr s)))
> def args: : (<object 795950> (scddr (cdr scdr)))
> def args: : (<object 796022> (scdr (cdr s)))
> def args: : (<object 796022> (scddr (cdr scdr)))
> def args: : (<object 796090> (scdr (cdr s)))
> def args: : (<object 796090> (scddr (cdr scdr)))
> def args: : (<object 796162> (scdr (cdr s)))
> def args: : (<object 796162> (scddr (cdr scdr)))
> def args: : (<object 796230> (scdr (cdr s)))
> def args: : (<object 796230> (scddr (cdr scdr)))
> def args: : (<object 796302> (scdr (cdr s)))
> def args: : (<object 796302> (scddr (cdr scdr)))
> def args: : (<object 796370> (scdr (cdr s)))
> def args: : (<object 796370> (scddr (cdr scdr)))
> def args: : (<object 796442> (scdr (cdr s)))
> def args: : (<object 796442> (scddr (cdr scdr)))
> def args: : (<object 796510> (scdr (cdr s)))
> def args: : (<object 796510> (scddr (cdr scdr)))
> def args: : (<object 796582> (scdr (cdr s)))
> def args: : (<object 796582> (scddr (cdr scdr)))
> def args: : (<object 796650> (scdr (cdr s)))
> def args: : (<object 796650> (scddr (cdr scdr)))
> def args: : (<object 796722> (scdr (cdr s)))
> def args: : (<object 796722> (scddr (cdr scdr)))
> def args: : (<object 796790> (scdr (cdr s)))
> def args: : (<object 796790> (scddr (cdr scdr)))
> def args: : (<object 796862> (scdr (cdr s)))
> def args: : (<object 796862> (scddr (cdr scdr)))
> def args: : (<object 796930> (scdr (cdr s)))
> def args: : (<object 796930> (scddr (cdr scdr)))
> def args: : (<object 797002> (scdr (cdr s)))
> def args: : (<object 797002> (scddr (cdr scdr)))
> def args: : (<object 797070> (scdr (cdr s)))
> def args: : (<object 797070> (scddr (cdr scdr)))
> def args: : (<object 797142> (scdr (cdr s)))
> def args: : (<object 797142> (scddr (cdr scdr)))
> def args: : (<object 797210> (scdr (cdr s)))
> def args: : (<object 797210> (scddr (cdr scdr)))
> def args: : (<object 797282> (scdr (cdr s)))
> def args: : (<object 797282> (scddr (cdr scdr)))
> 2346def args: : (<object 809086> (env (if (null? @) # (car @))))
>  def args: : (<object 809193> (env (if (null? @) # (car @))))
> def args: : (<object 809313> (scdr (cdr s)))
> def args: : (<object 809313> (scddr (cdr scdr)))
> def args: : (<object 809385> (scdr (cdr s)))
> def args: : (<object 809385> (scddr (cdr scdr)))
> def args: : (<object 809457> (scdr (cdr s)))
> def args: : (<object 809457> (scddr (cdr scdr)))
> def args: : (<object 809525> (scdr (cdr s)))
> def args: : (<object 809525> (scddr (cdr scdr)))
> def args: : (<object 809764> (scdr (cdr s)))
> def args: : (<object 809764> (scddr (cdr scdr)))
> def args: : (<object 809836> (scdr (cdr s)))
> def args: : (<object 809836> (scddr (cdr scdr)))
> def args: : (<object 809904> (scdr (cdr s)))
> def args: : (<object 809904> (scddr (cdr scdr)))
> def args: : (<object 809976> (scdr (cdr s)))
> def args: : (<object 809976> (scddr (cdr scdr)))
> def args: : (<object 810044> (scdr (cdr s)))
> def args: : (<object 810044> (scddr (cdr scdr)))
> def args: : (<object 810116> (scdr (cdr s)))
> def args: : (<object 810116> (scddr (cdr scdr)))
> def args: : (<object 810184> (scdr (cdr s)))
> def args: : (<object 810184> (scddr (cdr scdr)))
> def args: : (<object 810256> (scdr (cdr s)))
> def args: : (<object 810256> (scddr (cdr scdr)))
> def args: : (<object 810324> (scdr (cdr s)))
> def args: : (<object 810324> (scddr (cdr scdr)))
> def args: : (<object 810396> (scdr (cdr s)))
> def args: : (<object 810396> (scddr (cdr scdr)))
> def args: : (<object 810464> (scdr (cdr s)))
> def args: : (<object 810464> (scddr (cdr scdr)))
> def args: : (<object 810536> (scdr (cdr s)))
> def args: : (<object 810536> (scddr (cdr scdr)))
> def args: : (<object 810604> (scdr (cdr s)))
> def args: : (<object 810604> (scddr (cdr scdr)))
> def args: : (<object 810676> (scdr (cdr s)))
> def args: : (<object 810676> (scddr (cdr scdr)))
> def args: : (<object 810744> (scdr (cdr s)))
> def args: : (<object 810744> (scddr (cdr scdr)))
> def args: : (<object 810816> (scdr (cdr s)))
> def args: : (<object 810816> (scddr (cdr scdr)))
> def args: : (<object 810884> (scdr (cdr s)))
> def args: : (<object 810884> (scddr (cdr scdr)))
> def args: : (<object 810956> (scdr (cdr s)))
> def args: : (<object 810956> (scddr (cdr scdr)))
> def args: : (<object 811024> (scdr (cdr s)))
> def args: : (<object 811024> (scddr (cdr scdr)))
> def args: : (<object 811096> (scdr (cdr s)))
> def args: : (<object 811096> (scddr (cdr scdr)))
> def args: : (<object 811164> (scdr (cdr s)))
> def args: : (<object 811164> (scddr (cdr scdr)))
> def args: : (<object 811236> (scdr (cdr s)))
> def args: : (<object 811236> (scddr (cdr scdr)))
> def args: : (<object 811304> (scdr (cdr s)))
> def args: : (<object 811304> (scddr (cdr scdr)))
> def args: : (<object 811376> (scdr (cdr s)))
> def args: : (<object 811376> (scddr (cdr scdr)))
> def args: : (<object 811444> (scdr (cdr s)))
> def args: : (<object 811444> (scddr (cdr scdr)))
> def args: : (<object 811516> (scdr (cdr s)))
> def args: : (<object 811516> (scddr (cdr scdr)))
> def args: : (<object 811584> (scdr (cdr s)))
> def args: : (<object 811584> (scddr (cdr scdr)))
> def args: : (<object 811656> (scdr (cdr s)))
> def args: : (<object 811656> (scddr (cdr scdr)))
> def args: : (<object 811724> (scdr (cdr s)))
> def args: : (<object 811724> (scddr (cdr scdr)))
> def args: : (<object 811796> (scdr (cdr s)))
> def args: : (<object 811796> (scddr (cdr scdr)))
> def args: : (<object 811864> (scdr (cdr s)))
> def args: : (<object 811864> (scddr (cdr scdr)))
> def args: : (<object 811936> (scdr (cdr s)))
> def args: : (<object 811936> (scddr (cdr scdr)))
> def args: : (<object 812004> (scdr (cdr s)))
> def args: : (<object 812004> (scddr (cdr scdr)))
> def args: : (<object 812076> (scdr (cdr s)))
> def args: : (<object 812076> (scddr (cdr scdr)))
> def args: : (<object 812144> (scdr (cdr s)))
> def args: : (<object 812144> (scddr (cdr scdr)))
> def args: : (<object 812216> (scdr (cdr s)))
> def args: : (<object 812216> (scddr (cdr scdr)))
> def args: : (<object 812284> (scdr (cdr s)))
> def args: : (<object 812284> (scddr (cdr scdr)))
> def args: : (<object 812356> (scdr (cdr s)))
> def args: : (<object 812356> (scddr (cdr scdr)))
> def args: : (<object 812424> (scdr (cdr s)))
> def args: : (<object 812424> (scddr (cdr scdr)))
> def args: : (<object 812496> (scdr (cdr s)))
> def args: : (<object 812496> (scddr (cdr scdr)))
> def args: : (<object 812564> (scdr (cdr s)))
> def args: : (<object 812564> (scddr (cdr scdr)))
> def args: : (<object 812636> (scdr (cdr s)))
> def args: : (<object 812636> (scddr (cdr scdr)))
> def args: : (<object 812704> (scdr (cdr s)))
> def args: : (<object 812704> (scddr (cdr scdr)))
> def args: : (<object 812776> (scdr (cdr s)))
> def args: : (<object 812776> (scddr (cdr scdr)))
> def args: : (<object 812844> (scdr (cdr s)))
> def args: : (<object 812844> (scddr (cdr scdr)))
> def args: : (<object 812916> (scdr (cdr s)))
> def args: : (<object 812916> (scddr (cdr scdr)))
> def args: : (<object 812984> (scdr (cdr s)))
> def args: : (<object 812984> (scddr (cdr scdr)))
> def args: : (<object 813056> (scdr (cdr s)))
> def args: : (<object 813056> (scddr (cdr scdr)))
> def args: : (<object 813124> (scdr (cdr s)))
> def args: : (<object 813124> (scddr (cdr scdr)))
> def args: : (<object 813196> (scdr (cdr s)))
> def args: : (<object 813196> (scddr (cdr scdr)))
> def args: : (<object 813264> (scdr (cdr s)))
> def args: : (<object 813264> (scddr (cdr scdr)))
> def args: : (<object 813336> (scdr (cdr s)))
> def args: : (<object 813336> (scddr (cdr scdr)))
> def args: : (<object 813404> (scdr (cdr s)))
> def args: : (<object 813404> (scddr (cdr scdr)))
> def args: : (<object 813476> (scdr (cdr s)))
> def args: : (<object 813476> (scddr (cdr scdr)))
> def args: : (<object 813544> (scdr (cdr s)))
> def args: : (<object 813544> (scddr (cdr scdr)))
> def args: : (<object 813616> (scdr (cdr s)))
> def args: : (<object 813616> (scddr (cdr scdr)))
> def args: : (<object 813684> (scdr (cdr s)))
> def args: : (<object 813684> (scddr (cdr scdr)))
> def args: : (<object 813756> (scdr (cdr s)))
> def args: : (<object 813756> (scddr (cdr scdr)))
> def args: : (<object 813824> (scdr (cdr s)))
> def args: : (<object 813824> (scddr (cdr scdr)))
> def args: : (<object 813896> (scdr (cdr s)))
> def args: : (<object 813896> (scddr (cdr scdr)))
> def args: : (<object 813964> (scdr (cdr s)))
> def args: : (<object 813964> (scddr (cdr scdr)))
> def args: : (<object 814036> (scdr (cdr s)))
> def args: : (<object 814036> (scddr (cdr scdr)))
> def args: : (<object 814104> (scdr (cdr s)))
> def args: : (<object 814104> (scddr (cdr scdr)))
> def args: : (<object 814176> (scdr (cdr s)))
> def args: : (<object 814176> (scddr (cdr scdr)))
> def args: : (<object 814244> (scdr (cdr s)))
> def args: : (<object 814244> (scddr (cdr scdr)))
> def args: : (<object 814316> (scdr (cdr s)))
> def args: : (<object 814316> (scddr (cdr scdr)))
> def args: : (<object 814384> (scdr (cdr s)))
> def args: : (<object 814384> (scddr (cdr scdr)))
> def args: : (<object 814456> (scdr (cdr s)))
> def args: : (<object 814456> (scddr (cdr scdr)))
> def args: : (<object 814524> (scdr (cdr s)))
> def args: : (<object 814524> (scddr (cdr scdr)))
> def args: : (<object 814596> (scdr (cdr s)))
> def args: : (<object 814596> (scddr (cdr scdr)))
> def args: : (<object 814664> (scdr (cdr s)))
> def args: : (<object 814664> (scddr (cdr scdr)))
> def args: : (<object 814736> (scdr (cdr s)))
> def args: : (<object 814736> (scddr (cdr scdr)))
> def args: : (<object 814804> (scdr (cdr s)))
> def args: : (<object 814804> (scddr (cdr scdr)))
> def args: : (<object 814876> (scdr (cdr s)))
> def args: : (<object 814876> (scddr (cdr scdr)))
> def args: : (<object 814944> (scdr (cdr s)))
> def args: : (<object 814944> (scddr (cdr scdr)))
> def args: : (<object 815016> (scdr (cdr s)))
> def args: : (<object 815016> (scddr (cdr scdr)))
> def args: : (<object 815084> (scdr (cdr s)))
> def args: : (<object 815084> (scddr (cdr scdr)))
> def args: : (<object 815156> (scdr (cdr s)))
> def args: : (<object 815156> (scddr (cdr scdr)))
> def args: : (<object 815224> (scdr (cdr s)))
> def args: : (<object 815224> (scddr (cdr scdr)))
> def args: : (<object 815296> (scdr (cdr s)))
> def args: : (<object 815296> (scddr (cdr scdr)))
> def args: : (<object 815364> (scdr (cdr s)))
> def args: : (<object 815364> (scddr (cdr scdr)))
> def args: : (<object 815436> (scdr (cdr s)))
> def args: : (<object 815436> (scddr (cdr scdr)))
> def args: : (<object 815504> (scdr (cdr s)))
> def args: : (<object 815504> (scddr (cdr scdr)))
> def args: : (<object 815576> (scdr (cdr s)))
> def args: : (<object 815576> (scddr (cdr scdr)))
> def args: : (<object 815644> (scdr (cdr s)))
> def args: : (<object 815644> (scddr (cdr scdr)))
> def args: : (<object 815716> (scdr (cdr s)))
> def args: : (<object 815716> (scddr (cdr scdr)))
> def args: : (<object 815784> (scdr (cdr s)))
> def args: : (<object 815784> (scddr (cdr scdr)))
> def args: : (<object 815856> (scdr (cdr s)))
> def args: : (<object 815856> (scddr (cdr scdr)))
> def args: : (<object 815924> (scdr (cdr s)))
> def args: : (<object 815924> (scddr (cdr scdr)))
> def args: : (<object 815996> (scdr (cdr s)))
> def args: : (<object 815996> (scddr (cdr scdr)))
> def args: : (<object 816064> (scdr (cdr s)))
> def args: : (<object 816064> (scddr (cdr scdr)))
> def args: : (<object 816136> (scdr (cdr s)))
> def args: : (<object 816136> (scddr (cdr scdr)))
> def args: : (<object 816204> (scdr (cdr s)))
> def args: : (<object 816204> (scddr (cdr scdr)))
> def args: : (<object 816276> (scdr (cdr s)))
> def args: : (<object 816276> (scddr (cdr scdr)))
> def args: : (<object 816344> (scdr (cdr s)))
> def args: : (<object 816344> (scddr (cdr scdr)))
> def args: : (<object 816416> (scdr (cdr s)))
> def args: : (<object 816416> (scddr (cdr scdr)))
> def args: : (<object 816484> (scdr (cdr s)))
> def args: : (<object 816484> (scddr (cdr scdr)))
> def args: : (<object 816556> (scdr (cdr s)))
> def args: : (<object 816556> (scddr (cdr scdr)))
> def args: : (<object 816624> (scdr (cdr s)))
> def args: : (<object 816624> (scddr (cdr scdr)))
> def args: : (<object 816696> (scdr (cdr s)))
> def args: : (<object 816696> (scddr (cdr scdr)))
> def args: : (<object 816764> (scdr (cdr s)))
> def args: : (<object 816764> (scddr (cdr scdr)))
> def args: : (<object 816836> (scdr (cdr s)))
> def args: : (<object 816836> (scddr (cdr scdr)))
> def args: : (<object 816904> (scdr (cdr s)))
> def args: : (<object 816904> (scddr (cdr scdr)))
> def args: : (<object 816976> (scdr (cdr s)))
> def args: : (<object 816976> (scddr (cdr scdr)))
> def args: : (<object 817044> (scdr (cdr s)))
> def args: : (<object 817044> (scddr (cdr scdr)))
> def args: : (<object 817116> (scdr (cdr s)))
> def args: : (<object 817116> (scddr (cdr scdr)))
> def args: : (<object 817184> (scdr (cdr s)))
> def args: : (<object 817184> (scddr (cdr scdr)))
> def args: : (<object 817256> (scdr (cdr s)))
> def args: : (<object 817256> (scddr (cdr scdr)))
> def args: : (<object 817324> (scdr (cdr s)))
> def args: : (<object 817324> (scddr (cdr scdr)))
> def args: : (<object 817396> (scdr (cdr s)))
> def args: : (<object 817396> (scddr (cdr scdr)))
> def args: : (<object 817464> (scdr (cdr s)))
> def args: : (<object 817464> (scddr (cdr scdr)))
> def args: : (<object 817536> (scdr (cdr s)))
> def args: : (<object 817536> (scddr (cdr scdr)))
> def args: : (<object 817604> (scdr (cdr s)))
> def args: : (<object 817604> (scddr (cdr scdr)))
> def args: : (<object 817676> (scdr (cdr s)))
> def args: : (<object 817676> (scddr (cdr scdr)))
> def args: : (<object 817744> (scdr (cdr s)))
> def args: : (<object 817744> (scddr (cdr scdr)))
> def args: : (<object 817816> (scdr (cdr s)))
> def args: : (<object 817816> (scddr (cdr scdr)))
> def args: : (<object 817884> (scdr (cdr s)))
> def args: : (<object 817884> (scddr (cdr scdr)))
> def args: : (<object 817956> (scdr (cdr s)))
> def args: : (<object 817956> (scddr (cdr scdr)))
> def args: : (<object 818024> (scdr (cdr s)))
> def args: : (<object 818024> (scddr (cdr scdr)))
> def args: : (<object 818096> (scdr (cdr s)))
> def args: : (<object 818096> (scddr (cdr scdr)))
> def args: : (<object 818164> (scdr (cdr s)))
> def args: : (<object 818164> (scddr (cdr scdr)))
> def args: : (<object 818236> (scdr (cdr s)))
> def args: : (<object 818236> (scddr (cdr scdr)))
> def args: : (<object 818304> (scdr (cdr s)))
> def args: : (<object 818304> (scddr (cdr scdr)))
> def args: : (<object 818376> (scdr (cdr s)))
> def args: : (<object 818376> (scddr (cdr scdr)))
> def args: : (<object 818444> (scdr (cdr s)))
> def args: : (<object 818444> (scddr (cdr scdr)))
> def args: : (<object 818516> (scdr (cdr s)))
> def args: : (<object 818516> (scddr (cdr scdr)))
> def args: : (<object 818584> (scdr (cdr s)))
> def args: : (<object 818584> (scddr (cdr scdr)))
> def args: : (<object 818656> (scdr (cdr s)))
> def args: : (<object 818656> (scddr (cdr scdr)))
> def args: : (<object 818724> (scdr (cdr s)))
> def args: : (<object 818724> (scddr (cdr scdr)))
> def args: : (<object 818796> (scdr (cdr s)))
> def args: : (<object 818796> (scddr (cdr scdr)))
> def args: : (<object 818864> (scdr (cdr s)))
> def args: : (<object 818864> (scddr (cdr scdr)))
> def args: : (<object 818936> (scdr (cdr s)))
> def args: : (<object 818936> (scddr (cdr scdr)))
> def args: : (<object 819004> (scdr (cdr s)))
> def args: : (<object 819004> (scddr (cdr scdr)))
> def args: : (<object 819076> (scdr (cdr s)))
> def args: : (<object 819076> (scddr (cdr scdr)))
> 2415def args: : (<object 831051> (env (if (null? @) # (car @))))
>  def args: : (<object 831158> (env (if (null? @) # (car @))))
> def args: : (<object 831278> (scdr (cdr s)))
> def args: : (<object 831278> (scddr (cdr scdr)))
> def args: : (<object 831350> (scdr (cdr s)))
> def args: : (<object 831350> (scddr (cdr scdr)))
> def args: : (<object 831422> (scdr (cdr s)))
> def args: : (<object 831422> (scddr (cdr scdr)))
> def args: : (<object 831490> (scdr (cdr s)))
> def args: : (<object 831490> (scddr (cdr scdr)))
> def args: : (<object 831729> (scdr (cdr s)))
> def args: : (<object 831729> (scddr (cdr scdr)))
> def args: : (<object 831801> (scdr (cdr s)))
> def args: : (<object 831801> (scddr (cdr scdr)))
> def args: : (<object 831869> (scdr (cdr s)))
> def args: : (<object 831869> (scddr (cdr scdr)))
> def args: : (<object 831941> (scdr (cdr s)))
> def args: : (<object 831941> (scddr (cdr scdr)))
> def args: : (<object 832009> (scdr (cdr s)))
> def args: : (<object 832009> (scddr (cdr scdr)))
> def args: : (<object 832081> (scdr (cdr s)))
> def args: : (<object 832081> (scddr (cdr scdr)))
> def args: : (<object 832149> (scdr (cdr s)))
> def args: : (<object 832149> (scddr (cdr scdr)))
> def args: : (<object 832221> (scdr (cdr s)))
> def args: : (<object 832221> (scddr (cdr scdr)))
> def args: : (<object 832289> (scdr (cdr s)))
> def args: : (<object 832289> (scddr (cdr scdr)))
> def args: : (<object 832361> (scdr (cdr s)))
> def args: : (<object 832361> (scddr (cdr scdr)))
> def args: : (<object 832429> (scdr (cdr s)))
> def args: : (<object 832429> (scddr (cdr scdr)))
> def args: : (<object 832501> (scdr (cdr s)))
> def args: : (<object 832501> (scddr (cdr scdr)))
> def args: : (<object 832569> (scdr (cdr s)))
> def args: : (<object 832569> (scddr (cdr scdr)))
> def args: : (<object 832641> (scdr (cdr s)))
> def args: : (<object 832641> (scddr (cdr scdr)))
> def args: : (<object 832709> (scdr (cdr s)))
> def args: : (<object 832709> (scddr (cdr scdr)))
> def args: : (<object 832781> (scdr (cdr s)))
> def args: : (<object 832781> (scddr (cdr scdr)))
> def args: : (<object 832849> (scdr (cdr s)))
> def args: : (<object 832849> (scddr (cdr scdr)))
> def args: : (<object 832921> (scdr (cdr s)))
> def args: : (<object 832921> (scddr (cdr scdr)))
> def args: : (<object 832989> (scdr (cdr s)))
> def args: : (<object 832989> (scddr (cdr scdr)))
> def args: : (<object 833061> (scdr (cdr s)))
> def args: : (<object 833061> (scddr (cdr scdr)))
> def args: : (<object 833129> (scdr (cdr s)))
> def args: : (<object 833129> (scddr (cdr scdr)))
> def args: : (<object 833201> (scdr (cdr s)))
> def args: : (<object 833201> (scddr (cdr scdr)))
> def args: : (<object 833269> (scdr (cdr s)))
> def args: : (<object 833269> (scddr (cdr scdr)))
> def args: : (<object 833341> (scdr (cdr s)))
> def args: : (<object 833341> (scddr (cdr scdr)))
> def args: : (<object 833409> (scdr (cdr s)))
> def args: : (<object 833409> (scddr (cdr scdr)))
> def args: : (<object 833481> (scdr (cdr s)))
> def args: : (<object 833481> (scddr (cdr scdr)))
> def args: : (<object 833549> (scdr (cdr s)))
> def args: : (<object 833549> (scddr (cdr scdr)))
> def args: : (<object 833621> (scdr (cdr s)))
> def args: : (<object 833621> (scddr (cdr scdr)))
> def args: : (<object 833689> (scdr (cdr s)))
> def args: : (<object 833689> (scddr (cdr scdr)))
> def args: : (<object 833761> (scdr (cdr s)))
> def args: : (<object 833761> (scddr (cdr scdr)))
> def args: : (<object 833829> (scdr (cdr s)))
> def args: : (<object 833829> (scddr (cdr scdr)))
> def args: : (<object 833901> (scdr (cdr s)))
> def args: : (<object 833901> (scddr (cdr scdr)))
> def args: : (<object 833969> (scdr (cdr s)))
> def args: : (<object 833969> (scddr (cdr scdr)))
> def args: : (<object 834041> (scdr (cdr s)))
> def args: : (<object 834041> (scddr (cdr scdr)))
> def args: : (<object 834109> (scdr (cdr s)))
> def args: : (<object 834109> (scddr (cdr scdr)))
> def args: : (<object 834181> (scdr (cdr s)))
> def args: : (<object 834181> (scddr (cdr scdr)))
> def args: : (<object 834249> (scdr (cdr s)))
> def args: : (<object 834249> (scddr (cdr scdr)))
> def args: : (<object 834321> (scdr (cdr s)))
> def args: : (<object 834321> (scddr (cdr scdr)))
> def args: : (<object 834389> (scdr (cdr s)))
> def args: : (<object 834389> (scddr (cdr scdr)))
> def args: : (<object 834461> (scdr (cdr s)))
> def args: : (<object 834461> (scddr (cdr scdr)))
> def args: : (<object 834529> (scdr (cdr s)))
> def args: : (<object 834529> (scddr (cdr scdr)))
> def args: : (<object 834601> (scdr (cdr s)))
> def args: : (<object 834601> (scddr (cdr scdr)))
> def args: : (<object 834669> (scdr (cdr s)))
> def args: : (<object 834669> (scddr (cdr scdr)))
> def args: : (<object 834741> (scdr (cdr s)))
> def args: : (<object 834741> (scddr (cdr scdr)))
> def args: : (<object 834809> (scdr (cdr s)))
> def args: : (<object 834809> (scddr (cdr scdr)))
> def args: : (<object 834881> (scdr (cdr s)))
> def args: : (<object 834881> (scddr (cdr scdr)))
> def args: : (<object 834949> (scdr (cdr s)))
> def args: : (<object 834949> (scddr (cdr scdr)))
> def args: : (<object 835021> (scdr (cdr s)))
> def args: : (<object 835021> (scddr (cdr scdr)))
> def args: : (<object 835089> (scdr (cdr s)))
> def args: : (<object 835089> (scddr (cdr scdr)))
> def args: : (<object 835161> (scdr (cdr s)))
> def args: : (<object 835161> (scddr (cdr scdr)))
> def args: : (<object 835229> (scdr (cdr s)))
> def args: : (<object 835229> (scddr (cdr scdr)))
> def args: : (<object 835301> (scdr (cdr s)))
> def args: : (<object 835301> (scddr (cdr scdr)))
> def args: : (<object 835369> (scdr (cdr s)))
> def args: : (<object 835369> (scddr (cdr scdr)))
> def args: : (<object 835441> (scdr (cdr s)))
> def args: : (<object 835441> (scddr (cdr scdr)))
> def args: : (<object 835509> (scdr (cdr s)))
> def args: : (<object 835509> (scddr (cdr scdr)))
> def args: : (<object 835581> (scdr (cdr s)))
> def args: : (<object 835581> (scddr (cdr scdr)))
> def args: : (<object 835649> (scdr (cdr s)))
> def args: : (<object 835649> (scddr (cdr scdr)))
> def args: : (<object 835721> (scdr (cdr s)))
> def args: : (<object 835721> (scddr (cdr scdr)))
> def args: : (<object 835789> (scdr (cdr s)))
> def args: : (<object 835789> (scddr (cdr scdr)))
> def args: : (<object 835861> (scdr (cdr s)))
> def args: : (<object 835861> (scddr (cdr scdr)))
> def args: : (<object 835929> (scdr (cdr s)))
> def args: : (<object 835929> (scddr (cdr scdr)))
> def args: : (<object 836001> (scdr (cdr s)))
> def args: : (<object 836001> (scddr (cdr scdr)))
> def args: : (<object 836069> (scdr (cdr s)))
> def args: : (<object 836069> (scddr (cdr scdr)))
> def args: : (<object 836141> (scdr (cdr s)))
> def args: : (<object 836141> (scddr (cdr scdr)))
> def args: : (<object 836209> (scdr (cdr s)))
> def args: : (<object 836209> (scddr (cdr scdr)))
> def args: : (<object 836281> (scdr (cdr s)))
> def args: : (<object 836281> (scddr (cdr scdr)))
> def args: : (<object 836349> (scdr (cdr s)))
> def args: : (<object 836349> (scddr (cdr scdr)))
> def args: : (<object 836421> (scdr (cdr s)))
> def args: : (<object 836421> (scddr (cdr scdr)))
> def args: : (<object 836489> (scdr (cdr s)))
> def args: : (<object 836489> (scddr (cdr scdr)))
> def args: : (<object 836561> (scdr (cdr s)))
> def args: : (<object 836561> (scddr (cdr scdr)))
> def args: : (<object 836629> (scdr (cdr s)))
> def args: : (<object 836629> (scddr (cdr scdr)))
> def args: : (<object 836701> (scdr (cdr s)))
> def args: : (<object 836701> (scddr (cdr scdr)))
> def args: : (<object 836769> (scdr (cdr s)))
> def args: : (<object 836769> (scddr (cdr scdr)))
> def args: : (<object 836841> (scdr (cdr s)))
> def args: : (<object 836841> (scddr (cdr scdr)))
> def args: : (<object 836909> (scdr (cdr s)))
> def args: : (<object 836909> (scddr (cdr scdr)))
> def args: : (<object 836981> (scdr (cdr s)))
> def args: : (<object 836981> (scddr (cdr scdr)))
> def args: : (<object 837049> (scdr (cdr s)))
> def args: : (<object 837049> (scddr (cdr scdr)))
> def args: : (<object 837121> (scdr (cdr s)))
> def args: : (<object 837121> (scddr (cdr scdr)))
> def args: : (<object 837189> (scdr (cdr s)))
> def args: : (<object 837189> (scddr (cdr scdr)))
> def args: : (<object 837261> (scdr (cdr s)))
> def args: : (<object 837261> (scddr (cdr scdr)))
> def args: : (<object 837329> (scdr (cdr s)))
> def args: : (<object 837329> (scddr (cdr scdr)))
> def args: : (<object 837401> (scdr (cdr s)))
> def args: : (<object 837401> (scddr (cdr scdr)))
> def args: : (<object 837469> (scdr (cdr s)))
> def args: : (<object 837469> (scddr (cdr scdr)))
> def args: : (<object 837541> (scdr (cdr s)))
> def args: : (<object 837541> (scddr (cdr scdr)))
> def args: : (<object 837609> (scdr (cdr s)))
> def args: : (<object 837609> (scddr (cdr scdr)))
> def args: : (<object 837681> (scdr (cdr s)))
> def args: : (<object 837681> (scddr (cdr scdr)))
> def args: : (<object 837749> (scdr (cdr s)))
> def args: : (<object 837749> (scddr (cdr scdr)))
> def args: : (<object 837821> (scdr (cdr s)))
> def args: : (<object 837821> (scddr (cdr scdr)))
> def args: : (<object 837889> (scdr (cdr s)))
> def args: : (<object 837889> (scddr (cdr scdr)))
> def args: : (<object 837961> (scdr (cdr s)))
> def args: : (<object 837961> (scddr (cdr scdr)))
> def args: : (<object 838029> (scdr (cdr s)))
> def args: : (<object 838029> (scddr (cdr scdr)))
> def args: : (<object 838101> (scdr (cdr s)))
> def args: : (<object 838101> (scddr (cdr scdr)))
> def args: : (<object 838169> (scdr (cdr s)))
> def args: : (<object 838169> (scddr (cdr scdr)))
> def args: : (<object 838241> (scdr (cdr s)))
> def args: : (<object 838241> (scddr (cdr scdr)))
> def args: : (<object 838309> (scdr (cdr s)))
> def args: : (<object 838309> (scddr (cdr scdr)))
> def args: : (<object 838381> (scdr (cdr s)))
> def args: : (<object 838381> (scddr (cdr scdr)))
> def args: : (<object 838449> (scdr (cdr s)))
> def args: : (<object 838449> (scddr (cdr scdr)))
> def args: : (<object 838521> (scdr (cdr s)))
> def args: : (<object 838521> (scddr (cdr scdr)))
> def args: : (<object 838589> (scdr (cdr s)))
> def args: : (<object 838589> (scddr (cdr scdr)))
> def args: : (<object 838661> (scdr (cdr s)))
> def args: : (<object 838661> (scddr (cdr scdr)))
> def args: : (<object 838729> (scdr (cdr s)))
> def args: : (<object 838729> (scddr (cdr scdr)))
> def args: : (<object 838801> (scdr (cdr s)))
> def args: : (<object 838801> (scddr (cdr scdr)))
> def args: : (<object 838869> (scdr (cdr s)))
> def args: : (<object 838869> (scddr (cdr scdr)))
> def args: : (<object 838941> (scdr (cdr s)))
> def args: : (<object 838941> (scddr (cdr scdr)))
> def args: : (<object 839009> (scdr (cdr s)))
> def args: : (<object 839009> (scddr (cdr scdr)))
> def args: : (<object 839081> (scdr (cdr s)))
> def args: : (<object 839081> (scddr (cdr scdr)))
> def args: : (<object 839149> (scdr (cdr s)))
> def args: : (<object 839149> (scddr (cdr scdr)))
> def args: : (<object 839221> (scdr (cdr s)))
> def args: : (<object 839221> (scddr (cdr scdr)))
> def args: : (<object 839289> (scdr (cdr s)))
> def args: : (<object 839289> (scddr (cdr scdr)))
> def args: : (<object 839361> (scdr (cdr s)))
> def args: : (<object 839361> (scddr (cdr scdr)))
> def args: : (<object 839429> (scdr (cdr s)))
> def args: : (<object 839429> (scddr (cdr scdr)))
> def args: : (<object 839501> (scdr (cdr s)))
> def args: : (<object 839501> (scddr (cdr scdr)))
> def args: : (<object 839569> (scdr (cdr s)))
> def args: : (<object 839569> (scddr (cdr scdr)))
> def args: : (<object 839641> (scdr (cdr s)))
> def args: : (<object 839641> (scddr (cdr scdr)))
> def args: : (<object 839709> (scdr (cdr s)))
> def args: : (<object 839709> (scddr (cdr scdr)))
> def args: : (<object 839781> (scdr (cdr s)))
> def args: : (<object 839781> (scddr (cdr scdr)))
> def args: : (<object 839849> (scdr (cdr s)))
> def args: : (<object 839849> (scddr (cdr scdr)))
> def args: : (<object 839921> (scdr (cdr s)))
> def args: : (<object 839921> (scddr (cdr scdr)))
> def args: : (<object 839989> (scdr (cdr s)))
> def args: : (<object 839989> (scddr (cdr scdr)))
> def args: : (<object 840061> (scdr (cdr s)))
> def args: : (<object 840061> (scddr (cdr scdr)))
> def args: : (<object 840129> (scdr (cdr s)))
> def args: : (<object 840129> (scddr (cdr scdr)))
> def args: : (<object 840201> (scdr (cdr s)))
> def args: : (<object 840201> (scddr (cdr scdr)))
> def args: : (<object 840269> (scdr (cdr s)))
> def args: : (<object 840269> (scddr (cdr scdr)))
> def args: : (<object 840341> (scdr (cdr s)))
> def args: : (<object 840341> (scddr (cdr scdr)))
> def args: : (<object 840409> (scdr (cdr s)))
> def args: : (<object 840409> (scddr (cdr scdr)))
> def args: : (<object 840481> (scdr (cdr s)))
> def args: : (<object 840481> (scddr (cdr scdr)))
> def args: : (<object 840549> (scdr (cdr s)))
> def args: : (<object 840549> (scddr (cdr scdr)))
> def args: : (<object 840621> (scdr (cdr s)))
> def args: : (<object 840621> (scddr (cdr scdr)))
> def args: : (<object 840689> (scdr (cdr s)))
> def args: : (<object 840689> (scddr (cdr scdr)))
> def args: : (<object 840761> (scdr (cdr s)))
> def args: : (<object 840761> (scddr (cdr scdr)))
> def args: : (<object 840829> (scdr (cdr s)))
> def args: : (<object 840829> (scddr (cdr scdr)))
> def args: : (<object 840901> (scdr (cdr s)))
> def args: : (<object 840901> (scddr (cdr scdr)))
> def args: : (<object 840969> (scdr (cdr s)))
> def args: : (<object 840969> (scddr (cdr scdr)))
> def args: : (<object 841041> (scdr (cdr s)))
> def args: : (<object 841041> (scddr (cdr scdr)))
> def args: : (<object 841109> (scdr (cdr s)))
> def args: : (<object 841109> (scddr (cdr scdr)))
> def args: : (<object 841181> (scdr (cdr s)))
> def args: : (<object 841181> (scddr (cdr scdr)))
> 2485def args: : (<object 853327> (env (if (null? @) # (car @))))
>  def args: : (<object 853434> (env (if (null? @) # (car @))))
> def args: : (<object 853554> (scdr (cdr s)))
> def args: : (<object 853554> (scddr (cdr scdr)))
> def args: : (<object 853626> (scdr (cdr s)))
> def args: : (<object 853626> (scddr (cdr scdr)))
> def args: : (<object 853698> (scdr (cdr s)))
> def args: : (<object 853698> (scddr (cdr scdr)))
> def args: : (<object 853766> (scdr (cdr s)))
> def args: : (<object 853766> (scddr (cdr scdr)))
> def args: : (<object 854005> (scdr (cdr s)))
> def args: : (<object 854005> (scddr (cdr scdr)))
> def args: : (<object 854077> (scdr (cdr s)))
> def args: : (<object 854077> (scddr (cdr scdr)))
> def args: : (<object 854145> (scdr (cdr s)))
> def args: : (<object 854145> (scddr (cdr scdr)))
> def args: : (<object 854217> (scdr (cdr s)))
> def args: : (<object 854217> (scddr (cdr scdr)))
> def args: : (<object 854285> (scdr (cdr s)))
> def args: : (<object 854285> (scddr (cdr scdr)))
> def args: : (<object 854357> (scdr (cdr s)))
> def args: : (<object 854357> (scddr (cdr scdr)))
> def args: : (<object 854425> (scdr (cdr s)))
> def args: : (<object 854425> (scddr (cdr scdr)))
> def args: : (<object 854497> (scdr (cdr s)))
> def args: : (<object 854497> (scddr (cdr scdr)))
> def args: : (<object 854565> (scdr (cdr s)))
> def args: : (<object 854565> (scddr (cdr scdr)))
> def args: : (<object 854637> (scdr (cdr s)))
> def args: : (<object 854637> (scddr (cdr scdr)))
> def args: : (<object 854705> (scdr (cdr s)))
> def args: : (<object 854705> (scddr (cdr scdr)))
> def args: : (<object 854777> (scdr (cdr s)))
> def args: : (<object 854777> (scddr (cdr scdr)))
> def args: : (<object 854845> (scdr (cdr s)))
> def args: : (<object 854845> (scddr (cdr scdr)))
> def args: : (<object 854917> (scdr (cdr s)))
> def args: : (<object 854917> (scddr (cdr scdr)))
> def args: : (<object 854985> (scdr (cdr s)))
> def args: : (<object 854985> (scddr (cdr scdr)))
> def args: : (<object 855057> (scdr (cdr s)))
> def args: : (<object 855057> (scddr (cdr scdr)))
> def args: : (<object 855125> (scdr (cdr s)))
> def args: : (<object 855125> (scddr (cdr scdr)))
> def args: : (<object 855197> (scdr (cdr s)))
> def args: : (<object 855197> (scddr (cdr scdr)))
> def args: : (<object 855265> (scdr (cdr s)))
> def args: : (<object 855265> (scddr (cdr scdr)))
> def args: : (<object 855337> (scdr (cdr s)))
> def args: : (<object 855337> (scddr (cdr scdr)))
> def args: : (<object 855405> (scdr (cdr s)))
> def args: : (<object 855405> (scddr (cdr scdr)))
> def args: : (<object 855477> (scdr (cdr s)))
> def args: : (<object 855477> (scddr (cdr scdr)))
> def args: : (<object 855545> (scdr (cdr s)))
> def args: : (<object 855545> (scddr (cdr scdr)))
> def args: : (<object 855617> (scdr (cdr s)))
> def args: : (<object 855617> (scddr (cdr scdr)))
> def args: : (<object 855685> (scdr (cdr s)))
> def args: : (<object 855685> (scddr (cdr scdr)))
> def args: : (<object 855757> (scdr (cdr s)))
> def args: : (<object 855757> (scddr (cdr scdr)))
> def args: : (<object 855825> (scdr (cdr s)))
> def args: : (<object 855825> (scddr (cdr scdr)))
> def args: : (<object 855897> (scdr (cdr s)))
> def args: : (<object 855897> (scddr (cdr scdr)))
> def args: : (<object 855965> (scdr (cdr s)))
> def args: : (<object 855965> (scddr (cdr scdr)))
> def args: : (<object 856037> (scdr (cdr s)))
> def args: : (<object 856037> (scddr (cdr scdr)))
> def args: : (<object 856105> (scdr (cdr s)))
> def args: : (<object 856105> (scddr (cdr scdr)))
> def args: : (<object 856177> (scdr (cdr s)))
> def args: : (<object 856177> (scddr (cdr scdr)))
> def args: : (<object 856245> (scdr (cdr s)))
> def args: : (<object 856245> (scddr (cdr scdr)))
> def args: : (<object 856317> (scdr (cdr s)))
> def args: : (<object 856317> (scddr (cdr scdr)))
> def args: : (<object 856385> (scdr (cdr s)))
> def args: : (<object 856385> (scddr (cdr scdr)))
> def args: : (<object 856457> (scdr (cdr s)))
> def args: : (<object 856457> (scddr (cdr scdr)))
> def args: : (<object 856525> (scdr (cdr s)))
> def args: : (<object 856525> (scddr (cdr scdr)))
> def args: : (<object 856597> (scdr (cdr s)))
> def args: : (<object 856597> (scddr (cdr scdr)))
> def args: : (<object 856665> (scdr (cdr s)))
> def args: : (<object 856665> (scddr (cdr scdr)))
> def args: : (<object 856737> (scdr (cdr s)))
> def args: : (<object 856737> (scddr (cdr scdr)))
> def args: : (<object 856805> (scdr (cdr s)))
> def args: : (<object 856805> (scddr (cdr scdr)))
> def args: : (<object 856877> (scdr (cdr s)))
> def args: : (<object 856877> (scddr (cdr scdr)))
> def args: : (<object 856945> (scdr (cdr s)))
> def args: : (<object 856945> (scddr (cdr scdr)))
> def args: : (<object 857017> (scdr (cdr s)))
> def args: : (<object 857017> (scddr (cdr scdr)))
> def args: : (<object 857085> (scdr (cdr s)))
> def args: : (<object 857085> (scddr (cdr scdr)))
> def args: : (<object 857157> (scdr (cdr s)))
> def args: : (<object 857157> (scddr (cdr scdr)))
> def args: : (<object 857225> (scdr (cdr s)))
> def args: : (<object 857225> (scddr (cdr scdr)))
> def args: : (<object 857297> (scdr (cdr s)))
> def args: : (<object 857297> (scddr (cdr scdr)))
> def args: : (<object 857365> (scdr (cdr s)))
> def args: : (<object 857365> (scddr (cdr scdr)))
> def args: : (<object 857437> (scdr (cdr s)))
> def args: : (<object 857437> (scddr (cdr scdr)))
> def args: : (<object 857505> (scdr (cdr s)))
> def args: : (<object 857505> (scddr (cdr scdr)))
> def args: : (<object 857577> (scdr (cdr s)))
> def args: : (<object 857577> (scddr (cdr scdr)))
> def args: : (<object 857645> (scdr (cdr s)))
> def args: : (<object 857645> (scddr (cdr scdr)))
> def args: : (<object 857717> (scdr (cdr s)))
> def args: : (<object 857717> (scddr (cdr scdr)))
> def args: : (<object 857785> (scdr (cdr s)))
> def args: : (<object 857785> (scddr (cdr scdr)))
> def args: : (<object 857857> (scdr (cdr s)))
> def args: : (<object 857857> (scddr (cdr scdr)))
> def args: : (<object 857925> (scdr (cdr s)))
> def args: : (<object 857925> (scddr (cdr scdr)))
> def args: : (<object 857997> (scdr (cdr s)))
> def args: : (<object 857997> (scddr (cdr scdr)))
> def args: : (<object 858065> (scdr (cdr s)))
> def args: : (<object 858065> (scddr (cdr scdr)))
> def args: : (<object 858137> (scdr (cdr s)))
> def args: : (<object 858137> (scddr (cdr scdr)))
> def args: : (<object 858205> (scdr (cdr s)))
> def args: : (<object 858205> (scddr (cdr scdr)))
> def args: : (<object 858277> (scdr (cdr s)))
> def args: : (<object 858277> (scddr (cdr scdr)))
> def args: : (<object 858345> (scdr (cdr s)))
> def args: : (<object 858345> (scddr (cdr scdr)))
> def args: : (<object 858417> (scdr (cdr s)))
> def args: : (<object 858417> (scddr (cdr scdr)))
> def args: : (<object 858485> (scdr (cdr s)))
> def args: : (<object 858485> (scddr (cdr scdr)))
> def args: : (<object 858557> (scdr (cdr s)))
> def args: : (<object 858557> (scddr (cdr scdr)))
> def args: : (<object 858625> (scdr (cdr s)))
> def args: : (<object 858625> (scddr (cdr scdr)))
> def args: : (<object 858697> (scdr (cdr s)))
> def args: : (<object 858697> (scddr (cdr scdr)))
> def args: : (<object 858765> (scdr (cdr s)))
> def args: : (<object 858765> (scddr (cdr scdr)))
> def args: : (<object 858837> (scdr (cdr s)))
> def args: : (<object 858837> (scddr (cdr scdr)))
> def args: : (<object 858905> (scdr (cdr s)))
> def args: : (<object 858905> (scddr (cdr scdr)))
> def args: : (<object 858977> (scdr (cdr s)))
> def args: : (<object 858977> (scddr (cdr scdr)))
> def args: : (<object 859045> (scdr (cdr s)))
> def args: : (<object 859045> (scddr (cdr scdr)))
> def args: : (<object 859117> (scdr (cdr s)))
> def args: : (<object 859117> (scddr (cdr scdr)))
> def args: : (<object 859185> (scdr (cdr s)))
> def args: : (<object 859185> (scddr (cdr scdr)))
> def args: : (<object 859257> (scdr (cdr s)))
> def args: : (<object 859257> (scddr (cdr scdr)))
> def args: : (<object 859325> (scdr (cdr s)))
> def args: : (<object 859325> (scddr (cdr scdr)))
> def args: : (<object 859397> (scdr (cdr s)))
> def args: : (<object 859397> (scddr (cdr scdr)))
> def args: : (<object 859465> (scdr (cdr s)))
> def args: : (<object 859465> (scddr (cdr scdr)))
> def args: : (<object 859537> (scdr (cdr s)))
> def args: : (<object 859537> (scddr (cdr scdr)))
> def args: : (<object 859605> (scdr (cdr s)))
> def args: : (<object 859605> (scddr (cdr scdr)))
> def args: : (<object 859677> (scdr (cdr s)))
> def args: : (<object 859677> (scddr (cdr scdr)))
> def args: : (<object 859745> (scdr (cdr s)))
> def args: : (<object 859745> (scddr (cdr scdr)))
> def args: : (<object 859817> (scdr (cdr s)))
> def args: : (<object 859817> (scddr (cdr scdr)))
> def args: : (<object 859885> (scdr (cdr s)))
> def args: : (<object 859885> (scddr (cdr scdr)))
> def args: : (<object 859957> (scdr (cdr s)))
> def args: : (<object 859957> (scddr (cdr scdr)))
> def args: : (<object 860025> (scdr (cdr s)))
> def args: : (<object 860025> (scddr (cdr scdr)))
> def args: : (<object 860097> (scdr (cdr s)))
> def args: : (<object 860097> (scddr (cdr scdr)))
> def args: : (<object 860165> (scdr (cdr s)))
> def args: : (<object 860165> (scddr (cdr scdr)))
> def args: : (<object 860237> (scdr (cdr s)))
> def args: : (<object 860237> (scddr (cdr scdr)))
> def args: : (<object 860305> (scdr (cdr s)))
> def args: : (<object 860305> (scddr (cdr scdr)))
> def args: : (<object 860377> (scdr (cdr s)))
> def args: : (<object 860377> (scddr (cdr scdr)))
> def args: : (<object 860445> (scdr (cdr s)))
> def args: : (<object 860445> (scddr (cdr scdr)))
> def args: : (<object 860517> (scdr (cdr s)))
> def args: : (<object 860517> (scddr (cdr scdr)))
> def args: : (<object 860585> (scdr (cdr s)))
> def args: : (<object 860585> (scddr (cdr scdr)))
> def args: : (<object 860657> (scdr (cdr s)))
> def args: : (<object 860657> (scddr (cdr scdr)))
> def args: : (<object 860725> (scdr (cdr s)))
> def args: : (<object 860725> (scddr (cdr scdr)))
> def args: : (<object 860797> (scdr (cdr s)))
> def args: : (<object 860797> (scddr (cdr scdr)))
> def args: : (<object 860865> (scdr (cdr s)))
> def args: : (<object 860865> (scddr (cdr scdr)))
> def args: : (<object 860937> (scdr (cdr s)))
> def args: : (<object 860937> (scddr (cdr scdr)))
> def args: : (<object 861005> (scdr (cdr s)))
> def args: : (<object 861005> (scddr (cdr scdr)))
> def args: : (<object 861077> (scdr (cdr s)))
> def args: : (<object 861077> (scddr (cdr scdr)))
> def args: : (<object 861145> (scdr (cdr s)))
> def args: : (<object 861145> (scddr (cdr scdr)))
> def args: : (<object 861217> (scdr (cdr s)))
> def args: : (<object 861217> (scddr (cdr scdr)))
> def args: : (<object 861285> (scdr (cdr s)))
> def args: : (<object 861285> (scddr (cdr scdr)))
> def args: : (<object 861357> (scdr (cdr s)))
> def args: : (<object 861357> (scddr (cdr scdr)))
> def args: : (<object 861425> (scdr (cdr s)))
> def args: : (<object 861425> (scddr (cdr scdr)))
> def args: : (<object 861497> (scdr (cdr s)))
> def args: : (<object 861497> (scddr (cdr scdr)))
> def args: : (<object 861565> (scdr (cdr s)))
> def args: : (<object 861565> (scddr (cdr scdr)))
> def args: : (<object 861637> (scdr (cdr s)))
> def args: : (<object 861637> (scddr (cdr scdr)))
> def args: : (<object 861705> (scdr (cdr s)))
> def args: : (<object 861705> (scddr (cdr scdr)))
> def args: : (<object 861777> (scdr (cdr s)))
> def args: : (<object 861777> (scddr (cdr scdr)))
> def args: : (<object 861845> (scdr (cdr s)))
> def args: : (<object 861845> (scddr (cdr scdr)))
> def args: : (<object 861917> (scdr (cdr s)))
> def args: : (<object 861917> (scddr (cdr scdr)))
> def args: : (<object 861985> (scdr (cdr s)))
> def args: : (<object 861985> (scddr (cdr scdr)))
> def args: : (<object 862057> (scdr (cdr s)))
> def args: : (<object 862057> (scddr (cdr scdr)))
> def args: : (<object 862125> (scdr (cdr s)))
> def args: : (<object 862125> (scddr (cdr scdr)))
> def args: : (<object 862197> (scdr (cdr s)))
> def args: : (<object 862197> (scddr (cdr scdr)))
> def args: : (<object 862265> (scdr (cdr s)))
> def args: : (<object 862265> (scddr (cdr scdr)))
> def args: : (<object 862337> (scdr (cdr s)))
> def args: : (<object 862337> (scddr (cdr scdr)))
> def args: : (<object 862405> (scdr (cdr s)))
> def args: : (<object 862405> (scddr (cdr scdr)))
> def args: : (<object 862477> (scdr (cdr s)))
> def args: : (<object 862477> (scddr (cdr scdr)))
> def args: : (<object 862545> (scdr (cdr s)))
> def args: : (<object 862545> (scddr (cdr scdr)))
> def args: : (<object 862617> (scdr (cdr s)))
> def args: : (<object 862617> (scddr (cdr scdr)))
> def args: : (<object 862685> (scdr (cdr s)))
> def args: : (<object 862685> (scddr (cdr scdr)))
> def args: : (<object 862757> (scdr (cdr s)))
> def args: : (<object 862757> (scddr (cdr scdr)))
> def args: : (<object 862825> (scdr (cdr s)))
> def args: : (<object 862825> (scddr (cdr scdr)))
> def args: : (<object 862897> (scdr (cdr s)))
> def args: : (<object 862897> (scddr (cdr scdr)))
> def args: : (<object 862965> (scdr (cdr s)))
> def args: : (<object 862965> (scddr (cdr scdr)))
> def args: : (<object 863037> (scdr (cdr s)))
> def args: : (<object 863037> (scddr (cdr scdr)))
> def args: : (<object 863105> (scdr (cdr s)))
> def args: : (<object 863105> (scddr (cdr scdr)))
> def args: : (<object 863177> (scdr (cdr s)))
> def args: : (<object 863177> (scddr (cdr scdr)))
> def args: : (<object 863245> (scdr (cdr s)))
> def args: : (<object 863245> (scddr (cdr scdr)))
> def args: : (<object 863317> (scdr (cdr s)))
> def args: : (<object 863317> (scddr (cdr scdr)))
> def args: : (<object 863385> (scdr (cdr s)))
> def args: : (<object 863385> (scddr (cdr scdr)))
> def args: : (<object 863457> (scdr (cdr s)))
> def args: : (<object 863457> (scddr (cdr scdr)))
> def args: : (<object 863525> (scdr (cdr s)))
> def args: : (<object 863525> (scddr (cdr scdr)))
> def args: : (<object 863597> (scdr (cdr s)))
> def args: : (<object 863597> (scddr (cdr scdr)))
> 2556def args: : (<object 875914> (env (if (null? @) # (car @))))
>  def args: : (<object 876021> (env (if (null? @) # (car @))))
> def args: : (<object 876141> (scdr (cdr s)))
> def args: : (<object 876141> (scddr (cdr scdr)))
> def args: : (<object 876213> (scdr (cdr s)))
> def args: : (<object 876213> (scddr (cdr scdr)))
> def args: : (<object 876285> (scdr (cdr s)))
> def args: : (<object 876285> (scddr (cdr scdr)))
> def args: : (<object 876353> (scdr (cdr s)))
> def args: : (<object 876353> (scddr (cdr scdr)))
> def args: : (<object 876592> (scdr (cdr s)))
> def args: : (<object 876592> (scddr (cdr scdr)))
> def args: : (<object 876664> (scdr (cdr s)))
> def args: : (<object 876664> (scddr (cdr scdr)))
> def args: : (<object 876732> (scdr (cdr s)))
> def args: : (<object 876732> (scddr (cdr scdr)))
> def args: : (<object 876804> (scdr (cdr s)))
> def args: : (<object 876804> (scddr (cdr scdr)))
> def args: : (<object 876872> (scdr (cdr s)))
> def args: : (<object 876872> (scddr (cdr scdr)))
> def args: : (<object 876944> (scdr (cdr s)))
> def args: : (<object 876944> (scddr (cdr scdr)))
> def args: : (<object 877012> (scdr (cdr s)))
> def args: : (<object 877012> (scddr (cdr scdr)))
> def args: : (<object 877084> (scdr (cdr s)))
> def args: : (<object 877084> (scddr (cdr scdr)))
> def args: : (<object 877152> (scdr (cdr s)))
> def args: : (<object 877152> (scddr (cdr scdr)))
> def args: : (<object 877224> (scdr (cdr s)))
> def args: : (<object 877224> (scddr (cdr scdr)))
> def args: : (<object 877292> (scdr (cdr s)))
> def args: : (<object 877292> (scddr (cdr scdr)))
> def args: : (<object 877364> (scdr (cdr s)))
> def args: : (<object 877364> (scddr (cdr scdr)))
> def args: : (<object 877432> (scdr (cdr s)))
> def args: : (<object 877432> (scddr (cdr scdr)))
> def args: : (<object 877504> (scdr (cdr s)))
> def args: : (<object 877504> (scddr (cdr scdr)))
> def args: : (<object 877572> (scdr (cdr s)))
> def args: : (<object 877572> (scddr (cdr scdr)))
> def args: : (<object 877644> (scdr (cdr s)))
> def args: : (<object 877644> (scddr (cdr scdr)))
> def args: : (<object 877712> (scdr (cdr s)))
> def args: : (<object 877712> (scddr (cdr scdr)))
> def args: : (<object 877784> (scdr (cdr s)))
> def args: : (<object 877784> (scddr (cdr scdr)))
> def args: : (<object 877852> (scdr (cdr s)))
> def args: : (<object 877852> (scddr (cdr scdr)))
> def args: : (<object 877924> (scdr (cdr s)))
> def args: : (<object 877924> (scddr (cdr scdr)))
> def args: : (<object 877992> (scdr (cdr s)))
> def args: : (<object 877992> (scddr (cdr scdr)))
> def args: : (<object 878064> (scdr (cdr s)))
> def args: : (<object 878064> (scddr (cdr scdr)))
> def args: : (<object 878132> (scdr (cdr s)))
> def args: : (<object 878132> (scddr (cdr scdr)))
> def args: : (<object 878204> (scdr (cdr s)))
> def args: : (<object 878204> (scddr (cdr scdr)))
> def args: : (<object 878272> (scdr (cdr s)))
> def args: : (<object 878272> (scddr (cdr scdr)))
> def args: : (<object 878344> (scdr (cdr s)))
> def args: : (<object 878344> (scddr (cdr scdr)))
> def args: : (<object 878412> (scdr (cdr s)))
> def args: : (<object 878412> (scddr (cdr scdr)))
> def args: : (<object 878484> (scdr (cdr s)))
> def args: : (<object 878484> (scddr (cdr scdr)))
> def args: : (<object 878552> (scdr (cdr s)))
> def args: : (<object 878552> (scddr (cdr scdr)))
> def args: : (<object 878624> (scdr (cdr s)))
> def args: : (<object 878624> (scddr (cdr scdr)))
> def args: : (<object 878692> (scdr (cdr s)))
> def args: : (<object 878692> (scddr (cdr scdr)))
> def args: : (<object 878764> (scdr (cdr s)))
> def args: : (<object 878764> (scddr (cdr scdr)))
> def args: : (<object 878832> (scdr (cdr s)))
> def args: : (<object 878832> (scddr (cdr scdr)))
> def args: : (<object 878904> (scdr (cdr s)))
> def args: : (<object 878904> (scddr (cdr scdr)))
> def args: : (<object 878972> (scdr (cdr s)))
> def args: : (<object 878972> (scddr (cdr scdr)))
> def args: : (<object 879044> (scdr (cdr s)))
> def args: : (<object 879044> (scddr (cdr scdr)))
> def args: : (<object 879112> (scdr (cdr s)))
> def args: : (<object 879112> (scddr (cdr scdr)))
> def args: : (<object 879184> (scdr (cdr s)))
> def args: : (<object 879184> (scddr (cdr scdr)))
> def args: : (<object 879252> (scdr (cdr s)))
> def args: : (<object 879252> (scddr (cdr scdr)))
> def args: : (<object 879324> (scdr (cdr s)))
> def args: : (<object 879324> (scddr (cdr scdr)))
> def args: : (<object 879392> (scdr (cdr s)))
> def args: : (<object 879392> (scddr (cdr scdr)))
> def args: : (<object 879464> (scdr (cdr s)))
> def args: : (<object 879464> (scddr (cdr scdr)))
> def args: : (<object 879532> (scdr (cdr s)))
> def args: : (<object 879532> (scddr (cdr scdr)))
> def args: : (<object 879604> (scdr (cdr s)))
> def args: : (<object 879604> (scddr (cdr scdr)))
> def args: : (<object 879672> (scdr (cdr s)))
> def args: : (<object 879672> (scddr (cdr scdr)))
> def args: : (<object 879744> (scdr (cdr s)))
> def args: : (<object 879744> (scddr (cdr scdr)))
> def args: : (<object 879812> (scdr (cdr s)))
> def args: : (<object 879812> (scddr (cdr scdr)))
> def args: : (<object 879884> (scdr (cdr s)))
> def args: : (<object 879884> (scddr (cdr scdr)))
> def args: : (<object 879952> (scdr (cdr s)))
> def args: : (<object 879952> (scddr (cdr scdr)))
> def args: : (<object 880024> (scdr (cdr s)))
> def args: : (<object 880024> (scddr (cdr scdr)))
> def args: : (<object 880092> (scdr (cdr s)))
> def args: : (<object 880092> (scddr (cdr scdr)))
> def args: : (<object 880164> (scdr (cdr s)))
> def args: : (<object 880164> (scddr (cdr scdr)))
> def args: : (<object 880232> (scdr (cdr s)))
> def args: : (<object 880232> (scddr (cdr scdr)))
> def args: : (<object 880304> (scdr (cdr s)))
> def args: : (<object 880304> (scddr (cdr scdr)))
> def args: : (<object 880372> (scdr (cdr s)))
> def args: : (<object 880372> (scddr (cdr scdr)))
> def args: : (<object 880444> (scdr (cdr s)))
> def args: : (<object 880444> (scddr (cdr scdr)))
> def args: : (<object 880512> (scdr (cdr s)))
> def args: : (<object 880512> (scddr (cdr scdr)))
> def args: : (<object 880584> (scdr (cdr s)))
> def args: : (<object 880584> (scddr (cdr scdr)))
> def args: : (<object 880652> (scdr (cdr s)))
> def args: : (<object 880652> (scddr (cdr scdr)))
> def args: : (<object 880724> (scdr (cdr s)))
> def args: : (<object 880724> (scddr (cdr scdr)))
> def args: : (<object 880792> (scdr (cdr s)))
> def args: : (<object 880792> (scddr (cdr scdr)))
> def args: : (<object 880864> (scdr (cdr s)))
> def args: : (<object 880864> (scddr (cdr scdr)))
> def args: : (<object 880932> (scdr (cdr s)))
> def args: : (<object 880932> (scddr (cdr scdr)))
> def args: : (<object 881004> (scdr (cdr s)))
> def args: : (<object 881004> (scddr (cdr scdr)))
> def args: : (<object 881072> (scdr (cdr s)))
> def args: : (<object 881072> (scddr (cdr scdr)))
> def args: : (<object 881144> (scdr (cdr s)))
> def args: : (<object 881144> (scddr (cdr scdr)))
> def args: : (<object 881212> (scdr (cdr s)))
> def args: : (<object 881212> (scddr (cdr scdr)))
> def args: : (<object 881284> (scdr (cdr s)))
> def args: : (<object 881284> (scddr (cdr scdr)))
> def args: : (<object 881352> (scdr (cdr s)))
> def args: : (<object 881352> (scddr (cdr scdr)))
> def args: : (<object 881424> (scdr (cdr s)))
> def args: : (<object 881424> (scddr (cdr scdr)))
> def args: : (<object 881492> (scdr (cdr s)))
> def args: : (<object 881492> (scddr (cdr scdr)))
> def args: : (<object 881564> (scdr (cdr s)))
> def args: : (<object 881564> (scddr (cdr scdr)))
> def args: : (<object 881632> (scdr (cdr s)))
> def args: : (<object 881632> (scddr (cdr scdr)))
> def args: : (<object 881704> (scdr (cdr s)))
> def args: : (<object 881704> (scddr (cdr scdr)))
> def args: : (<object 881772> (scdr (cdr s)))
> def args: : (<object 881772> (scddr (cdr scdr)))
> def args: : (<object 881844> (scdr (cdr s)))
> def args: : (<object 881844> (scddr (cdr scdr)))
> def args: : (<object 881912> (scdr (cdr s)))
> def args: : (<object 881912> (scddr (cdr scdr)))
> def args: : (<object 881984> (scdr (cdr s)))
> def args: : (<object 881984> (scddr (cdr scdr)))
> def args: : (<object 882052> (scdr (cdr s)))
> def args: : (<object 882052> (scddr (cdr scdr)))
> def args: : (<object 882124> (scdr (cdr s)))
> def args: : (<object 882124> (scddr (cdr scdr)))
> def args: : (<object 882192> (scdr (cdr s)))
> def args: : (<object 882192> (scddr (cdr scdr)))
> def args: : (<object 882264> (scdr (cdr s)))
> def args: : (<object 882264> (scddr (cdr scdr)))
> def args: : (<object 882332> (scdr (cdr s)))
> def args: : (<object 882332> (scddr (cdr scdr)))
> def args: : (<object 882404> (scdr (cdr s)))
> def args: : (<object 882404> (scddr (cdr scdr)))
> def args: : (<object 882472> (scdr (cdr s)))
> def args: : (<object 882472> (scddr (cdr scdr)))
> def args: : (<object 882544> (scdr (cdr s)))
> def args: : (<object 882544> (scddr (cdr scdr)))
> def args: : (<object 882612> (scdr (cdr s)))
> def args: : (<object 882612> (scddr (cdr scdr)))
> def args: : (<object 882684> (scdr (cdr s)))
> def args: : (<object 882684> (scddr (cdr scdr)))
> def args: : (<object 882752> (scdr (cdr s)))
> def args: : (<object 882752> (scddr (cdr scdr)))
> def args: : (<object 882824> (scdr (cdr s)))
> def args: : (<object 882824> (scddr (cdr scdr)))
> def args: : (<object 882892> (scdr (cdr s)))
> def args: : (<object 882892> (scddr (cdr scdr)))
> def args: : (<object 882964> (scdr (cdr s)))
> def args: : (<object 882964> (scddr (cdr scdr)))
> def args: : (<object 883032> (scdr (cdr s)))
> def args: : (<object 883032> (scddr (cdr scdr)))
> def args: : (<object 883104> (scdr (cdr s)))
> def args: : (<object 883104> (scddr (cdr scdr)))
> def args: : (<object 883172> (scdr (cdr s)))
> def args: : (<object 883172> (scddr (cdr scdr)))
> def args: : (<object 883244> (scdr (cdr s)))
> def args: : (<object 883244> (scddr (cdr scdr)))
> def args: : (<object 883312> (scdr (cdr s)))
> def args: : (<object 883312> (scddr (cdr scdr)))
> def args: : (<object 883384> (scdr (cdr s)))
> def args: : (<object 883384> (scddr (cdr scdr)))
> def args: : (<object 883452> (scdr (cdr s)))
> def args: : (<object 883452> (scddr (cdr scdr)))
> def args: : (<object 883524> (scdr (cdr s)))
> def args: : (<object 883524> (scddr (cdr scdr)))
> def args: : (<object 883592> (scdr (cdr s)))
> def args: : (<object 883592> (scddr (cdr scdr)))
> def args: : (<object 883664> (scdr (cdr s)))
> def args: : (<object 883664> (scddr (cdr scdr)))
> def args: : (<object 883732> (scdr (cdr s)))
> def args: : (<object 883732> (scddr (cdr scdr)))
> def args: : (<object 883804> (scdr (cdr s)))
> def args: : (<object 883804> (scddr (cdr scdr)))
> def args: : (<object 883872> (scdr (cdr s)))
> def args: : (<object 883872> (scddr (cdr scdr)))
> def args: : (<object 883944> (scdr (cdr s)))
> def args: : (<object 883944> (scddr (cdr scdr)))
> def args: : (<object 884012> (scdr (cdr s)))
> def args: : (<object 884012> (scddr (cdr scdr)))
> def args: : (<object 884084> (scdr (cdr s)))
> def args: : (<object 884084> (scddr (cdr scdr)))
> def args: : (<object 884152> (scdr (cdr s)))
> def args: : (<object 884152> (scddr (cdr scdr)))
> def args: : (<object 884224> (scdr (cdr s)))
> def args: : (<object 884224> (scddr (cdr scdr)))
> def args: : (<object 884292> (scdr (cdr s)))
> def args: : (<object 884292> (scddr (cdr scdr)))
> def args: : (<object 884364> (scdr (cdr s)))
> def args: : (<object 884364> (scddr (cdr scdr)))
> def args: : (<object 884432> (scdr (cdr s)))
> def args: : (<object 884432> (scddr (cdr scdr)))
> def args: : (<object 884504> (scdr (cdr s)))
> def args: : (<object 884504> (scddr (cdr scdr)))
> def args: : (<object 884572> (scdr (cdr s)))
> def args: : (<object 884572> (scddr (cdr scdr)))
> def args: : (<object 884644> (scdr (cdr s)))
> def args: : (<object 884644> (scddr (cdr scdr)))
> def args: : (<object 884712> (scdr (cdr s)))
> def args: : (<object 884712> (scddr (cdr scdr)))
> def args: : (<object 884784> (scdr (cdr s)))
> def args: : (<object 884784> (scddr (cdr scdr)))
> def args: : (<object 884852> (scdr (cdr s)))
> def args: : (<object 884852> (scddr (cdr scdr)))
> def args: : (<object 884924> (scdr (cdr s)))
> def args: : (<object 884924> (scddr (cdr scdr)))
> def args: : (<object 884992> (scdr (cdr s)))
> def args: : (<object 884992> (scddr (cdr scdr)))
> def args: : (<object 885064> (scdr (cdr s)))
> def args: : (<object 885064> (scddr (cdr scdr)))
> def args: : (<object 885132> (scdr (cdr s)))
> def args: : (<object 885132> (scddr (cdr scdr)))
> def args: : (<object 885204> (scdr (cdr s)))
> def args: : (<object 885204> (scddr (cdr scdr)))
> def args: : (<object 885272> (scdr (cdr s)))
> def args: : (<object 885272> (scddr (cdr scdr)))
> def args: : (<object 885344> (scdr (cdr s)))
> def args: : (<object 885344> (scddr (cdr scdr)))
> def args: : (<object 885412> (scdr (cdr s)))
> def args: : (<object 885412> (scddr (cdr scdr)))
> def args: : (<object 885484> (scdr (cdr s)))
> def args: : (<object 885484> (scddr (cdr scdr)))
> def args: : (<object 885552> (scdr (cdr s)))
> def args: : (<object 885552> (scddr (cdr scdr)))
> def args: : (<object 885624> (scdr (cdr s)))
> def args: : (<object 885624> (scddr (cdr scdr)))
> def args: : (<object 885692> (scdr (cdr s)))
> def args: : (<object 885692> (scddr (cdr scdr)))
> def args: : (<object 885764> (scdr (cdr s)))
> def args: : (<object 885764> (scddr (cdr scdr)))
> def args: : (<object 885832> (scdr (cdr s)))
> def args: : (<object 885832> (scddr (cdr scdr)))
> def args: : (<object 885904> (scdr (cdr s)))
> def args: : (<object 885904> (scddr (cdr scdr)))
> def args: : (<object 885972> (scdr (cdr s)))
> def args: : (<object 885972> (scddr (cdr scdr)))
> def args: : (<object 886044> (scdr (cdr s)))
> def args: : (<object 886044> (scddr (cdr scdr)))
> def args: : (<object 886112> (scdr (cdr s)))
> def args: : (<object 886112> (scddr (cdr scdr)))
> def args: : (<object 886184> (scdr (cdr s)))
> def args: : (<object 886184> (scddr (cdr scdr)))
> def args: : (<object 886252> (scdr (cdr s)))
> def args: : (<object 886252> (scddr (cdr scdr)))
> def args: : (<object 886324> (scdr (cdr s)))
> def args: : (<object 886324> (scddr (cdr scdr)))
> 2628def args: : (<object 898812> (env (if (null? @) # (car @))))
>  def args: : (<object 898919> (env (if (null? @) # (car @))))
> def args: : (<object 899039> (scdr (cdr s)))
> def args: : (<object 899039> (scddr (cdr scdr)))
> def args: : (<object 899111> (scdr (cdr s)))
> def args: : (<object 899111> (scddr (cdr scdr)))
> def args: : (<object 899183> (scdr (cdr s)))
> def args: : (<object 899183> (scddr (cdr scdr)))
> def args: : (<object 899251> (scdr (cdr s)))
> def args: : (<object 899251> (scddr (cdr scdr)))
> def args: : (<object 899490> (scdr (cdr s)))
> def args: : (<object 899490> (scddr (cdr scdr)))
> def args: : (<object 899562> (scdr (cdr s)))
> def args: : (<object 899562> (scddr (cdr scdr)))
> def args: : (<object 899630> (scdr (cdr s)))
> def args: : (<object 899630> (scddr (cdr scdr)))
> def args: : (<object 899702> (scdr (cdr s)))
> def args: : (<object 899702> (scddr (cdr scdr)))
> def args: : (<object 899770> (scdr (cdr s)))
> def args: : (<object 899770> (scddr (cdr scdr)))
> def args: : (<object 899842> (scdr (cdr s)))
> def args: : (<object 899842> (scddr (cdr scdr)))
> def args: : (<object 899910> (scdr (cdr s)))
> def args: : (<object 899910> (scddr (cdr scdr)))
> def args: : (<object 899982> (scdr (cdr s)))
> def args: : (<object 899982> (scddr (cdr scdr)))
> def args: : (<object 900050> (scdr (cdr s)))
> def args: : (<object 900050> (scddr (cdr scdr)))
> def args: : (<object 900122> (scdr (cdr s)))
> def args: : (<object 900122> (scddr (cdr scdr)))
> def args: : (<object 900190> (scdr (cdr s)))
> def args: : (<object 900190> (scddr (cdr scdr)))
> def args: : (<object 900262> (scdr (cdr s)))
> def args: : (<object 900262> (scddr (cdr scdr)))
> def args: : (<object 900330> (scdr (cdr s)))
> def args: : (<object 900330> (scddr (cdr scdr)))
> def args: : (<object 900402> (scdr (cdr s)))
> def args: : (<object 900402> (scddr (cdr scdr)))
> def args: : (<object 900470> (scdr (cdr s)))
> def args: : (<object 900470> (scddr (cdr scdr)))
> def args: : (<object 900542> (scdr (cdr s)))
> def args: : (<object 900542> (scddr (cdr scdr)))
> def args: : (<object 900610> (scdr (cdr s)))
> def args: : (<object 900610> (scddr (cdr scdr)))
> def args: : (<object 900682> (scdr (cdr s)))
> def args: : (<object 900682> (scddr (cdr scdr)))
> def args: : (<object 900750> (scdr (cdr s)))
> def args: : (<object 900750> (scddr (cdr scdr)))
> def args: : (<object 900822> (scdr (cdr s)))
> def args: : (<object 900822> (scddr (cdr scdr)))
> def args: : (<object 900890> (scdr (cdr s)))
> def args: : (<object 900890> (scddr (cdr scdr)))
> def args: : (<object 900962> (scdr (cdr s)))
> def args: : (<object 900962> (scddr (cdr scdr)))
> def args: : (<object 901030> (scdr (cdr s)))
> def args: : (<object 901030> (scddr (cdr scdr)))
> def args: : (<object 901102> (scdr (cdr s)))
> def args: : (<object 901102> (scddr (cdr scdr)))
> def args: : (<object 901170> (scdr (cdr s)))
> def args: : (<object 901170> (scddr (cdr scdr)))
> def args: : (<object 901242> (scdr (cdr s)))
> def args: : (<object 901242> (scddr (cdr scdr)))
> def args: : (<object 901310> (scdr (cdr s)))
> def args: : (<object 901310> (scddr (cdr scdr)))
> def args: : (<object 901382> (scdr (cdr s)))
> def args: : (<object 901382> (scddr (cdr scdr)))
> def args: : (<object 901450> (scdr (cdr s)))
> def args: : (<object 901450> (scddr (cdr scdr)))
> def args: : (<object 901522> (scdr (cdr s)))
> def args: : (<object 901522> (scddr (cdr scdr)))
> def args: : (<object 901590> (scdr (cdr s)))
> def args: : (<object 901590> (scddr (cdr scdr)))
> def args: : (<object 901662> (scdr (cdr s)))
> def args: : (<object 901662> (scddr (cdr scdr)))
> def args: : (<object 901730> (scdr (cdr s)))
> def args: : (<object 901730> (scddr (cdr scdr)))
> def args: : (<object 901802> (scdr (cdr s)))
> def args: : (<object 901802> (scddr (cdr scdr)))
> def args: : (<object 901870> (scdr (cdr s)))
> def args: : (<object 901870> (scddr (cdr scdr)))
> def args: : (<object 901942> (scdr (cdr s)))
> def args: : (<object 901942> (scddr (cdr scdr)))
> def args: : (<object 902010> (scdr (cdr s)))
> def args: : (<object 902010> (scddr (cdr scdr)))
> def args: : (<object 902082> (scdr (cdr s)))
> def args: : (<object 902082> (scddr (cdr scdr)))
> def args: : (<object 902150> (scdr (cdr s)))
> def args: : (<object 902150> (scddr (cdr scdr)))
> def args: : (<object 902222> (scdr (cdr s)))
> def args: : (<object 902222> (scddr (cdr scdr)))
> def args: : (<object 902290> (scdr (cdr s)))
> def args: : (<object 902290> (scddr (cdr scdr)))
> def args: : (<object 902362> (scdr (cdr s)))
> def args: : (<object 902362> (scddr (cdr scdr)))
> def args: : (<object 902430> (scdr (cdr s)))
> def args: : (<object 902430> (scddr (cdr scdr)))
> def args: : (<object 902502> (scdr (cdr s)))
> def args: : (<object 902502> (scddr (cdr scdr)))
> def args: : (<object 902570> (scdr (cdr s)))
> def args: : (<object 902570> (scddr (cdr scdr)))
> def args: : (<object 902642> (scdr (cdr s)))
> def args: : (<object 902642> (scddr (cdr scdr)))
> def args: : (<object 902710> (scdr (cdr s)))
> def args: : (<object 902710> (scddr (cdr scdr)))
> def args: : (<object 902782> (scdr (cdr s)))
> def args: : (<object 902782> (scddr (cdr scdr)))
> def args: : (<object 902850> (scdr (cdr s)))
> def args: : (<object 902850> (scddr (cdr scdr)))
> def args: : (<object 902922> (scdr (cdr s)))
> def args: : (<object 902922> (scddr (cdr scdr)))
> def args: : (<object 902990> (scdr (cdr s)))
> def args: : (<object 902990> (scddr (cdr scdr)))
> def args: : (<object 903062> (scdr (cdr s)))
> def args: : (<object 903062> (scddr (cdr scdr)))
> def args: : (<object 903130> (scdr (cdr s)))
> def args: : (<object 903130> (scddr (cdr scdr)))
> def args: : (<object 903202> (scdr (cdr s)))
> def args: : (<object 903202> (scddr (cdr scdr)))
> def args: : (<object 903270> (scdr (cdr s)))
> def args: : (<object 903270> (scddr (cdr scdr)))
> def args: : (<object 903342> (scdr (cdr s)))
> def args: : (<object 903342> (scddr (cdr scdr)))
> def args: : (<object 903410> (scdr (cdr s)))
> def args: : (<object 903410> (scddr (cdr scdr)))
> def args: : (<object 903482> (scdr (cdr s)))
> def args: : (<object 903482> (scddr (cdr scdr)))
> def args: : (<object 903550> (scdr (cdr s)))
> def args: : (<object 903550> (scddr (cdr scdr)))
> def args: : (<object 903622> (scdr (cdr s)))
> def args: : (<object 903622> (scddr (cdr scdr)))
> def args: : (<object 903690> (scdr (cdr s)))
> def args: : (<object 903690> (scddr (cdr scdr)))
> def args: : (<object 903762> (scdr (cdr s)))
> def args: : (<object 903762> (scddr (cdr scdr)))
> def args: : (<object 903830> (scdr (cdr s)))
> def args: : (<object 903830> (scddr (cdr scdr)))
> def args: : (<object 903902> (scdr (cdr s)))
> def args: : (<object 903902> (scddr (cdr scdr)))
> def args: : (<object 903970> (scdr (cdr s)))
> def args: : (<object 903970> (scddr (cdr scdr)))
> def args: : (<object 904042> (scdr (cdr s)))
> def args: : (<object 904042> (scddr (cdr scdr)))
> def args: : (<object 904110> (scdr (cdr s)))
> def args: : (<object 904110> (scddr (cdr scdr)))
> def args: : (<object 904182> (scdr (cdr s)))
> def args: : (<object 904182> (scddr (cdr scdr)))
> def args: : (<object 904250> (scdr (cdr s)))
> def args: : (<object 904250> (scddr (cdr scdr)))
> def args: : (<object 904322> (scdr (cdr s)))
> def args: : (<object 904322> (scddr (cdr scdr)))
> def args: : (<object 904390> (scdr (cdr s)))
> def args: : (<object 904390> (scddr (cdr scdr)))
> def args: : (<object 904462> (scdr (cdr s)))
> def args: : (<object 904462> (scddr (cdr scdr)))
> def args: : (<object 904530> (scdr (cdr s)))
> def args: : (<object 904530> (scddr (cdr scdr)))
> def args: : (<object 904602> (scdr (cdr s)))
> def args: : (<object 904602> (scddr (cdr scdr)))
> def args: : (<object 904670> (scdr (cdr s)))
> def args: : (<object 904670> (scddr (cdr scdr)))
> def args: : (<object 904742> (scdr (cdr s)))
> def args: : (<object 904742> (scddr (cdr scdr)))
> def args: : (<object 904810> (scdr (cdr s)))
> def args: : (<object 904810> (scddr (cdr scdr)))
> def args: : (<object 904882> (scdr (cdr s)))
> def args: : (<object 904882> (scddr (cdr scdr)))
> def args: : (<object 904950> (scdr (cdr s)))
> def args: : (<object 904950> (scddr (cdr scdr)))
> def args: : (<object 905022> (scdr (cdr s)))
> def args: : (<object 905022> (scddr (cdr scdr)))
> def args: : (<object 905090> (scdr (cdr s)))
> def args: : (<object 905090> (scddr (cdr scdr)))
> def args: : (<object 905162> (scdr (cdr s)))
> def args: : (<object 905162> (scddr (cdr scdr)))
> def args: : (<object 905230> (scdr (cdr s)))
> def args: : (<object 905230> (scddr (cdr scdr)))
> def args: : (<object 905302> (scdr (cdr s)))
> def args: : (<object 905302> (scddr (cdr scdr)))
> def args: : (<object 905370> (scdr (cdr s)))
> def args: : (<object 905370> (scddr (cdr scdr)))
> def args: : (<object 905442> (scdr (cdr s)))
> def args: : (<object 905442> (scddr (cdr scdr)))
> def args: : (<object 905510> (scdr (cdr s)))
> def args: : (<object 905510> (scddr (cdr scdr)))
> def args: : (<object 905582> (scdr (cdr s)))
> def args: : (<object 905582> (scddr (cdr scdr)))
> def args: : (<object 905650> (scdr (cdr s)))
> def args: : (<object 905650> (scddr (cdr scdr)))
> def args: : (<object 905722> (scdr (cdr s)))
> def args: : (<object 905722> (scddr (cdr scdr)))
> def args: : (<object 905790> (scdr (cdr s)))
> def args: : (<object 905790> (scddr (cdr scdr)))
> def args: : (<object 905862> (scdr (cdr s)))
> def args: : (<object 905862> (scddr (cdr scdr)))
> def args: : (<object 905930> (scdr (cdr s)))
> def args: : (<object 905930> (scddr (cdr scdr)))
> def args: : (<object 906002> (scdr (cdr s)))
> def args: : (<object 906002> (scddr (cdr scdr)))
> def args: : (<object 906070> (scdr (cdr s)))
> def args: : (<object 906070> (scddr (cdr scdr)))
> def args: : (<object 906142> (scdr (cdr s)))
> def args: : (<object 906142> (scddr (cdr scdr)))
> def args: : (<object 906210> (scdr (cdr s)))
> def args: : (<object 906210> (scddr (cdr scdr)))
> def args: : (<object 906282> (scdr (cdr s)))
> def args: : (<object 906282> (scddr (cdr scdr)))
> def args: : (<object 906350> (scdr (cdr s)))
> def args: : (<object 906350> (scddr (cdr scdr)))
> def args: : (<object 906422> (scdr (cdr s)))
> def args: : (<object 906422> (scddr (cdr scdr)))
> def args: : (<object 906490> (scdr (cdr s)))
> def args: : (<object 906490> (scddr (cdr scdr)))
> def args: : (<object 906562> (scdr (cdr s)))
> def args: : (<object 906562> (scddr (cdr scdr)))
> def args: : (<object 906630> (scdr (cdr s)))
> def args: : (<object 906630> (scddr (cdr scdr)))
> def args: : (<object 906702> (scdr (cdr s)))
> def args: : (<object 906702> (scddr (cdr scdr)))
> def args: : (<object 906770> (scdr (cdr s)))
> def args: : (<object 906770> (scddr (cdr scdr)))
> def args: : (<object 906842> (scdr (cdr s)))
> def args: : (<object 906842> (scddr (cdr scdr)))
> def args: : (<object 906910> (scdr (cdr s)))
> def args: : (<object 906910> (scddr (cdr scdr)))
> def args: : (<object 906982> (scdr (cdr s)))
> def args: : (<object 906982> (scddr (cdr scdr)))
> def args: : (<object 907050> (scdr (cdr s)))
> def args: : (<object 907050> (scddr (cdr scdr)))
> def args: : (<object 907122> (scdr (cdr s)))
> def args: : (<object 907122> (scddr (cdr scdr)))
> def args: : (<object 907190> (scdr (cdr s)))
> def args: : (<object 907190> (scddr (cdr scdr)))
> def args: : (<object 907262> (scdr (cdr s)))
> def args: : (<object 907262> (scddr (cdr scdr)))
> def args: : (<object 907330> (scdr (cdr s)))
> def args: : (<object 907330> (scddr (cdr scdr)))
> def args: : (<object 907402> (scdr (cdr s)))
> def args: : (<object 907402> (scddr (cdr scdr)))
> def args: : (<object 907470> (scdr (cdr s)))
> def args: : (<object 907470> (scddr (cdr scdr)))
> def args: : (<object 907542> (scdr (cdr s)))
> def args: : (<object 907542> (scddr (cdr scdr)))
> def args: : (<object 907610> (scdr (cdr s)))
> def args: : (<object 907610> (scddr (cdr scdr)))
> def args: : (<object 907682> (scdr (cdr s)))
> def args: : (<object 907682> (scddr (cdr scdr)))
> def args: : (<object 907750> (scdr (cdr s)))
> def args: : (<object 907750> (scddr (cdr scdr)))
> def args: : (<object 907822> (scdr (cdr s)))
> def args: : (<object 907822> (scddr (cdr scdr)))
> def args: : (<object 907890> (scdr (cdr s)))
> def args: : (<object 907890> (scddr (cdr scdr)))
> def args: : (<object 907962> (scdr (cdr s)))
> def args: : (<object 907962> (scddr (cdr scdr)))
> def args: : (<object 908030> (scdr (cdr s)))
> def args: : (<object 908030> (scddr (cdr scdr)))
> def args: : (<object 908102> (scdr (cdr s)))
> def args: : (<object 908102> (scddr (cdr scdr)))
> def args: : (<object 908170> (scdr (cdr s)))
> def args: : (<object 908170> (scddr (cdr scdr)))
> def args: : (<object 908242> (scdr (cdr s)))
> def args: : (<object 908242> (scddr (cdr scdr)))
> def args: : (<object 908310> (scdr (cdr s)))
> def args: : (<object 908310> (scddr (cdr scdr)))
> def args: : (<object 908382> (scdr (cdr s)))
> def args: : (<object 908382> (scddr (cdr scdr)))
> def args: : (<object 908450> (scdr (cdr s)))
> def args: : (<object 908450> (scddr (cdr scdr)))
> def args: : (<object 908522> (scdr (cdr s)))
> def args: : (<object 908522> (scddr (cdr scdr)))
> def args: : (<object 908590> (scdr (cdr s)))
> def args: : (<object 908590> (scddr (cdr scdr)))
> def args: : (<object 908662> (scdr (cdr s)))
> def args: : (<object 908662> (scddr (cdr scdr)))
> def args: : (<object 908730> (scdr (cdr s)))
> def args: : (<object 908730> (scddr (cdr scdr)))
> def args: : (<object 908802> (scdr (cdr s)))
> def args: : (<object 908802> (scddr (cdr scdr)))
> def args: : (<object 908870> (scdr (cdr s)))
> def args: : (<object 908870> (scddr (cdr scdr)))
> def args: : (<object 908942> (scdr (cdr s)))
> def args: : (<object 908942> (scddr (cdr scdr)))
> def args: : (<object 909010> (scdr (cdr s)))
> def args: : (<object 909010> (scddr (cdr scdr)))
> def args: : (<object 909082> (scdr (cdr s)))
> def args: : (<object 909082> (scddr (cdr scdr)))
> def args: : (<object 909150> (scdr (cdr s)))
> def args: : (<object 909150> (scddr (cdr scdr)))
> def args: : (<object 909222> (scdr (cdr s)))
> def args: : (<object 909222> (scddr (cdr scdr)))
> def args: : (<object 909290> (scdr (cdr s)))
> def args: : (<object 909290> (scddr (cdr scdr)))
> def args: : (<object 909362> (scdr (cdr s)))
> def args: : (<object 909362> (scddr (cdr scdr)))
> 2701def args: : (<object 922021> (env (if (null? @) # (car @))))
>  def args: : (<object 922128> (env (if (null? @) # (car @))))
> def args: : (<object 922248> (scdr (cdr s)))
> def args: : (<object 922248> (scddr (cdr scdr)))
> def args: : (<object 922320> (scdr (cdr s)))
> def args: : (<object 922320> (scddr (cdr scdr)))
> def args: : (<object 922392> (scdr (cdr s)))
> def args: : (<object 922392> (scddr (cdr scdr)))
> def args: : (<object 922460> (scdr (cdr s)))
> def args: : (<object 922460> (scddr (cdr scdr)))
> def args: : (<object 922699> (scdr (cdr s)))
> def args: : (<object 922699> (scddr (cdr scdr)))
> def args: : (<object 922771> (scdr (cdr s)))
> def args: : (<object 922771> (scddr (cdr scdr)))
> def args: : (<object 922839> (scdr (cdr s)))
> def args: : (<object 922839> (scddr (cdr scdr)))
> def args: : (<object 922911> (scdr (cdr s)))
> def args: : (<object 922911> (scddr (cdr scdr)))
> def args: : (<object 922979> (scdr (cdr s)))
> def args: : (<object 922979> (scddr (cdr scdr)))
> def args: : (<object 923051> (scdr (cdr s)))
> def args: : (<object 923051> (scddr (cdr scdr)))
> def args: : (<object 923119> (scdr (cdr s)))
> def args: : (<object 923119> (scddr (cdr scdr)))
> def args: : (<object 923191> (scdr (cdr s)))
> def args: : (<object 923191> (scddr (cdr scdr)))
> def args: : (<object 923259> (scdr (cdr s)))
> def args: : (<object 923259> (scddr (cdr scdr)))
> def args: : (<object 923331> (scdr (cdr s)))
> def args: : (<object 923331> (scddr (cdr scdr)))
> def args: : (<object 923399> (scdr (cdr s)))
> def args: : (<object 923399> (scddr (cdr scdr)))
> def args: : (<object 923471> (scdr (cdr s)))
> def args: : (<object 923471> (scddr (cdr scdr)))
> def args: : (<object 923539> (scdr (cdr s)))
> def args: : (<object 923539> (scddr (cdr scdr)))
> def args: : (<object 923611> (scdr (cdr s)))
> def args: : (<object 923611> (scddr (cdr scdr)))
> def args: : (<object 923679> (scdr (cdr s)))
> def args: : (<object 923679> (scddr (cdr scdr)))
> def args: : (<object 923751> (scdr (cdr s)))
> def args: : (<object 923751> (scddr (cdr scdr)))
> def args: : (<object 923819> (scdr (cdr s)))
> def args: : (<object 923819> (scddr (cdr scdr)))
> def args: : (<object 923891> (scdr (cdr s)))
> def args: : (<object 923891> (scddr (cdr scdr)))
> def args: : (<object 923959> (scdr (cdr s)))
> def args: : (<object 923959> (scddr (cdr scdr)))
> def args: : (<object 924031> (scdr (cdr s)))
> def args: : (<object 924031> (scddr (cdr scdr)))
> def args: : (<object 924099> (scdr (cdr s)))
> def args: : (<object 924099> (scddr (cdr scdr)))
> def args: : (<object 924171> (scdr (cdr s)))
> def args: : (<object 924171> (scddr (cdr scdr)))
> def args: : (<object 924239> (scdr (cdr s)))
> def args: : (<object 924239> (scddr (cdr scdr)))
> def args: : (<object 924311> (scdr (cdr s)))
> def args: : (<object 924311> (scddr (cdr scdr)))
> def args: : (<object 924379> (scdr (cdr s)))
> def args: : (<object 924379> (scddr (cdr scdr)))
> def args: : (<object 924451> (scdr (cdr s)))
> def args: : (<object 924451> (scddr (cdr scdr)))
> def args: : (<object 924519> (scdr (cdr s)))
> def args: : (<object 924519> (scddr (cdr scdr)))
> def args: : (<object 924591> (scdr (cdr s)))
> def args: : (<object 924591> (scddr (cdr scdr)))
> def args: : (<object 924659> (scdr (cdr s)))
> def args: : (<object 924659> (scddr (cdr scdr)))
> def args: : (<object 924731> (scdr (cdr s)))
> def args: : (<object 924731> (scddr (cdr scdr)))
> def args: : (<object 924799> (scdr (cdr s)))
> def args: : (<object 924799> (scddr (cdr scdr)))
> def args: : (<object 924871> (scdr (cdr s)))
> def args: : (<object 924871> (scddr (cdr scdr)))
> def args: : (<object 924939> (scdr (cdr s)))
> def args: : (<object 924939> (scddr (cdr scdr)))
> def args: : (<object 925011> (scdr (cdr s)))
> def args: : (<object 925011> (scddr (cdr scdr)))
> def args: : (<object 925079> (scdr (cdr s)))
> def args: : (<object 925079> (scddr (cdr scdr)))
> def args: : (<object 925151> (scdr (cdr s)))
> def args: : (<object 925151> (scddr (cdr scdr)))
> def args: : (<object 925219> (scdr (cdr s)))
> def args: : (<object 925219> (scddr (cdr scdr)))
> def args: : (<object 925291> (scdr (cdr s)))
> def args: : (<object 925291> (scddr (cdr scdr)))
> def args: : (<object 925359> (scdr (cdr s)))
> def args: : (<object 925359> (scddr (cdr scdr)))
> def args: : (<object 925431> (scdr (cdr s)))
> def args: : (<object 925431> (scddr (cdr scdr)))
> def args: : (<object 925499> (scdr (cdr s)))
> def args: : (<object 925499> (scddr (cdr scdr)))
> def args: : (<object 925571> (scdr (cdr s)))
> def args: : (<object 925571> (scddr (cdr scdr)))
> def args: : (<object 925639> (scdr (cdr s)))
> def args: : (<object 925639> (scddr (cdr scdr)))
> def args: : (<object 925711> (scdr (cdr s)))
> def args: : (<object 925711> (scddr (cdr scdr)))
> def args: : (<object 925779> (scdr (cdr s)))
> def args: : (<object 925779> (scddr (cdr scdr)))
> def args: : (<object 925851> (scdr (cdr s)))
> def args: : (<object 925851> (scddr (cdr scdr)))
> def args: : (<object 925919> (scdr (cdr s)))
> def args: : (<object 925919> (scddr (cdr scdr)))
> def args: : (<object 925991> (scdr (cdr s)))
> def args: : (<object 925991> (scddr (cdr scdr)))
> def args: : (<object 926059> (scdr (cdr s)))
> def args: : (<object 926059> (scddr (cdr scdr)))
> def args: : (<object 926131> (scdr (cdr s)))
> def args: : (<object 926131> (scddr (cdr scdr)))
> def args: : (<object 926199> (scdr (cdr s)))
> def args: : (<object 926199> (scddr (cdr scdr)))
> def args: : (<object 926271> (scdr (cdr s)))
> def args: : (<object 926271> (scddr (cdr scdr)))
> def args: : (<object 926339> (scdr (cdr s)))
> def args: : (<object 926339> (scddr (cdr scdr)))
> def args: : (<object 926411> (scdr (cdr s)))
> def args: : (<object 926411> (scddr (cdr scdr)))
> def args: : (<object 926479> (scdr (cdr s)))
> def args: : (<object 926479> (scddr (cdr scdr)))
> def args: : (<object 926551> (scdr (cdr s)))
> def args: : (<object 926551> (scddr (cdr scdr)))
> def args: : (<object 926619> (scdr (cdr s)))
> def args: : (<object 926619> (scddr (cdr scdr)))
> def args: : (<object 926691> (scdr (cdr s)))
> def args: : (<object 926691> (scddr (cdr scdr)))
> def args: : (<object 926759> (scdr (cdr s)))
> def args: : (<object 926759> (scddr (cdr scdr)))
> def args: : (<object 926831> (scdr (cdr s)))
> def args: : (<object 926831> (scddr (cdr scdr)))
> def args: : (<object 926899> (scdr (cdr s)))
> def args: : (<object 926899> (scddr (cdr scdr)))
> def args: : (<object 926971> (scdr (cdr s)))
> def args: : (<object 926971> (scddr (cdr scdr)))
> def args: : (<object 927039> (scdr (cdr s)))
> def args: : (<object 927039> (scddr (cdr scdr)))
> def args: : (<object 927111> (scdr (cdr s)))
> def args: : (<object 927111> (scddr (cdr scdr)))
> def args: : (<object 927179> (scdr (cdr s)))
> def args: : (<object 927179> (scddr (cdr scdr)))
> def args: : (<object 927251> (scdr (cdr s)))
> def args: : (<object 927251> (scddr (cdr scdr)))
> def args: : (<object 927319> (scdr (cdr s)))
> def args: : (<object 927319> (scddr (cdr scdr)))
> def args: : (<object 927391> (scdr (cdr s)))
> def args: : (<object 927391> (scddr (cdr scdr)))
> def args: : (<object 927459> (scdr (cdr s)))
> def args: : (<object 927459> (scddr (cdr scdr)))
> def args: : (<object 927531> (scdr (cdr s)))
> def args: : (<object 927531> (scddr (cdr scdr)))
> def args: : (<object 927599> (scdr (cdr s)))
> def args: : (<object 927599> (scddr (cdr scdr)))
> def args: : (<object 927671> (scdr (cdr s)))
> def args: : (<object 927671> (scddr (cdr scdr)))
> def args: : (<object 927739> (scdr (cdr s)))
> def args: : (<object 927739> (scddr (cdr scdr)))
> def args: : (<object 927811> (scdr (cdr s)))
> def args: : (<object 927811> (scddr (cdr scdr)))
> def args: : (<object 927879> (scdr (cdr s)))
> def args: : (<object 927879> (scddr (cdr scdr)))
> def args: : (<object 927951> (scdr (cdr s)))
> def args: : (<object 927951> (scddr (cdr scdr)))
> def args: : (<object 928019> (scdr (cdr s)))
> def args: : (<object 928019> (scddr (cdr scdr)))
> def args: : (<object 928091> (scdr (cdr s)))
> def args: : (<object 928091> (scddr (cdr scdr)))
> def args: : (<object 928159> (scdr (cdr s)))
> def args: : (<object 928159> (scddr (cdr scdr)))
> def args: : (<object 928231> (scdr (cdr s)))
> def args: : (<object 928231> (scddr (cdr scdr)))
> def args: : (<object 928299> (scdr (cdr s)))
> def args: : (<object 928299> (scddr (cdr scdr)))
> def args: : (<object 928371> (scdr (cdr s)))
> def args: : (<object 928371> (scddr (cdr scdr)))
> def args: : (<object 928439> (scdr (cdr s)))
> def args: : (<object 928439> (scddr (cdr scdr)))
> def args: : (<object 928511> (scdr (cdr s)))
> def args: : (<object 928511> (scddr (cdr scdr)))
> def args: : (<object 928579> (scdr (cdr s)))
> def args: : (<object 928579> (scddr (cdr scdr)))
> def args: : (<object 928651> (scdr (cdr s)))
> def args: : (<object 928651> (scddr (cdr scdr)))
> def args: : (<object 928719> (scdr (cdr s)))
> def args: : (<object 928719> (scddr (cdr scdr)))
> def args: : (<object 928791> (scdr (cdr s)))
> def args: : (<object 928791> (scddr (cdr scdr)))
> def args: : (<object 928859> (scdr (cdr s)))
> def args: : (<object 928859> (scddr (cdr scdr)))
> def args: : (<object 928931> (scdr (cdr s)))
> def args: : (<object 928931> (scddr (cdr scdr)))
> def args: : (<object 928999> (scdr (cdr s)))
> def args: : (<object 928999> (scddr (cdr scdr)))
> def args: : (<object 929071> (scdr (cdr s)))
> def args: : (<object 929071> (scddr (cdr scdr)))
> def args: : (<object 929139> (scdr (cdr s)))
> def args: : (<object 929139> (scddr (cdr scdr)))
> def args: : (<object 929211> (scdr (cdr s)))
> def args: : (<object 929211> (scddr (cdr scdr)))
> def args: : (<object 929279> (scdr (cdr s)))
> def args: : (<object 929279> (scddr (cdr scdr)))
> def args: : (<object 929351> (scdr (cdr s)))
> def args: : (<object 929351> (scddr (cdr scdr)))
> def args: : (<object 929419> (scdr (cdr s)))
> def args: : (<object 929419> (scddr (cdr scdr)))
> def args: : (<object 929491> (scdr (cdr s)))
> def args: : (<object 929491> (scddr (cdr scdr)))
> def args: : (<object 929559> (scdr (cdr s)))
> def args: : (<object 929559> (scddr (cdr scdr)))
> def args: : (<object 929631> (scdr (cdr s)))
> def args: : (<object 929631> (scddr (cdr scdr)))
> def args: : (<object 929699> (scdr (cdr s)))
> def args: : (<object 929699> (scddr (cdr scdr)))
> def args: : (<object 929771> (scdr (cdr s)))
> def args: : (<object 929771> (scddr (cdr scdr)))
> def args: : (<object 929839> (scdr (cdr s)))
> def args: : (<object 929839> (scddr (cdr scdr)))
> def args: : (<object 929911> (scdr (cdr s)))
> def args: : (<object 929911> (scddr (cdr scdr)))
> def args: : (<object 929979> (scdr (cdr s)))
> def args: : (<object 929979> (scddr (cdr scdr)))
> def args: : (<object 930051> (scdr (cdr s)))
> def args: : (<object 930051> (scddr (cdr scdr)))
> def args: : (<object 930119> (scdr (cdr s)))
> def args: : (<object 930119> (scddr (cdr scdr)))
> def args: : (<object 930191> (scdr (cdr s)))
> def args: : (<object 930191> (scddr (cdr scdr)))
> def args: : (<object 930259> (scdr (cdr s)))
> def args: : (<object 930259> (scddr (cdr scdr)))
> def args: : (<object 930331> (scdr (cdr s)))
> def args: : (<object 930331> (scddr (cdr scdr)))
> def args: : (<object 930399> (scdr (cdr s)))
> def args: : (<object 930399> (scddr (cdr scdr)))
> def args: : (<object 930471> (scdr (cdr s)))
> def args: : (<object 930471> (scddr (cdr scdr)))
> def args: : (<object 930539> (scdr (cdr s)))
> def args: : (<object 930539> (scddr (cdr scdr)))
> def args: : (<object 930611> (scdr (cdr s)))
> def args: : (<object 930611> (scddr (cdr scdr)))
> def args: : (<object 930679> (scdr (cdr s)))
> def args: : (<object 930679> (scddr (cdr scdr)))
> def args: : (<object 930751> (scdr (cdr s)))
> def args: : (<object 930751> (scddr (cdr scdr)))
> def args: : (<object 930819> (scdr (cdr s)))
> def args: : (<object 930819> (scddr (cdr scdr)))
> def args: : (<object 930891> (scdr (cdr s)))
> def args: : (<object 930891> (scddr (cdr scdr)))
> def args: : (<object 930959> (scdr (cdr s)))
> def args: : (<object 930959> (scddr (cdr scdr)))
> def args: : (<object 931031> (scdr (cdr s)))
> def args: : (<object 931031> (scddr (cdr scdr)))
> def args: : (<object 931099> (scdr (cdr s)))
> def args: : (<object 931099> (scddr (cdr scdr)))
> def args: : (<object 931171> (scdr (cdr s)))
> def args: : (<object 931171> (scddr (cdr scdr)))
> def args: : (<object 931239> (scdr (cdr s)))
> def args: : (<object 931239> (scddr (cdr scdr)))
> def args: : (<object 931311> (scdr (cdr s)))
> def args: : (<object 931311> (scddr (cdr scdr)))
> def args: : (<object 931379> (scdr (cdr s)))
> def args: : (<object 931379> (scddr (cdr scdr)))
> def args: : (<object 931451> (scdr (cdr s)))
> def args: : (<object 931451> (scddr (cdr scdr)))
> def args: : (<object 931519> (scdr (cdr s)))
> def args: : (<object 931519> (scddr (cdr scdr)))
> def args: : (<object 931591> (scdr (cdr s)))
> def args: : (<object 931591> (scddr (cdr scdr)))
> def args: : (<object 931659> (scdr (cdr s)))
> def args: : (<object 931659> (scddr (cdr scdr)))
> def args: : (<object 931731> (scdr (cdr s)))
> def args: : (<object 931731> (scddr (cdr scdr)))
> def args: : (<object 931799> (scdr (cdr s)))
> def args: : (<object 931799> (scddr (cdr scdr)))
> def args: : (<object 931871> (scdr (cdr s)))
> def args: : (<object 931871> (scddr (cdr scdr)))
> def args: : (<object 931939> (scdr (cdr s)))
> def args: : (<object 931939> (scddr (cdr scdr)))
> def args: : (<object 932011> (scdr (cdr s)))
> def args: : (<object 932011> (scddr (cdr scdr)))
> def args: : (<object 932079> (scdr (cdr s)))
> def args: : (<object 932079> (scddr (cdr scdr)))
> def args: : (<object 932151> (scdr (cdr s)))
> def args: : (<object 932151> (scddr (cdr scdr)))
> def args: : (<object 932219> (scdr (cdr s)))
> def args: : (<object 932219> (scddr (cdr scdr)))
> def args: : (<object 932291> (scdr (cdr s)))
> def args: : (<object 932291> (scddr (cdr scdr)))
> def args: : (<object 932359> (scdr (cdr s)))
> def args: : (<object 932359> (scddr (cdr scdr)))
> def args: : (<object 932431> (scdr (cdr s)))
> def args: : (<object 932431> (scddr (cdr scdr)))
> def args: : (<object 932499> (scdr (cdr s)))
> def args: : (<object 932499> (scddr (cdr scdr)))
> def args: : (<object 932571> (scdr (cdr s)))
> def args: : (<object 932571> (scddr (cdr scdr)))
> def args: : (<object 932639> (scdr (cdr s)))
> def args: : (<object 932639> (scddr (cdr scdr)))
> def args: : (<object 932711> (scdr (cdr s)))
> def args: : (<object 932711> (scddr (cdr scdr)))
> 2775def args: : (<object 945541> (env (if (null? @) # (car @))))
>  def args: : (<object 945648> (env (if (null? @) # (car @))))
> def args: : (<object 945768> (scdr (cdr s)))
> def args: : (<object 945768> (scddr (cdr scdr)))
> def args: : (<object 945840> (scdr (cdr s)))
> def args: : (<object 945840> (scddr (cdr scdr)))
> def args: : (<object 945912> (scdr (cdr s)))
> def args: : (<object 945912> (scddr (cdr scdr)))
> def args: : (<object 945980> (scdr (cdr s)))
> def args: : (<object 945980> (scddr (cdr scdr)))
> def args: : (<object 946219> (scdr (cdr s)))
> def args: : (<object 946219> (scddr (cdr scdr)))
> def args: : (<object 946291> (scdr (cdr s)))
> def args: : (<object 946291> (scddr (cdr scdr)))
> def args: : (<object 946359> (scdr (cdr s)))
> def args: : (<object 946359> (scddr (cdr scdr)))
> def args: : (<object 946431> (scdr (cdr s)))
> def args: : (<object 946431> (scddr (cdr scdr)))
> def args: : (<object 946499> (scdr (cdr s)))
> def args: : (<object 946499> (scddr (cdr scdr)))
> def args: : (<object 946571> (scdr (cdr s)))
> def args: : (<object 946571> (scddr (cdr scdr)))
> def args: : (<object 946639> (scdr (cdr s)))
> def args: : (<object 946639> (scddr (cdr scdr)))
> def args: : (<object 946711> (scdr (cdr s)))
> def args: : (<object 946711> (scddr (cdr scdr)))
> def args: : (<object 946779> (scdr (cdr s)))
> def args: : (<object 946779> (scddr (cdr scdr)))
> def args: : (<object 946851> (scdr (cdr s)))
> def args: : (<object 946851> (scddr (cdr scdr)))
> def args: : (<object 946919> (scdr (cdr s)))
> def args: : (<object 946919> (scddr (cdr scdr)))
> def args: : (<object 946991> (scdr (cdr s)))
> def args: : (<object 946991> (scddr (cdr scdr)))
> def args: : (<object 947059> (scdr (cdr s)))
> def args: : (<object 947059> (scddr (cdr scdr)))
> def args: : (<object 947131> (scdr (cdr s)))
> def args: : (<object 947131> (scddr (cdr scdr)))
> def args: : (<object 947199> (scdr (cdr s)))
> def args: : (<object 947199> (scddr (cdr scdr)))
> def args: : (<object 947271> (scdr (cdr s)))
> def args: : (<object 947271> (scddr (cdr scdr)))
> def args: : (<object 947339> (scdr (cdr s)))
> def args: : (<object 947339> (scddr (cdr scdr)))
> def args: : (<object 947411> (scdr (cdr s)))
> def args: : (<object 947411> (scddr (cdr scdr)))
> def args: : (<object 947479> (scdr (cdr s)))
> def args: : (<object 947479> (scddr (cdr scdr)))
> def args: : (<object 947551> (scdr (cdr s)))
> def args: : (<object 947551> (scddr (cdr scdr)))
> def args: : (<object 947619> (scdr (cdr s)))
> def args: : (<object 947619> (scddr (cdr scdr)))
> def args: : (<object 947691> (scdr (cdr s)))
> def args: : (<object 947691> (scddr (cdr scdr)))
> def args: : (<object 947759> (scdr (cdr s)))
> def args: : (<object 947759> (scddr (cdr scdr)))
> def args: : (<object 947831> (scdr (cdr s)))
> def args: : (<object 947831> (scddr (cdr scdr)))
> def args: : (<object 947899> (scdr (cdr s)))
> def args: : (<object 947899> (scddr (cdr scdr)))
> def args: : (<object 947971> (scdr (cdr s)))
> def args: : (<object 947971> (scddr (cdr scdr)))
> def args: : (<object 948039> (scdr (cdr s)))
> def args: : (<object 948039> (scddr (cdr scdr)))
> def args: : (<object 948111> (scdr (cdr s)))
> def args: : (<object 948111> (scddr (cdr scdr)))
> def args: : (<object 948179> (scdr (cdr s)))
> def args: : (<object 948179> (scddr (cdr scdr)))
> def args: : (<object 948251> (scdr (cdr s)))
> def args: : (<object 948251> (scddr (cdr scdr)))
> def args: : (<object 948319> (scdr (cdr s)))
> def args: : (<object 948319> (scddr (cdr scdr)))
> def args: : (<object 948391> (scdr (cdr s)))
> def args: : (<object 948391> (scddr (cdr scdr)))
> def args: : (<object 948459> (scdr (cdr s)))
> def args: : (<object 948459> (scddr (cdr scdr)))
> def args: : (<object 948531> (scdr (cdr s)))
> def args: : (<object 948531> (scddr (cdr scdr)))
> def args: : (<object 948599> (scdr (cdr s)))
> def args: : (<object 948599> (scddr (cdr scdr)))
> def args: : (<object 948671> (scdr (cdr s)))
> def args: : (<object 948671> (scddr (cdr scdr)))
> def args: : (<object 948739> (scdr (cdr s)))
> def args: : (<object 948739> (scddr (cdr scdr)))
> def args: : (<object 948811> (scdr (cdr s)))
> def args: : (<object 948811> (scddr (cdr scdr)))
> def args: : (<object 948879> (scdr (cdr s)))
> def args: : (<object 948879> (scddr (cdr scdr)))
> def args: : (<object 948951> (scdr (cdr s)))
> def args: : (<object 948951> (scddr (cdr scdr)))
> def args: : (<object 949019> (scdr (cdr s)))
> def args: : (<object 949019> (scddr (cdr scdr)))
> def args: : (<object 949091> (scdr (cdr s)))
> def args: : (<object 949091> (scddr (cdr scdr)))
> def args: : (<object 949159> (scdr (cdr s)))
> def args: : (<object 949159> (scddr (cdr scdr)))
> def args: : (<object 949231> (scdr (cdr s)))
> def args: : (<object 949231> (scddr (cdr scdr)))
> def args: : (<object 949299> (scdr (cdr s)))
> def args: : (<object 949299> (scddr (cdr scdr)))
> def args: : (<object 949371> (scdr (cdr s)))
> def args: : (<object 949371> (scddr (cdr scdr)))
> def args: : (<object 949439> (scdr (cdr s)))
> def args: : (<object 949439> (scddr (cdr scdr)))
> def args: : (<object 949511> (scdr (cdr s)))
> def args: : (<object 949511> (scddr (cdr scdr)))
> def args: : (<object 949579> (scdr (cdr s)))
> def args: : (<object 949579> (scddr (cdr scdr)))
> def args: : (<object 949651> (scdr (cdr s)))
> def args: : (<object 949651> (scddr (cdr scdr)))
> def args: : (<object 949719> (scdr (cdr s)))
> def args: : (<object 949719> (scddr (cdr scdr)))
> def args: : (<object 949791> (scdr (cdr s)))
> def args: : (<object 949791> (scddr (cdr scdr)))
> def args: : (<object 949859> (scdr (cdr s)))
> def args: : (<object 949859> (scddr (cdr scdr)))
> def args: : (<object 949931> (scdr (cdr s)))
> def args: : (<object 949931> (scddr (cdr scdr)))
> def args: : (<object 949999> (scdr (cdr s)))
> def args: : (<object 949999> (scddr (cdr scdr)))
> def args: : (<object 950071> (scdr (cdr s)))
> def args: : (<object 950071> (scddr (cdr scdr)))
> def args: : (<object 950139> (scdr (cdr s)))
> def args: : (<object 950139> (scddr (cdr scdr)))
> def args: : (<object 950211> (scdr (cdr s)))
> def args: : (<object 950211> (scddr (cdr scdr)))
> def args: : (<object 950279> (scdr (cdr s)))
> def args: : (<object 950279> (scddr (cdr scdr)))
> def args: : (<object 950351> (scdr (cdr s)))
> def args: : (<object 950351> (scddr (cdr scdr)))
> def args: : (<object 950419> (scdr (cdr s)))
> def args: : (<object 950419> (scddr (cdr scdr)))
> def args: : (<object 950491> (scdr (cdr s)))
> def args: : (<object 950491> (scddr (cdr scdr)))
> def args: : (<object 950559> (scdr (cdr s)))
> def args: : (<object 950559> (scddr (cdr scdr)))
> def args: : (<object 950631> (scdr (cdr s)))
> def args: : (<object 950631> (scddr (cdr scdr)))
> def args: : (<object 950699> (scdr (cdr s)))
> def args: : (<object 950699> (scddr (cdr scdr)))
> def args: : (<object 950771> (scdr (cdr s)))
> def args: : (<object 950771> (scddr (cdr scdr)))
> def args: : (<object 950839> (scdr (cdr s)))
> def args: : (<object 950839> (scddr (cdr scdr)))
> def args: : (<object 950911> (scdr (cdr s)))
> def args: : (<object 950911> (scddr (cdr scdr)))
> def args: : (<object 950979> (scdr (cdr s)))
> def args: : (<object 950979> (scddr (cdr scdr)))
> def args: : (<object 951051> (scdr (cdr s)))
> def args: : (<object 951051> (scddr (cdr scdr)))
> def args: : (<object 951119> (scdr (cdr s)))
> def args: : (<object 951119> (scddr (cdr scdr)))
> def args: : (<object 951191> (scdr (cdr s)))
> def args: : (<object 951191> (scddr (cdr scdr)))
> def args: : (<object 951259> (scdr (cdr s)))
> def args: : (<object 951259> (scddr (cdr scdr)))
> def args: : (<object 951331> (scdr (cdr s)))
> def args: : (<object 951331> (scddr (cdr scdr)))
> def args: : (<object 951399> (scdr (cdr s)))
> def args: : (<object 951399> (scddr (cdr scdr)))
> def args: : (<object 951471> (scdr (cdr s)))
> def args: : (<object 951471> (scddr (cdr scdr)))
> def args: : (<object 951539> (scdr (cdr s)))
> def args: : (<object 951539> (scddr (cdr scdr)))
> def args: : (<object 951611> (scdr (cdr s)))
> def args: : (<object 951611> (scddr (cdr scdr)))
> def args: : (<object 951679> (scdr (cdr s)))
> def args: : (<object 951679> (scddr (cdr scdr)))
> def args: : (<object 951751> (scdr (cdr s)))
> def args: : (<object 951751> (scddr (cdr scdr)))
> def args: : (<object 951819> (scdr (cdr s)))
> def args: : (<object 951819> (scddr (cdr scdr)))
> def args: : (<object 951891> (scdr (cdr s)))
> def args: : (<object 951891> (scddr (cdr scdr)))
> def args: : (<object 951959> (scdr (cdr s)))
> def args: : (<object 951959> (scddr (cdr scdr)))
> def args: : (<object 952031> (scdr (cdr s)))
> def args: : (<object 952031> (scddr (cdr scdr)))
> def args: : (<object 952099> (scdr (cdr s)))
> def args: : (<object 952099> (scddr (cdr scdr)))
> def args: : (<object 952171> (scdr (cdr s)))
> def args: : (<object 952171> (scddr (cdr scdr)))
> def args: : (<object 952239> (scdr (cdr s)))
> def args: : (<object 952239> (scddr (cdr scdr)))
> def args: : (<object 952311> (scdr (cdr s)))
> def args: : (<object 952311> (scddr (cdr scdr)))
> def args: : (<object 952379> (scdr (cdr s)))
> def args: : (<object 952379> (scddr (cdr scdr)))
> def args: : (<object 952451> (scdr (cdr s)))
> def args: : (<object 952451> (scddr (cdr scdr)))
> def args: : (<object 952519> (scdr (cdr s)))
> def args: : (<object 952519> (scddr (cdr scdr)))
> def args: : (<object 952591> (scdr (cdr s)))
> def args: : (<object 952591> (scddr (cdr scdr)))
> def args: : (<object 952659> (scdr (cdr s)))
> def args: : (<object 952659> (scddr (cdr scdr)))
> def args: : (<object 952731> (scdr (cdr s)))
> def args: : (<object 952731> (scddr (cdr scdr)))
> def args: : (<object 952799> (scdr (cdr s)))
> def args: : (<object 952799> (scddr (cdr scdr)))
> def args: : (<object 952871> (scdr (cdr s)))
> def args: : (<object 952871> (scddr (cdr scdr)))
> def args: : (<object 952939> (scdr (cdr s)))
> def args: : (<object 952939> (scddr (cdr scdr)))
> def args: : (<object 953011> (scdr (cdr s)))
> def args: : (<object 953011> (scddr (cdr scdr)))
> def args: : (<object 953079> (scdr (cdr s)))
> def args: : (<object 953079> (scddr (cdr scdr)))
> def args: : (<object 953151> (scdr (cdr s)))
> def args: : (<object 953151> (scddr (cdr scdr)))
> def args: : (<object 953219> (scdr (cdr s)))
> def args: : (<object 953219> (scddr (cdr scdr)))
> def args: : (<object 953291> (scdr (cdr s)))
> def args: : (<object 953291> (scddr (cdr scdr)))
> def args: : (<object 953359> (scdr (cdr s)))
> def args: : (<object 953359> (scddr (cdr scdr)))
> def args: : (<object 953431> (scdr (cdr s)))
> def args: : (<object 953431> (scddr (cdr scdr)))
> def args: : (<object 953499> (scdr (cdr s)))
> def args: : (<object 953499> (scddr (cdr scdr)))
> def args: : (<object 953571> (scdr (cdr s)))
> def args: : (<object 953571> (scddr (cdr scdr)))
> def args: : (<object 953639> (scdr (cdr s)))
> def args: : (<object 953639> (scddr (cdr scdr)))
> def args: : (<object 953711> (scdr (cdr s)))
> def args: : (<object 953711> (scddr (cdr scdr)))
> def args: : (<object 953779> (scdr (cdr s)))
> def args: : (<object 953779> (scddr (cdr scdr)))
> def args: : (<object 953851> (scdr (cdr s)))
> def args: : (<object 953851> (scddr (cdr scdr)))
> def args: : (<object 953919> (scdr (cdr s)))
> def args: : (<object 953919> (scddr (cdr scdr)))
> def args: : (<object 953991> (scdr (cdr s)))
> def args: : (<object 953991> (scddr (cdr scdr)))
> def args: : (<object 954059> (scdr (cdr s)))
> def args: : (<object 954059> (scddr (cdr scdr)))
> def args: : (<object 954131> (scdr (cdr s)))
> def args: : (<object 954131> (scddr (cdr scdr)))
> def args: : (<object 954199> (scdr (cdr s)))
> def args: : (<object 954199> (scddr (cdr scdr)))
> def args: : (<object 954271> (scdr (cdr s)))
> def args: : (<object 954271> (scddr (cdr scdr)))
> def args: : (<object 954339> (scdr (cdr s)))
> def args: : (<object 954339> (scddr (cdr scdr)))
> def args: : (<object 954411> (scdr (cdr s)))
> def args: : (<object 954411> (scddr (cdr scdr)))
> def args: : (<object 954479> (scdr (cdr s)))
> def args: : (<object 954479> (scddr (cdr scdr)))
> def args: : (<object 954551> (scdr (cdr s)))
> def args: : (<object 954551> (scddr (cdr scdr)))
> def args: : (<object 954619> (scdr (cdr s)))
> def args: : (<object 954619> (scddr (cdr scdr)))
> def args: : (<object 954691> (scdr (cdr s)))
> def args: : (<object 954691> (scddr (cdr scdr)))
> def args: : (<object 954759> (scdr (cdr s)))
> def args: : (<object 954759> (scddr (cdr scdr)))
> def args: : (<object 954831> (scdr (cdr s)))
> def args: : (<object 954831> (scddr (cdr scdr)))
> def args: : (<object 954899> (scdr (cdr s)))
> def args: : (<object 954899> (scddr (cdr scdr)))
> def args: : (<object 954971> (scdr (cdr s)))
> def args: : (<object 954971> (scddr (cdr scdr)))
> def args: : (<object 955039> (scdr (cdr s)))
> def args: : (<object 955039> (scddr (cdr scdr)))
> def args: : (<object 955111> (scdr (cdr s)))
> def args: : (<object 955111> (scddr (cdr scdr)))
> def args: : (<object 955179> (scdr (cdr s)))
> def args: : (<object 955179> (scddr (cdr scdr)))
> def args: : (<object 955251> (scdr (cdr s)))
> def args: : (<object 955251> (scddr (cdr scdr)))
> def args: : (<object 955319> (scdr (cdr s)))
> def args: : (<object 955319> (scddr (cdr scdr)))
> def args: : (<object 955391> (scdr (cdr s)))
> def args: : (<object 955391> (scddr (cdr scdr)))
> def args: : (<object 955459> (scdr (cdr s)))
> def args: : (<object 955459> (scddr (cdr scdr)))
> def args: : (<object 955531> (scdr (cdr s)))
> def args: : (<object 955531> (scddr (cdr scdr)))
> def args: : (<object 955599> (scdr (cdr s)))
> def args: : (<object 955599> (scddr (cdr scdr)))
> def args: : (<object 955671> (scdr (cdr s)))
> def args: : (<object 955671> (scddr (cdr scdr)))
> def args: : (<object 955739> (scdr (cdr s)))
> def args: : (<object 955739> (scddr (cdr scdr)))
> def args: : (<object 955811> (scdr (cdr s)))
> def args: : (<object 955811> (scddr (cdr scdr)))
> def args: : (<object 955879> (scdr (cdr s)))
> def args: : (<object 955879> (scddr (cdr scdr)))
> def args: : (<object 955951> (scdr (cdr s)))
> def args: : (<object 955951> (scddr (cdr scdr)))
> def args: : (<object 956019> (scdr (cdr s)))
> def args: : (<object 956019> (scddr (cdr scdr)))
> def args: : (<object 956091> (scdr (cdr s)))
> def args: : (<object 956091> (scddr (cdr scdr)))
> def args: : (<object 956159> (scdr (cdr s)))
> def args: : (<object 956159> (scddr (cdr scdr)))
> def args: : (<object 956231> (scdr (cdr s)))
> def args: : (<object 956231> (scddr (cdr scdr)))
> def args: : (<object 956299> (scdr (cdr s)))
> def args: : (<object 956299> (scddr (cdr scdr)))
> def args: : (<object 956371> (scdr (cdr s)))
> def args: : (<object 956371> (scddr (cdr scdr)))
> 2850def args: : (<object 969372> (env (if (null? @) # (car @))))
>  def args: : (<object 969479> (env (if (null? @) # (car @))))
> def args: : (<object 969599> (scdr (cdr s)))
> def args: : (<object 969599> (scddr (cdr scdr)))
> def args: : (<object 969671> (scdr (cdr s)))
> def args: : (<object 969671> (scddr (cdr scdr)))
> def args: : (<object 969743> (scdr (cdr s)))
> def args: : (<object 969743> (scddr (cdr scdr)))
> def args: : (<object 969811> (scdr (cdr s)))
> def args: : (<object 969811> (scddr (cdr scdr)))
> def args: : (<object 970050> (scdr (cdr s)))
> def args: : (<object 970050> (scddr (cdr scdr)))
> def args: : (<object 970122> (scdr (cdr s)))
> def args: : (<object 970122> (scddr (cdr scdr)))
> def args: : (<object 970190> (scdr (cdr s)))
> def args: : (<object 970190> (scddr (cdr scdr)))
> def args: : (<object 970262> (scdr (cdr s)))
> def args: : (<object 970262> (scddr (cdr scdr)))
> def args: : (<object 970330> (scdr (cdr s)))
> def args: : (<object 970330> (scddr (cdr scdr)))
> def args: : (<object 970402> (scdr (cdr s)))
> def args: : (<object 970402> (scddr (cdr scdr)))
> def args: : (<object 970470> (scdr (cdr s)))
> def args: : (<object 970470> (scddr (cdr scdr)))
> def args: : (<object 970542> (scdr (cdr s)))
> def args: : (<object 970542> (scddr (cdr scdr)))
> def args: : (<object 970610> (scdr (cdr s)))
> def args: : (<object 970610> (scddr (cdr scdr)))
> def args: : (<object 970682> (scdr (cdr s)))
> def args: : (<object 970682> (scddr (cdr scdr)))
> def args: : (<object 970750> (scdr (cdr s)))
> def args: : (<object 970750> (scddr (cdr scdr)))
> def args: : (<object 970822> (scdr (cdr s)))
> def args: : (<object 970822> (scddr (cdr scdr)))
> def args: : (<object 970890> (scdr (cdr s)))
> def args: : (<object 970890> (scddr (cdr scdr)))
> def args: : (<object 970962> (scdr (cdr s)))
> def args: : (<object 970962> (scddr (cdr scdr)))
> def args: : (<object 971030> (scdr (cdr s)))
> def args: : (<object 971030> (scddr (cdr scdr)))
> def args: : (<object 971102> (scdr (cdr s)))
> def args: : (<object 971102> (scddr (cdr scdr)))
> def args: : (<object 971170> (scdr (cdr s)))
> def args: : (<object 971170> (scddr (cdr scdr)))
> def args: : (<object 971242> (scdr (cdr s)))
> def args: : (<object 971242> (scddr (cdr scdr)))
> def args: : (<object 971310> (scdr (cdr s)))
> def args: : (<object 971310> (scddr (cdr scdr)))
> def args: : (<object 971382> (scdr (cdr s)))
> def args: : (<object 971382> (scddr (cdr scdr)))
> def args: : (<object 971450> (scdr (cdr s)))
> def args: : (<object 971450> (scddr (cdr scdr)))
> def args: : (<object 971522> (scdr (cdr s)))
> def args: : (<object 971522> (scddr (cdr scdr)))
> def args: : (<object 971590> (scdr (cdr s)))
> def args: : (<object 971590> (scddr (cdr scdr)))
> def args: : (<object 971662> (scdr (cdr s)))
> def args: : (<object 971662> (scddr (cdr scdr)))
> def args: : (<object 971730> (scdr (cdr s)))
> def args: : (<object 971730> (scddr (cdr scdr)))
> def args: : (<object 971802> (scdr (cdr s)))
> def args: : (<object 971802> (scddr (cdr scdr)))
> def args: : (<object 971870> (scdr (cdr s)))
> def args: : (<object 971870> (scddr (cdr scdr)))
> def args: : (<object 971942> (scdr (cdr s)))
> def args: : (<object 971942> (scddr (cdr scdr)))
> def args: : (<object 972010> (scdr (cdr s)))
> def args: : (<object 972010> (scddr (cdr scdr)))
> def args: : (<object 972082> (scdr (cdr s)))
> def args: : (<object 972082> (scddr (cdr scdr)))
> def args: : (<object 972150> (scdr (cdr s)))
> def args: : (<object 972150> (scddr (cdr scdr)))
> def args: : (<object 972222> (scdr (cdr s)))
> def args: : (<object 972222> (scddr (cdr scdr)))
> def args: : (<object 972290> (scdr (cdr s)))
> def args: : (<object 972290> (scddr (cdr scdr)))
> def args: : (<object 972362> (scdr (cdr s)))
> def args: : (<object 972362> (scddr (cdr scdr)))
> def args: : (<object 972430> (scdr (cdr s)))
> def args: : (<object 972430> (scddr (cdr scdr)))
> def args: : (<object 972502> (scdr (cdr s)))
> def args: : (<object 972502> (scddr (cdr scdr)))
> def args: : (<object 972570> (scdr (cdr s)))
> def args: : (<object 972570> (scddr (cdr scdr)))
> def args: : (<object 972642> (scdr (cdr s)))
> def args: : (<object 972642> (scddr (cdr scdr)))
> def args: : (<object 972710> (scdr (cdr s)))
> def args: : (<object 972710> (scddr (cdr scdr)))
> def args: : (<object 972782> (scdr (cdr s)))
> def args: : (<object 972782> (scddr (cdr scdr)))
> def args: : (<object 972850> (scdr (cdr s)))
> def args: : (<object 972850> (scddr (cdr scdr)))
> def args: : (<object 972922> (scdr (cdr s)))
> def args: : (<object 972922> (scddr (cdr scdr)))
> def args: : (<object 972990> (scdr (cdr s)))
> def args: : (<object 972990> (scddr (cdr scdr)))
> def args: : (<object 973062> (scdr (cdr s)))
> def args: : (<object 973062> (scddr (cdr scdr)))
> def args: : (<object 973130> (scdr (cdr s)))
> def args: : (<object 973130> (scddr (cdr scdr)))
> def args: : (<object 973202> (scdr (cdr s)))
> def args: : (<object 973202> (scddr (cdr scdr)))
> def args: : (<object 973270> (scdr (cdr s)))
> def args: : (<object 973270> (scddr (cdr scdr)))
> def args: : (<object 973342> (scdr (cdr s)))
> def args: : (<object 973342> (scddr (cdr scdr)))
> def args: : (<object 973410> (scdr (cdr s)))
> def args: : (<object 973410> (scddr (cdr scdr)))
> def args: : (<object 973482> (scdr (cdr s)))
> def args: : (<object 973482> (scddr (cdr scdr)))
> def args: : (<object 973550> (scdr (cdr s)))
> def args: : (<object 973550> (scddr (cdr scdr)))
> def args: : (<object 973622> (scdr (cdr s)))
> def args: : (<object 973622> (scddr (cdr scdr)))
> def args: : (<object 973690> (scdr (cdr s)))
> def args: : (<object 973690> (scddr (cdr scdr)))
> def args: : (<object 973762> (scdr (cdr s)))
> def args: : (<object 973762> (scddr (cdr scdr)))
> def args: : (<object 973830> (scdr (cdr s)))
> def args: : (<object 973830> (scddr (cdr scdr)))
> def args: : (<object 973902> (scdr (cdr s)))
> def args: : (<object 973902> (scddr (cdr scdr)))
> def args: : (<object 973970> (scdr (cdr s)))
> def args: : (<object 973970> (scddr (cdr scdr)))
> def args: : (<object 974042> (scdr (cdr s)))
> def args: : (<object 974042> (scddr (cdr scdr)))
> def args: : (<object 974110> (scdr (cdr s)))
> def args: : (<object 974110> (scddr (cdr scdr)))
> def args: : (<object 974182> (scdr (cdr s)))
> def args: : (<object 974182> (scddr (cdr scdr)))
> def args: : (<object 974250> (scdr (cdr s)))
> def args: : (<object 974250> (scddr (cdr scdr)))
> def args: : (<object 974322> (scdr (cdr s)))
> def args: : (<object 974322> (scddr (cdr scdr)))
> def args: : (<object 974390> (scdr (cdr s)))
> def args: : (<object 974390> (scddr (cdr scdr)))
> def args: : (<object 974462> (scdr (cdr s)))
> def args: : (<object 974462> (scddr (cdr scdr)))
> def args: : (<object 974530> (scdr (cdr s)))
> def args: : (<object 974530> (scddr (cdr scdr)))
> def args: : (<object 974602> (scdr (cdr s)))
> def args: : (<object 974602> (scddr (cdr scdr)))
> def args: : (<object 974670> (scdr (cdr s)))
> def args: : (<object 974670> (scddr (cdr scdr)))
> def args: : (<object 974742> (scdr (cdr s)))
> def args: : (<object 974742> (scddr (cdr scdr)))
> def args: : (<object 974810> (scdr (cdr s)))
> def args: : (<object 974810> (scddr (cdr scdr)))
> def args: : (<object 974882> (scdr (cdr s)))
> def args: : (<object 974882> (scddr (cdr scdr)))
> def args: : (<object 974950> (scdr (cdr s)))
> def args: : (<object 974950> (scddr (cdr scdr)))
> def args: : (<object 975022> (scdr (cdr s)))
> def args: : (<object 975022> (scddr (cdr scdr)))
> def args: : (<object 975090> (scdr (cdr s)))
> def args: : (<object 975090> (scddr (cdr scdr)))
> def args: : (<object 975162> (scdr (cdr s)))
> def args: : (<object 975162> (scddr (cdr scdr)))
> def args: : (<object 975230> (scdr (cdr s)))
> def args: : (<object 975230> (scddr (cdr scdr)))
> def args: : (<object 975302> (scdr (cdr s)))
> def args: : (<object 975302> (scddr (cdr scdr)))
> def args: : (<object 975370> (scdr (cdr s)))
> def args: : (<object 975370> (scddr (cdr scdr)))
> def args: : (<object 975442> (scdr (cdr s)))
> def args: : (<object 975442> (scddr (cdr scdr)))
> def args: : (<object 975510> (scdr (cdr s)))
> def args: : (<object 975510> (scddr (cdr scdr)))
> def args: : (<object 975582> (scdr (cdr s)))
> def args: : (<object 975582> (scddr (cdr scdr)))
> def args: : (<object 975650> (scdr (cdr s)))
> def args: : (<object 975650> (scddr (cdr scdr)))
> def args: : (<object 975722> (scdr (cdr s)))
> def args: : (<object 975722> (scddr (cdr scdr)))
> def args: : (<object 975790> (scdr (cdr s)))
> def args: : (<object 975790> (scddr (cdr scdr)))
> def args: : (<object 975862> (scdr (cdr s)))
> def args: : (<object 975862> (scddr (cdr scdr)))
> def args: : (<object 975930> (scdr (cdr s)))
> def args: : (<object 975930> (scddr (cdr scdr)))
> def args: : (<object 976002> (scdr (cdr s)))
> def args: : (<object 976002> (scddr (cdr scdr)))
> def args: : (<object 976070> (scdr (cdr s)))
> def args: : (<object 976070> (scddr (cdr scdr)))
> def args: : (<object 976142> (scdr (cdr s)))
> def args: : (<object 976142> (scddr (cdr scdr)))
> def args: : (<object 976210> (scdr (cdr s)))
> def args: : (<object 976210> (scddr (cdr scdr)))
> def args: : (<object 976282> (scdr (cdr s)))
> def args: : (<object 976282> (scddr (cdr scdr)))
> def args: : (<object 976350> (scdr (cdr s)))
> def args: : (<object 976350> (scddr (cdr scdr)))
> def args: : (<object 976422> (scdr (cdr s)))
> def args: : (<object 976422> (scddr (cdr scdr)))
> def args: : (<object 976490> (scdr (cdr s)))
> def args: : (<object 976490> (scddr (cdr scdr)))
> def args: : (<object 976562> (scdr (cdr s)))
> def args: : (<object 976562> (scddr (cdr scdr)))
> def args: : (<object 976630> (scdr (cdr s)))
> def args: : (<object 976630> (scddr (cdr scdr)))
> def args: : (<object 976702> (scdr (cdr s)))
> def args: : (<object 976702> (scddr (cdr scdr)))
> def args: : (<object 976770> (scdr (cdr s)))
> def args: : (<object 976770> (scddr (cdr scdr)))
> def args: : (<object 976842> (scdr (cdr s)))
> def args: : (<object 976842> (scddr (cdr scdr)))
> def args: : (<object 976910> (scdr (cdr s)))
> def args: : (<object 976910> (scddr (cdr scdr)))
> def args: : (<object 976982> (scdr (cdr s)))
> def args: : (<object 976982> (scddr (cdr scdr)))
> def args: : (<object 977050> (scdr (cdr s)))
> def args: : (<object 977050> (scddr (cdr scdr)))
> def args: : (<object 977122> (scdr (cdr s)))
> def args: : (<object 977122> (scddr (cdr scdr)))
> def args: : (<object 977190> (scdr (cdr s)))
> def args: : (<object 977190> (scddr (cdr scdr)))
> def args: : (<object 977262> (scdr (cdr s)))
> def args: : (<object 977262> (scddr (cdr scdr)))
> def args: : (<object 977330> (scdr (cdr s)))
> def args: : (<object 977330> (scddr (cdr scdr)))
> def args: : (<object 977402> (scdr (cdr s)))
> def args: : (<object 977402> (scddr (cdr scdr)))
> def args: : (<object 977470> (scdr (cdr s)))
> def args: : (<object 977470> (scddr (cdr scdr)))
> def args: : (<object 977542> (scdr (cdr s)))
> def args: : (<object 977542> (scddr (cdr scdr)))
> def args: : (<object 977610> (scdr (cdr s)))
> def args: : (<object 977610> (scddr (cdr scdr)))
> def args: : (<object 977682> (scdr (cdr s)))
> def args: : (<object 977682> (scddr (cdr scdr)))
> def args: : (<object 977750> (scdr (cdr s)))
> def args: : (<object 977750> (scddr (cdr scdr)))
> def args: : (<object 977822> (scdr (cdr s)))
> def args: : (<object 977822> (scddr (cdr scdr)))
> def args: : (<object 977890> (scdr (cdr s)))
> def args: : (<object 977890> (scddr (cdr scdr)))
> def args: : (<object 977962> (scdr (cdr s)))
> def args: : (<object 977962> (scddr (cdr scdr)))
> def args: : (<object 978030> (scdr (cdr s)))
> def args: : (<object 978030> (scddr (cdr scdr)))
> def args: : (<object 978102> (scdr (cdr s)))
> def args: : (<object 978102> (scddr (cdr scdr)))
> def args: : (<object 978170> (scdr (cdr s)))
> def args: : (<object 978170> (scddr (cdr scdr)))
> def args: : (<object 978242> (scdr (cdr s)))
> def args: : (<object 978242> (scddr (cdr scdr)))
> def args: : (<object 978310> (scdr (cdr s)))
> def args: : (<object 978310> (scddr (cdr scdr)))
> def args: : (<object 978382> (scdr (cdr s)))
> def args: : (<object 978382> (scddr (cdr scdr)))
> def args: : (<object 978450> (scdr (cdr s)))
> def args: : (<object 978450> (scddr (cdr scdr)))
> def args: : (<object 978522> (scdr (cdr s)))
> def args: : (<object 978522> (scddr (cdr scdr)))
> def args: : (<object 978590> (scdr (cdr s)))
> def args: : (<object 978590> (scddr (cdr scdr)))
> def args: : (<object 978662> (scdr (cdr s)))
> def args: : (<object 978662> (scddr (cdr scdr)))
> def args: : (<object 978730> (scdr (cdr s)))
> def args: : (<object 978730> (scddr (cdr scdr)))
> def args: : (<object 978802> (scdr (cdr s)))
> def args: : (<object 978802> (scddr (cdr scdr)))
> def args: : (<object 978870> (scdr (cdr s)))
> def args: : (<object 978870> (scddr (cdr scdr)))
> def args: : (<object 978942> (scdr (cdr s)))
> def args: : (<object 978942> (scddr (cdr scdr)))
> def args: : (<object 979010> (scdr (cdr s)))
> def args: : (<object 979010> (scddr (cdr scdr)))
> def args: : (<object 979082> (scdr (cdr s)))
> def args: : (<object 979082> (scddr (cdr scdr)))
> def args: : (<object 979150> (scdr (cdr s)))
> def args: : (<object 979150> (scddr (cdr scdr)))
> def args: : (<object 979222> (scdr (cdr s)))
> def args: : (<object 979222> (scddr (cdr scdr)))
> def args: : (<object 979290> (scdr (cdr s)))
> def args: : (<object 979290> (scddr (cdr scdr)))
> def args: : (<object 979362> (scdr (cdr s)))
> def args: : (<object 979362> (scddr (cdr scdr)))
> def args: : (<object 979430> (scdr (cdr s)))
> def args: : (<object 979430> (scddr (cdr scdr)))
> def args: : (<object 979502> (scdr (cdr s)))
> def args: : (<object 979502> (scddr (cdr scdr)))
> def args: : (<object 979570> (scdr (cdr s)))
> def args: : (<object 979570> (scddr (cdr scdr)))
> def args: : (<object 979642> (scdr (cdr s)))
> def args: : (<object 979642> (scddr (cdr scdr)))
> def args: : (<object 979710> (scdr (cdr s)))
> def args: : (<object 979710> (scddr (cdr scdr)))
> def args: : (<object 979782> (scdr (cdr s)))
> def args: : (<object 979782> (scddr (cdr scdr)))
> def args: : (<object 979850> (scdr (cdr s)))
> def args: : (<object 979850> (scddr (cdr scdr)))
> def args: : (<object 979922> (scdr (cdr s)))
> def args: : (<object 979922> (scddr (cdr scdr)))
> def args: : (<object 979990> (scdr (cdr s)))
> def args: : (<object 979990> (scddr (cdr scdr)))
> def args: : (<object 980062> (scdr (cdr s)))
> def args: : (<object 980062> (scddr (cdr scdr)))
> def args: : (<object 980130> (scdr (cdr s)))
> def args: : (<object 980130> (scddr (cdr scdr)))
> def args: : (<object 980202> (scdr (cdr s)))
> def args: : (<object 980202> (scddr (cdr scdr)))
> def args: : (<object 980270> (scdr (cdr s)))
> def args: : (<object 980270> (scddr (cdr scdr)))
> def args: : (<object 980342> (scdr (cdr s)))
> def args: : (<object 980342> (scddr (cdr scdr)))
> 2926def args: : (<object 993514> (env (if (null? @) # (car @))))
>  def args: : (<object 993621> (env (if (null? @) # (car @))))
> def args: : (<object 993741> (scdr (cdr s)))
> def args: : (<object 993741> (scddr (cdr scdr)))
> def args: : (<object 993813> (scdr (cdr s)))
> def args: : (<object 993813> (scddr (cdr scdr)))
> def args: : (<object 993885> (scdr (cdr s)))
> def args: : (<object 993885> (scddr (cdr scdr)))
> def args: : (<object 993953> (scdr (cdr s)))
> def args: : (<object 993953> (scddr (cdr scdr)))
> def args: : (<object 994192> (scdr (cdr s)))
> def args: : (<object 994192> (scddr (cdr scdr)))
> def args: : (<object 994264> (scdr (cdr s)))
> def args: : (<object 994264> (scddr (cdr scdr)))
> def args: : (<object 994332> (scdr (cdr s)))
> def args: : (<object 994332> (scddr (cdr scdr)))
> def args: : (<object 994404> (scdr (cdr s)))
> def args: : (<object 994404> (scddr (cdr scdr)))
> def args: : (<object 994472> (scdr (cdr s)))
> def args: : (<object 994472> (scddr (cdr scdr)))
> def args: : (<object 994544> (scdr (cdr s)))
> def args: : (<object 994544> (scddr (cdr scdr)))
> def args: : (<object 994612> (scdr (cdr s)))
> def args: : (<object 994612> (scddr (cdr scdr)))
> def args: : (<object 994684> (scdr (cdr s)))
> def args: : (<object 994684> (scddr (cdr scdr)))
> def args: : (<object 994752> (scdr (cdr s)))
> def args: : (<object 994752> (scddr (cdr scdr)))
> def args: : (<object 994824> (scdr (cdr s)))
> def args: : (<object 994824> (scddr (cdr scdr)))
> def args: : (<object 994892> (scdr (cdr s)))
> def args: : (<object 994892> (scddr (cdr scdr)))
> def args: : (<object 994964> (scdr (cdr s)))
> def args: : (<object 994964> (scddr (cdr scdr)))
> def args: : (<object 995032> (scdr (cdr s)))
> def args: : (<object 995032> (scddr (cdr scdr)))
> def args: : (<object 995104> (scdr (cdr s)))
> def args: : (<object 995104> (scddr (cdr scdr)))
> def args: : (<object 995172> (scdr (cdr s)))
> def args: : (<object 995172> (scddr (cdr scdr)))
> def args: : (<object 995244> (scdr (cdr s)))
> def args: : (<object 995244> (scddr (cdr scdr)))
> def args: : (<object 995312> (scdr (cdr s)))
> def args: : (<object 995312> (scddr (cdr scdr)))
> def args: : (<object 995384> (scdr (cdr s)))
> def args: : (<object 995384> (scddr (cdr scdr)))
> def args: : (<object 995452> (scdr (cdr s)))
> def args: : (<object 995452> (scddr (cdr scdr)))
> def args: : (<object 995524> (scdr (cdr s)))
> def args: : (<object 995524> (scddr (cdr scdr)))
> def args: : (<object 995592> (scdr (cdr s)))
> def args: : (<object 995592> (scddr (cdr scdr)))
> def args: : (<object 995664> (scdr (cdr s)))
> def args: : (<object 995664> (scddr (cdr scdr)))
> def args: : (<object 995732> (scdr (cdr s)))
> def args: : (<object 995732> (scddr (cdr scdr)))
> def args: : (<object 995804> (scdr (cdr s)))
> def args: : (<object 995804> (scddr (cdr scdr)))
> def args: : (<object 995872> (scdr (cdr s)))
> def args: : (<object 995872> (scddr (cdr scdr)))
> def args: : (<object 995944> (scdr (cdr s)))
> def args: : (<object 995944> (scddr (cdr scdr)))
> def args: : (<object 996012> (scdr (cdr s)))
> def args: : (<object 996012> (scddr (cdr scdr)))
> def args: : (<object 996084> (scdr (cdr s)))
> def args: : (<object 996084> (scddr (cdr scdr)))
> def args: : (<object 996152> (scdr (cdr s)))
> def args: : (<object 996152> (scddr (cdr scdr)))
> def args: : (<object 996224> (scdr (cdr s)))
> def args: : (<object 996224> (scddr (cdr scdr)))
> def args: : (<object 996292> (scdr (cdr s)))
> def args: : (<object 996292> (scddr (cdr scdr)))
> def args: : (<object 996364> (scdr (cdr s)))
> def args: : (<object 996364> (scddr (cdr scdr)))
> def args: : (<object 996432> (scdr (cdr s)))
> def args: : (<object 996432> (scddr (cdr scdr)))
> def args: : (<object 996504> (scdr (cdr s)))
> def args: : (<object 996504> (scddr (cdr scdr)))
> def args: : (<object 996572> (scdr (cdr s)))
> def args: : (<object 996572> (scddr (cdr scdr)))
> def args: : (<object 996644> (scdr (cdr s)))
> def args: : (<object 996644> (scddr (cdr scdr)))
> def args: : (<object 996712> (scdr (cdr s)))
> def args: : (<object 996712> (scddr (cdr scdr)))
> def args: : (<object 996784> (scdr (cdr s)))
> def args: : (<object 996784> (scddr (cdr scdr)))
> def args: : (<object 996852> (scdr (cdr s)))
> def args: : (<object 996852> (scddr (cdr scdr)))
> def args: : (<object 996924> (scdr (cdr s)))
> def args: : (<object 996924> (scddr (cdr scdr)))
> def args: : (<object 996992> (scdr (cdr s)))
> def args: : (<object 996992> (scddr (cdr scdr)))
> def args: : (<object 997064> (scdr (cdr s)))
> def args: : (<object 997064> (scddr (cdr scdr)))
> def args: : (<object 997132> (scdr (cdr s)))
> def args: : (<object 997132> (scddr (cdr scdr)))
> def args: : (<object 997204> (scdr (cdr s)))
> def args: : (<object 997204> (scddr (cdr scdr)))
> def args: : (<object 997272> (scdr (cdr s)))
> def args: : (<object 997272> (scddr (cdr scdr)))
> def args: : (<object 997344> (scdr (cdr s)))
> def args: : (<object 997344> (scddr (cdr scdr)))
> def args: : (<object 997412> (scdr (cdr s)))
> def args: : (<object 997412> (scddr (cdr scdr)))
> def args: : (<object 997484> (scdr (cdr s)))
> def args: : (<object 997484> (scddr (cdr scdr)))
> def args: : (<object 997552> (scdr (cdr s)))
> def args: : (<object 997552> (scddr (cdr scdr)))
> def args: : (<object 997624> (scdr (cdr s)))
> def args: : (<object 997624> (scddr (cdr scdr)))
> def args: : (<object 997692> (scdr (cdr s)))
> def args: : (<object 997692> (scddr (cdr scdr)))
> def args: : (<object 997764> (scdr (cdr s)))
> def args: : (<object 997764> (scddr (cdr scdr)))
> def args: : (<object 997832> (scdr (cdr s)))
> def args: : (<object 997832> (scddr (cdr scdr)))
> def args: : (<object 997904> (scdr (cdr s)))
> def args: : (<object 997904> (scddr (cdr scdr)))
> def args: : (<object 997972> (scdr (cdr s)))
> def args: : (<object 997972> (scddr (cdr scdr)))
> def args: : (<object 998044> (scdr (cdr s)))
> def args: : (<object 998044> (scddr (cdr scdr)))
> def args: : (<object 998112> (scdr (cdr s)))
> def args: : (<object 998112> (scddr (cdr scdr)))
> def args: : (<object 998184> (scdr (cdr s)))
> def args: : (<object 998184> (scddr (cdr scdr)))
> def args: : (<object 998252> (scdr (cdr s)))
> def args: : (<object 998252> (scddr (cdr scdr)))
> def args: : (<object 998324> (scdr (cdr s)))
> def args: : (<object 998324> (scddr (cdr scdr)))
> def args: : (<object 998392> (scdr (cdr s)))
> def args: : (<object 998392> (scddr (cdr scdr)))
> def args: : (<object 998464> (scdr (cdr s)))
> def args: : (<object 998464> (scddr (cdr scdr)))
> def args: : (<object 998532> (scdr (cdr s)))
> def args: : (<object 998532> (scddr (cdr scdr)))
> def args: : (<object 998604> (scdr (cdr s)))
> def args: : (<object 998604> (scddr (cdr scdr)))
> def args: : (<object 998672> (scdr (cdr s)))
> def args: : (<object 998672> (scddr (cdr scdr)))
> def args: : (<object 998744> (scdr (cdr s)))
> def args: : (<object 998744> (scddr (cdr scdr)))
> def args: : (<object 998812> (scdr (cdr s)))
> def args: : (<object 998812> (scddr (cdr scdr)))
> def args: : (<object 998884> (scdr (cdr s)))
> def args: : (<object 998884> (scddr (cdr scdr)))
> def args: : (<object 998952> (scdr (cdr s)))
> def args: : (<object 998952> (scddr (cdr scdr)))
> def args: : (<object 999024> (scdr (cdr s)))
> def args: : (<object 999024> (scddr (cdr scdr)))
> def args: : (<object 999092> (scdr (cdr s)))
> def args: : (<object 999092> (scddr (cdr scdr)))
> def args: : (<object 999164> (scdr (cdr s)))
> def args: : (<object 999164> (scddr (cdr scdr)))
> def args: : (<object 999232> (scdr (cdr s)))
> def args: : (<object 999232> (scddr (cdr scdr)))
> def args: : (<object 999304> (scdr (cdr s)))
> def args: : (<object 999304> (scddr (cdr scdr)))
> def args: : (<object 999372> (scdr (cdr s)))
> def args: : (<object 999372> (scddr (cdr scdr)))
> def args: : (<object 999444> (scdr (cdr s)))
> def args: : (<object 999444> (scddr (cdr scdr)))
> def args: : (<object 999512> (scdr (cdr s)))
> def args: : (<object 999512> (scddr (cdr scdr)))
> def args: : (<object 999584> (scdr (cdr s)))
> def args: : (<object 999584> (scddr (cdr scdr)))
> def args: : (<object 999652> (scdr (cdr s)))
> def args: : (<object 999652> (scddr (cdr scdr)))
> def args: : (<object 999724> (scdr (cdr s)))
> def args: : (<object 999724> (scddr (cdr scdr)))
> def args: : (<object 999792> (scdr (cdr s)))
> def args: : (<object 999792> (scddr (cdr scdr)))
> def args: : (<object 999864> (scdr (cdr s)))
> def args: : (<object 999864> (scddr (cdr scdr)))
> def args: : (<object 999932> (scdr (cdr s)))
> def args: : (<object 999932> (scddr (cdr scdr)))
> def args: : (<object 1000004> (scdr (cdr s)))
> def args: : (<object 1000004> (scddr (cdr scdr)))
> def args: : (<object 1000072> (scdr (cdr s)))
> def args: : (<object 1000072> (scddr (cdr scdr)))
> def args: : (<object 1000144> (scdr (cdr s)))
> def args: : (<object 1000144> (scddr (cdr scdr)))
> def args: : (<object 1000212> (scdr (cdr s)))
> def args: : (<object 1000212> (scddr (cdr scdr)))
> def args: : (<object 1000284> (scdr (cdr s)))
> def args: : (<object 1000284> (scddr (cdr scdr)))
> def args: : (<object 1000352> (scdr (cdr s)))
> def args: : (<object 1000352> (scddr (cdr scdr)))
> def args: : (<object 1000424> (scdr (cdr s)))
> def args: : (<object 1000424> (scddr (cdr scdr)))
> def args: : (<object 1000492> (scdr (cdr s)))
> def args: : (<object 1000492> (scddr (cdr scdr)))
> def args: : (<object 1000564> (scdr (cdr s)))
> def args: : (<object 1000564> (scddr (cdr scdr)))
> def args: : (<object 1000632> (scdr (cdr s)))
> def args: : (<object 1000632> (scddr (cdr scdr)))
> def args: : (<object 1000704> (scdr (cdr s)))
> def args: : (<object 1000704> (scddr (cdr scdr)))
> def args: : (<object 1000772> (scdr (cdr s)))
> def args: : (<object 1000772> (scddr (cdr scdr)))
> def args: : (<object 1000844> (scdr (cdr s)))
> def args: : (<object 1000844> (scddr (cdr scdr)))
> def args: : (<object 1000912> (scdr (cdr s)))
> def args: : (<object 1000912> (scddr (cdr scdr)))
> def args: : (<object 1000984> (scdr (cdr s)))
> def args: : (<object 1000984> (scddr (cdr scdr)))
> def args: : (<object 1001052> (scdr (cdr s)))
> def args: : (<object 1001052> (scddr (cdr scdr)))
> def args: : (<object 1001124> (scdr (cdr s)))
> def args: : (<object 1001124> (scddr (cdr scdr)))
> def args: : (<object 1001192> (scdr (cdr s)))
> def args: : (<object 1001192> (scddr (cdr scdr)))
> def args: : (<object 1001264> (scdr (cdr s)))
> def args: : (<object 1001264> (scddr (cdr scdr)))
> def args: : (<object 1001332> (scdr (cdr s)))
> def args: : (<object 1001332> (scddr (cdr scdr)))
> def args: : (<object 1001404> (scdr (cdr s)))
> def args: : (<object 1001404> (scddr (cdr scdr)))
> def args: : (<object 1001472> (scdr (cdr s)))
> def args: : (<object 1001472> (scddr (cdr scdr)))
> def args: : (<object 1001544> (scdr (cdr s)))
> def args: : (<object 1001544> (scddr (cdr scdr)))
> def args: : (<object 1001612> (scdr (cdr s)))
> def args: : (<object 1001612> (scddr (cdr scdr)))
> def args: : (<object 1001684> (scdr (cdr s)))
> def args: : (<object 1001684> (scddr (cdr scdr)))
> def args: : (<object 1001752> (scdr (cdr s)))
> def args: : (<object 1001752> (scddr (cdr scdr)))
> def args: : (<object 1001824> (scdr (cdr s)))
> def args: : (<object 1001824> (scddr (cdr scdr)))
> def args: : (<object 1001892> (scdr (cdr s)))
> def args: : (<object 1001892> (scddr (cdr scdr)))
> def args: : (<object 1001964> (scdr (cdr s)))
> def args: : (<object 1001964> (scddr (cdr scdr)))
> def args: : (<object 1002032> (scdr (cdr s)))
> def args: : (<object 1002032> (scddr (cdr scdr)))
> def args: : (<object 1002104> (scdr (cdr s)))
> def args: : (<object 1002104> (scddr (cdr scdr)))
> def args: : (<object 1002172> (scdr (cdr s)))
> def args: : (<object 1002172> (scddr (cdr scdr)))
> def args: : (<object 1002244> (scdr (cdr s)))
> def args: : (<object 1002244> (scddr (cdr scdr)))
> def args: : (<object 1002312> (scdr (cdr s)))
> def args: : (<object 1002312> (scddr (cdr scdr)))
> def args: : (<object 1002384> (scdr (cdr s)))
> def args: : (<object 1002384> (scddr (cdr scdr)))
> def args: : (<object 1002452> (scdr (cdr s)))
> def args: : (<object 1002452> (scddr (cdr scdr)))
> def args: : (<object 1002524> (scdr (cdr s)))
> def args: : (<object 1002524> (scddr (cdr scdr)))
> def args: : (<object 1002592> (scdr (cdr s)))
> def args: : (<object 1002592> (scddr (cdr scdr)))
> def args: : (<object 1002664> (scdr (cdr s)))
> def args: : (<object 1002664> (scddr (cdr scdr)))
> def args: : (<object 1002732> (scdr (cdr s)))
> def args: : (<object 1002732> (scddr (cdr scdr)))
> def args: : (<object 1002804> (scdr (cdr s)))
> def args: : (<object 1002804> (scddr (cdr scdr)))
> def args: : (<object 1002872> (scdr (cdr s)))
> def args: : (<object 1002872> (scddr (cdr scdr)))
> def args: : (<object 1002944> (scdr (cdr s)))
> def args: : (<object 1002944> (scddr (cdr scdr)))
> def args: : (<object 1003012> (scdr (cdr s)))
> def args: : (<object 1003012> (scddr (cdr scdr)))
> def args: : (<object 1003084> (scdr (cdr s)))
> def args: : (<object 1003084> (scddr (cdr scdr)))
> def args: : (<object 1003152> (scdr (cdr s)))
> def args: : (<object 1003152> (scddr (cdr scdr)))
> def args: : (<object 1003224> (scdr (cdr s)))
> def args: : (<object 1003224> (scddr (cdr scdr)))
> def args: : (<object 1003292> (scdr (cdr s)))
> def args: : (<object 1003292> (scddr (cdr scdr)))
> def args: : (<object 1003364> (scdr (cdr s)))
> def args: : (<object 1003364> (scddr (cdr scdr)))
> def args: : (<object 1003432> (scdr (cdr s)))
> def args: : (<object 1003432> (scddr (cdr scdr)))
> def args: : (<object 1003504> (scdr (cdr s)))
> def args: : (<object 1003504> (scddr (cdr scdr)))
> def args: : (<object 1003572> (scdr (cdr s)))
> def args: : (<object 1003572> (scddr (cdr scdr)))
> def args: : (<object 1003644> (scdr (cdr s)))
> def args: : (<object 1003644> (scddr (cdr scdr)))
> def args: : (<object 1003712> (scdr (cdr s)))
> def args: : (<object 1003712> (scddr (cdr scdr)))
> def args: : (<object 1003784> (scdr (cdr s)))
> def args: : (<object 1003784> (scddr (cdr scdr)))
> def args: : (<object 1003852> (scdr (cdr s)))
> def args: : (<object 1003852> (scddr (cdr scdr)))
> def args: : (<object 1003924> (scdr (cdr s)))
> def args: : (<object 1003924> (scddr (cdr scdr)))
> def args: : (<object 1003992> (scdr (cdr s)))
> def args: : (<object 1003992> (scddr (cdr scdr)))
> def args: : (<object 1004064> (scdr (cdr s)))
> def args: : (<object 1004064> (scddr (cdr scdr)))
> def args: : (<object 1004132> (scdr (cdr s)))
> def args: : (<object 1004132> (scddr (cdr scdr)))
> def args: : (<object 1004204> (scdr (cdr s)))
> def args: : (<object 1004204> (scddr (cdr scdr)))
> def args: : (<object 1004272> (scdr (cdr s)))
> def args: : (<object 1004272> (scddr (cdr scdr)))
> def args: : (<object 1004344> (scdr (cdr s)))
> def args: : (<object 1004344> (scddr (cdr scdr)))
> def args: : (<object 1004412> (scdr (cdr s)))
> def args: : (<object 1004412> (scddr (cdr scdr)))
> def args: : (<object 1004484> (scdr (cdr s)))
> def args: : (<object 1004484> (scddr (cdr scdr)))
> def args: : (<object 1004552> (scdr (cdr s)))
> def args: : (<object 1004552> (scddr (cdr scdr)))
> def args: : (<object 1004624> (scdr (cdr s)))
> def args: : (<object 1004624> (scddr (cdr scdr)))
> 3003def args: : (<object 1017967> (env (if (null? @) # (car @))))
>  def args: : (<object 1018074> (env (if (null? @) # (car @))))
> def args: : (<object 1018194> (scdr (cdr s)))
> def args: : (<object 1018194> (scddr (cdr scdr)))
> def args: : (<object 1018266> (scdr (cdr s)))
> def args: : (<object 1018266> (scddr (cdr scdr)))
> def args: : (<object 1018338> (scdr (cdr s)))
> def args: : (<object 1018338> (scddr (cdr scdr)))
> def args: : (<object 1018406> (scdr (cdr s)))
> def args: : (<object 1018406> (scddr (cdr scdr)))
> def args: : (<object 1018645> (scdr (cdr s)))
> def args: : (<object 1018645> (scddr (cdr scdr)))
> def args: : (<object 1018717> (scdr (cdr s)))
> def args: : (<object 1018717> (scddr (cdr scdr)))
> def args: : (<object 1018785> (scdr (cdr s)))
> def args: : (<object 1018785> (scddr (cdr scdr)))
> def args: : (<object 1018857> (scdr (cdr s)))
> def args: : (<object 1018857> (scddr (cdr scdr)))
> def args: : (<object 1018925> (scdr (cdr s)))
> def args: : (<object 1018925> (scddr (cdr scdr)))
> def args: : (<object 1018997> (scdr (cdr s)))
> def args: : (<object 1018997> (scddr (cdr scdr)))
> def args: : (<object 1019065> (scdr (cdr s)))
> def args: : (<object 1019065> (scddr (cdr scdr)))
> def args: : (<object 1019137> (scdr (cdr s)))
> def args: : (<object 1019137> (scddr (cdr scdr)))
> def args: : (<object 1019205> (scdr (cdr s)))
> def args: : (<object 1019205> (scddr (cdr scdr)))
> def args: : (<object 1019277> (scdr (cdr s)))
> def args: : (<object 1019277> (scddr (cdr scdr)))
> def args: : (<object 1019345> (scdr (cdr s)))
> def args: : (<object 1019345> (scddr (cdr scdr)))
> def args: : (<object 1019417> (scdr (cdr s)))
> def args: : (<object 1019417> (scddr (cdr scdr)))
> def args: : (<object 1019485> (scdr (cdr s)))
> def args: : (<object 1019485> (scddr (cdr scdr)))
> def args: : (<object 1019557> (scdr (cdr s)))
> def args: : (<object 1019557> (scddr (cdr scdr)))
> def args: : (<object 1019625> (scdr (cdr s)))
> def args: : (<object 1019625> (scddr (cdr scdr)))
> def args: : (<object 1019697> (scdr (cdr s)))
> def args: : (<object 1019697> (scddr (cdr scdr)))
> def args: : (<object 1019765> (scdr (cdr s)))
> def args: : (<object 1019765> (scddr (cdr scdr)))
> def args: : (<object 1019837> (scdr (cdr s)))
> def args: : (<object 1019837> (scddr (cdr scdr)))
> def args: : (<object 1019905> (scdr (cdr s)))
> def args: : (<object 1019905> (scddr (cdr scdr)))
> def args: : (<object 1019977> (scdr (cdr s)))
> def args: : (<object 1019977> (scddr (cdr scdr)))
> def args: : (<object 1020045> (scdr (cdr s)))
> def args: : (<object 1020045> (scddr (cdr scdr)))
> def args: : (<object 1020117> (scdr (cdr s)))
> def args: : (<object 1020117> (scddr (cdr scdr)))
> def args: : (<object 1020185> (scdr (cdr s)))
> def args: : (<object 1020185> (scddr (cdr scdr)))
> def args: : (<object 1020257> (scdr (cdr s)))
> def args: : (<object 1020257> (scddr (cdr scdr)))
> def args: : (<object 1020325> (scdr (cdr s)))
> def args: : (<object 1020325> (scddr (cdr scdr)))
> def args: : (<object 1020397> (scdr (cdr s)))
> def args: : (<object 1020397> (scddr (cdr scdr)))
> def args: : (<object 1020465> (scdr (cdr s)))
> def args: : (<object 1020465> (scddr (cdr scdr)))
> def args: : (<object 1020537> (scdr (cdr s)))
> def args: : (<object 1020537> (scddr (cdr scdr)))
> def args: : (<object 1020605> (scdr (cdr s)))
> def args: : (<object 1020605> (scddr (cdr scdr)))
> def args: : (<object 1020677> (scdr (cdr s)))
> def args: : (<object 1020677> (scddr (cdr scdr)))
> def args: : (<object 1020745> (scdr (cdr s)))
> def args: : (<object 1020745> (scddr (cdr scdr)))
> def args: : (<object 1020817> (scdr (cdr s)))
> def args: : (<object 1020817> (scddr (cdr scdr)))
> def args: : (<object 1020885> (scdr (cdr s)))
> def args: : (<object 1020885> (scddr (cdr scdr)))
> def args: : (<object 1020957> (scdr (cdr s)))
> def args: : (<object 1020957> (scddr (cdr scdr)))
> def args: : (<object 1021025> (scdr (cdr s)))
> def args: : (<object 1021025> (scddr (cdr scdr)))
> def args: : (<object 1021097> (scdr (cdr s)))
> def args: : (<object 1021097> (scddr (cdr scdr)))
> def args: : (<object 1021165> (scdr (cdr s)))
> def args: : (<object 1021165> (scddr (cdr scdr)))
> def args: : (<object 1021237> (scdr (cdr s)))
> def args: : (<object 1021237> (scddr (cdr scdr)))
> def args: : (<object 1021305> (scdr (cdr s)))
> def args: : (<object 1021305> (scddr (cdr scdr)))
> def args: : (<object 1021377> (scdr (cdr s)))
> def args: : (<object 1021377> (scddr (cdr scdr)))
> def args: : (<object 1021445> (scdr (cdr s)))
> def args: : (<object 1021445> (scddr (cdr scdr)))
> def args: : (<object 1021517> (scdr (cdr s)))
> def args: : (<object 1021517> (scddr (cdr scdr)))
> def args: : (<object 1021585> (scdr (cdr s)))
> def args: : (<object 1021585> (scddr (cdr scdr)))
> def args: : (<object 1021657> (scdr (cdr s)))
> def args: : (<object 1021657> (scddr (cdr scdr)))
> def args: : (<object 1021725> (scdr (cdr s)))
> def args: : (<object 1021725> (scddr (cdr scdr)))
> def args: : (<object 1021797> (scdr (cdr s)))
> def args: : (<object 1021797> (scddr (cdr scdr)))
> def args: : (<object 1021865> (scdr (cdr s)))
> def args: : (<object 1021865> (scddr (cdr scdr)))
> def args: : (<object 1021937> (scdr (cdr s)))
> def args: : (<object 1021937> (scddr (cdr scdr)))
> def args: : (<object 1022005> (scdr (cdr s)))
> def args: : (<object 1022005> (scddr (cdr scdr)))
> def args: : (<object 1022077> (scdr (cdr s)))
> def args: : (<object 1022077> (scddr (cdr scdr)))
> def args: : (<object 1022145> (scdr (cdr s)))
> def args: : (<object 1022145> (scddr (cdr scdr)))
> def args: : (<object 1022217> (scdr (cdr s)))
> def args: : (<object 1022217> (scddr (cdr scdr)))
> def args: : (<object 1022285> (scdr (cdr s)))
> def args: : (<object 1022285> (scddr (cdr scdr)))
> def args: : (<object 1022357> (scdr (cdr s)))
> def args: : (<object 1022357> (scddr (cdr scdr)))
> def args: : (<object 1022425> (scdr (cdr s)))
> def args: : (<object 1022425> (scddr (cdr scdr)))
> def args: : (<object 1022497> (scdr (cdr s)))
> def args: : (<object 1022497> (scddr (cdr scdr)))
> def args: : (<object 1022565> (scdr (cdr s)))
> def args: : (<object 1022565> (scddr (cdr scdr)))
> def args: : (<object 1022637> (scdr (cdr s)))
> def args: : (<object 1022637> (scddr (cdr scdr)))
> def args: : (<object 1022705> (scdr (cdr s)))
> def args: : (<object 1022705> (scddr (cdr scdr)))
> def args: : (<object 1022777> (scdr (cdr s)))
> def args: : (<object 1022777> (scddr (cdr scdr)))
> def args: : (<object 1022845> (scdr (cdr s)))
> def args: : (<object 1022845> (scddr (cdr scdr)))
> def args: : (<object 1022917> (scdr (cdr s)))
> def args: : (<object 1022917> (scddr (cdr scdr)))
> def args: : (<object 1022985> (scdr (cdr s)))
> def args: : (<object 1022985> (scddr (cdr scdr)))
> def args: : (<object 1023057> (scdr (cdr s)))
> def args: : (<object 1023057> (scddr (cdr scdr)))
> def args: : (<object 1023125> (scdr (cdr s)))
> def args: : (<object 1023125> (scddr (cdr scdr)))
> def args: : (<object 1023197> (scdr (cdr s)))
> def args: : (<object 1023197> (scddr (cdr scdr)))
> def args: : (<object 1023265> (scdr (cdr s)))
> def args: : (<object 1023265> (scddr (cdr scdr)))
> def args: : (<object 1023337> (scdr (cdr s)))
> def args: : (<object 1023337> (scddr (cdr scdr)))
> def args: : (<object 1023405> (scdr (cdr s)))
> def args: : (<object 1023405> (scddr (cdr scdr)))
> def args: : (<object 1023477> (scdr (cdr s)))
> def args: : (<object 1023477> (scddr (cdr scdr)))
> def args: : (<object 1023545> (scdr (cdr s)))
> def args: : (<object 1023545> (scddr (cdr scdr)))
> def args: : (<object 1023617> (scdr (cdr s)))
> def args: : (<object 1023617> (scddr (cdr scdr)))
> def args: : (<object 1023685> (scdr (cdr s)))
> def args: : (<object 1023685> (scddr (cdr scdr)))
> def args: : (<object 1023757> (scdr (cdr s)))
> def args: : (<object 1023757> (scddr (cdr scdr)))
> def args: : (<object 1023825> (scdr (cdr s)))
> def args: : (<object 1023825> (scddr (cdr scdr)))
> def args: : (<object 1023897> (scdr (cdr s)))
> def args: : (<object 1023897> (scddr (cdr scdr)))
> def args: : (<object 1023965> (scdr (cdr s)))
> def args: : (<object 1023965> (scddr (cdr scdr)))
> def args: : (<object 1024037> (scdr (cdr s)))
> def args: : (<object 1024037> (scddr (cdr scdr)))
> def args: : (<object 1024105> (scdr (cdr s)))
> def args: : (<object 1024105> (scddr (cdr scdr)))
> def args: : (<object 1024177> (scdr (cdr s)))
> def args: : (<object 1024177> (scddr (cdr scdr)))
> def args: : (<object 1024245> (scdr (cdr s)))
> def args: : (<object 1024245> (scddr (cdr scdr)))
> def args: : (<object 1024317> (scdr (cdr s)))
> def args: : (<object 1024317> (scddr (cdr scdr)))
> def args: : (<object 1024385> (scdr (cdr s)))
> def args: : (<object 1024385> (scddr (cdr scdr)))
> def args: : (<object 1024457> (scdr (cdr s)))
> def args: : (<object 1024457> (scddr (cdr scdr)))
> def args: : (<object 1024525> (scdr (cdr s)))
> def args: : (<object 1024525> (scddr (cdr scdr)))
> def args: : (<object 1024597> (scdr (cdr s)))
> def args: : (<object 1024597> (scddr (cdr scdr)))
> def args: : (<object 1024665> (scdr (cdr s)))
> def args: : (<object 1024665> (scddr (cdr scdr)))
> def args: : (<object 1024737> (scdr (cdr s)))
> def args: : (<object 1024737> (scddr (cdr scdr)))
> def args: : (<object 1024805> (scdr (cdr s)))
> def args: : (<object 1024805> (scddr (cdr scdr)))
> def args: : (<object 1024877> (scdr (cdr s)))
> def args: : (<object 1024877> (scddr (cdr scdr)))
> def args: : (<object 1024945> (scdr (cdr s)))
> def args: : (<object 1024945> (scddr (cdr scdr)))
> def args: : (<object 1025017> (scdr (cdr s)))
> def args: : (<object 1025017> (scddr (cdr scdr)))
> def args: : (<object 1025085> (scdr (cdr s)))
> def args: : (<object 1025085> (scddr (cdr scdr)))
> def args: : (<object 1025157> (scdr (cdr s)))
> def args: : (<object 1025157> (scddr (cdr scdr)))
> def args: : (<object 1025225> (scdr (cdr s)))
> def args: : (<object 1025225> (scddr (cdr scdr)))
> def args: : (<object 1025297> (scdr (cdr s)))
> def args: : (<object 1025297> (scddr (cdr scdr)))
> def args: : (<object 1025365> (scdr (cdr s)))
> def args: : (<object 1025365> (scddr (cdr scdr)))
> def args: : (<object 1025437> (scdr (cdr s)))
> def args: : (<object 1025437> (scddr (cdr scdr)))
> def args: : (<object 1025505> (scdr (cdr s)))
> def args: : (<object 1025505> (scddr (cdr scdr)))
> def args: : (<object 1025577> (scdr (cdr s)))
> def args: : (<object 1025577> (scddr (cdr scdr)))
> def args: : (<object 1025645> (scdr (cdr s)))
> def args: : (<object 1025645> (scddr (cdr scdr)))
> def args: : (<object 1025717> (scdr (cdr s)))
> def args: : (<object 1025717> (scddr (cdr scdr)))
> def args: : (<object 1025785> (scdr (cdr s)))
> def args: : (<object 1025785> (scddr (cdr scdr)))
> def args: : (<object 1025857> (scdr (cdr s)))
> def args: : (<object 1025857> (scddr (cdr scdr)))
> def args: : (<object 1025925> (scdr (cdr s)))
> def args: : (<object 1025925> (scddr (cdr scdr)))
> def args: : (<object 1025997> (scdr (cdr s)))
> def args: : (<object 1025997> (scddr (cdr scdr)))
> def args: : (<object 1026065> (scdr (cdr s)))
> def args: : (<object 1026065> (scddr (cdr scdr)))
> def args: : (<object 1026137> (scdr (cdr s)))
> def args: : (<object 1026137> (scddr (cdr scdr)))
> def args: : (<object 1026205> (scdr (cdr s)))
> def args: : (<object 1026205> (scddr (cdr scdr)))
> def args: : (<object 1026277> (scdr (cdr s)))
> def args: : (<object 1026277> (scddr (cdr scdr)))
> def args: : (<object 1026345> (scdr (cdr s)))
> def args: : (<object 1026345> (scddr (cdr scdr)))
> def args: : (<object 1026417> (scdr (cdr s)))
> def args: : (<object 1026417> (scddr (cdr scdr)))
> def args: : (<object 1026485> (scdr (cdr s)))
> def args: : (<object 1026485> (scddr (cdr scdr)))
> def args: : (<object 1026557> (scdr (cdr s)))
> def args: : (<object 1026557> (scddr (cdr scdr)))
> def args: : (<object 1026625> (scdr (cdr s)))
> def args: : (<object 1026625> (scddr (cdr scdr)))
> def args: : (<object 1026697> (scdr (cdr s)))
> def args: : (<object 1026697> (scddr (cdr scdr)))
> def args: : (<object 1026765> (scdr (cdr s)))
> def args: : (<object 1026765> (scddr (cdr scdr)))
> def args: : (<object 1026837> (scdr (cdr s)))
> def args: : (<object 1026837> (scddr (cdr scdr)))
> def args: : (<object 1026905> (scdr (cdr s)))
> def args: : (<object 1026905> (scddr (cdr scdr)))
> def args: : (<object 1026977> (scdr (cdr s)))
> def args: : (<object 1026977> (scddr (cdr scdr)))
> def args: : (<object 1027045> (scdr (cdr s)))
> def args: : (<object 1027045> (scddr (cdr scdr)))
> def args: : (<object 1027117> (scdr (cdr s)))
> def args: : (<object 1027117> (scddr (cdr scdr)))
> def args: : (<object 1027185> (scdr (cdr s)))
> def args: : (<object 1027185> (scddr (cdr scdr)))
> def args: : (<object 1027257> (scdr (cdr s)))
> def args: : (<object 1027257> (scddr (cdr scdr)))
> def args: : (<object 1027325> (scdr (cdr s)))
> def args: : (<object 1027325> (scddr (cdr scdr)))
> def args: : (<object 1027397> (scdr (cdr s)))
> def args: : (<object 1027397> (scddr (cdr scdr)))
> def args: : (<object 1027465> (scdr (cdr s)))
> def args: : (<object 1027465> (scddr (cdr scdr)))
> def args: : (<object 1027537> (scdr (cdr s)))
> def args: : (<object 1027537> (scddr (cdr scdr)))
> def args: : (<object 1027605> (scdr (cdr s)))
> def args: : (<object 1027605> (scddr (cdr scdr)))
> def args: : (<object 1027677> (scdr (cdr s)))
> def args: : (<object 1027677> (scddr (cdr scdr)))
> def args: : (<object 1027745> (scdr (cdr s)))
> def args: : (<object 1027745> (scddr (cdr scdr)))
> def args: : (<object 1027817> (scdr (cdr s)))
> def args: : (<object 1027817> (scddr (cdr scdr)))
> def args: : (<object 1027885> (scdr (cdr s)))
> def args: : (<object 1027885> (scddr (cdr scdr)))
> def args: : (<object 1027957> (scdr (cdr s)))
> def args: : (<object 1027957> (scddr (cdr scdr)))
> def args: : (<object 1028025> (scdr (cdr s)))
> def args: : (<object 1028025> (scddr (cdr scdr)))
> def args: : (<object 1028097> (scdr (cdr s)))
> def args: : (<object 1028097> (scddr (cdr scdr)))
> def args: : (<object 1028165> (scdr (cdr s)))
> def args: : (<object 1028165> (scddr (cdr scdr)))
> def args: : (<object 1028237> (scdr (cdr s)))
> def args: : (<object 1028237> (scddr (cdr scdr)))
> def args: : (<object 1028305> (scdr (cdr s)))
> def args: : (<object 1028305> (scddr (cdr scdr)))
> def args: : (<object 1028377> (scdr (cdr s)))
> def args: : (<object 1028377> (scddr (cdr scdr)))
> def args: : (<object 1028445> (scdr (cdr s)))
> def args: : (<object 1028445> (scddr (cdr scdr)))
> def args: : (<object 1028517> (scdr (cdr s)))
> def args: : (<object 1028517> (scddr (cdr scdr)))
> def args: : (<object 1028585> (scdr (cdr s)))
> def args: : (<object 1028585> (scddr (cdr scdr)))
> def args: : (<object 1028657> (scdr (cdr s)))
> def args: : (<object 1028657> (scddr (cdr scdr)))
> def args: : (<object 1028725> (scdr (cdr s)))
> def args: : (<object 1028725> (scddr (cdr scdr)))
> def args: : (<object 1028797> (scdr (cdr s)))
> def args: : (<object 1028797> (scddr (cdr scdr)))
> def args: : (<object 1028865> (scdr (cdr s)))
> def args: : (<object 1028865> (scddr (cdr scdr)))
> def args: : (<object 1028937> (scdr (cdr s)))
> def args: : (<object 1028937> (scddr (cdr scdr)))
> def args: : (<object 1029005> (scdr (cdr s)))
> def args: : (<object 1029005> (scddr (cdr scdr)))
> def args: : (<object 1029077> (scdr (cdr s)))
> def args: : (<object 1029077> (scddr (cdr scdr)))
> def args: : (<object 1029145> (scdr (cdr s)))
> def args: : (<object 1029145> (scddr (cdr scdr)))
> def args: : (<object 1029217> (scdr (cdr s)))
> def args: : (<object 1029217> (scddr (cdr scdr)))
> 3081def args: : (<object 1042731> (env (if (null? @) # (car @))))
>  def args: : (<object 1042838> (env (if (null? @) # (car @))))
> def args: : (<object 1042958> (scdr (cdr s)))
> def args: : (<object 1042958> (scddr (cdr scdr)))
> def args: : (<object 1043030> (scdr (cdr s)))
> def args: : (<object 1043030> (scddr (cdr scdr)))
> def args: : (<object 1043102> (scdr (cdr s)))
> def args: : (<object 1043102> (scddr (cdr scdr)))
> def args: : (<object 1043170> (scdr (cdr s)))
> def args: : (<object 1043170> (scddr (cdr scdr)))
> def args: : (<object 1043409> (scdr (cdr s)))
> def args: : (<object 1043409> (scddr (cdr scdr)))
> def args: : (<object 1043481> (scdr (cdr s)))
> def args: : (<object 1043481> (scddr (cdr scdr)))
> def args: : (<object 1043549> (scdr (cdr s)))
> def args: : (<object 1043549> (scddr (cdr scdr)))
> def args: : (<object 1043621> (scdr (cdr s)))
> def args: : (<object 1043621> (scddr (cdr scdr)))
> def args: : (<object 1043689> (scdr (cdr s)))
> def args: : (<object 1043689> (scddr (cdr scdr)))
> def args: : (<object 1043761> (scdr (cdr s)))
> def args: : (<object 1043761> (scddr (cdr scdr)))
> def args: : (<object 1043829> (scdr (cdr s)))
> def args: : (<object 1043829> (scddr (cdr scdr)))
> def args: : (<object 1043901> (scdr (cdr s)))
> def args: : (<object 1043901> (scddr (cdr scdr)))
> def args: : (<object 1043969> (scdr (cdr s)))
> def args: : (<object 1043969> (scddr (cdr scdr)))
> def args: : (<object 1044041> (scdr (cdr s)))
> def args: : (<object 1044041> (scddr (cdr scdr)))
> def args: : (<object 1044109> (scdr (cdr s)))
> def args: : (<object 1044109> (scddr (cdr scdr)))
> def args: : (<object 1044181> (scdr (cdr s)))
> def args: : (<object 1044181> (scddr (cdr scdr)))
> def args: : (<object 1044249> (scdr (cdr s)))
> def args: : (<object 1044249> (scddr (cdr scdr)))
> def args: : (<object 1044321> (scdr (cdr s)))
> def args: : (<object 1044321> (scddr (cdr scdr)))
> def args: : (<object 1044389> (scdr (cdr s)))
> def args: : (<object 1044389> (scddr (cdr scdr)))
> def args: : (<object 1044461> (scdr (cdr s)))
> def args: : (<object 1044461> (scddr (cdr scdr)))
> def args: : (<object 1044529> (scdr (cdr s)))
> def args: : (<object 1044529> (scddr (cdr scdr)))
> def args: : (<object 1044601> (scdr (cdr s)))
> def args: : (<object 1044601> (scddr (cdr scdr)))
> def args: : (<object 1044669> (scdr (cdr s)))
> def args: : (<object 1044669> (scddr (cdr scdr)))
> def args: : (<object 1044741> (scdr (cdr s)))
> def args: : (<object 1044741> (scddr (cdr scdr)))
> def args: : (<object 1044809> (scdr (cdr s)))
> def args: : (<object 1044809> (scddr (cdr scdr)))
> def args: : (<object 1044881> (scdr (cdr s)))
> def args: : (<object 1044881> (scddr (cdr scdr)))
> def args: : (<object 1044949> (scdr (cdr s)))
> def args: : (<object 1044949> (scddr (cdr scdr)))
> def args: : (<object 1045021> (scdr (cdr s)))
> def args: : (<object 1045021> (scddr (cdr scdr)))
> def args: : (<object 1045089> (scdr (cdr s)))
> def args: : (<object 1045089> (scddr (cdr scdr)))
> def args: : (<object 1045161> (scdr (cdr s)))
> def args: : (<object 1045161> (scddr (cdr scdr)))
> def args: : (<object 1045229> (scdr (cdr s)))
> def args: : (<object 1045229> (scddr (cdr scdr)))
> def args: : (<object 1045301> (scdr (cdr s)))
> def args: : (<object 1045301> (scddr (cdr scdr)))
> def args: : (<object 1045369> (scdr (cdr s)))
> def args: : (<object 1045369> (scddr (cdr scdr)))
> def args: : (<object 1045441> (scdr (cdr s)))
> def args: : (<object 1045441> (scddr (cdr scdr)))
> def args: : (<object 1045509> (scdr (cdr s)))
> def args: : (<object 1045509> (scddr (cdr scdr)))
> def args: : (<object 1045581> (scdr (cdr s)))
> def args: : (<object 1045581> (scddr (cdr scdr)))
> def args: : (<object 1045649> (scdr (cdr s)))
> def args: : (<object 1045649> (scddr (cdr scdr)))
> def args: : (<object 1045721> (scdr (cdr s)))
> def args: : (<object 1045721> (scddr (cdr scdr)))
> def args: : (<object 1045789> (scdr (cdr s)))
> def args: : (<object 1045789> (scddr (cdr scdr)))
> def args: : (<object 1045861> (scdr (cdr s)))
> def args: : (<object 1045861> (scddr (cdr scdr)))
> def args: : (<object 1045929> (scdr (cdr s)))
> def args: : (<object 1045929> (scddr (cdr scdr)))
> def args: : (<object 1046001> (scdr (cdr s)))
> def args: : (<object 1046001> (scddr (cdr scdr)))
> def args: : (<object 1046069> (scdr (cdr s)))
> def args: : (<object 1046069> (scddr (cdr scdr)))
> def args: : (<object 1046141> (scdr (cdr s)))
> def args: : (<object 1046141> (scddr (cdr scdr)))
> def args: : (<object 1046209> (scdr (cdr s)))
> def args: : (<object 1046209> (scddr (cdr scdr)))
> def args: : (<object 1046281> (scdr (cdr s)))
> def args: : (<object 1046281> (scddr (cdr scdr)))
> def args: : (<object 1046349> (scdr (cdr s)))
> def args: : (<object 1046349> (scddr (cdr scdr)))
> def args: : (<object 1046421> (scdr (cdr s)))
> def args: : (<object 1046421> (scddr (cdr scdr)))
> def args: : (<object 1046489> (scdr (cdr s)))
> def args: : (<object 1046489> (scddr (cdr scdr)))
> def args: : (<object 1046561> (scdr (cdr s)))
> def args: : (<object 1046561> (scddr (cdr scdr)))
> def args: : (<object 1046629> (scdr (cdr s)))
> def args: : (<object 1046629> (scddr (cdr scdr)))
> def args: : (<object 1046701> (scdr (cdr s)))
> def args: : (<object 1046701> (scddr (cdr scdr)))
> def args: : (<object 1046769> (scdr (cdr s)))
> def args: : (<object 1046769> (scddr (cdr scdr)))
> def args: : (<object 1046841> (scdr (cdr s)))
> def args: : (<object 1046841> (scddr (cdr scdr)))
> def args: : (<object 1046909> (scdr (cdr s)))
> def args: : (<object 1046909> (scddr (cdr scdr)))
> def args: : (<object 1046981> (scdr (cdr s)))
> def args: : (<object 1046981> (scddr (cdr scdr)))
> def args: : (<object 1047049> (scdr (cdr s)))
> def args: : (<object 1047049> (scddr (cdr scdr)))
> def args: : (<object 1047121> (scdr (cdr s)))
> def args: : (<object 1047121> (scddr (cdr scdr)))
> def args: : (<object 1047189> (scdr (cdr s)))
> def args: : (<object 1047189> (scddr (cdr scdr)))
> def args: : (<object 1047261> (scdr (cdr s)))
> def args: : (<object 1047261> (scddr (cdr scdr)))
> def args: : (<object 1047329> (scdr (cdr s)))
> def args: : (<object 1047329> (scddr (cdr scdr)))
> def args: : (<object 1047401> (scdr (cdr s)))
> def args: : (<object 1047401> (scddr (cdr scdr)))
> def args: : (<object 1047469> (scdr (cdr s)))
> def args: : (<object 1047469> (scddr (cdr scdr)))
> def args: : (<object 1047541> (scdr (cdr s)))
> def args: : (<object 1047541> (scddr (cdr scdr)))
> def args: : (<object 1047609> (scdr (cdr s)))
> def args: : (<object 1047609> (scddr (cdr scdr)))
> def args: : (<object 1047681> (scdr (cdr s)))
> def args: : (<object 1047681> (scddr (cdr scdr)))
> def args: : (<object 1047749> (scdr (cdr s)))
> def args: : (<object 1047749> (scddr (cdr scdr)))
> def args: : (<object 1047821> (scdr (cdr s)))
> def args: : (<object 1047821> (scddr (cdr scdr)))
> def args: : (<object 1047889> (scdr (cdr s)))
> def args: : (<object 1047889> (scddr (cdr scdr)))
> def args: : (<object 1047961> (scdr (cdr s)))
> def args: : (<object 1047961> (scddr (cdr scdr)))
> def args: : (<object 1048029> (scdr (cdr s)))
> def args: : (<object 1048029> (scddr (cdr scdr)))
> def args: : (<object 1048101> (scdr (cdr s)))
> def args: : (<object 1048101> (scddr (cdr scdr)))
> def args: : (<object 1048169> (scdr (cdr s)))
> def args: : (<object 1048169> (scddr (cdr scdr)))
> def args: : (<object 1048241> (scdr (cdr s)))
> def args: : (<object 1048241> (scddr (cdr scdr)))
> def args: : (<object 1048309> (scdr (cdr s)))
> def args: : (<object 1048309> (scddr (cdr scdr)))
> def args: : (<object 1048381> (scdr (cdr s)))
> def args: : (<object 1048381> (scddr (cdr scdr)))
> def args: : (<object 1048449> (scdr (cdr s)))
> def args: : (<object 1048449> (scddr (cdr scdr)))
> def args: : (<object 1048521> (scdr (cdr s)))
> def args: : (<object 1048521> (scddr (cdr scdr)))
> def args: : (<object 1048589> (scdr (cdr s)))
> def args: : (<object 1048589> (scddr (cdr scdr)))
> def args: : (<object 1048661> (scdr (cdr s)))
> def args: : (<object 1048661> (scddr (cdr scdr)))
> def args: : (<object 1048729> (scdr (cdr s)))
> def args: : (<object 1048729> (scddr (cdr scdr)))
> def args: : (<object 1048801> (scdr (cdr s)))
> def args: : (<object 1048801> (scddr (cdr scdr)))
> def args: : (<object 1048869> (scdr (cdr s)))
> def args: : (<object 1048869> (scddr (cdr scdr)))
> def args: : (<object 1048941> (scdr (cdr s)))
> def args: : (<object 1048941> (scddr (cdr scdr)))
> def args: : (<object 1049009> (scdr (cdr s)))
> def args: : (<object 1049009> (scddr (cdr scdr)))
> def args: : (<object 1049081> (scdr (cdr s)))
> def args: : (<object 1049081> (scddr (cdr scdr)))
> def args: : (<object 1049149> (scdr (cdr s)))
> def args: : (<object 1049149> (scddr (cdr scdr)))
> def args: : (<object 1049221> (scdr (cdr s)))
> def args: : (<object 1049221> (scddr (cdr scdr)))
> def args: : (<object 1049289> (scdr (cdr s)))
> def args: : (<object 1049289> (scddr (cdr scdr)))
> def args: : (<object 1049361> (scdr (cdr s)))
> def args: : (<object 1049361> (scddr (cdr scdr)))
> def args: : (<object 1049429> (scdr (cdr s)))
> def args: : (<object 1049429> (scddr (cdr scdr)))
> def args: : (<object 1049501> (scdr (cdr s)))
> def args: : (<object 1049501> (scddr (cdr scdr)))
> def args: : (<object 1049569> (scdr (cdr s)))
> def args: : (<object 1049569> (scddr (cdr scdr)))
> def args: : (<object 1049641> (scdr (cdr s)))
> def args: : (<object 1049641> (scddr (cdr scdr)))
> def args: : (<object 1049709> (scdr (cdr s)))
> def args: : (<object 1049709> (scddr (cdr scdr)))
> def args: : (<object 1049781> (scdr (cdr s)))
> def args: : (<object 1049781> (scddr (cdr scdr)))
> def args: : (<object 1049849> (scdr (cdr s)))
> def args: : (<object 1049849> (scddr (cdr scdr)))
> def args: : (<object 1049921> (scdr (cdr s)))
> def args: : (<object 1049921> (scddr (cdr scdr)))
> def args: : (<object 1049989> (scdr (cdr s)))
> def args: : (<object 1049989> (scddr (cdr scdr)))
> def args: : (<object 1050061> (scdr (cdr s)))
> def args: : (<object 1050061> (scddr (cdr scdr)))
> def args: : (<object 1050129> (scdr (cdr s)))
> def args: : (<object 1050129> (scddr (cdr scdr)))
> def args: : (<object 1050201> (scdr (cdr s)))
> def args: : (<object 1050201> (scddr (cdr scdr)))
> def args: : (<object 1050269> (scdr (cdr s)))
> def args: : (<object 1050269> (scddr (cdr scdr)))
> def args: : (<object 1050341> (scdr (cdr s)))
> def args: : (<object 1050341> (scddr (cdr scdr)))
> def args: : (<object 1050409> (scdr (cdr s)))
> def args: : (<object 1050409> (scddr (cdr scdr)))
> def args: : (<object 1050481> (scdr (cdr s)))
> def args: : (<object 1050481> (scddr (cdr scdr)))
> def args: : (<object 1050549> (scdr (cdr s)))
> def args: : (<object 1050549> (scddr (cdr scdr)))
> def args: : (<object 1050621> (scdr (cdr s)))
> def args: : (<object 1050621> (scddr (cdr scdr)))
> def args: : (<object 1050689> (scdr (cdr s)))
> def args: : (<object 1050689> (scddr (cdr scdr)))
> def args: : (<object 1050761> (scdr (cdr s)))
> def args: : (<object 1050761> (scddr (cdr scdr)))
> def args: : (<object 1050829> (scdr (cdr s)))
> def args: : (<object 1050829> (scddr (cdr scdr)))
> def args: : (<object 1050901> (scdr (cdr s)))
> def args: : (<object 1050901> (scddr (cdr scdr)))
> def args: : (<object 1050969> (scdr (cdr s)))
> def args: : (<object 1050969> (scddr (cdr scdr)))
> def args: : (<object 1051041> (scdr (cdr s)))
> def args: : (<object 1051041> (scddr (cdr scdr)))
> def args: : (<object 1051109> (scdr (cdr s)))
> def args: : (<object 1051109> (scddr (cdr scdr)))
> def args: : (<object 1051181> (scdr (cdr s)))
> def args: : (<object 1051181> (scddr (cdr scdr)))
> def args: : (<object 1051249> (scdr (cdr s)))
> def args: : (<object 1051249> (scddr (cdr scdr)))
> def args: : (<object 1051321> (scdr (cdr s)))
> def args: : (<object 1051321> (scddr (cdr scdr)))
> def args: : (<object 1051389> (scdr (cdr s)))
> def args: : (<object 1051389> (scddr (cdr scdr)))
> def args: : (<object 1051461> (scdr (cdr s)))
> def args: : (<object 1051461> (scddr (cdr scdr)))
> def args: : (<object 1051529> (scdr (cdr s)))
> def args: : (<object 1051529> (scddr (cdr scdr)))
> def args: : (<object 1051601> (scdr (cdr s)))
> def args: : (<object 1051601> (scddr (cdr scdr)))
> def args: : (<object 1051669> (scdr (cdr s)))
> def args: : (<object 1051669> (scddr (cdr scdr)))
> def args: : (<object 1051741> (scdr (cdr s)))
> def args: : (<object 1051741> (scddr (cdr scdr)))
> def args: : (<object 1051809> (scdr (cdr s)))
> def args: : (<object 1051809> (scddr (cdr scdr)))
> def args: : (<object 1051881> (scdr (cdr s)))
> def args: : (<object 1051881> (scddr (cdr scdr)))
> def args: : (<object 1051949> (scdr (cdr s)))
> def args: : (<object 1051949> (scddr (cdr scdr)))
> def args: : (<object 1052021> (scdr (cdr s)))
> def args: : (<object 1052021> (scddr (cdr scdr)))
> def args: : (<object 1052089> (scdr (cdr s)))
> def args: : (<object 1052089> (scddr (cdr scdr)))
> def args: : (<object 1052161> (scdr (cdr s)))
> def args: : (<object 1052161> (scddr (cdr scdr)))
> def args: : (<object 1052229> (scdr (cdr s)))
> def args: : (<object 1052229> (scddr (cdr scdr)))
> def args: : (<object 1052301> (scdr (cdr s)))
> def args: : (<object 1052301> (scddr (cdr scdr)))
> def args: : (<object 1052369> (scdr (cdr s)))
> def args: : (<object 1052369> (scddr (cdr scdr)))
> def args: : (<object 1052441> (scdr (cdr s)))
> def args: : (<object 1052441> (scddr (cdr scdr)))
> def args: : (<object 1052509> (scdr (cdr s)))
> def args: : (<object 1052509> (scddr (cdr scdr)))
> def args: : (<object 1052581> (scdr (cdr s)))
> def args: : (<object 1052581> (scddr (cdr scdr)))
> def args: : (<object 1052649> (scdr (cdr s)))
> def args: : (<object 1052649> (scddr (cdr scdr)))
> def args: : (<object 1052721> (scdr (cdr s)))
> def args: : (<object 1052721> (scddr (cdr scdr)))
> def args: : (<object 1052789> (scdr (cdr s)))
> def args: : (<object 1052789> (scddr (cdr scdr)))
> def args: : (<object 1052861> (scdr (cdr s)))
> def args: : (<object 1052861> (scddr (cdr scdr)))
> def args: : (<object 1052929> (scdr (cdr s)))
> def args: : (<object 1052929> (scddr (cdr scdr)))
> def args: : (<object 1053001> (scdr (cdr s)))
> def args: : (<object 1053001> (scddr (cdr scdr)))
> def args: : (<object 1053069> (scdr (cdr s)))
> def args: : (<object 1053069> (scddr (cdr scdr)))
> def args: : (<object 1053141> (scdr (cdr s)))
> def args: : (<object 1053141> (scddr (cdr scdr)))
> def args: : (<object 1053209> (scdr (cdr s)))
> def args: : (<object 1053209> (scddr (cdr scdr)))
> def args: : (<object 1053281> (scdr (cdr s)))
> def args: : (<object 1053281> (scddr (cdr scdr)))
> def args: : (<object 1053349> (scdr (cdr s)))
> def args: : (<object 1053349> (scddr (cdr scdr)))
> def args: : (<object 1053421> (scdr (cdr s)))
> def args: : (<object 1053421> (scddr (cdr scdr)))
> def args: : (<object 1053489> (scdr (cdr s)))
> def args: : (<object 1053489> (scddr (cdr scdr)))
> def args: : (<object 1053561> (scdr (cdr s)))
> def args: : (<object 1053561> (scddr (cdr scdr)))
> def args: : (<object 1053629> (scdr (cdr s)))
> def args: : (<object 1053629> (scddr (cdr scdr)))
> def args: : (<object 1053701> (scdr (cdr s)))
> def args: : (<object 1053701> (scddr (cdr scdr)))
> def args: : (<object 1053769> (scdr (cdr s)))
> def args: : (<object 1053769> (scddr (cdr scdr)))
> def args: : (<object 1053841> (scdr (cdr s)))
> def args: : (<object 1053841> (scddr (cdr scdr)))
> def args: : (<object 1053909> (scdr (cdr s)))
> def args: : (<object 1053909> (scddr (cdr scdr)))
> def args: : (<object 1053981> (scdr (cdr s)))
> def args: : (<object 1053981> (scddr (cdr scdr)))
> def args: : (<object 1054049> (scdr (cdr s)))
> def args: : (<object 1054049> (scddr (cdr scdr)))
> def args: : (<object 1054121> (scdr (cdr s)))
> def args: : (<object 1054121> (scddr (cdr scdr)))
> 3160def args: : (<object 1067806> (env (if (null? @) # (car @))))
>  def args: : (<object 1067913> (env (if (null? @) # (car @))))
> def args: : (<object 1068033> (scdr (cdr s)))
> def args: : (<object 1068033> (scddr (cdr scdr)))
> def args: : (<object 1068105> (scdr (cdr s)))
> def args: : (<object 1068105> (scddr (cdr scdr)))
> def args: : (<object 1068177> (scdr (cdr s)))
> def args: : (<object 1068177> (scddr (cdr scdr)))
> def args: : (<object 1068245> (scdr (cdr s)))
> def args: : (<object 1068245> (scddr (cdr scdr)))
> def args: : (<object 1068484> (scdr (cdr s)))
> def args: : (<object 1068484> (scddr (cdr scdr)))
> def args: : (<object 1068556> (scdr (cdr s)))
> def args: : (<object 1068556> (scddr (cdr scdr)))
> def args: : (<object 1068624> (scdr (cdr s)))
> def args: : (<object 1068624> (scddr (cdr scdr)))
> def args: : (<object 1068696> (scdr (cdr s)))
> def args: : (<object 1068696> (scddr (cdr scdr)))
> def args: : (<object 1068764> (scdr (cdr s)))
> def args: : (<object 1068764> (scddr (cdr scdr)))
> def args: : (<object 1068836> (scdr (cdr s)))
> def args: : (<object 1068836> (scddr (cdr scdr)))
> def args: : (<object 1068904> (scdr (cdr s)))
> def args: : (<object 1068904> (scddr (cdr scdr)))
> def args: : (<object 1068976> (scdr (cdr s)))
> def args: : (<object 1068976> (scddr (cdr scdr)))
> def args: : (<object 1069044> (scdr (cdr s)))
> def args: : (<object 1069044> (scddr (cdr scdr)))
> def args: : (<object 1069116> (scdr (cdr s)))
> def args: : (<object 1069116> (scddr (cdr scdr)))
> def args: : (<object 1069184> (scdr (cdr s)))
> def args: : (<object 1069184> (scddr (cdr scdr)))
> def args: : (<object 1069256> (scdr (cdr s)))
> def args: : (<object 1069256> (scddr (cdr scdr)))
> def args: : (<object 1069324> (scdr (cdr s)))
> def args: : (<object 1069324> (scddr (cdr scdr)))
> def args: : (<object 1069396> (scdr (cdr s)))
> def args: : (<object 1069396> (scddr (cdr scdr)))
> def args: : (<object 1069464> (scdr (cdr s)))
> def args: : (<object 1069464> (scddr (cdr scdr)))
> def args: : (<object 1069536> (scdr (cdr s)))
> def args: : (<object 1069536> (scddr (cdr scdr)))
> def args: : (<object 1069604> (scdr (cdr s)))
> def args: : (<object 1069604> (scddr (cdr scdr)))
> def args: : (<object 1069676> (scdr (cdr s)))
> def args: : (<object 1069676> (scddr (cdr scdr)))
> def args: : (<object 1069744> (scdr (cdr s)))
> def args: : (<object 1069744> (scddr (cdr scdr)))
> def args: : (<object 1069816> (scdr (cdr s)))
> def args: : (<object 1069816> (scddr (cdr scdr)))
> def args: : (<object 1069884> (scdr (cdr s)))
> def args: : (<object 1069884> (scddr (cdr scdr)))
> def args: : (<object 1069956> (scdr (cdr s)))
> def args: : (<object 1069956> (scddr (cdr scdr)))
> def args: : (<object 1070024> (scdr (cdr s)))
> def args: : (<object 1070024> (scddr (cdr scdr)))
> def args: : (<object 1070096> (scdr (cdr s)))
> def args: : (<object 1070096> (scddr (cdr scdr)))
> def args: : (<object 1070164> (scdr (cdr s)))
> def args: : (<object 1070164> (scddr (cdr scdr)))
> def args: : (<object 1070236> (scdr (cdr s)))
> def args: : (<object 1070236> (scddr (cdr scdr)))
> def args: : (<object 1070304> (scdr (cdr s)))
> def args: : (<object 1070304> (scddr (cdr scdr)))
> def args: : (<object 1070376> (scdr (cdr s)))
> def args: : (<object 1070376> (scddr (cdr scdr)))
> def args: : (<object 1070444> (scdr (cdr s)))
> def args: : (<object 1070444> (scddr (cdr scdr)))
> def args: : (<object 1070516> (scdr (cdr s)))
> def args: : (<object 1070516> (scddr (cdr scdr)))
> def args: : (<object 1070584> (scdr (cdr s)))
> def args: : (<object 1070584> (scddr (cdr scdr)))
> def args: : (<object 1070656> (scdr (cdr s)))
> def args: : (<object 1070656> (scddr (cdr scdr)))
> def args: : (<object 1070724> (scdr (cdr s)))
> def args: : (<object 1070724> (scddr (cdr scdr)))
> def args: : (<object 1070796> (scdr (cdr s)))
> def args: : (<object 1070796> (scddr (cdr scdr)))
> def args: : (<object 1070864> (scdr (cdr s)))
> def args: : (<object 1070864> (scddr (cdr scdr)))
> def args: : (<object 1070936> (scdr (cdr s)))
> def args: : (<object 1070936> (scddr (cdr scdr)))
> def args: : (<object 1071004> (scdr (cdr s)))
> def args: : (<object 1071004> (scddr (cdr scdr)))
> def args: : (<object 1071076> (scdr (cdr s)))
> def args: : (<object 1071076> (scddr (cdr scdr)))
> def args: : (<object 1071144> (scdr (cdr s)))
> def args: : (<object 1071144> (scddr (cdr scdr)))
> def args: : (<object 1071216> (scdr (cdr s)))
> def args: : (<object 1071216> (scddr (cdr scdr)))
> def args: : (<object 1071284> (scdr (cdr s)))
> def args: : (<object 1071284> (scddr (cdr scdr)))
> def args: : (<object 1071356> (scdr (cdr s)))
> def args: : (<object 1071356> (scddr (cdr scdr)))
> def args: : (<object 1071424> (scdr (cdr s)))
> def args: : (<object 1071424> (scddr (cdr scdr)))
> def args: : (<object 1071496> (scdr (cdr s)))
> def args: : (<object 1071496> (scddr (cdr scdr)))
> def args: : (<object 1071564> (scdr (cdr s)))
> def args: : (<object 1071564> (scddr (cdr scdr)))
> def args: : (<object 1071636> (scdr (cdr s)))
> def args: : (<object 1071636> (scddr (cdr scdr)))
> def args: : (<object 1071704> (scdr (cdr s)))
> def args: : (<object 1071704> (scddr (cdr scdr)))
> def args: : (<object 1071776> (scdr (cdr s)))
> def args: : (<object 1071776> (scddr (cdr scdr)))
> def args: : (<object 1071844> (scdr (cdr s)))
> def args: : (<object 1071844> (scddr (cdr scdr)))
> def args: : (<object 1071916> (scdr (cdr s)))
> def args: : (<object 1071916> (scddr (cdr scdr)))
> def args: : (<object 1071984> (scdr (cdr s)))
> def args: : (<object 1071984> (scddr (cdr scdr)))
> def args: : (<object 1072056> (scdr (cdr s)))
> def args: : (<object 1072056> (scddr (cdr scdr)))
> def args: : (<object 1072124> (scdr (cdr s)))
> def args: : (<object 1072124> (scddr (cdr scdr)))
> def args: : (<object 1072196> (scdr (cdr s)))
> def args: : (<object 1072196> (scddr (cdr scdr)))
> def args: : (<object 1072264> (scdr (cdr s)))
> def args: : (<object 1072264> (scddr (cdr scdr)))
> def args: : (<object 1072336> (scdr (cdr s)))
> def args: : (<object 1072336> (scddr (cdr scdr)))
> def args: : (<object 1072404> (scdr (cdr s)))
> def args: : (<object 1072404> (scddr (cdr scdr)))
> def args: : (<object 1072476> (scdr (cdr s)))
> def args: : (<object 1072476> (scddr (cdr scdr)))
> def args: : (<object 1072544> (scdr (cdr s)))
> def args: : (<object 1072544> (scddr (cdr scdr)))
> def args: : (<object 1072616> (scdr (cdr s)))
> def args: : (<object 1072616> (scddr (cdr scdr)))
> def args: : (<object 1072684> (scdr (cdr s)))
> def args: : (<object 1072684> (scddr (cdr scdr)))
> def args: : (<object 1072756> (scdr (cdr s)))
> def args: : (<object 1072756> (scddr (cdr scdr)))
> def args: : (<object 1072824> (scdr (cdr s)))
> def args: : (<object 1072824> (scddr (cdr scdr)))
> def args: : (<object 1072896> (scdr (cdr s)))
> def args: : (<object 1072896> (scddr (cdr scdr)))
> def args: : (<object 1072964> (scdr (cdr s)))
> def args: : (<object 1072964> (scddr (cdr scdr)))
> def args: : (<object 1073036> (scdr (cdr s)))
> def args: : (<object 1073036> (scddr (cdr scdr)))
> def args: : (<object 1073104> (scdr (cdr s)))
> def args: : (<object 1073104> (scddr (cdr scdr)))
> def args: : (<object 1073176> (scdr (cdr s)))
> def args: : (<object 1073176> (scddr (cdr scdr)))
> def args: : (<object 1073244> (scdr (cdr s)))
> def args: : (<object 1073244> (scddr (cdr scdr)))
> def args: : (<object 1073316> (scdr (cdr s)))
> def args: : (<object 1073316> (scddr (cdr scdr)))
> def args: : (<object 1073384> (scdr (cdr s)))
> def args: : (<object 1073384> (scddr (cdr scdr)))
> def args: : (<object 1073456> (scdr (cdr s)))
> def args: : (<object 1073456> (scddr (cdr scdr)))
> def args: : (<object 1073524> (scdr (cdr s)))
> def args: : (<object 1073524> (scddr (cdr scdr)))
> def args: : (<object 1073596> (scdr (cdr s)))
> def args: : (<object 1073596> (scddr (cdr scdr)))
> def args: : (<object 1073664> (scdr (cdr s)))
> def args: : (<object 1073664> (scddr (cdr scdr)))
> def args: : (<object 1073736> (scdr (cdr s)))
> def args: : (<object 1073736> (scddr (cdr scdr)))
> def args: : (<object 1073804> (scdr (cdr s)))
> def args: : (<object 1073804> (scddr (cdr scdr)))
> def args: : (<object 1073876> (scdr (cdr s)))
> def args: : (<object 1073876> (scddr (cdr scdr)))
> def args: : (<object 1073944> (scdr (cdr s)))
> def args: : (<object 1073944> (scddr (cdr scdr)))
> def args: : (<object 1074016> (scdr (cdr s)))
> def args: : (<object 1074016> (scddr (cdr scdr)))
> def args: : (<object 1074084> (scdr (cdr s)))
> def args: : (<object 1074084> (scddr (cdr scdr)))
> def args: : (<object 1074156> (scdr (cdr s)))
> def args: : (<object 1074156> (scddr (cdr scdr)))
> def args: : (<object 1074224> (scdr (cdr s)))
> def args: : (<object 1074224> (scddr (cdr scdr)))
> def args: : (<object 1074296> (scdr (cdr s)))
> def args: : (<object 1074296> (scddr (cdr scdr)))
> def args: : (<object 1074364> (scdr (cdr s)))
> def args: : (<object 1074364> (scddr (cdr scdr)))
> def args: : (<object 1074436> (scdr (cdr s)))
> def args: : (<object 1074436> (scddr (cdr scdr)))
> def args: : (<object 1074504> (scdr (cdr s)))
> def args: : (<object 1074504> (scddr (cdr scdr)))
> def args: : (<object 1074576> (scdr (cdr s)))
> def args: : (<object 1074576> (scddr (cdr scdr)))
> def args: : (<object 1074644> (scdr (cdr s)))
> def args: : (<object 1074644> (scddr (cdr scdr)))
> def args: : (<object 1074716> (scdr (cdr s)))
> def args: : (<object 1074716> (scddr (cdr scdr)))
> def args: : (<object 1074784> (scdr (cdr s)))
> def args: : (<object 1074784> (scddr (cdr scdr)))
> def args: : (<object 1074856> (scdr (cdr s)))
> def args: : (<object 1074856> (scddr (cdr scdr)))
> def args: : (<object 1074924> (scdr (cdr s)))
> def args: : (<object 1074924> (scddr (cdr scdr)))
> def args: : (<object 1074996> (scdr (cdr s)))
> def args: : (<object 1074996> (scddr (cdr scdr)))
> def args: : (<object 1075064> (scdr (cdr s)))
> def args: : (<object 1075064> (scddr (cdr scdr)))
> def args: : (<object 1075136> (scdr (cdr s)))
> def args: : (<object 1075136> (scddr (cdr scdr)))
> def args: : (<object 1075204> (scdr (cdr s)))
> def args: : (<object 1075204> (scddr (cdr scdr)))
> def args: : (<object 1075276> (scdr (cdr s)))
> def args: : (<object 1075276> (scddr (cdr scdr)))
> def args: : (<object 1075344> (scdr (cdr s)))
> def args: : (<object 1075344> (scddr (cdr scdr)))
> def args: : (<object 1075416> (scdr (cdr s)))
> def args: : (<object 1075416> (scddr (cdr scdr)))
> def args: : (<object 1075484> (scdr (cdr s)))
> def args: : (<object 1075484> (scddr (cdr scdr)))
> def args: : (<object 1075556> (scdr (cdr s)))
> def args: : (<object 1075556> (scddr (cdr scdr)))
> def args: : (<object 1075624> (scdr (cdr s)))
> def args: : (<object 1075624> (scddr (cdr scdr)))
> def args: : (<object 1075696> (scdr (cdr s)))
> def args: : (<object 1075696> (scddr (cdr scdr)))
> def args: : (<object 1075764> (scdr (cdr s)))
> def args: : (<object 1075764> (scddr (cdr scdr)))
> def args: : (<object 1075836> (scdr (cdr s)))
> def args: : (<object 1075836> (scddr (cdr scdr)))
> def args: : (<object 1075904> (scdr (cdr s)))
> def args: : (<object 1075904> (scddr (cdr scdr)))
> def args: : (<object 1075976> (scdr (cdr s)))
> def args: : (<object 1075976> (scddr (cdr scdr)))
> def args: : (<object 1076044> (scdr (cdr s)))
> def args: : (<object 1076044> (scddr (cdr scdr)))
> def args: : (<object 1076116> (scdr (cdr s)))
> def args: : (<object 1076116> (scddr (cdr scdr)))
> def args: : (<object 1076184> (scdr (cdr s)))
> def args: : (<object 1076184> (scddr (cdr scdr)))
> def args: : (<object 1076256> (scdr (cdr s)))
> def args: : (<object 1076256> (scddr (cdr scdr)))
> def args: : (<object 1076324> (scdr (cdr s)))
> def args: : (<object 1076324> (scddr (cdr scdr)))
> def args: : (<object 1076396> (scdr (cdr s)))
> def args: : (<object 1076396> (scddr (cdr scdr)))
> def args: : (<object 1076464> (scdr (cdr s)))
> def args: : (<object 1076464> (scddr (cdr scdr)))
> def args: : (<object 1076536> (scdr (cdr s)))
> def args: : (<object 1076536> (scddr (cdr scdr)))
> def args: : (<object 1076604> (scdr (cdr s)))
> def args: : (<object 1076604> (scddr (cdr scdr)))
> def args: : (<object 1076676> (scdr (cdr s)))
> def args: : (<object 1076676> (scddr (cdr scdr)))
> def args: : (<object 1076744> (scdr (cdr s)))
> def args: : (<object 1076744> (scddr (cdr scdr)))
> def args: : (<object 1076816> (scdr (cdr s)))
> def args: : (<object 1076816> (scddr (cdr scdr)))
> def args: : (<object 1076884> (scdr (cdr s)))
> def args: : (<object 1076884> (scddr (cdr scdr)))
> def args: : (<object 1076956> (scdr (cdr s)))
> def args: : (<object 1076956> (scddr (cdr scdr)))
> def args: : (<object 1077024> (scdr (cdr s)))
> def args: : (<object 1077024> (scddr (cdr scdr)))
> def args: : (<object 1077096> (scdr (cdr s)))
> def args: : (<object 1077096> (scddr (cdr scdr)))
> def args: : (<object 1077164> (scdr (cdr s)))
> def args: : (<object 1077164> (scddr (cdr scdr)))
> def args: : (<object 1077236> (scdr (cdr s)))
> def args: : (<object 1077236> (scddr (cdr scdr)))
> def args: : (<object 1077304> (scdr (cdr s)))
> def args: : (<object 1077304> (scddr (cdr scdr)))
> def args: : (<object 1077376> (scdr (cdr s)))
> def args: : (<object 1077376> (scddr (cdr scdr)))
> def args: : (<object 1077444> (scdr (cdr s)))
> def args: : (<object 1077444> (scddr (cdr scdr)))
> def args: : (<object 1077516> (scdr (cdr s)))
> def args: : (<object 1077516> (scddr (cdr scdr)))
> def args: : (<object 1077584> (scdr (cdr s)))
> def args: : (<object 1077584> (scddr (cdr scdr)))
> def args: : (<object 1077656> (scdr (cdr s)))
> def args: : (<object 1077656> (scddr (cdr scdr)))
> def args: : (<object 1077724> (scdr (cdr s)))
> def args: : (<object 1077724> (scddr (cdr scdr)))
> def args: : (<object 1077796> (scdr (cdr s)))
> def args: : (<object 1077796> (scddr (cdr scdr)))
> def args: : (<object 1077864> (scdr (cdr s)))
> def args: : (<object 1077864> (scddr (cdr scdr)))
> def args: : (<object 1077936> (scdr (cdr s)))
> def args: : (<object 1077936> (scddr (cdr scdr)))
> def args: : (<object 1078004> (scdr (cdr s)))
> def args: : (<object 1078004> (scddr (cdr scdr)))
> def args: : (<object 1078076> (scdr (cdr s)))
> def args: : (<object 1078076> (scddr (cdr scdr)))
> def args: : (<object 1078144> (scdr (cdr s)))
> def args: : (<object 1078144> (scddr (cdr scdr)))
> def args: : (<object 1078216> (scdr (cdr s)))
> def args: : (<object 1078216> (scddr (cdr scdr)))
> def args: : (<object 1078284> (scdr (cdr s)))
> def args: : (<object 1078284> (scddr (cdr scdr)))
> def args: : (<object 1078356> (scdr (cdr s)))
> def args: : (<object 1078356> (scddr (cdr scdr)))
> def args: : (<object 1078424> (scdr (cdr s)))
> def args: : (<object 1078424> (scddr (cdr scdr)))
> def args: : (<object 1078496> (scdr (cdr s)))
> def args: : (<object 1078496> (scddr (cdr scdr)))
> def args: : (<object 1078564> (scdr (cdr s)))
> def args: : (<object 1078564> (scddr (cdr scdr)))
> def args: : (<object 1078636> (scdr (cdr s)))
> def args: : (<object 1078636> (scddr (cdr scdr)))
> def args: : (<object 1078704> (scdr (cdr s)))
> def args: : (<object 1078704> (scddr (cdr scdr)))
> def args: : (<object 1078776> (scdr (cdr s)))
> def args: : (<object 1078776> (scddr (cdr scdr)))
> def args: : (<object 1078844> (scdr (cdr s)))
> def args: : (<object 1078844> (scddr (cdr scdr)))
> def args: : (<object 1078916> (scdr (cdr s)))
> def args: : (<object 1078916> (scddr (cdr scdr)))
> def args: : (<object 1078984> (scdr (cdr s)))
> def args: : (<object 1078984> (scddr (cdr scdr)))
> def args: : (<object 1079056> (scdr (cdr s)))
> def args: : (<object 1079056> (scddr (cdr scdr)))
> def args: : (<object 1079124> (scdr (cdr s)))
> def args: : (<object 1079124> (scddr (cdr scdr)))
> def args: : (<object 1079196> (scdr (cdr s)))
> def args: : (<object 1079196> (scddr (cdr scdr)))
> def args: : (<object 1079264> (scdr (cdr s)))
> def args: : (<object 1079264> (scddr (cdr scdr)))
> def args: : (<object 1079336> (scdr (cdr s)))
> def args: : (<object 1079336> (scddr (cdr scdr)))
> 3240def args: : (<object 1093192> (env (if (null? @) # (car @))))
>  def args: : (<object 1093299> (env (if (null? @) # (car @))))
> def args: : (<object 1093419> (scdr (cdr s)))
> def args: : (<object 1093419> (scddr (cdr scdr)))
> def args: : (<object 1093491> (scdr (cdr s)))
> def args: : (<object 1093491> (scddr (cdr scdr)))
> def args: : (<object 1093563> (scdr (cdr s)))
> def args: : (<object 1093563> (scddr (cdr scdr)))
> def args: : (<object 1093631> (scdr (cdr s)))
> def args: : (<object 1093631> (scddr (cdr scdr)))
> def args: : (<object 1093870> (scdr (cdr s)))
> def args: : (<object 1093870> (scddr (cdr scdr)))
> def args: : (<object 1093942> (scdr (cdr s)))
> def args: : (<object 1093942> (scddr (cdr scdr)))
> def args: : (<object 1094010> (scdr (cdr s)))
> def args: : (<object 1094010> (scddr (cdr scdr)))
> def args: : (<object 1094082> (scdr (cdr s)))
> def args: : (<object 1094082> (scddr (cdr scdr)))
> def args: : (<object 1094150> (scdr (cdr s)))
> def args: : (<object 1094150> (scddr (cdr scdr)))
> def args: : (<object 1094222> (scdr (cdr s)))
> def args: : (<object 1094222> (scddr (cdr scdr)))
> def args: : (<object 1094290> (scdr (cdr s)))
> def args: : (<object 1094290> (scddr (cdr scdr)))
> def args: : (<object 1094362> (scdr (cdr s)))
> def args: : (<object 1094362> (scddr (cdr scdr)))
> def args: : (<object 1094430> (scdr (cdr s)))
> def args: : (<object 1094430> (scddr (cdr scdr)))
> def args: : (<object 1094502> (scdr (cdr s)))
> def args: : (<object 1094502> (scddr (cdr scdr)))
> def args: : (<object 1094570> (scdr (cdr s)))
> def args: : (<object 1094570> (scddr (cdr scdr)))
> def args: : (<object 1094642> (scdr (cdr s)))
> def args: : (<object 1094642> (scddr (cdr scdr)))
> def args: : (<object 1094710> (scdr (cdr s)))
> def args: : (<object 1094710> (scddr (cdr scdr)))
> def args: : (<object 1094782> (scdr (cdr s)))
> def args: : (<object 1094782> (scddr (cdr scdr)))
> def args: : (<object 1094850> (scdr (cdr s)))
> def args: : (<object 1094850> (scddr (cdr scdr)))
> def args: : (<object 1094922> (scdr (cdr s)))
> def args: : (<object 1094922> (scddr (cdr scdr)))
> def args: : (<object 1094990> (scdr (cdr s)))
> def args: : (<object 1094990> (scddr (cdr scdr)))
> def args: : (<object 1095062> (scdr (cdr s)))
> def args: : (<object 1095062> (scddr (cdr scdr)))
> def args: : (<object 1095130> (scdr (cdr s)))
> def args: : (<object 1095130> (scddr (cdr scdr)))
> def args: : (<object 1095202> (scdr (cdr s)))
> def args: : (<object 1095202> (scddr (cdr scdr)))
> def args: : (<object 1095270> (scdr (cdr s)))
> def args: : (<object 1095270> (scddr (cdr scdr)))
> def args: : (<object 1095342> (scdr (cdr s)))
> def args: : (<object 1095342> (scddr (cdr scdr)))
> def args: : (<object 1095410> (scdr (cdr s)))
> def args: : (<object 1095410> (scddr (cdr scdr)))
> def args: : (<object 1095482> (scdr (cdr s)))
> def args: : (<object 1095482> (scddr (cdr scdr)))
> def args: : (<object 1095550> (scdr (cdr s)))
> def args: : (<object 1095550> (scddr (cdr scdr)))
> def args: : (<object 1095622> (scdr (cdr s)))
> def args: : (<object 1095622> (scddr (cdr scdr)))
> def args: : (<object 1095690> (scdr (cdr s)))
> def args: : (<object 1095690> (scddr (cdr scdr)))
> def args: : (<object 1095762> (scdr (cdr s)))
> def args: : (<object 1095762> (scddr (cdr scdr)))
> def args: : (<object 1095830> (scdr (cdr s)))
> def args: : (<object 1095830> (scddr (cdr scdr)))
> def args: : (<object 1095902> (scdr (cdr s)))
> def args: : (<object 1095902> (scddr (cdr scdr)))
> def args: : (<object 1095970> (scdr (cdr s)))
> def args: : (<object 1095970> (scddr (cdr scdr)))
> def args: : (<object 1096042> (scdr (cdr s)))
> def args: : (<object 1096042> (scddr (cdr scdr)))
> def args: : (<object 1096110> (scdr (cdr s)))
> def args: : (<object 1096110> (scddr (cdr scdr)))
> def args: : (<object 1096182> (scdr (cdr s)))
> def args: : (<object 1096182> (scddr (cdr scdr)))
> def args: : (<object 1096250> (scdr (cdr s)))
> def args: : (<object 1096250> (scddr (cdr scdr)))
> def args: : (<object 1096322> (scdr (cdr s)))
> def args: : (<object 1096322> (scddr (cdr scdr)))
> def args: : (<object 1096390> (scdr (cdr s)))
> def args: : (<object 1096390> (scddr (cdr scdr)))
> def args: : (<object 1096462> (scdr (cdr s)))
> def args: : (<object 1096462> (scddr (cdr scdr)))
> def args: : (<object 1096530> (scdr (cdr s)))
> def args: : (<object 1096530> (scddr (cdr scdr)))
> def args: : (<object 1096602> (scdr (cdr s)))
> def args: : (<object 1096602> (scddr (cdr scdr)))
> def args: : (<object 1096670> (scdr (cdr s)))
> def args: : (<object 1096670> (scddr (cdr scdr)))
> def args: : (<object 1096742> (scdr (cdr s)))
> def args: : (<object 1096742> (scddr (cdr scdr)))
> def args: : (<object 1096810> (scdr (cdr s)))
> def args: : (<object 1096810> (scddr (cdr scdr)))
> def args: : (<object 1096882> (scdr (cdr s)))
> def args: : (<object 1096882> (scddr (cdr scdr)))
> def args: : (<object 1096950> (scdr (cdr s)))
> def args: : (<object 1096950> (scddr (cdr scdr)))
> def args: : (<object 1097022> (scdr (cdr s)))
> def args: : (<object 1097022> (scddr (cdr scdr)))
> def args: : (<object 1097090> (scdr (cdr s)))
> def args: : (<object 1097090> (scddr (cdr scdr)))
> def args: : (<object 1097162> (scdr (cdr s)))
> def args: : (<object 1097162> (scddr (cdr scdr)))
> def args: : (<object 1097230> (scdr (cdr s)))
> def args: : (<object 1097230> (scddr (cdr scdr)))
> def args: : (<object 1097302> (scdr (cdr s)))
> def args: : (<object 1097302> (scddr (cdr scdr)))
> def args: : (<object 1097370> (scdr (cdr s)))
> def args: : (<object 1097370> (scddr (cdr scdr)))
> def args: : (<object 1097442> (scdr (cdr s)))
> def args: : (<object 1097442> (scddr (cdr scdr)))
> def args: : (<object 1097510> (scdr (cdr s)))
> def args: : (<object 1097510> (scddr (cdr scdr)))
> def args: : (<object 1097582> (scdr (cdr s)))
> def args: : (<object 1097582> (scddr (cdr scdr)))
> def args: : (<object 1097650> (scdr (cdr s)))
> def args: : (<object 1097650> (scddr (cdr scdr)))
> def args: : (<object 1097722> (scdr (cdr s)))
> def args: : (<object 1097722> (scddr (cdr scdr)))
> def args: : (<object 1097790> (scdr (cdr s)))
> def args: : (<object 1097790> (scddr (cdr scdr)))
> def args: : (<object 1097862> (scdr (cdr s)))
> def args: : (<object 1097862> (scddr (cdr scdr)))
> def args: : (<object 1097930> (scdr (cdr s)))
> def args: : (<object 1097930> (scddr (cdr scdr)))
> def args: : (<object 1098002> (scdr (cdr s)))
> def args: : (<object 1098002> (scddr (cdr scdr)))
> def args: : (<object 1098070> (scdr (cdr s)))
> def args: : (<object 1098070> (scddr (cdr scdr)))
> def args: : (<object 1098142> (scdr (cdr s)))
> def args: : (<object 1098142> (scddr (cdr scdr)))
> def args: : (<object 1098210> (scdr (cdr s)))
> def args: : (<object 1098210> (scddr (cdr scdr)))
> def args: : (<object 1098282> (scdr (cdr s)))
> def args: : (<object 1098282> (scddr (cdr scdr)))
> def args: : (<object 1098350> (scdr (cdr s)))
> def args: : (<object 1098350> (scddr (cdr scdr)))
> def args: : (<object 1098422> (scdr (cdr s)))
> def args: : (<object 1098422> (scddr (cdr scdr)))
> def args: : (<object 1098490> (scdr (cdr s)))
> def args: : (<object 1098490> (scddr (cdr scdr)))
> def args: : (<object 1098562> (scdr (cdr s)))
> def args: : (<object 1098562> (scddr (cdr scdr)))
> def args: : (<object 1098630> (scdr (cdr s)))
> def args: : (<object 1098630> (scddr (cdr scdr)))
> def args: : (<object 1098702> (scdr (cdr s)))
> def args: : (<object 1098702> (scddr (cdr scdr)))
> def args: : (<object 1098770> (scdr (cdr s)))
> def args: : (<object 1098770> (scddr (cdr scdr)))
> def args: : (<object 1098842> (scdr (cdr s)))
> def args: : (<object 1098842> (scddr (cdr scdr)))
> def args: : (<object 1098910> (scdr (cdr s)))
> def args: : (<object 1098910> (scddr (cdr scdr)))
> def args: : (<object 1098982> (scdr (cdr s)))
> def args: : (<object 1098982> (scddr (cdr scdr)))
> def args: : (<object 1099050> (scdr (cdr s)))
> def args: : (<object 1099050> (scddr (cdr scdr)))
> def args: : (<object 1099122> (scdr (cdr s)))
> def args: : (<object 1099122> (scddr (cdr scdr)))
> def args: : (<object 1099190> (scdr (cdr s)))
> def args: : (<object 1099190> (scddr (cdr scdr)))
> def args: : (<object 1099262> (scdr (cdr s)))
> def args: : (<object 1099262> (scddr (cdr scdr)))
> def args: : (<object 1099330> (scdr (cdr s)))
> def args: : (<object 1099330> (scddr (cdr scdr)))
> def args: : (<object 1099402> (scdr (cdr s)))
> def args: : (<object 1099402> (scddr (cdr scdr)))
> def args: : (<object 1099470> (scdr (cdr s)))
> def args: : (<object 1099470> (scddr (cdr scdr)))
> def args: : (<object 1099542> (scdr (cdr s)))
> def args: : (<object 1099542> (scddr (cdr scdr)))
> def args: : (<object 1099610> (scdr (cdr s)))
> def args: : (<object 1099610> (scddr (cdr scdr)))
> def args: : (<object 1099682> (scdr (cdr s)))
> def args: : (<object 1099682> (scddr (cdr scdr)))
> def args: : (<object 1099750> (scdr (cdr s)))
> def args: : (<object 1099750> (scddr (cdr scdr)))
> def args: : (<object 1099822> (scdr (cdr s)))
> def args: : (<object 1099822> (scddr (cdr scdr)))
> def args: : (<object 1099890> (scdr (cdr s)))
> def args: : (<object 1099890> (scddr (cdr scdr)))
> def args: : (<object 1099962> (scdr (cdr s)))
> def args: : (<object 1099962> (scddr (cdr scdr)))
> def args: : (<object 1100030> (scdr (cdr s)))
> def args: : (<object 1100030> (scddr (cdr scdr)))
> def args: : (<object 1100102> (scdr (cdr s)))
> def args: : (<object 1100102> (scddr (cdr scdr)))
> def args: : (<object 1100170> (scdr (cdr s)))
> def args: : (<object 1100170> (scddr (cdr scdr)))
> def args: : (<object 1100242> (scdr (cdr s)))
> def args: : (<object 1100242> (scddr (cdr scdr)))
> def args: : (<object 1100310> (scdr (cdr s)))
> def args: : (<object 1100310> (scddr (cdr scdr)))
> def args: : (<object 1100382> (scdr (cdr s)))
> def args: : (<object 1100382> (scddr (cdr scdr)))
> def args: : (<object 1100450> (scdr (cdr s)))
> def args: : (<object 1100450> (scddr (cdr scdr)))
> def args: : (<object 1100522> (scdr (cdr s)))
> def args: : (<object 1100522> (scddr (cdr scdr)))
> def args: : (<object 1100590> (scdr (cdr s)))
> def args: : (<object 1100590> (scddr (cdr scdr)))
> def args: : (<object 1100662> (scdr (cdr s)))
> def args: : (<object 1100662> (scddr (cdr scdr)))
> def args: : (<object 1100730> (scdr (cdr s)))
> def args: : (<object 1100730> (scddr (cdr scdr)))
> def args: : (<object 1100802> (scdr (cdr s)))
> def args: : (<object 1100802> (scddr (cdr scdr)))
> def args: : (<object 1100870> (scdr (cdr s)))
> def args: : (<object 1100870> (scddr (cdr scdr)))
> def args: : (<object 1100942> (scdr (cdr s)))
> def args: : (<object 1100942> (scddr (cdr scdr)))
> def args: : (<object 1101010> (scdr (cdr s)))
> def args: : (<object 1101010> (scddr (cdr scdr)))
> def args: : (<object 1101082> (scdr (cdr s)))
> def args: : (<object 1101082> (scddr (cdr scdr)))
> def args: : (<object 1101150> (scdr (cdr s)))
> def args: : (<object 1101150> (scddr (cdr scdr)))
> def args: : (<object 1101222> (scdr (cdr s)))
> def args: : (<object 1101222> (scddr (cdr scdr)))
> def args: : (<object 1101290> (scdr (cdr s)))
> def args: : (<object 1101290> (scddr (cdr scdr)))
> def args: : (<object 1101362> (scdr (cdr s)))
> def args: : (<object 1101362> (scddr (cdr scdr)))
> def args: : (<object 1101430> (scdr (cdr s)))
> def args: : (<object 1101430> (scddr (cdr scdr)))
> def args: : (<object 1101502> (scdr (cdr s)))
> def args: : (<object 1101502> (scddr (cdr scdr)))
> def args: : (<object 1101570> (scdr (cdr s)))
> def args: : (<object 1101570> (scddr (cdr scdr)))
> def args: : (<object 1101642> (scdr (cdr s)))
> def args: : (<object 1101642> (scddr (cdr scdr)))
> def args: : (<object 1101710> (scdr (cdr s)))
> def args: : (<object 1101710> (scddr (cdr scdr)))
> def args: : (<object 1101782> (scdr (cdr s)))
> def args: : (<object 1101782> (scddr (cdr scdr)))
> def args: : (<object 1101850> (scdr (cdr s)))
> def args: : (<object 1101850> (scddr (cdr scdr)))
> def args: : (<object 1101922> (scdr (cdr s)))
> def args: : (<object 1101922> (scddr (cdr scdr)))
> def args: : (<object 1101990> (scdr (cdr s)))
> def args: : (<object 1101990> (scddr (cdr scdr)))
> def args: : (<object 1102062> (scdr (cdr s)))
> def args: : (<object 1102062> (scddr (cdr scdr)))
> def args: : (<object 1102130> (scdr (cdr s)))
> def args: : (<object 1102130> (scddr (cdr scdr)))
> def args: : (<object 1102202> (scdr (cdr s)))
> def args: : (<object 1102202> (scddr (cdr scdr)))
> def args: : (<object 1102270> (scdr (cdr s)))
> def args: : (<object 1102270> (scddr (cdr scdr)))
> def args: : (<object 1102342> (scdr (cdr s)))
> def args: : (<object 1102342> (scddr (cdr scdr)))
> def args: : (<object 1102410> (scdr (cdr s)))
> def args: : (<object 1102410> (scddr (cdr scdr)))
> def args: : (<object 1102482> (scdr (cdr s)))
> def args: : (<object 1102482> (scddr (cdr scdr)))
> def args: : (<object 1102550> (scdr (cdr s)))
> def args: : (<object 1102550> (scddr (cdr scdr)))
> def args: : (<object 1102622> (scdr (cdr s)))
> def args: : (<object 1102622> (scddr (cdr scdr)))
> def args: : (<object 1102690> (scdr (cdr s)))
> def args: : (<object 1102690> (scddr (cdr scdr)))
> def args: : (<object 1102762> (scdr (cdr s)))
> def args: : (<object 1102762> (scddr (cdr scdr)))
> def args: : (<object 1102830> (scdr (cdr s)))
> def args: : (<object 1102830> (scddr (cdr scdr)))
> def args: : (<object 1102902> (scdr (cdr s)))
> def args: : (<object 1102902> (scddr (cdr scdr)))
> def args: : (<object 1102970> (scdr (cdr s)))
> def args: : (<object 1102970> (scddr (cdr scdr)))
> def args: : (<object 1103042> (scdr (cdr s)))
> def args: : (<object 1103042> (scddr (cdr scdr)))
> def args: : (<object 1103110> (scdr (cdr s)))
> def args: : (<object 1103110> (scddr (cdr scdr)))
> def args: : (<object 1103182> (scdr (cdr s)))
> def args: : (<object 1103182> (scddr (cdr scdr)))
> def args: : (<object 1103250> (scdr (cdr s)))
> def args: : (<object 1103250> (scddr (cdr scdr)))
> def args: : (<object 1103322> (scdr (cdr s)))
> def args: : (<object 1103322> (scddr (cdr scdr)))
> def args: : (<object 1103390> (scdr (cdr s)))
> def args: : (<object 1103390> (scddr (cdr scdr)))
> def args: : (<object 1103462> (scdr (cdr s)))
> def args: : (<object 1103462> (scddr (cdr scdr)))
> def args: : (<object 1103530> (scdr (cdr s)))
> def args: : (<object 1103530> (scddr (cdr scdr)))
> def args: : (<object 1103602> (scdr (cdr s)))
> def args: : (<object 1103602> (scddr (cdr scdr)))
> def args: : (<object 1103670> (scdr (cdr s)))
> def args: : (<object 1103670> (scddr (cdr scdr)))
> def args: : (<object 1103742> (scdr (cdr s)))
> def args: : (<object 1103742> (scddr (cdr scdr)))
> def args: : (<object 1103810> (scdr (cdr s)))
> def args: : (<object 1103810> (scddr (cdr scdr)))
> def args: : (<object 1103882> (scdr (cdr s)))
> def args: : (<object 1103882> (scddr (cdr scdr)))
> def args: : (<object 1103950> (scdr (cdr s)))
> def args: : (<object 1103950> (scddr (cdr scdr)))
> def args: : (<object 1104022> (scdr (cdr s)))
> def args: : (<object 1104022> (scddr (cdr scdr)))
> def args: : (<object 1104090> (scdr (cdr s)))
> def args: : (<object 1104090> (scddr (cdr scdr)))
> def args: : (<object 1104162> (scdr (cdr s)))
> def args: : (<object 1104162> (scddr (cdr scdr)))
> def args: : (<object 1104230> (scdr (cdr s)))
> def args: : (<object 1104230> (scddr (cdr scdr)))
> def args: : (<object 1104302> (scdr (cdr s)))
> def args: : (<object 1104302> (scddr (cdr scdr)))
> def args: : (<object 1104370> (scdr (cdr s)))
> def args: : (<object 1104370> (scddr (cdr scdr)))
> def args: : (<object 1104442> (scdr (cdr s)))
> def args: : (<object 1104442> (scddr (cdr scdr)))
> def args: : (<object 1104510> (scdr (cdr s)))
> def args: : (<object 1104510> (scddr (cdr scdr)))
> def args: : (<object 1104582> (scdr (cdr s)))
> def args: : (<object 1104582> (scddr (cdr scdr)))
> def args: : (<object 1104650> (scdr (cdr s)))
> def args: : (<object 1104650> (scddr (cdr scdr)))
> def args: : (<object 1104722> (scdr (cdr s)))
> def args: : (<object 1104722> (scddr (cdr scdr)))
> def args: : (<object 1104790> (scdr (cdr s)))
> def args: : (<object 1104790> (scddr (cdr scdr)))
> def args: : (<object 1104862> (scdr (cdr s)))
> def args: : (<object 1104862> (scddr (cdr scdr)))
> 3321def args: : (<object 1118889> (env (if (null? @) # (car @))))
>  def args: : (<object 1118996> (env (if (null? @) # (car @))))
> def args: : (<object 1119116> (scdr (cdr s)))
> def args: : (<object 1119116> (scddr (cdr scdr)))
> def args: : (<object 1119188> (scdr (cdr s)))
> def args: : (<object 1119188> (scddr (cdr scdr)))
> def args: : (<object 1119260> (scdr (cdr s)))
> def args: : (<object 1119260> (scddr (cdr scdr)))
> def args: : (<object 1119328> (scdr (cdr s)))
> def args: : (<object 1119328> (scddr (cdr scdr)))
> def args: : (<object 1119567> (scdr (cdr s)))
> def args: : (<object 1119567> (scddr (cdr scdr)))
> def args: : (<object 1119639> (scdr (cdr s)))
> def args: : (<object 1119639> (scddr (cdr scdr)))
> def args: : (<object 1119707> (scdr (cdr s)))
> def args: : (<object 1119707> (scddr (cdr scdr)))
> def args: : (<object 1119779> (scdr (cdr s)))
> def args: : (<object 1119779> (scddr (cdr scdr)))
> def args: : (<object 1119847> (scdr (cdr s)))
> def args: : (<object 1119847> (scddr (cdr scdr)))
> def args: : (<object 1119919> (scdr (cdr s)))
> def args: : (<object 1119919> (scddr (cdr scdr)))
> def args: : (<object 1119987> (scdr (cdr s)))
> def args: : (<object 1119987> (scddr (cdr scdr)))
> def args: : (<object 1120059> (scdr (cdr s)))
> def args: : (<object 1120059> (scddr (cdr scdr)))
> def args: : (<object 1120127> (scdr (cdr s)))
> def args: : (<object 1120127> (scddr (cdr scdr)))
> def args: : (<object 1120199> (scdr (cdr s)))
> def args: : (<object 1120199> (scddr (cdr scdr)))
> def args: : (<object 1120267> (scdr (cdr s)))
> def args: : (<object 1120267> (scddr (cdr scdr)))
> def args: : (<object 1120339> (scdr (cdr s)))
> def args: : (<object 1120339> (scddr (cdr scdr)))
> def args: : (<object 1120407> (scdr (cdr s)))
> def args: : (<object 1120407> (scddr (cdr scdr)))
> def args: : (<object 1120479> (scdr (cdr s)))
> def args: : (<object 1120479> (scddr (cdr scdr)))
> def args: : (<object 1120547> (scdr (cdr s)))
> def args: : (<object 1120547> (scddr (cdr scdr)))
> def args: : (<object 1120619> (scdr (cdr s)))
> def args: : (<object 1120619> (scddr (cdr scdr)))
> def args: : (<object 1120687> (scdr (cdr s)))
> def args: : (<object 1120687> (scddr (cdr scdr)))
> def args: : (<object 1120759> (scdr (cdr s)))
> def args: : (<object 1120759> (scddr (cdr scdr)))
> def args: : (<object 1120827> (scdr (cdr s)))
> def args: : (<object 1120827> (scddr (cdr scdr)))
> def args: : (<object 1120899> (scdr (cdr s)))
> def args: : (<object 1120899> (scddr (cdr scdr)))
> def args: : (<object 1120967> (scdr (cdr s)))
> def args: : (<object 1120967> (scddr (cdr scdr)))
> def args: : (<object 1121039> (scdr (cdr s)))
> def args: : (<object 1121039> (scddr (cdr scdr)))
> def args: : (<object 1121107> (scdr (cdr s)))
> def args: : (<object 1121107> (scddr (cdr scdr)))
> def args: : (<object 1121179> (scdr (cdr s)))
> def args: : (<object 1121179> (scddr (cdr scdr)))
> def args: : (<object 1121247> (scdr (cdr s)))
> def args: : (<object 1121247> (scddr (cdr scdr)))
> def args: : (<object 1121319> (scdr (cdr s)))
> def args: : (<object 1121319> (scddr (cdr scdr)))
> def args: : (<object 1121387> (scdr (cdr s)))
> def args: : (<object 1121387> (scddr (cdr scdr)))
> def args: : (<object 1121459> (scdr (cdr s)))
> def args: : (<object 1121459> (scddr (cdr scdr)))
> def args: : (<object 1121527> (scdr (cdr s)))
> def args: : (<object 1121527> (scddr (cdr scdr)))
> def args: : (<object 1121599> (scdr (cdr s)))
> def args: : (<object 1121599> (scddr (cdr scdr)))
> def args: : (<object 1121667> (scdr (cdr s)))
> def args: : (<object 1121667> (scddr (cdr scdr)))
> def args: : (<object 1121739> (scdr (cdr s)))
> def args: : (<object 1121739> (scddr (cdr scdr)))
> def args: : (<object 1121807> (scdr (cdr s)))
> def args: : (<object 1121807> (scddr (cdr scdr)))
> def args: : (<object 1121879> (scdr (cdr s)))
> def args: : (<object 1121879> (scddr (cdr scdr)))
> def args: : (<object 1121947> (scdr (cdr s)))
> def args: : (<object 1121947> (scddr (cdr scdr)))
> def args: : (<object 1122019> (scdr (cdr s)))
> def args: : (<object 1122019> (scddr (cdr scdr)))
> def args: : (<object 1122087> (scdr (cdr s)))
> def args: : (<object 1122087> (scddr (cdr scdr)))
> def args: : (<object 1122159> (scdr (cdr s)))
> def args: : (<object 1122159> (scddr (cdr scdr)))
> def args: : (<object 1122227> (scdr (cdr s)))
> def args: : (<object 1122227> (scddr (cdr scdr)))
> def args: : (<object 1122299> (scdr (cdr s)))
> def args: : (<object 1122299> (scddr (cdr scdr)))
> def args: : (<object 1122367> (scdr (cdr s)))
> def args: : (<object 1122367> (scddr (cdr scdr)))
> def args: : (<object 1122439> (scdr (cdr s)))
> def args: : (<object 1122439> (scddr (cdr scdr)))
> def args: : (<object 1122507> (scdr (cdr s)))
> def args: : (<object 1122507> (scddr (cdr scdr)))
> def args: : (<object 1122579> (scdr (cdr s)))
> def args: : (<object 1122579> (scddr (cdr scdr)))
> def args: : (<object 1122647> (scdr (cdr s)))
> def args: : (<object 1122647> (scddr (cdr scdr)))
> def args: : (<object 1122719> (scdr (cdr s)))
> def args: : (<object 1122719> (scddr (cdr scdr)))
> def args: : (<object 1122787> (scdr (cdr s)))
> def args: : (<object 1122787> (scddr (cdr scdr)))
> def args: : (<object 1122859> (scdr (cdr s)))
> def args: : (<object 1122859> (scddr (cdr scdr)))
> def args: : (<object 1122927> (scdr (cdr s)))
> def args: : (<object 1122927> (scddr (cdr scdr)))
> def args: : (<object 1122999> (scdr (cdr s)))
> def args: : (<object 1122999> (scddr (cdr scdr)))
> def args: : (<object 1123067> (scdr (cdr s)))
> def args: : (<object 1123067> (scddr (cdr scdr)))
> def args: : (<object 1123139> (scdr (cdr s)))
> def args: : (<object 1123139> (scddr (cdr scdr)))
> def args: : (<object 1123207> (scdr (cdr s)))
> def args: : (<object 1123207> (scddr (cdr scdr)))
> def args: : (<object 1123279> (scdr (cdr s)))
> def args: : (<object 1123279> (scddr (cdr scdr)))
> def args: : (<object 1123347> (scdr (cdr s)))
> def args: : (<object 1123347> (scddr (cdr scdr)))
> def args: : (<object 1123419> (scdr (cdr s)))
> def args: : (<object 1123419> (scddr (cdr scdr)))
> def args: : (<object 1123487> (scdr (cdr s)))
> def args: : (<object 1123487> (scddr (cdr scdr)))
> def args: : (<object 1123559> (scdr (cdr s)))
> def args: : (<object 1123559> (scddr (cdr scdr)))
> def args: : (<object 1123627> (scdr (cdr s)))
> def args: : (<object 1123627> (scddr (cdr scdr)))
> def args: : (<object 1123699> (scdr (cdr s)))
> def args: : (<object 1123699> (scddr (cdr scdr)))
> def args: : (<object 1123767> (scdr (cdr s)))
> def args: : (<object 1123767> (scddr (cdr scdr)))
> def args: : (<object 1123839> (scdr (cdr s)))
> def args: : (<object 1123839> (scddr (cdr scdr)))
> def args: : (<object 1123907> (scdr (cdr s)))
> def args: : (<object 1123907> (scddr (cdr scdr)))
> def args: : (<object 1123979> (scdr (cdr s)))
> def args: : (<object 1123979> (scddr (cdr scdr)))
> def args: : (<object 1124047> (scdr (cdr s)))
> def args: : (<object 1124047> (scddr (cdr scdr)))
> def args: : (<object 1124119> (scdr (cdr s)))
> def args: : (<object 1124119> (scddr (cdr scdr)))
> def args: : (<object 1124187> (scdr (cdr s)))
> def args: : (<object 1124187> (scddr (cdr scdr)))
> def args: : (<object 1124259> (scdr (cdr s)))
> def args: : (<object 1124259> (scddr (cdr scdr)))
> def args: : (<object 1124327> (scdr (cdr s)))
> def args: : (<object 1124327> (scddr (cdr scdr)))
> def args: : (<object 1124399> (scdr (cdr s)))
> def args: : (<object 1124399> (scddr (cdr scdr)))
> def args: : (<object 1124467> (scdr (cdr s)))
> def args: : (<object 1124467> (scddr (cdr scdr)))
> def args: : (<object 1124539> (scdr (cdr s)))
> def args: : (<object 1124539> (scddr (cdr scdr)))
> def args: : (<object 1124607> (scdr (cdr s)))
> def args: : (<object 1124607> (scddr (cdr scdr)))
> def args: : (<object 1124679> (scdr (cdr s)))
> def args: : (<object 1124679> (scddr (cdr scdr)))
> def args: : (<object 1124747> (scdr (cdr s)))
> def args: : (<object 1124747> (scddr (cdr scdr)))
> def args: : (<object 1124819> (scdr (cdr s)))
> def args: : (<object 1124819> (scddr (cdr scdr)))
> def args: : (<object 1124887> (scdr (cdr s)))
> def args: : (<object 1124887> (scddr (cdr scdr)))
> def args: : (<object 1124959> (scdr (cdr s)))
> def args: : (<object 1124959> (scddr (cdr scdr)))
> def args: : (<object 1125027> (scdr (cdr s)))
> def args: : (<object 1125027> (scddr (cdr scdr)))
> def args: : (<object 1125099> (scdr (cdr s)))
> def args: : (<object 1125099> (scddr (cdr scdr)))
> def args: : (<object 1125167> (scdr (cdr s)))
> def args: : (<object 1125167> (scddr (cdr scdr)))
> def args: : (<object 1125239> (scdr (cdr s)))
> def args: : (<object 1125239> (scddr (cdr scdr)))
> def args: : (<object 1125307> (scdr (cdr s)))
> def args: : (<object 1125307> (scddr (cdr scdr)))
> def args: : (<object 1125379> (scdr (cdr s)))
> def args: : (<object 1125379> (scddr (cdr scdr)))
> def args: : (<object 1125447> (scdr (cdr s)))
> def args: : (<object 1125447> (scddr (cdr scdr)))
> def args: : (<object 1125519> (scdr (cdr s)))
> def args: : (<object 1125519> (scddr (cdr scdr)))
> def args: : (<object 1125587> (scdr (cdr s)))
> def args: : (<object 1125587> (scddr (cdr scdr)))
> def args: : (<object 1125659> (scdr (cdr s)))
> def args: : (<object 1125659> (scddr (cdr scdr)))
> def args: : (<object 1125727> (scdr (cdr s)))
> def args: : (<object 1125727> (scddr (cdr scdr)))
> def args: : (<object 1125799> (scdr (cdr s)))
> def args: : (<object 1125799> (scddr (cdr scdr)))
> def args: : (<object 1125867> (scdr (cdr s)))
> def args: : (<object 1125867> (scddr (cdr scdr)))
> def args: : (<object 1125939> (scdr (cdr s)))
> def args: : (<object 1125939> (scddr (cdr scdr)))
> def args: : (<object 1126007> (scdr (cdr s)))
> def args: : (<object 1126007> (scddr (cdr scdr)))
> def args: : (<object 1126079> (scdr (cdr s)))
> def args: : (<object 1126079> (scddr (cdr scdr)))
> def args: : (<object 1126147> (scdr (cdr s)))
> def args: : (<object 1126147> (scddr (cdr scdr)))
> def args: : (<object 1126219> (scdr (cdr s)))
> def args: : (<object 1126219> (scddr (cdr scdr)))
> def args: : (<object 1126287> (scdr (cdr s)))
> def args: : (<object 1126287> (scddr (cdr scdr)))
> def args: : (<object 1126359> (scdr (cdr s)))
> def args: : (<object 1126359> (scddr (cdr scdr)))
> def args: : (<object 1126427> (scdr (cdr s)))
> def args: : (<object 1126427> (scddr (cdr scdr)))
> def args: : (<object 1126499> (scdr (cdr s)))
> def args: : (<object 1126499> (scddr (cdr scdr)))
> def args: : (<object 1126567> (scdr (cdr s)))
> def args: : (<object 1126567> (scddr (cdr scdr)))
> def args: : (<object 1126639> (scdr (cdr s)))
> def args: : (<object 1126639> (scddr (cdr scdr)))
> def args: : (<object 1126707> (scdr (cdr s)))
> def args: : (<object 1126707> (scddr (cdr scdr)))
> def args: : (<object 1126779> (scdr (cdr s)))
> def args: : (<object 1126779> (scddr (cdr scdr)))
> def args: : (<object 1126847> (scdr (cdr s)))
> def args: : (<object 1126847> (scddr (cdr scdr)))
> def args: : (<object 1126919> (scdr (cdr s)))
> def args: : (<object 1126919> (scddr (cdr scdr)))
> def args: : (<object 1126987> (scdr (cdr s)))
> def args: : (<object 1126987> (scddr (cdr scdr)))
> def args: : (<object 1127059> (scdr (cdr s)))
> def args: : (<object 1127059> (scddr (cdr scdr)))
> def args: : (<object 1127127> (scdr (cdr s)))
> def args: : (<object 1127127> (scddr (cdr scdr)))
> def args: : (<object 1127199> (scdr (cdr s)))
> def args: : (<object 1127199> (scddr (cdr scdr)))
> def args: : (<object 1127267> (scdr (cdr s)))
> def args: : (<object 1127267> (scddr (cdr scdr)))
> def args: : (<object 1127339> (scdr (cdr s)))
> def args: : (<object 1127339> (scddr (cdr scdr)))
> def args: : (<object 1127407> (scdr (cdr s)))
> def args: : (<object 1127407> (scddr (cdr scdr)))
> def args: : (<object 1127479> (scdr (cdr s)))
> def args: : (<object 1127479> (scddr (cdr scdr)))
> def args: : (<object 1127547> (scdr (cdr s)))
> def args: : (<object 1127547> (scddr (cdr scdr)))
> def args: : (<object 1127619> (scdr (cdr s)))
> def args: : (<object 1127619> (scddr (cdr scdr)))
> def args: : (<object 1127687> (scdr (cdr s)))
> def args: : (<object 1127687> (scddr (cdr scdr)))
> def args: : (<object 1127759> (scdr (cdr s)))
> def args: : (<object 1127759> (scddr (cdr scdr)))
> def args: : (<object 1127827> (scdr (cdr s)))
> def args: : (<object 1127827> (scddr (cdr scdr)))
> def args: : (<object 1127899> (scdr (cdr s)))
> def args: : (<object 1127899> (scddr (cdr scdr)))
> def args: : (<object 1127967> (scdr (cdr s)))
> def args: : (<object 1127967> (scddr (cdr scdr)))
> def args: : (<object 1128039> (scdr (cdr s)))
> def args: : (<object 1128039> (scddr (cdr scdr)))
> def args: : (<object 1128107> (scdr (cdr s)))
> def args: : (<object 1128107> (scddr (cdr scdr)))
> def args: : (<object 1128179> (scdr (cdr s)))
> def args: : (<object 1128179> (scddr (cdr scdr)))
> def args: : (<object 1128247> (scdr (cdr s)))
> def args: : (<object 1128247> (scddr (cdr scdr)))
> def args: : (<object 1128319> (scdr (cdr s)))
> def args: : (<object 1128319> (scddr (cdr scdr)))
> def args: : (<object 1128387> (scdr (cdr s)))
> def args: : (<object 1128387> (scddr (cdr scdr)))
> def args: : (<object 1128459> (scdr (cdr s)))
> def args: : (<object 1128459> (scddr (cdr scdr)))
> def args: : (<object 1128527> (scdr (cdr s)))
> def args: : (<object 1128527> (scddr (cdr scdr)))
> def args: : (<object 1128599> (scdr (cdr s)))
> def args: : (<object 1128599> (scddr (cdr scdr)))
> def args: : (<object 1128667> (scdr (cdr s)))
> def args: : (<object 1128667> (scddr (cdr scdr)))
> def args: : (<object 1128739> (scdr (cdr s)))
> def args: : (<object 1128739> (scddr (cdr scdr)))
> def args: : (<object 1128807> (scdr (cdr s)))
> def args: : (<object 1128807> (scddr (cdr scdr)))
> def args: : (<object 1128879> (scdr (cdr s)))
> def args: : (<object 1128879> (scddr (cdr scdr)))
> def args: : (<object 1128947> (scdr (cdr s)))
> def args: : (<object 1128947> (scddr (cdr scdr)))
> def args: : (<object 1129019> (scdr (cdr s)))
> def args: : (<object 1129019> (scddr (cdr scdr)))
> def args: : (<object 1129087> (scdr (cdr s)))
> def args: : (<object 1129087> (scddr (cdr scdr)))
> def args: : (<object 1129159> (scdr (cdr s)))
> def args: : (<object 1129159> (scddr (cdr scdr)))
> def args: : (<object 1129227> (scdr (cdr s)))
> def args: : (<object 1129227> (scddr (cdr scdr)))
> def args: : (<object 1129299> (scdr (cdr s)))
> def args: : (<object 1129299> (scddr (cdr scdr)))
> def args: : (<object 1129367> (scdr (cdr s)))
> def args: : (<object 1129367> (scddr (cdr scdr)))
> def args: : (<object 1129439> (scdr (cdr s)))
> def args: : (<object 1129439> (scddr (cdr scdr)))
> def args: : (<object 1129507> (scdr (cdr s)))
> def args: : (<object 1129507> (scddr (cdr scdr)))
> def args: : (<object 1129579> (scdr (cdr s)))
> def args: : (<object 1129579> (scddr (cdr scdr)))
> def args: : (<object 1129647> (scdr (cdr s)))
> def args: : (<object 1129647> (scddr (cdr scdr)))
> def args: : (<object 1129719> (scdr (cdr s)))
> def args: : (<object 1129719> (scddr (cdr scdr)))
> def args: : (<object 1129787> (scdr (cdr s)))
> def args: : (<object 1129787> (scddr (cdr scdr)))
> def args: : (<object 1129859> (scdr (cdr s)))
> def args: : (<object 1129859> (scddr (cdr scdr)))
> def args: : (<object 1129927> (scdr (cdr s)))
> def args: : (<object 1129927> (scddr (cdr scdr)))
> def args: : (<object 1129999> (scdr (cdr s)))
> def args: : (<object 1129999> (scddr (cdr scdr)))
> def args: : (<object 1130067> (scdr (cdr s)))
> def args: : (<object 1130067> (scddr (cdr scdr)))
> def args: : (<object 1130139> (scdr (cdr s)))
> def args: : (<object 1130139> (scddr (cdr scdr)))
> def args: : (<object 1130207> (scdr (cdr s)))
> def args: : (<object 1130207> (scddr (cdr scdr)))
> def args: : (<object 1130279> (scdr (cdr s)))
> def args: : (<object 1130279> (scddr (cdr scdr)))
> def args: : (<object 1130347> (scdr (cdr s)))
> def args: : (<object 1130347> (scddr (cdr scdr)))
> def args: : (<object 1130419> (scdr (cdr s)))
> def args: : (<object 1130419> (scddr (cdr scdr)))
> def args: : (<object 1130487> (scdr (cdr s)))
> def args: : (<object 1130487> (scddr (cdr scdr)))
> def args: : (<object 1130559> (scdr (cdr s)))
> def args: : (<object 1130559> (scddr (cdr scdr)))
> def args: : (<object 1130627> (scdr (cdr s)))
> def args: : (<object 1130627> (scddr (cdr scdr)))
> def args: : (<object 1130699> (scdr (cdr s)))
> def args: : (<object 1130699> (scddr (cdr scdr)))
> 3403def args: : (<object 1144897> (env (if (null? @) # (car @))))
>  def args: : (<object 1145004> (env (if (null? @) # (car @))))
> def args: : (<object 1145124> (scdr (cdr s)))
> def args: : (<object 1145124> (scddr (cdr scdr)))
> def args: : (<object 1145196> (scdr (cdr s)))
> def args: : (<object 1145196> (scddr (cdr scdr)))
> def args: : (<object 1145268> (scdr (cdr s)))
> def args: : (<object 1145268> (scddr (cdr scdr)))
> def args: : (<object 1145336> (scdr (cdr s)))
> def args: : (<object 1145336> (scddr (cdr scdr)))
> def args: : (<object 1145575> (scdr (cdr s)))
> def args: : (<object 1145575> (scddr (cdr scdr)))
> def args: : (<object 1145647> (scdr (cdr s)))
> def args: : (<object 1145647> (scddr (cdr scdr)))
> def args: : (<object 1145715> (scdr (cdr s)))
> def args: : (<object 1145715> (scddr (cdr scdr)))
> def args: : (<object 1145787> (scdr (cdr s)))
> def args: : (<object 1145787> (scddr (cdr scdr)))
> def args: : (<object 1145855> (scdr (cdr s)))
> def args: : (<object 1145855> (scddr (cdr scdr)))
> def args: : (<object 1145927> (scdr (cdr s)))
> def args: : (<object 1145927> (scddr (cdr scdr)))
> def args: : (<object 1145995> (scdr (cdr s)))
> def args: : (<object 1145995> (scddr (cdr scdr)))
> def args: : (<object 1146067> (scdr (cdr s)))
> def args: : (<object 1146067> (scddr (cdr scdr)))
> def args: : (<object 1146135> (scdr (cdr s)))
> def args: : (<object 1146135> (scddr (cdr scdr)))
> def args: : (<object 1146207> (scdr (cdr s)))
> def args: : (<object 1146207> (scddr (cdr scdr)))
> def args: : (<object 1146275> (scdr (cdr s)))
> def args: : (<object 1146275> (scddr (cdr scdr)))
> def args: : (<object 1146347> (scdr (cdr s)))
> def args: : (<object 1146347> (scddr (cdr scdr)))
> def args: : (<object 1146415> (scdr (cdr s)))
> def args: : (<object 1146415> (scddr (cdr scdr)))
> def args: : (<object 1146487> (scdr (cdr s)))
> def args: : (<object 1146487> (scddr (cdr scdr)))
> def args: : (<object 1146555> (scdr (cdr s)))
> def args: : (<object 1146555> (scddr (cdr scdr)))
> def args: : (<object 1146627> (scdr (cdr s)))
> def args: : (<object 1146627> (scddr (cdr scdr)))
> def args: : (<object 1146695> (scdr (cdr s)))
> def args: : (<object 1146695> (scddr (cdr scdr)))
> def args: : (<object 1146767> (scdr (cdr s)))
> def args: : (<object 1146767> (scddr (cdr scdr)))
> def args: : (<object 1146835> (scdr (cdr s)))
> def args: : (<object 1146835> (scddr (cdr scdr)))
> def args: : (<object 1146907> (scdr (cdr s)))
> def args: : (<object 1146907> (scddr (cdr scdr)))
> def args: : (<object 1146975> (scdr (cdr s)))
> def args: : (<object 1146975> (scddr (cdr scdr)))
> def args: : (<object 1147047> (scdr (cdr s)))
> def args: : (<object 1147047> (scddr (cdr scdr)))
> def args: : (<object 1147115> (scdr (cdr s)))
> def args: : (<object 1147115> (scddr (cdr scdr)))
> def args: : (<object 1147187> (scdr (cdr s)))
> def args: : (<object 1147187> (scddr (cdr scdr)))
> def args: : (<object 1147255> (scdr (cdr s)))
> def args: : (<object 1147255> (scddr (cdr scdr)))
> def args: : (<object 1147327> (scdr (cdr s)))
> def args: : (<object 1147327> (scddr (cdr scdr)))
> def args: : (<object 1147395> (scdr (cdr s)))
> def args: : (<object 1147395> (scddr (cdr scdr)))
> def args: : (<object 1147467> (scdr (cdr s)))
> def args: : (<object 1147467> (scddr (cdr scdr)))
> def args: : (<object 1147535> (scdr (cdr s)))
> def args: : (<object 1147535> (scddr (cdr scdr)))
> def args: : (<object 1147607> (scdr (cdr s)))
> def args: : (<object 1147607> (scddr (cdr scdr)))
> def args: : (<object 1147675> (scdr (cdr s)))
> def args: : (<object 1147675> (scddr (cdr scdr)))
> def args: : (<object 1147747> (scdr (cdr s)))
> def args: : (<object 1147747> (scddr (cdr scdr)))
> def args: : (<object 1147815> (scdr (cdr s)))
> def args: : (<object 1147815> (scddr (cdr scdr)))
> def args: : (<object 1147887> (scdr (cdr s)))
> def args: : (<object 1147887> (scddr (cdr scdr)))
> def args: : (<object 1147955> (scdr (cdr s)))
> def args: : (<object 1147955> (scddr (cdr scdr)))
> def args: : (<object 1148027> (scdr (cdr s)))
> def args: : (<object 1148027> (scddr (cdr scdr)))
> def args: : (<object 1148095> (scdr (cdr s)))
> def args: : (<object 1148095> (scddr (cdr scdr)))
> def args: : (<object 1148167> (scdr (cdr s)))
> def args: : (<object 1148167> (scddr (cdr scdr)))
> def args: : (<object 1148235> (scdr (cdr s)))
> def args: : (<object 1148235> (scddr (cdr scdr)))
> def args: : (<object 1148307> (scdr (cdr s)))
> def args: : (<object 1148307> (scddr (cdr scdr)))
> def args: : (<object 1148375> (scdr (cdr s)))
> def args: : (<object 1148375> (scddr (cdr scdr)))
> def args: : (<object 1148447> (scdr (cdr s)))
> def args: : (<object 1148447> (scddr (cdr scdr)))
> def args: : (<object 1148515> (scdr (cdr s)))
> def args: : (<object 1148515> (scddr (cdr scdr)))
> def args: : (<object 1148587> (scdr (cdr s)))
> def args: : (<object 1148587> (scddr (cdr scdr)))
> def args: : (<object 1148655> (scdr (cdr s)))
> def args: : (<object 1148655> (scddr (cdr scdr)))
> def args: : (<object 1148727> (scdr (cdr s)))
> def args: : (<object 1148727> (scddr (cdr scdr)))
> def args: : (<object 1148795> (scdr (cdr s)))
> def args: : (<object 1148795> (scddr (cdr scdr)))
> def args: : (<object 1148867> (scdr (cdr s)))
> def args: : (<object 1148867> (scddr (cdr scdr)))
> def args: : (<object 1148935> (scdr (cdr s)))
> def args: : (<object 1148935> (scddr (cdr scdr)))
> def args: : (<object 1149007> (scdr (cdr s)))
> def args: : (<object 1149007> (scddr (cdr scdr)))
> def args: : (<object 1149075> (scdr (cdr s)))
> def args: : (<object 1149075> (scddr (cdr scdr)))
> def args: : (<object 1149147> (scdr (cdr s)))
> def args: : (<object 1149147> (scddr (cdr scdr)))
> def args: : (<object 1149215> (scdr (cdr s)))
> def args: : (<object 1149215> (scddr (cdr scdr)))
> def args: : (<object 1149287> (scdr (cdr s)))
> def args: : (<object 1149287> (scddr (cdr scdr)))
> def args: : (<object 1149355> (scdr (cdr s)))
> def args: : (<object 1149355> (scddr (cdr scdr)))
> def args: : (<object 1149427> (scdr (cdr s)))
> def args: : (<object 1149427> (scddr (cdr scdr)))
> def args: : (<object 1149495> (scdr (cdr s)))
> def args: : (<object 1149495> (scddr (cdr scdr)))
> def args: : (<object 1149567> (scdr (cdr s)))
> def args: : (<object 1149567> (scddr (cdr scdr)))
> def args: : (<object 1149635> (scdr (cdr s)))
> def args: : (<object 1149635> (scddr (cdr scdr)))
> def args: : (<object 1149707> (scdr (cdr s)))
> def args: : (<object 1149707> (scddr (cdr scdr)))
> def args: : (<object 1149775> (scdr (cdr s)))
> def args: : (<object 1149775> (scddr (cdr scdr)))
> def args: : (<object 1149847> (scdr (cdr s)))
> def args: : (<object 1149847> (scddr (cdr scdr)))
> def args: : (<object 1149915> (scdr (cdr s)))
> def args: : (<object 1149915> (scddr (cdr scdr)))
> def args: : (<object 1149987> (scdr (cdr s)))
> def args: : (<object 1149987> (scddr (cdr scdr)))
> def args: : (<object 1150055> (scdr (cdr s)))
> def args: : (<object 1150055> (scddr (cdr scdr)))
> def args: : (<object 1150127> (scdr (cdr s)))
> def args: : (<object 1150127> (scddr (cdr scdr)))
> def args: : (<object 1150195> (scdr (cdr s)))
> def args: : (<object 1150195> (scddr (cdr scdr)))
> def args: : (<object 1150267> (scdr (cdr s)))
> def args: : (<object 1150267> (scddr (cdr scdr)))
> def args: : (<object 1150335> (scdr (cdr s)))
> def args: : (<object 1150335> (scddr (cdr scdr)))
> def args: : (<object 1150407> (scdr (cdr s)))
> def args: : (<object 1150407> (scddr (cdr scdr)))
> def args: : (<object 1150475> (scdr (cdr s)))
> def args: : (<object 1150475> (scddr (cdr scdr)))
> def args: : (<object 1150547> (scdr (cdr s)))
> def args: : (<object 1150547> (scddr (cdr scdr)))
> def args: : (<object 1150615> (scdr (cdr s)))
> def args: : (<object 1150615> (scddr (cdr scdr)))
> def args: : (<object 1150687> (scdr (cdr s)))
> def args: : (<object 1150687> (scddr (cdr scdr)))
> def args: : (<object 1150755> (scdr (cdr s)))
> def args: : (<object 1150755> (scddr (cdr scdr)))
> def args: : (<object 1150827> (scdr (cdr s)))
> def args: : (<object 1150827> (scddr (cdr scdr)))
> def args: : (<object 1150895> (scdr (cdr s)))
> def args: : (<object 1150895> (scddr (cdr scdr)))
> def args: : (<object 1150967> (scdr (cdr s)))
> def args: : (<object 1150967> (scddr (cdr scdr)))
> def args: : (<object 1151035> (scdr (cdr s)))
> def args: : (<object 1151035> (scddr (cdr scdr)))
> def args: : (<object 1151107> (scdr (cdr s)))
> def args: : (<object 1151107> (scddr (cdr scdr)))
> def args: : (<object 1151175> (scdr (cdr s)))
> def args: : (<object 1151175> (scddr (cdr scdr)))
> def args: : (<object 1151247> (scdr (cdr s)))
> def args: : (<object 1151247> (scddr (cdr scdr)))
> def args: : (<object 1151315> (scdr (cdr s)))
> def args: : (<object 1151315> (scddr (cdr scdr)))
> def args: : (<object 1151387> (scdr (cdr s)))
> def args: : (<object 1151387> (scddr (cdr scdr)))
> def args: : (<object 1151455> (scdr (cdr s)))
> def args: : (<object 1151455> (scddr (cdr scdr)))
> def args: : (<object 1151527> (scdr (cdr s)))
> def args: : (<object 1151527> (scddr (cdr scdr)))
> def args: : (<object 1151595> (scdr (cdr s)))
> def args: : (<object 1151595> (scddr (cdr scdr)))
> def args: : (<object 1151667> (scdr (cdr s)))
> def args: : (<object 1151667> (scddr (cdr scdr)))
> def args: : (<object 1151735> (scdr (cdr s)))
> def args: : (<object 1151735> (scddr (cdr scdr)))
> def args: : (<object 1151807> (scdr (cdr s)))
> def args: : (<object 1151807> (scddr (cdr scdr)))
> def args: : (<object 1151875> (scdr (cdr s)))
> def args: : (<object 1151875> (scddr (cdr scdr)))
> def args: : (<object 1151947> (scdr (cdr s)))
> def args: : (<object 1151947> (scddr (cdr scdr)))
> def args: : (<object 1152015> (scdr (cdr s)))
> def args: : (<object 1152015> (scddr (cdr scdr)))
> def args: : (<object 1152087> (scdr (cdr s)))
> def args: : (<object 1152087> (scddr (cdr scdr)))
> def args: : (<object 1152155> (scdr (cdr s)))
> def args: : (<object 1152155> (scddr (cdr scdr)))
> def args: : (<object 1152227> (scdr (cdr s)))
> def args: : (<object 1152227> (scddr (cdr scdr)))
> def args: : (<object 1152295> (scdr (cdr s)))
> def args: : (<object 1152295> (scddr (cdr scdr)))
> def args: : (<object 1152367> (scdr (cdr s)))
> def args: : (<object 1152367> (scddr (cdr scdr)))
> def args: : (<object 1152435> (scdr (cdr s)))
> def args: : (<object 1152435> (scddr (cdr scdr)))
> def args: : (<object 1152507> (scdr (cdr s)))
> def args: : (<object 1152507> (scddr (cdr scdr)))
> def args: : (<object 1152575> (scdr (cdr s)))
> def args: : (<object 1152575> (scddr (cdr scdr)))
> def args: : (<object 1152647> (scdr (cdr s)))
> def args: : (<object 1152647> (scddr (cdr scdr)))
> def args: : (<object 1152715> (scdr (cdr s)))
> def args: : (<object 1152715> (scddr (cdr scdr)))
> def args: : (<object 1152787> (scdr (cdr s)))
> def args: : (<object 1152787> (scddr (cdr scdr)))
> def args: : (<object 1152855> (scdr (cdr s)))
> def args: : (<object 1152855> (scddr (cdr scdr)))
> def args: : (<object 1152927> (scdr (cdr s)))
> def args: : (<object 1152927> (scddr (cdr scdr)))
> def args: : (<object 1152995> (scdr (cdr s)))
> def args: : (<object 1152995> (scddr (cdr scdr)))
> def args: : (<object 1153067> (scdr (cdr s)))
> def args: : (<object 1153067> (scddr (cdr scdr)))
> def args: : (<object 1153135> (scdr (cdr s)))
> def args: : (<object 1153135> (scddr (cdr scdr)))
> def args: : (<object 1153207> (scdr (cdr s)))
> def args: : (<object 1153207> (scddr (cdr scdr)))
> def args: : (<object 1153275> (scdr (cdr s)))
> def args: : (<object 1153275> (scddr (cdr scdr)))
> def args: : (<object 1153347> (scdr (cdr s)))
> def args: : (<object 1153347> (scddr (cdr scdr)))
> def args: : (<object 1153415> (scdr (cdr s)))
> def args: : (<object 1153415> (scddr (cdr scdr)))
> def args: : (<object 1153487> (scdr (cdr s)))
> def args: : (<object 1153487> (scddr (cdr scdr)))
> def args: : (<object 1153555> (scdr (cdr s)))
> def args: : (<object 1153555> (scddr (cdr scdr)))
> def args: : (<object 1153627> (scdr (cdr s)))
> def args: : (<object 1153627> (scddr (cdr scdr)))
> def args: : (<object 1153695> (scdr (cdr s)))
> def args: : (<object 1153695> (scddr (cdr scdr)))
> def args: : (<object 1153767> (scdr (cdr s)))
> def args: : (<object 1153767> (scddr (cdr scdr)))
> def args: : (<object 1153835> (scdr (cdr s)))
> def args: : (<object 1153835> (scddr (cdr scdr)))
> def args: : (<object 1153907> (scdr (cdr s)))
> def args: : (<object 1153907> (scddr (cdr scdr)))
> def args: : (<object 1153975> (scdr (cdr s)))
> def args: : (<object 1153975> (scddr (cdr scdr)))
> def args: : (<object 1154047> (scdr (cdr s)))
> def args: : (<object 1154047> (scddr (cdr scdr)))
> def args: : (<object 1154115> (scdr (cdr s)))
> def args: : (<object 1154115> (scddr (cdr scdr)))
> def args: : (<object 1154187> (scdr (cdr s)))
> def args: : (<object 1154187> (scddr (cdr scdr)))
> def args: : (<object 1154255> (scdr (cdr s)))
> def args: : (<object 1154255> (scddr (cdr scdr)))
> def args: : (<object 1154327> (scdr (cdr s)))
> def args: : (<object 1154327> (scddr (cdr scdr)))
> def args: : (<object 1154395> (scdr (cdr s)))
> def args: : (<object 1154395> (scddr (cdr scdr)))
> def args: : (<object 1154467> (scdr (cdr s)))
> def args: : (<object 1154467> (scddr (cdr scdr)))
> def args: : (<object 1154535> (scdr (cdr s)))
> def args: : (<object 1154535> (scddr (cdr scdr)))
> def args: : (<object 1154607> (scdr (cdr s)))
> def args: : (<object 1154607> (scddr (cdr scdr)))
> def args: : (<object 1154675> (scdr (cdr s)))
> def args: : (<object 1154675> (scddr (cdr scdr)))
> def args: : (<object 1154747> (scdr (cdr s)))
> def args: : (<object 1154747> (scddr (cdr scdr)))
> def args: : (<object 1154815> (scdr (cdr s)))
> def args: : (<object 1154815> (scddr (cdr scdr)))
> def args: : (<object 1154887> (scdr (cdr s)))
> def args: : (<object 1154887> (scddr (cdr scdr)))
> def args: : (<object 1154955> (scdr (cdr s)))
> def args: : (<object 1154955> (scddr (cdr scdr)))
> def args: : (<object 1155027> (scdr (cdr s)))
> def args: : (<object 1155027> (scddr (cdr scdr)))
> def args: : (<object 1155095> (scdr (cdr s)))
> def args: : (<object 1155095> (scddr (cdr scdr)))
> def args: : (<object 1155167> (scdr (cdr s)))
> def args: : (<object 1155167> (scddr (cdr scdr)))
> def args: : (<object 1155235> (scdr (cdr s)))
> def args: : (<object 1155235> (scddr (cdr scdr)))
> def args: : (<object 1155307> (scdr (cdr s)))
> def args: : (<object 1155307> (scddr (cdr scdr)))
> def args: : (<object 1155375> (scdr (cdr s)))
> def args: : (<object 1155375> (scddr (cdr scdr)))
> def args: : (<object 1155447> (scdr (cdr s)))
> def args: : (<object 1155447> (scddr (cdr scdr)))
> def args: : (<object 1155515> (scdr (cdr s)))
> def args: : (<object 1155515> (scddr (cdr scdr)))
> def args: : (<object 1155587> (scdr (cdr s)))
> def args: : (<object 1155587> (scddr (cdr scdr)))
> def args: : (<object 1155655> (scdr (cdr s)))
> def args: : (<object 1155655> (scddr (cdr scdr)))
> def args: : (<object 1155727> (scdr (cdr s)))
> def args: : (<object 1155727> (scddr (cdr scdr)))
> def args: : (<object 1155795> (scdr (cdr s)))
> def args: : (<object 1155795> (scddr (cdr scdr)))
> def args: : (<object 1155867> (scdr (cdr s)))
> def args: : (<object 1155867> (scddr (cdr scdr)))
> def args: : (<object 1155935> (scdr (cdr s)))
> def args: : (<object 1155935> (scddr (cdr scdr)))
> def args: : (<object 1156007> (scdr (cdr s)))
> def args: : (<object 1156007> (scddr (cdr scdr)))
> def args: : (<object 1156075> (scdr (cdr s)))
> def args: : (<object 1156075> (scddr (cdr scdr)))
> def args: : (<object 1156147> (scdr (cdr s)))
> def args: : (<object 1156147> (scddr (cdr scdr)))
> def args: : (<object 1156215> (scdr (cdr s)))
> def args: : (<object 1156215> (scddr (cdr scdr)))
> def args: : (<object 1156287> (scdr (cdr s)))
> def args: : (<object 1156287> (scddr (cdr scdr)))
> def args: : (<object 1156355> (scdr (cdr s)))
> def args: : (<object 1156355> (scddr (cdr scdr)))
> def args: : (<object 1156427> (scdr (cdr s)))
> def args: : (<object 1156427> (scddr (cdr scdr)))
> def args: : (<object 1156495> (scdr (cdr s)))
> def args: : (<object 1156495> (scddr (cdr scdr)))
> def args: : (<object 1156567> (scdr (cdr s)))
> def args: : (<object 1156567> (scddr (cdr scdr)))
> def args: : (<object 1156635> (scdr (cdr s)))
> def args: : (<object 1156635> (scddr (cdr scdr)))
> def args: : (<object 1156707> (scdr (cdr s)))
> def args: : (<object 1156707> (scddr (cdr scdr)))
> def args: : (<object 1156775> (scdr (cdr s)))
> def args: : (<object 1156775> (scddr (cdr scdr)))
> def args: : (<object 1156847> (scdr (cdr s)))
> def args: : (<object 1156847> (scddr (cdr scdr)))
> 3486def args: : (<object 1171216> (env (if (null? @) # (car @))))
>  def args: : (<object 1171323> (env (if (null? @) # (car @))))
> def args: : (<object 1171443> (scdr (cdr s)))
> def args: : (<object 1171443> (scddr (cdr scdr)))
> def args: : (<object 1171515> (scdr (cdr s)))
> def args: : (<object 1171515> (scddr (cdr scdr)))
> def args: : (<object 1171587> (scdr (cdr s)))
> def args: : (<object 1171587> (scddr (cdr scdr)))
> def args: : (<object 1171655> (scdr (cdr s)))
> def args: : (<object 1171655> (scddr (cdr scdr)))
> def args: : (<object 1171894> (scdr (cdr s)))
> def args: : (<object 1171894> (scddr (cdr scdr)))
> def args: : (<object 1171966> (scdr (cdr s)))
> def args: : (<object 1171966> (scddr (cdr scdr)))
> def args: : (<object 1172034> (scdr (cdr s)))
> def args: : (<object 1172034> (scddr (cdr scdr)))
> def args: : (<object 1172106> (scdr (cdr s)))
> def args: : (<object 1172106> (scddr (cdr scdr)))
> def args: : (<object 1172174> (scdr (cdr s)))
> def args: : (<object 1172174> (scddr (cdr scdr)))
> def args: : (<object 1172246> (scdr (cdr s)))
> def args: : (<object 1172246> (scddr (cdr scdr)))
> def args: : (<object 1172314> (scdr (cdr s)))
> def args: : (<object 1172314> (scddr (cdr scdr)))
> def args: : (<object 1172386> (scdr (cdr s)))
> def args: : (<object 1172386> (scddr (cdr scdr)))
> def args: : (<object 1172454> (scdr (cdr s)))
> def args: : (<object 1172454> (scddr (cdr scdr)))
> def args: : (<object 1172526> (scdr (cdr s)))
> def args: : (<object 1172526> (scddr (cdr scdr)))
> def args: : (<object 1172594> (scdr (cdr s)))
> def args: : (<object 1172594> (scddr (cdr scdr)))
> def args: : (<object 1172666> (scdr (cdr s)))
> def args: : (<object 1172666> (scddr (cdr scdr)))
> def args: : (<object 1172734> (scdr (cdr s)))
> def args: : (<object 1172734> (scddr (cdr scdr)))
> def args: : (<object 1172806> (scdr (cdr s)))
> def args: : (<object 1172806> (scddr (cdr scdr)))
> def args: : (<object 1172874> (scdr (cdr s)))
> def args: : (<object 1172874> (scddr (cdr scdr)))
> def args: : (<object 1172946> (scdr (cdr s)))
> def args: : (<object 1172946> (scddr (cdr scdr)))
> def args: : (<object 1173014> (scdr (cdr s)))
> def args: : (<object 1173014> (scddr (cdr scdr)))
> def args: : (<object 1173086> (scdr (cdr s)))
> def args: : (<object 1173086> (scddr (cdr scdr)))
> def args: : (<object 1173154> (scdr (cdr s)))
> def args: : (<object 1173154> (scddr (cdr scdr)))
> def args: : (<object 1173226> (scdr (cdr s)))
> def args: : (<object 1173226> (scddr (cdr scdr)))
> def args: : (<object 1173294> (scdr (cdr s)))
> def args: : (<object 1173294> (scddr (cdr scdr)))
> def args: : (<object 1173366> (scdr (cdr s)))
> def args: : (<object 1173366> (scddr (cdr scdr)))
> def args: : (<object 1173434> (scdr (cdr s)))
> def args: : (<object 1173434> (scddr (cdr scdr)))
> def args: : (<object 1173506> (scdr (cdr s)))
> def args: : (<object 1173506> (scddr (cdr scdr)))
> def args: : (<object 1173574> (scdr (cdr s)))
> def args: : (<object 1173574> (scddr (cdr scdr)))
> def args: : (<object 1173646> (scdr (cdr s)))
> def args: : (<object 1173646> (scddr (cdr scdr)))
> def args: : (<object 1173714> (scdr (cdr s)))
> def args: : (<object 1173714> (scddr (cdr scdr)))
> def args: : (<object 1173786> (scdr (cdr s)))
> def args: : (<object 1173786> (scddr (cdr scdr)))
> def args: : (<object 1173854> (scdr (cdr s)))
> def args: : (<object 1173854> (scddr (cdr scdr)))
> def args: : (<object 1173926> (scdr (cdr s)))
> def args: : (<object 1173926> (scddr (cdr scdr)))
> def args: : (<object 1173994> (scdr (cdr s)))
> def args: : (<object 1173994> (scddr (cdr scdr)))
> def args: : (<object 1174066> (scdr (cdr s)))
> def args: : (<object 1174066> (scddr (cdr scdr)))
> def args: : (<object 1174134> (scdr (cdr s)))
> def args: : (<object 1174134> (scddr (cdr scdr)))
> def args: : (<object 1174206> (scdr (cdr s)))
> def args: : (<object 1174206> (scddr (cdr scdr)))
> def args: : (<object 1174274> (scdr (cdr s)))
> def args: : (<object 1174274> (scddr (cdr scdr)))
> def args: : (<object 1174346> (scdr (cdr s)))
> def args: : (<object 1174346> (scddr (cdr scdr)))
> def args: : (<object 1174414> (scdr (cdr s)))
> def args: : (<object 1174414> (scddr (cdr scdr)))
> def args: : (<object 1174486> (scdr (cdr s)))
> def args: : (<object 1174486> (scddr (cdr scdr)))
> def args: : (<object 1174554> (scdr (cdr s)))
> def args: : (<object 1174554> (scddr (cdr scdr)))
> def args: : (<object 1174626> (scdr (cdr s)))
> def args: : (<object 1174626> (scddr (cdr scdr)))
> def args: : (<object 1174694> (scdr (cdr s)))
> def args: : (<object 1174694> (scddr (cdr scdr)))
> def args: : (<object 1174766> (scdr (cdr s)))
> def args: : (<object 1174766> (scddr (cdr scdr)))
> def args: : (<object 1174834> (scdr (cdr s)))
> def args: : (<object 1174834> (scddr (cdr scdr)))
> def args: : (<object 1174906> (scdr (cdr s)))
> def args: : (<object 1174906> (scddr (cdr scdr)))
> def args: : (<object 1174974> (scdr (cdr s)))
> def args: : (<object 1174974> (scddr (cdr scdr)))
> def args: : (<object 1175046> (scdr (cdr s)))
> def args: : (<object 1175046> (scddr (cdr scdr)))
> def args: : (<object 1175114> (scdr (cdr s)))
> def args: : (<object 1175114> (scddr (cdr scdr)))
> def args: : (<object 1175186> (scdr (cdr s)))
> def args: : (<object 1175186> (scddr (cdr scdr)))
> def args: : (<object 1175254> (scdr (cdr s)))
> def args: : (<object 1175254> (scddr (cdr scdr)))
> def args: : (<object 1175326> (scdr (cdr s)))
> def args: : (<object 1175326> (scddr (cdr scdr)))
> def args: : (<object 1175394> (scdr (cdr s)))
> def args: : (<object 1175394> (scddr (cdr scdr)))
> def args: : (<object 1175466> (scdr (cdr s)))
> def args: : (<object 1175466> (scddr (cdr scdr)))
> def args: : (<object 1175534> (scdr (cdr s)))
> def args: : (<object 1175534> (scddr (cdr scdr)))
> def args: : (<object 1175606> (scdr (cdr s)))
> def args: : (<object 1175606> (scddr (cdr scdr)))
> def args: : (<object 1175674> (scdr (cdr s)))
> def args: : (<object 1175674> (scddr (cdr scdr)))
> def args: : (<object 1175746> (scdr (cdr s)))
> def args: : (<object 1175746> (scddr (cdr scdr)))
> def args: : (<object 1175814> (scdr (cdr s)))
> def args: : (<object 1175814> (scddr (cdr scdr)))
> def args: : (<object 1175886> (scdr (cdr s)))
> def args: : (<object 1175886> (scddr (cdr scdr)))
> def args: : (<object 1175954> (scdr (cdr s)))
> def args: : (<object 1175954> (scddr (cdr scdr)))
> def args: : (<object 1176026> (scdr (cdr s)))
> def args: : (<object 1176026> (scddr (cdr scdr)))
> def args: : (<object 1176094> (scdr (cdr s)))
> def args: : (<object 1176094> (scddr (cdr scdr)))
> def args: : (<object 1176166> (scdr (cdr s)))
> def args: : (<object 1176166> (scddr (cdr scdr)))
> def args: : (<object 1176234> (scdr (cdr s)))
> def args: : (<object 1176234> (scddr (cdr scdr)))
> def args: : (<object 1176306> (scdr (cdr s)))
> def args: : (<object 1176306> (scddr (cdr scdr)))
> def args: : (<object 1176374> (scdr (cdr s)))
> def args: : (<object 1176374> (scddr (cdr scdr)))
> def args: : (<object 1176446> (scdr (cdr s)))
> def args: : (<object 1176446> (scddr (cdr scdr)))
> def args: : (<object 1176514> (scdr (cdr s)))
> def args: : (<object 1176514> (scddr (cdr scdr)))
> def args: : (<object 1176586> (scdr (cdr s)))
> def args: : (<object 1176586> (scddr (cdr scdr)))
> def args: : (<object 1176654> (scdr (cdr s)))
> def args: : (<object 1176654> (scddr (cdr scdr)))
> def args: : (<object 1176726> (scdr (cdr s)))
> def args: : (<object 1176726> (scddr (cdr scdr)))
> def args: : (<object 1176794> (scdr (cdr s)))
> def args: : (<object 1176794> (scddr (cdr scdr)))
> def args: : (<object 1176866> (scdr (cdr s)))
> def args: : (<object 1176866> (scddr (cdr scdr)))
> def args: : (<object 1176934> (scdr (cdr s)))
> def args: : (<object 1176934> (scddr (cdr scdr)))
> def args: : (<object 1177006> (scdr (cdr s)))
> def args: : (<object 1177006> (scddr (cdr scdr)))
> def args: : (<object 1177074> (scdr (cdr s)))
> def args: : (<object 1177074> (scddr (cdr scdr)))
> def args: : (<object 1177146> (scdr (cdr s)))
> def args: : (<object 1177146> (scddr (cdr scdr)))
> def args: : (<object 1177214> (scdr (cdr s)))
> def args: : (<object 1177214> (scddr (cdr scdr)))
> def args: : (<object 1177286> (scdr (cdr s)))
> def args: : (<object 1177286> (scddr (cdr scdr)))
> def args: : (<object 1177354> (scdr (cdr s)))
> def args: : (<object 1177354> (scddr (cdr scdr)))
> def args: : (<object 1177426> (scdr (cdr s)))
> def args: : (<object 1177426> (scddr (cdr scdr)))
> def args: : (<object 1177494> (scdr (cdr s)))
> def args: : (<object 1177494> (scddr (cdr scdr)))
> def args: : (<object 1177566> (scdr (cdr s)))
> def args: : (<object 1177566> (scddr (cdr scdr)))
> def args: : (<object 1177634> (scdr (cdr s)))
> def args: : (<object 1177634> (scddr (cdr scdr)))
> def args: : (<object 1177706> (scdr (cdr s)))
> def args: : (<object 1177706> (scddr (cdr scdr)))
> def args: : (<object 1177774> (scdr (cdr s)))
> def args: : (<object 1177774> (scddr (cdr scdr)))
> def args: : (<object 1177846> (scdr (cdr s)))
> def args: : (<object 1177846> (scddr (cdr scdr)))
> def args: : (<object 1177914> (scdr (cdr s)))
> def args: : (<object 1177914> (scddr (cdr scdr)))
> def args: : (<object 1177986> (scdr (cdr s)))
> def args: : (<object 1177986> (scddr (cdr scdr)))
> def args: : (<object 1178054> (scdr (cdr s)))
> def args: : (<object 1178054> (scddr (cdr scdr)))
> def args: : (<object 1178126> (scdr (cdr s)))
> def args: : (<object 1178126> (scddr (cdr scdr)))
> def args: : (<object 1178194> (scdr (cdr s)))
> def args: : (<object 1178194> (scddr (cdr scdr)))
> def args: : (<object 1178266> (scdr (cdr s)))
> def args: : (<object 1178266> (scddr (cdr scdr)))
> def args: : (<object 1178334> (scdr (cdr s)))
> def args: : (<object 1178334> (scddr (cdr scdr)))
> def args: : (<object 1178406> (scdr (cdr s)))
> def args: : (<object 1178406> (scddr (cdr scdr)))
> def args: : (<object 1178474> (scdr (cdr s)))
> def args: : (<object 1178474> (scddr (cdr scdr)))
> def args: : (<object 1178546> (scdr (cdr s)))
> def args: : (<object 1178546> (scddr (cdr scdr)))
> def args: : (<object 1178614> (scdr (cdr s)))
> def args: : (<object 1178614> (scddr (cdr scdr)))
> def args: : (<object 1178686> (scdr (cdr s)))
> def args: : (<object 1178686> (scddr (cdr scdr)))
> def args: : (<object 1178754> (scdr (cdr s)))
> def args: : (<object 1178754> (scddr (cdr scdr)))
> def args: : (<object 1178826> (scdr (cdr s)))
> def args: : (<object 1178826> (scddr (cdr scdr)))
> def args: : (<object 1178894> (scdr (cdr s)))
> def args: : (<object 1178894> (scddr (cdr scdr)))
> def args: : (<object 1178966> (scdr (cdr s)))
> def args: : (<object 1178966> (scddr (cdr scdr)))
> def args: : (<object 1179034> (scdr (cdr s)))
> def args: : (<object 1179034> (scddr (cdr scdr)))
> def args: : (<object 1179106> (scdr (cdr s)))
> def args: : (<object 1179106> (scddr (cdr scdr)))
> def args: : (<object 1179174> (scdr (cdr s)))
> def args: : (<object 1179174> (scddr (cdr scdr)))
> def args: : (<object 1179246> (scdr (cdr s)))
> def args: : (<object 1179246> (scddr (cdr scdr)))
> def args: : (<object 1179314> (scdr (cdr s)))
> def args: : (<object 1179314> (scddr (cdr scdr)))
> def args: : (<object 1179386> (scdr (cdr s)))
> def args: : (<object 1179386> (scddr (cdr scdr)))
> def args: : (<object 1179454> (scdr (cdr s)))
> def args: : (<object 1179454> (scddr (cdr scdr)))
> def args: : (<object 1179526> (scdr (cdr s)))
> def args: : (<object 1179526> (scddr (cdr scdr)))
> def args: : (<object 1179594> (scdr (cdr s)))
> def args: : (<object 1179594> (scddr (cdr scdr)))
> def args: : (<object 1179666> (scdr (cdr s)))
> def args: : (<object 1179666> (scddr (cdr scdr)))
> def args: : (<object 1179734> (scdr (cdr s)))
> def args: : (<object 1179734> (scddr (cdr scdr)))
> def args: : (<object 1179806> (scdr (cdr s)))
> def args: : (<object 1179806> (scddr (cdr scdr)))
> def args: : (<object 1179874> (scdr (cdr s)))
> def args: : (<object 1179874> (scddr (cdr scdr)))
> def args: : (<object 1179946> (scdr (cdr s)))
> def args: : (<object 1179946> (scddr (cdr scdr)))
> def args: : (<object 1180014> (scdr (cdr s)))
> def args: : (<object 1180014> (scddr (cdr scdr)))
> def args: : (<object 1180086> (scdr (cdr s)))
> def args: : (<object 1180086> (scddr (cdr scdr)))
> def args: : (<object 1180154> (scdr (cdr s)))
> def args: : (<object 1180154> (scddr (cdr scdr)))
> def args: : (<object 1180226> (scdr (cdr s)))
> def args: : (<object 1180226> (scddr (cdr scdr)))
> def args: : (<object 1180294> (scdr (cdr s)))
> def args: : (<object 1180294> (scddr (cdr scdr)))
> def args: : (<object 1180366> (scdr (cdr s)))
> def args: : (<object 1180366> (scddr (cdr scdr)))
> def args: : (<object 1180434> (scdr (cdr s)))
> def args: : (<object 1180434> (scddr (cdr scdr)))
> def args: : (<object 1180506> (scdr (cdr s)))
> def args: : (<object 1180506> (scddr (cdr scdr)))
> def args: : (<object 1180574> (scdr (cdr s)))
> def args: : (<object 1180574> (scddr (cdr scdr)))
> def args: : (<object 1180646> (scdr (cdr s)))
> def args: : (<object 1180646> (scddr (cdr scdr)))
> def args: : (<object 1180714> (scdr (cdr s)))
> def args: : (<object 1180714> (scddr (cdr scdr)))
> def args: : (<object 1180786> (scdr (cdr s)))
> def args: : (<object 1180786> (scddr (cdr scdr)))
> def args: : (<object 1180854> (scdr (cdr s)))
> def args: : (<object 1180854> (scddr (cdr scdr)))
> def args: : (<object 1180926> (scdr (cdr s)))
> def args: : (<object 1180926> (scddr (cdr scdr)))
> def args: : (<object 1180994> (scdr (cdr s)))
> def args: : (<object 1180994> (scddr (cdr scdr)))
> def args: : (<object 1181066> (scdr (cdr s)))
> def args: : (<object 1181066> (scddr (cdr scdr)))
> def args: : (<object 1181134> (scdr (cdr s)))
> def args: : (<object 1181134> (scddr (cdr scdr)))
> def args: : (<object 1181206> (scdr (cdr s)))
> def args: : (<object 1181206> (scddr (cdr scdr)))
> def args: : (<object 1181274> (scdr (cdr s)))
> def args: : (<object 1181274> (scddr (cdr scdr)))
> def args: : (<object 1181346> (scdr (cdr s)))
> def args: : (<object 1181346> (scddr (cdr scdr)))
> def args: : (<object 1181414> (scdr (cdr s)))
> def args: : (<object 1181414> (scddr (cdr scdr)))
> def args: : (<object 1181486> (scdr (cdr s)))
> def args: : (<object 1181486> (scddr (cdr scdr)))
> def args: : (<object 1181554> (scdr (cdr s)))
> def args: : (<object 1181554> (scddr (cdr scdr)))
> def args: : (<object 1181626> (scdr (cdr s)))
> def args: : (<object 1181626> (scddr (cdr scdr)))
> def args: : (<object 1181694> (scdr (cdr s)))
> def args: : (<object 1181694> (scddr (cdr scdr)))
> def args: : (<object 1181766> (scdr (cdr s)))
> def args: : (<object 1181766> (scddr (cdr scdr)))
> def args: : (<object 1181834> (scdr (cdr s)))
> def args: : (<object 1181834> (scddr (cdr scdr)))
> def args: : (<object 1181906> (scdr (cdr s)))
> def args: : (<object 1181906> (scddr (cdr scdr)))
> def args: : (<object 1181974> (scdr (cdr s)))
> def args: : (<object 1181974> (scddr (cdr scdr)))
> def args: : (<object 1182046> (scdr (cdr s)))
> def args: : (<object 1182046> (scddr (cdr scdr)))
> def args: : (<object 1182114> (scdr (cdr s)))
> def args: : (<object 1182114> (scddr (cdr scdr)))
> def args: : (<object 1182186> (scdr (cdr s)))
> def args: : (<object 1182186> (scddr (cdr scdr)))
> def args: : (<object 1182254> (scdr (cdr s)))
> def args: : (<object 1182254> (scddr (cdr scdr)))
> def args: : (<object 1182326> (scdr (cdr s)))
> def args: : (<object 1182326> (scddr (cdr scdr)))
> def args: : (<object 1182394> (scdr (cdr s)))
> def args: : (<object 1182394> (scddr (cdr scdr)))
> def args: : (<object 1182466> (scdr (cdr s)))
> def args: : (<object 1182466> (scddr (cdr scdr)))
> def args: : (<object 1182534> (scdr (cdr s)))
> def args: : (<object 1182534> (scddr (cdr scdr)))
> def args: : (<object 1182606> (scdr (cdr s)))
> def args: : (<object 1182606> (scddr (cdr scdr)))
> def args: : (<object 1182674> (scdr (cdr s)))
> def args: : (<object 1182674> (scddr (cdr scdr)))
> def args: : (<object 1182746> (scdr (cdr s)))
> def args: : (<object 1182746> (scddr (cdr scdr)))
> def args: : (<object 1182814> (scdr (cdr s)))
> def args: : (<object 1182814> (scddr (cdr scdr)))
> def args: : (<object 1182886> (scdr (cdr s)))
> def args: : (<object 1182886> (scddr (cdr scdr)))
> def args: : (<object 1182954> (scdr (cdr s)))
> def args: : (<object 1182954> (scddr (cdr scdr)))
> def args: : (<object 1183026> (scdr (cdr s)))
> def args: : (<object 1183026> (scddr (cdr scdr)))
> def args: : (<object 1183094> (scdr (cdr s)))
> def args: : (<object 1183094> (scddr (cdr scdr)))
> def args: : (<object 1183166> (scdr (cdr s)))
> def args: : (<object 1183166> (scddr (cdr scdr)))
> def args: : (<object 1183234> (scdr (cdr s)))
> def args: : (<object 1183234> (scddr (cdr scdr)))
> def args: : (<object 1183306> (scdr (cdr s)))
> def args: : (<object 1183306> (scddr (cdr scdr)))
> 3570def args: : (<object 1197846> (env (if (null? @) # (car @))))
>  def args: : (<object 1197953> (env (if (null? @) # (car @))))
> def args: : (<object 1198073> (scdr (cdr s)))
> def args: : (<object 1198073> (scddr (cdr scdr)))
> def args: : (<object 1198145> (scdr (cdr s)))
> def args: : (<object 1198145> (scddr (cdr scdr)))
> def args: : (<object 1198217> (scdr (cdr s)))
> def args: : (<object 1198217> (scddr (cdr scdr)))
> def args: : (<object 1198285> (scdr (cdr s)))
> def args: : (<object 1198285> (scddr (cdr scdr)))
> def args: : (<object 1198524> (scdr (cdr s)))
> def args: : (<object 1198524> (scddr (cdr scdr)))
> def args: : (<object 1198596> (scdr (cdr s)))
> def args: : (<object 1198596> (scddr (cdr scdr)))
> def args: : (<object 1198664> (scdr (cdr s)))
> def args: : (<object 1198664> (scddr (cdr scdr)))
> def args: : (<object 1198736> (scdr (cdr s)))
> def args: : (<object 1198736> (scddr (cdr scdr)))
> def args: : (<object 1198804> (scdr (cdr s)))
> def args: : (<object 1198804> (scddr (cdr scdr)))
> def args: : (<object 1198876> (scdr (cdr s)))
> def args: : (<object 1198876> (scddr (cdr scdr)))
> def args: : (<object 1198944> (scdr (cdr s)))
> def args: : (<object 1198944> (scddr (cdr scdr)))
> def args: : (<object 1199016> (scdr (cdr s)))
> def args: : (<object 1199016> (scddr (cdr scdr)))
> def args: : (<object 1199084> (scdr (cdr s)))
> def args: : (<object 1199084> (scddr (cdr scdr)))
> def args: : (<object 1199156> (scdr (cdr s)))
> def args: : (<object 1199156> (scddr (cdr scdr)))
> def args: : (<object 1199224> (scdr (cdr s)))
> def args: : (<object 1199224> (scddr (cdr scdr)))
> def args: : (<object 1199296> (scdr (cdr s)))
> def args: : (<object 1199296> (scddr (cdr scdr)))
> def args: : (<object 1199364> (scdr (cdr s)))
> def args: : (<object 1199364> (scddr (cdr scdr)))
> def args: : (<object 1199436> (scdr (cdr s)))
> def args: : (<object 1199436> (scddr (cdr scdr)))
> def args: : (<object 1199504> (scdr (cdr s)))
> def args: : (<object 1199504> (scddr (cdr scdr)))
> def args: : (<object 1199576> (scdr (cdr s)))
> def args: : (<object 1199576> (scddr (cdr scdr)))
> def args: : (<object 1199644> (scdr (cdr s)))
> def args: : (<object 1199644> (scddr (cdr scdr)))
> def args: : (<object 1199716> (scdr (cdr s)))
> def args: : (<object 1199716> (scddr (cdr scdr)))
> def args: : (<object 1199784> (scdr (cdr s)))
> def args: : (<object 1199784> (scddr (cdr scdr)))
> def args: : (<object 1199856> (scdr (cdr s)))
> def args: : (<object 1199856> (scddr (cdr scdr)))
> def args: : (<object 1199924> (scdr (cdr s)))
> def args: : (<object 1199924> (scddr (cdr scdr)))
> def args: : (<object 1199996> (scdr (cdr s)))
> def args: : (<object 1199996> (scddr (cdr scdr)))
> def args: : (<object 1200064> (scdr (cdr s)))
> def args: : (<object 1200064> (scddr (cdr scdr)))
> def args: : (<object 1200136> (scdr (cdr s)))
> def args: : (<object 1200136> (scddr (cdr scdr)))
> def args: : (<object 1200204> (scdr (cdr s)))
> def args: : (<object 1200204> (scddr (cdr scdr)))
> def args: : (<object 1200276> (scdr (cdr s)))
> def args: : (<object 1200276> (scddr (cdr scdr)))
> def args: : (<object 1200344> (scdr (cdr s)))
> def args: : (<object 1200344> (scddr (cdr scdr)))
> def args: : (<object 1200416> (scdr (cdr s)))
> def args: : (<object 1200416> (scddr (cdr scdr)))
> def args: : (<object 1200484> (scdr (cdr s)))
> def args: : (<object 1200484> (scddr (cdr scdr)))
> def args: : (<object 1200556> (scdr (cdr s)))
> def args: : (<object 1200556> (scddr (cdr scdr)))
> def args: : (<object 1200624> (scdr (cdr s)))
> def args: : (<object 1200624> (scddr (cdr scdr)))
> def args: : (<object 1200696> (scdr (cdr s)))
> def args: : (<object 1200696> (scddr (cdr scdr)))
> def args: : (<object 1200764> (scdr (cdr s)))
> def args: : (<object 1200764> (scddr (cdr scdr)))
> def args: : (<object 1200836> (scdr (cdr s)))
> def args: : (<object 1200836> (scddr (cdr scdr)))
> def args: : (<object 1200904> (scdr (cdr s)))
> def args: : (<object 1200904> (scddr (cdr scdr)))
> def args: : (<object 1200976> (scdr (cdr s)))
> def args: : (<object 1200976> (scddr (cdr scdr)))
> def args: : (<object 1201044> (scdr (cdr s)))
> def args: : (<object 1201044> (scddr (cdr scdr)))
> def args: : (<object 1201116> (scdr (cdr s)))
> def args: : (<object 1201116> (scddr (cdr scdr)))
> def args: : (<object 1201184> (scdr (cdr s)))
> def args: : (<object 1201184> (scddr (cdr scdr)))
> def args: : (<object 1201256> (scdr (cdr s)))
> def args: : (<object 1201256> (scddr (cdr scdr)))
> def args: : (<object 1201324> (scdr (cdr s)))
> def args: : (<object 1201324> (scddr (cdr scdr)))
> def args: : (<object 1201396> (scdr (cdr s)))
> def args: : (<object 1201396> (scddr (cdr scdr)))
> def args: : (<object 1201464> (scdr (cdr s)))
> def args: : (<object 1201464> (scddr (cdr scdr)))
> def args: : (<object 1201536> (scdr (cdr s)))
> def args: : (<object 1201536> (scddr (cdr scdr)))
> def args: : (<object 1201604> (scdr (cdr s)))
> def args: : (<object 1201604> (scddr (cdr scdr)))
> def args: : (<object 1201676> (scdr (cdr s)))
> def args: : (<object 1201676> (scddr (cdr scdr)))
> def args: : (<object 1201744> (scdr (cdr s)))
> def args: : (<object 1201744> (scddr (cdr scdr)))
> def args: : (<object 1201816> (scdr (cdr s)))
> def args: : (<object 1201816> (scddr (cdr scdr)))
> def args: : (<object 1201884> (scdr (cdr s)))
> def args: : (<object 1201884> (scddr (cdr scdr)))
> def args: : (<object 1201956> (scdr (cdr s)))
> def args: : (<object 1201956> (scddr (cdr scdr)))
> def args: : (<object 1202024> (scdr (cdr s)))
> def args: : (<object 1202024> (scddr (cdr scdr)))
> def args: : (<object 1202096> (scdr (cdr s)))
> def args: : (<object 1202096> (scddr (cdr scdr)))
> def args: : (<object 1202164> (scdr (cdr s)))
> def args: : (<object 1202164> (scddr (cdr scdr)))
> def args: : (<object 1202236> (scdr (cdr s)))
> def args: : (<object 1202236> (scddr (cdr scdr)))
> def args: : (<object 1202304> (scdr (cdr s)))
> def args: : (<object 1202304> (scddr (cdr scdr)))
> def args: : (<object 1202376> (scdr (cdr s)))
> def args: : (<object 1202376> (scddr (cdr scdr)))
> def args: : (<object 1202444> (scdr (cdr s)))
> def args: : (<object 1202444> (scddr (cdr scdr)))
> def args: : (<object 1202516> (scdr (cdr s)))
> def args: : (<object 1202516> (scddr (cdr scdr)))
> def args: : (<object 1202584> (scdr (cdr s)))
> def args: : (<object 1202584> (scddr (cdr scdr)))
> def args: : (<object 1202656> (scdr (cdr s)))
> def args: : (<object 1202656> (scddr (cdr scdr)))
> def args: : (<object 1202724> (scdr (cdr s)))
> def args: : (<object 1202724> (scddr (cdr scdr)))
> def args: : (<object 1202796> (scdr (cdr s)))
> def args: : (<object 1202796> (scddr (cdr scdr)))
> def args: : (<object 1202864> (scdr (cdr s)))
> def args: : (<object 1202864> (scddr (cdr scdr)))
> def args: : (<object 1202936> (scdr (cdr s)))
> def args: : (<object 1202936> (scddr (cdr scdr)))
> def args: : (<object 1203004> (scdr (cdr s)))
> def args: : (<object 1203004> (scddr (cdr scdr)))
> def args: : (<object 1203076> (scdr (cdr s)))
> def args: : (<object 1203076> (scddr (cdr scdr)))
> def args: : (<object 1203144> (scdr (cdr s)))
> def args: : (<object 1203144> (scddr (cdr scdr)))
> def args: : (<object 1203216> (scdr (cdr s)))
> def args: : (<object 1203216> (scddr (cdr scdr)))
> def args: : (<object 1203284> (scdr (cdr s)))
> def args: : (<object 1203284> (scddr (cdr scdr)))
> def args: : (<object 1203356> (scdr (cdr s)))
> def args: : (<object 1203356> (scddr (cdr scdr)))
> def args: : (<object 1203424> (scdr (cdr s)))
> def args: : (<object 1203424> (scddr (cdr scdr)))
> def args: : (<object 1203496> (scdr (cdr s)))
> def args: : (<object 1203496> (scddr (cdr scdr)))
> def args: : (<object 1203564> (scdr (cdr s)))
> def args: : (<object 1203564> (scddr (cdr scdr)))
> def args: : (<object 1203636> (scdr (cdr s)))
> def args: : (<object 1203636> (scddr (cdr scdr)))
> def args: : (<object 1203704> (scdr (cdr s)))
> def args: : (<object 1203704> (scddr (cdr scdr)))
> def args: : (<object 1203776> (scdr (cdr s)))
> def args: : (<object 1203776> (scddr (cdr scdr)))
> def args: : (<object 1203844> (scdr (cdr s)))
> def args: : (<object 1203844> (scddr (cdr scdr)))
> def args: : (<object 1203916> (scdr (cdr s)))
> def args: : (<object 1203916> (scddr (cdr scdr)))
> def args: : (<object 1203984> (scdr (cdr s)))
> def args: : (<object 1203984> (scddr (cdr scdr)))
> def args: : (<object 1204056> (scdr (cdr s)))
> def args: : (<object 1204056> (scddr (cdr scdr)))
> def args: : (<object 1204124> (scdr (cdr s)))
> def args: : (<object 1204124> (scddr (cdr scdr)))
> def args: : (<object 1204196> (scdr (cdr s)))
> def args: : (<object 1204196> (scddr (cdr scdr)))
> def args: : (<object 1204264> (scdr (cdr s)))
> def args: : (<object 1204264> (scddr (cdr scdr)))
> def args: : (<object 1204336> (scdr (cdr s)))
> def args: : (<object 1204336> (scddr (cdr scdr)))
> def args: : (<object 1204404> (scdr (cdr s)))
> def args: : (<object 1204404> (scddr (cdr scdr)))
> def args: : (<object 1204476> (scdr (cdr s)))
> def args: : (<object 1204476> (scddr (cdr scdr)))
> def args: : (<object 1204544> (scdr (cdr s)))
> def args: : (<object 1204544> (scddr (cdr scdr)))
> def args: : (<object 1204616> (scdr (cdr s)))
> def args: : (<object 1204616> (scddr (cdr scdr)))
> def args: : (<object 1204684> (scdr (cdr s)))
> def args: : (<object 1204684> (scddr (cdr scdr)))
> def args: : (<object 1204756> (scdr (cdr s)))
> def args: : (<object 1204756> (scddr (cdr scdr)))
> def args: : (<object 1204824> (scdr (cdr s)))
> def args: : (<object 1204824> (scddr (cdr scdr)))
> def args: : (<object 1204896> (scdr (cdr s)))
> def args: : (<object 1204896> (scddr (cdr scdr)))
> def args: : (<object 1204964> (scdr (cdr s)))
> def args: : (<object 1204964> (scddr (cdr scdr)))
> def args: : (<object 1205036> (scdr (cdr s)))
> def args: : (<object 1205036> (scddr (cdr scdr)))
> def args: : (<object 1205104> (scdr (cdr s)))
> def args: : (<object 1205104> (scddr (cdr scdr)))
> def args: : (<object 1205176> (scdr (cdr s)))
> def args: : (<object 1205176> (scddr (cdr scdr)))
> def args: : (<object 1205244> (scdr (cdr s)))
> def args: : (<object 1205244> (scddr (cdr scdr)))
> def args: : (<object 1205316> (scdr (cdr s)))
> def args: : (<object 1205316> (scddr (cdr scdr)))
> def args: : (<object 1205384> (scdr (cdr s)))
> def args: : (<object 1205384> (scddr (cdr scdr)))
> def args: : (<object 1205456> (scdr (cdr s)))
> def args: : (<object 1205456> (scddr (cdr scdr)))
> def args: : (<object 1205524> (scdr (cdr s)))
> def args: : (<object 1205524> (scddr (cdr scdr)))
> def args: : (<object 1205596> (scdr (cdr s)))
> def args: : (<object 1205596> (scddr (cdr scdr)))
> def args: : (<object 1205664> (scdr (cdr s)))
> def args: : (<object 1205664> (scddr (cdr scdr)))
> def args: : (<object 1205736> (scdr (cdr s)))
> def args: : (<object 1205736> (scddr (cdr scdr)))
> def args: : (<object 1205804> (scdr (cdr s)))
> def args: : (<object 1205804> (scddr (cdr scdr)))
> def args: : (<object 1205876> (scdr (cdr s)))
> def args: : (<object 1205876> (scddr (cdr scdr)))
> def args: : (<object 1205944> (scdr (cdr s)))
> def args: : (<object 1205944> (scddr (cdr scdr)))
> def args: : (<object 1206016> (scdr (cdr s)))
> def args: : (<object 1206016> (scddr (cdr scdr)))
> def args: : (<object 1206084> (scdr (cdr s)))
> def args: : (<object 1206084> (scddr (cdr scdr)))
> def args: : (<object 1206156> (scdr (cdr s)))
> def args: : (<object 1206156> (scddr (cdr scdr)))
> def args: : (<object 1206224> (scdr (cdr s)))
> def args: : (<object 1206224> (scddr (cdr scdr)))
> def args: : (<object 1206296> (scdr (cdr s)))
> def args: : (<object 1206296> (scddr (cdr scdr)))
> def args: : (<object 1206364> (scdr (cdr s)))
> def args: : (<object 1206364> (scddr (cdr scdr)))
> def args: : (<object 1206436> (scdr (cdr s)))
> def args: : (<object 1206436> (scddr (cdr scdr)))
> def args: : (<object 1206504> (scdr (cdr s)))
> def args: : (<object 1206504> (scddr (cdr scdr)))
> def args: : (<object 1206576> (scdr (cdr s)))
> def args: : (<object 1206576> (scddr (cdr scdr)))
> def args: : (<object 1206644> (scdr (cdr s)))
> def args: : (<object 1206644> (scddr (cdr scdr)))
> def args: : (<object 1206716> (scdr (cdr s)))
> def args: : (<object 1206716> (scddr (cdr scdr)))
> def args: : (<object 1206784> (scdr (cdr s)))
> def args: : (<object 1206784> (scddr (cdr scdr)))
> def args: : (<object 1206856> (scdr (cdr s)))
> def args: : (<object 1206856> (scddr (cdr scdr)))
> def args: : (<object 1206924> (scdr (cdr s)))
> def args: : (<object 1206924> (scddr (cdr scdr)))
> def args: : (<object 1206996> (scdr (cdr s)))
> def args: : (<object 1206996> (scddr (cdr scdr)))
> def args: : (<object 1207064> (scdr (cdr s)))
> def args: : (<object 1207064> (scddr (cdr scdr)))
> def args: : (<object 1207136> (scdr (cdr s)))
> def args: : (<object 1207136> (scddr (cdr scdr)))
> def args: : (<object 1207204> (scdr (cdr s)))
> def args: : (<object 1207204> (scddr (cdr scdr)))
> def args: : (<object 1207276> (scdr (cdr s)))
> def args: : (<object 1207276> (scddr (cdr scdr)))
> def args: : (<object 1207344> (scdr (cdr s)))
> def args: : (<object 1207344> (scddr (cdr scdr)))
> def args: : (<object 1207416> (scdr (cdr s)))
> def args: : (<object 1207416> (scddr (cdr scdr)))
> def args: : (<object 1207484> (scdr (cdr s)))
> def args: : (<object 1207484> (scddr (cdr scdr)))
> def args: : (<object 1207556> (scdr (cdr s)))
> def args: : (<object 1207556> (scddr (cdr scdr)))
> def args: : (<object 1207624> (scdr (cdr s)))
> def args: : (<object 1207624> (scddr (cdr scdr)))
> def args: : (<object 1207696> (scdr (cdr s)))
> def args: : (<object 1207696> (scddr (cdr scdr)))
> def args: : (<object 1207764> (scdr (cdr s)))
> def args: : (<object 1207764> (scddr (cdr scdr)))
> def args: : (<object 1207836> (scdr (cdr s)))
> def args: : (<object 1207836> (scddr (cdr scdr)))
> def args: : (<object 1207904> (scdr (cdr s)))
> def args: : (<object 1207904> (scddr (cdr scdr)))
> def args: : (<object 1207976> (scdr (cdr s)))
> def args: : (<object 1207976> (scddr (cdr scdr)))
> def args: : (<object 1208044> (scdr (cdr s)))
> def args: : (<object 1208044> (scddr (cdr scdr)))
> def args: : (<object 1208116> (scdr (cdr s)))
> def args: : (<object 1208116> (scddr (cdr scdr)))
> def args: : (<object 1208184> (scdr (cdr s)))
> def args: : (<object 1208184> (scddr (cdr scdr)))
> def args: : (<object 1208256> (scdr (cdr s)))
> def args: : (<object 1208256> (scddr (cdr scdr)))
> def args: : (<object 1208324> (scdr (cdr s)))
> def args: : (<object 1208324> (scddr (cdr scdr)))
> def args: : (<object 1208396> (scdr (cdr s)))
> def args: : (<object 1208396> (scddr (cdr scdr)))
> def args: : (<object 1208464> (scdr (cdr s)))
> def args: : (<object 1208464> (scddr (cdr scdr)))
> def args: : (<object 1208536> (scdr (cdr s)))
> def args: : (<object 1208536> (scddr (cdr scdr)))
> def args: : (<object 1208604> (scdr (cdr s)))
> def args: : (<object 1208604> (scddr (cdr scdr)))
> def args: : (<object 1208676> (scdr (cdr s)))
> def args: : (<object 1208676> (scddr (cdr scdr)))
> def args: : (<object 1208744> (scdr (cdr s)))
> def args: : (<object 1208744> (scddr (cdr scdr)))
> def args: : (<object 1208816> (scdr (cdr s)))
> def args: : (<object 1208816> (scddr (cdr scdr)))
> def args: : (<object 1208884> (scdr (cdr s)))
> def args: : (<object 1208884> (scddr (cdr scdr)))
> def args: : (<object 1208956> (scdr (cdr s)))
> def args: : (<object 1208956> (scddr (cdr scdr)))
> def args: : (<object 1209024> (scdr (cdr s)))
> def args: : (<object 1209024> (scddr (cdr scdr)))
> def args: : (<object 1209096> (scdr (cdr s)))
> def args: : (<object 1209096> (scddr (cdr scdr)))
> def args: : (<object 1209164> (scdr (cdr s)))
> def args: : (<object 1209164> (scddr (cdr scdr)))
> def args: : (<object 1209236> (scdr (cdr s)))
> def args: : (<object 1209236> (scddr (cdr scdr)))
> def args: : (<object 1209304> (scdr (cdr s)))
> def args: : (<object 1209304> (scddr (cdr scdr)))
> def args: : (<object 1209376> (scdr (cdr s)))
> def args: : (<object 1209376> (scddr (cdr scdr)))
> def args: : (<object 1209444> (scdr (cdr s)))
> def args: : (<object 1209444> (scddr (cdr scdr)))
> def args: : (<object 1209516> (scdr (cdr s)))
> def args: : (<object 1209516> (scddr (cdr scdr)))
> def args: : (<object 1209584> (scdr (cdr s)))
> def args: : (<object 1209584> (scddr (cdr scdr)))
> def args: : (<object 1209656> (scdr (cdr s)))
> def args: : (<object 1209656> (scddr (cdr scdr)))
> def args: : (<object 1209724> (scdr (cdr s)))
> def args: : (<object 1209724> (scddr (cdr scdr)))
> def args: : (<object 1209796> (scdr (cdr s)))
> def args: : (<object 1209796> (scddr (cdr scdr)))
> def args: : (<object 1209864> (scdr (cdr s)))
> def args: : (<object 1209864> (scddr (cdr scdr)))
> def args: : (<object 1209936> (scdr (cdr s)))
> def args: : (<object 1209936> (scddr (cdr scdr)))
> def args: : (<object 1210004> (scdr (cdr s)))
> def args: : (<object 1210004> (scddr (cdr scdr)))
> def args: : (<object 1210076> (scdr (cdr s)))
> def args: : (<object 1210076> (scddr (cdr scdr)))
> 3655def args: : (<object 1224787> (env (if (null? @) # (car @))))
>  def args: : (<object 1224894> (env (if (null? @) # (car @))))
> def args: : (<object 1225014> (scdr (cdr s)))
> def args: : (<object 1225014> (scddr (cdr scdr)))
> def args: : (<object 1225086> (scdr (cdr s)))
> def args: : (<object 1225086> (scddr (cdr scdr)))
> def args: : (<object 1225158> (scdr (cdr s)))
> def args: : (<object 1225158> (scddr (cdr scdr)))
> def args: : (<object 1225226> (scdr (cdr s)))
> def args: : (<object 1225226> (scddr (cdr scdr)))
> def args: : (<object 1225465> (scdr (cdr s)))
> def args: : (<object 1225465> (scddr (cdr scdr)))
> def args: : (<object 1225537> (scdr (cdr s)))
> def args: : (<object 1225537> (scddr (cdr scdr)))
> def args: : (<object 1225605> (scdr (cdr s)))
> def args: : (<object 1225605> (scddr (cdr scdr)))
> def args: : (<object 1225677> (scdr (cdr s)))
> def args: : (<object 1225677> (scddr (cdr scdr)))
> def args: : (<object 1225745> (scdr (cdr s)))
> def args: : (<object 1225745> (scddr (cdr scdr)))
> def args: : (<object 1225817> (scdr (cdr s)))
> def args: : (<object 1225817> (scddr (cdr scdr)))
> def args: : (<object 1225885> (scdr (cdr s)))
> def args: : (<object 1225885> (scddr (cdr scdr)))
> def args: : (<object 1225957> (scdr (cdr s)))
> def args: : (<object 1225957> (scddr (cdr scdr)))
> def args: : (<object 1226025> (scdr (cdr s)))
> def args: : (<object 1226025> (scddr (cdr scdr)))
> def args: : (<object 1226097> (scdr (cdr s)))
> def args: : (<object 1226097> (scddr (cdr scdr)))
> def args: : (<object 1226165> (scdr (cdr s)))
> def args: : (<object 1226165> (scddr (cdr scdr)))
> def args: : (<object 1226237> (scdr (cdr s)))
> def args: : (<object 1226237> (scddr (cdr scdr)))
> def args: : (<object 1226305> (scdr (cdr s)))
> def args: : (<object 1226305> (scddr (cdr scdr)))
> def args: : (<object 1226377> (scdr (cdr s)))
> def args: : (<object 1226377> (scddr (cdr scdr)))
> def args: : (<object 1226445> (scdr (cdr s)))
> def args: : (<object 1226445> (scddr (cdr scdr)))
> def args: : (<object 1226517> (scdr (cdr s)))
> def args: : (<object 1226517> (scddr (cdr scdr)))
> def args: : (<object 1226585> (scdr (cdr s)))
> def args: : (<object 1226585> (scddr (cdr scdr)))
> def args: : (<object 1226657> (scdr (cdr s)))
> def args: : (<object 1226657> (scddr (cdr scdr)))
> def args: : (<object 1226725> (scdr (cdr s)))
> def args: : (<object 1226725> (scddr (cdr scdr)))
> def args: : (<object 1226797> (scdr (cdr s)))
> def args: : (<object 1226797> (scddr (cdr scdr)))
> def args: : (<object 1226865> (scdr (cdr s)))
> def args: : (<object 1226865> (scddr (cdr scdr)))
> def args: : (<object 1226937> (scdr (cdr s)))
> def args: : (<object 1226937> (scddr (cdr scdr)))
> def args: : (<object 1227005> (scdr (cdr s)))
> def args: : (<object 1227005> (scddr (cdr scdr)))
> def args: : (<object 1227077> (scdr (cdr s)))
> def args: : (<object 1227077> (scddr (cdr scdr)))
> def args: : (<object 1227145> (scdr (cdr s)))
> def args: : (<object 1227145> (scddr (cdr scdr)))
> def args: : (<object 1227217> (scdr (cdr s)))
> def args: : (<object 1227217> (scddr (cdr scdr)))
> def args: : (<object 1227285> (scdr (cdr s)))
> def args: : (<object 1227285> (scddr (cdr scdr)))
> def args: : (<object 1227357> (scdr (cdr s)))
> def args: : (<object 1227357> (scddr (cdr scdr)))
> def args: : (<object 1227425> (scdr (cdr s)))
> def args: : (<object 1227425> (scddr (cdr scdr)))
> def args: : (<object 1227497> (scdr (cdr s)))
> def args: : (<object 1227497> (scddr (cdr scdr)))
> def args: : (<object 1227565> (scdr (cdr s)))
> def args: : (<object 1227565> (scddr (cdr scdr)))
> def args: : (<object 1227637> (scdr (cdr s)))
> def args: : (<object 1227637> (scddr (cdr scdr)))
> def args: : (<object 1227705> (scdr (cdr s)))
> def args: : (<object 1227705> (scddr (cdr scdr)))
> def args: : (<object 1227777> (scdr (cdr s)))
> def args: : (<object 1227777> (scddr (cdr scdr)))
> def args: : (<object 1227845> (scdr (cdr s)))
> def args: : (<object 1227845> (scddr (cdr scdr)))
> def args: : (<object 1227917> (scdr (cdr s)))
> def args: : (<object 1227917> (scddr (cdr scdr)))
> def args: : (<object 1227985> (scdr (cdr s)))
> def args: : (<object 1227985> (scddr (cdr scdr)))
> def args: : (<object 1228057> (scdr (cdr s)))
> def args: : (<object 1228057> (scddr (cdr scdr)))
> def args: : (<object 1228125> (scdr (cdr s)))
> def args: : (<object 1228125> (scddr (cdr scdr)))
> def args: : (<object 1228197> (scdr (cdr s)))
> def args: : (<object 1228197> (scddr (cdr scdr)))
> def args: : (<object 1228265> (scdr (cdr s)))
> def args: : (<object 1228265> (scddr (cdr scdr)))
> def args: : (<object 1228337> (scdr (cdr s)))
> def args: : (<object 1228337> (scddr (cdr scdr)))
> def args: : (<object 1228405> (scdr (cdr s)))
> def args: : (<object 1228405> (scddr (cdr scdr)))
> def args: : (<object 1228477> (scdr (cdr s)))
> def args: : (<object 1228477> (scddr (cdr scdr)))
> def args: : (<object 1228545> (scdr (cdr s)))
> def args: : (<object 1228545> (scddr (cdr scdr)))
> def args: : (<object 1228617> (scdr (cdr s)))
> def args: : (<object 1228617> (scddr (cdr scdr)))
> def args: : (<object 1228685> (scdr (cdr s)))
> def args: : (<object 1228685> (scddr (cdr scdr)))
> def args: : (<object 1228757> (scdr (cdr s)))
> def args: : (<object 1228757> (scddr (cdr scdr)))
> def args: : (<object 1228825> (scdr (cdr s)))
> def args: : (<object 1228825> (scddr (cdr scdr)))
> def args: : (<object 1228897> (scdr (cdr s)))
> def args: : (<object 1228897> (scddr (cdr scdr)))
> def args: : (<object 1228965> (scdr (cdr s)))
> def args: : (<object 1228965> (scddr (cdr scdr)))
> def args: : (<object 1229037> (scdr (cdr s)))
> def args: : (<object 1229037> (scddr (cdr scdr)))
> def args: : (<object 1229105> (scdr (cdr s)))
> def args: : (<object 1229105> (scddr (cdr scdr)))
> def args: : (<object 1229177> (scdr (cdr s)))
> def args: : (<object 1229177> (scddr (cdr scdr)))
> def args: : (<object 1229245> (scdr (cdr s)))
> def args: : (<object 1229245> (scddr (cdr scdr)))
> def args: : (<object 1229317> (scdr (cdr s)))
> def args: : (<object 1229317> (scddr (cdr scdr)))
> def args: : (<object 1229385> (scdr (cdr s)))
> def args: : (<object 1229385> (scddr (cdr scdr)))
> def args: : (<object 1229457> (scdr (cdr s)))
> def args: : (<object 1229457> (scddr (cdr scdr)))
> def args: : (<object 1229525> (scdr (cdr s)))
> def args: : (<object 1229525> (scddr (cdr scdr)))
> def args: : (<object 1229597> (scdr (cdr s)))
> def args: : (<object 1229597> (scddr (cdr scdr)))
> def args: : (<object 1229665> (scdr (cdr s)))
> def args: : (<object 1229665> (scddr (cdr scdr)))
> def args: : (<object 1229737> (scdr (cdr s)))
> def args: : (<object 1229737> (scddr (cdr scdr)))
> def args: : (<object 1229805> (scdr (cdr s)))
> def args: : (<object 1229805> (scddr (cdr scdr)))
> def args: : (<object 1229877> (scdr (cdr s)))
> def args: : (<object 1229877> (scddr (cdr scdr)))
> def args: : (<object 1229945> (scdr (cdr s)))
> def args: : (<object 1229945> (scddr (cdr scdr)))
> def args: : (<object 1230017> (scdr (cdr s)))
> def args: : (<object 1230017> (scddr (cdr scdr)))
> def args: : (<object 1230085> (scdr (cdr s)))
> def args: : (<object 1230085> (scddr (cdr scdr)))
> def args: : (<object 1230157> (scdr (cdr s)))
> def args: : (<object 1230157> (scddr (cdr scdr)))
> def args: : (<object 1230225> (scdr (cdr s)))
> def args: : (<object 1230225> (scddr (cdr scdr)))
> def args: : (<object 1230297> (scdr (cdr s)))
> def args: : (<object 1230297> (scddr (cdr scdr)))
> def args: : (<object 1230365> (scdr (cdr s)))
> def args: : (<object 1230365> (scddr (cdr scdr)))
> def args: : (<object 1230437> (scdr (cdr s)))
> def args: : (<object 1230437> (scddr (cdr scdr)))
> def args: : (<object 1230505> (scdr (cdr s)))
> def args: : (<object 1230505> (scddr (cdr scdr)))
> def args: : (<object 1230577> (scdr (cdr s)))
> def args: : (<object 1230577> (scddr (cdr scdr)))
> def args: : (<object 1230645> (scdr (cdr s)))
> def args: : (<object 1230645> (scddr (cdr scdr)))
> def args: : (<object 1230717> (scdr (cdr s)))
> def args: : (<object 1230717> (scddr (cdr scdr)))
> def args: : (<object 1230785> (scdr (cdr s)))
> def args: : (<object 1230785> (scddr (cdr scdr)))
> def args: : (<object 1230857> (scdr (cdr s)))
> def args: : (<object 1230857> (scddr (cdr scdr)))
> def args: : (<object 1230925> (scdr (cdr s)))
> def args: : (<object 1230925> (scddr (cdr scdr)))
> def args: : (<object 1230997> (scdr (cdr s)))
> def args: : (<object 1230997> (scddr (cdr scdr)))
> def args: : (<object 1231065> (scdr (cdr s)))
> def args: : (<object 1231065> (scddr (cdr scdr)))
> def args: : (<object 1231137> (scdr (cdr s)))
> def args: : (<object 1231137> (scddr (cdr scdr)))
> def args: : (<object 1231205> (scdr (cdr s)))
> def args: : (<object 1231205> (scddr (cdr scdr)))
> def args: : (<object 1231277> (scdr (cdr s)))
> def args: : (<object 1231277> (scddr (cdr scdr)))
> def args: : (<object 1231345> (scdr (cdr s)))
> def args: : (<object 1231345> (scddr (cdr scdr)))
> def args: : (<object 1231417> (scdr (cdr s)))
> def args: : (<object 1231417> (scddr (cdr scdr)))
> def args: : (<object 1231485> (scdr (cdr s)))
> def args: : (<object 1231485> (scddr (cdr scdr)))
> def args: : (<object 1231557> (scdr (cdr s)))
> def args: : (<object 1231557> (scddr (cdr scdr)))
> def args: : (<object 1231625> (scdr (cdr s)))
> def args: : (<object 1231625> (scddr (cdr scdr)))
> def args: : (<object 1231697> (scdr (cdr s)))
> def args: : (<object 1231697> (scddr (cdr scdr)))
> def args: : (<object 1231765> (scdr (cdr s)))
> def args: : (<object 1231765> (scddr (cdr scdr)))
> def args: : (<object 1231837> (scdr (cdr s)))
> def args: : (<object 1231837> (scddr (cdr scdr)))
> def args: : (<object 1231905> (scdr (cdr s)))
> def args: : (<object 1231905> (scddr (cdr scdr)))
> def args: : (<object 1231977> (scdr (cdr s)))
> def args: : (<object 1231977> (scddr (cdr scdr)))
> def args: : (<object 1232045> (scdr (cdr s)))
> def args: : (<object 1232045> (scddr (cdr scdr)))
> def args: : (<object 1232117> (scdr (cdr s)))
> def args: : (<object 1232117> (scddr (cdr scdr)))
> def args: : (<object 1232185> (scdr (cdr s)))
> def args: : (<object 1232185> (scddr (cdr scdr)))
> def args: : (<object 1232257> (scdr (cdr s)))
> def args: : (<object 1232257> (scddr (cdr scdr)))
> def args: : (<object 1232325> (scdr (cdr s)))
> def args: : (<object 1232325> (scddr (cdr scdr)))
> def args: : (<object 1232397> (scdr (cdr s)))
> def args: : (<object 1232397> (scddr (cdr scdr)))
> def args: : (<object 1232465> (scdr (cdr s)))
> def args: : (<object 1232465> (scddr (cdr scdr)))
> def args: : (<object 1232537> (scdr (cdr s)))
> def args: : (<object 1232537> (scddr (cdr scdr)))
> def args: : (<object 1232605> (scdr (cdr s)))
> def args: : (<object 1232605> (scddr (cdr scdr)))
> def args: : (<object 1232677> (scdr (cdr s)))
> def args: : (<object 1232677> (scddr (cdr scdr)))
> def args: : (<object 1232745> (scdr (cdr s)))
> def args: : (<object 1232745> (scddr (cdr scdr)))
> def args: : (<object 1232817> (scdr (cdr s)))
> def args: : (<object 1232817> (scddr (cdr scdr)))
> def args: : (<object 1232885> (scdr (cdr s)))
> def args: : (<object 1232885> (scddr (cdr scdr)))
> def args: : (<object 1232957> (scdr (cdr s)))
> def args: : (<object 1232957> (scddr (cdr scdr)))
> def args: : (<object 1233025> (scdr (cdr s)))
> def args: : (<object 1233025> (scddr (cdr scdr)))
> def args: : (<object 1233097> (scdr (cdr s)))
> def args: : (<object 1233097> (scddr (cdr scdr)))
> def args: : (<object 1233165> (scdr (cdr s)))
> def args: : (<object 1233165> (scddr (cdr scdr)))
> def args: : (<object 1233237> (scdr (cdr s)))
> def args: : (<object 1233237> (scddr (cdr scdr)))
> def args: : (<object 1233305> (scdr (cdr s)))
> def args: : (<object 1233305> (scddr (cdr scdr)))
> def args: : (<object 1233377> (scdr (cdr s)))
> def args: : (<object 1233377> (scddr (cdr scdr)))
> def args: : (<object 1233445> (scdr (cdr s)))
> def args: : (<object 1233445> (scddr (cdr scdr)))
> def args: : (<object 1233517> (scdr (cdr s)))
> def args: : (<object 1233517> (scddr (cdr scdr)))
> def args: : (<object 1233585> (scdr (cdr s)))
> def args: : (<object 1233585> (scddr (cdr scdr)))
> def args: : (<object 1233657> (scdr (cdr s)))
> def args: : (<object 1233657> (scddr (cdr scdr)))
> def args: : (<object 1233725> (scdr (cdr s)))
> def args: : (<object 1233725> (scddr (cdr scdr)))
> def args: : (<object 1233797> (scdr (cdr s)))
> def args: : (<object 1233797> (scddr (cdr scdr)))
> def args: : (<object 1233865> (scdr (cdr s)))
> def args: : (<object 1233865> (scddr (cdr scdr)))
> def args: : (<object 1233937> (scdr (cdr s)))
> def args: : (<object 1233937> (scddr (cdr scdr)))
> def args: : (<object 1234005> (scdr (cdr s)))
> def args: : (<object 1234005> (scddr (cdr scdr)))
> def args: : (<object 1234077> (scdr (cdr s)))
> def args: : (<object 1234077> (scddr (cdr scdr)))
> def args: : (<object 1234145> (scdr (cdr s)))
> def args: : (<object 1234145> (scddr (cdr scdr)))
> def args: : (<object 1234217> (scdr (cdr s)))
> def args: : (<object 1234217> (scddr (cdr scdr)))
> def args: : (<object 1234285> (scdr (cdr s)))
> def args: : (<object 1234285> (scddr (cdr scdr)))
> def args: : (<object 1234357> (scdr (cdr s)))
> def args: : (<object 1234357> (scddr (cdr scdr)))
> def args: : (<object 1234425> (scdr (cdr s)))
> def args: : (<object 1234425> (scddr (cdr scdr)))
> def args: : (<object 1234497> (scdr (cdr s)))
> def args: : (<object 1234497> (scddr (cdr scdr)))
> def args: : (<object 1234565> (scdr (cdr s)))
> def args: : (<object 1234565> (scddr (cdr scdr)))
> def args: : (<object 1234637> (scdr (cdr s)))
> def args: : (<object 1234637> (scddr (cdr scdr)))
> def args: : (<object 1234705> (scdr (cdr s)))
> def args: : (<object 1234705> (scddr (cdr scdr)))
> def args: : (<object 1234777> (scdr (cdr s)))
> def args: : (<object 1234777> (scddr (cdr scdr)))
> def args: : (<object 1234845> (scdr (cdr s)))
> def args: : (<object 1234845> (scddr (cdr scdr)))
> def args: : (<object 1234917> (scdr (cdr s)))
> def args: : (<object 1234917> (scddr (cdr scdr)))
> def args: : (<object 1234985> (scdr (cdr s)))
> def args: : (<object 1234985> (scddr (cdr scdr)))
> def args: : (<object 1235057> (scdr (cdr s)))
> def args: : (<object 1235057> (scddr (cdr scdr)))
> def args: : (<object 1235125> (scdr (cdr s)))
> def args: : (<object 1235125> (scddr (cdr scdr)))
> def args: : (<object 1235197> (scdr (cdr s)))
> def args: : (<object 1235197> (scddr (cdr scdr)))
> def args: : (<object 1235265> (scdr (cdr s)))
> def args: : (<object 1235265> (scddr (cdr scdr)))
> def args: : (<object 1235337> (scdr (cdr s)))
> def args: : (<object 1235337> (scddr (cdr scdr)))
> def args: : (<object 1235405> (scdr (cdr s)))
> def args: : (<object 1235405> (scddr (cdr scdr)))
> def args: : (<object 1235477> (scdr (cdr s)))
> def args: : (<object 1235477> (scddr (cdr scdr)))
> def args: : (<object 1235545> (scdr (cdr s)))
> def args: : (<object 1235545> (scddr (cdr scdr)))
> def args: : (<object 1235617> (scdr (cdr s)))
> def args: : (<object 1235617> (scddr (cdr scdr)))
> def args: : (<object 1235685> (scdr (cdr s)))
> def args: : (<object 1235685> (scddr (cdr scdr)))
> def args: : (<object 1235757> (scdr (cdr s)))
> def args: : (<object 1235757> (scddr (cdr scdr)))
> def args: : (<object 1235825> (scdr (cdr s)))
> def args: : (<object 1235825> (scddr (cdr scdr)))
> def args: : (<object 1235897> (scdr (cdr s)))
> def args: : (<object 1235897> (scddr (cdr scdr)))
> def args: : (<object 1235965> (scdr (cdr s)))
> def args: : (<object 1235965> (scddr (cdr scdr)))
> def args: : (<object 1236037> (scdr (cdr s)))
> def args: : (<object 1236037> (scddr (cdr scdr)))
> def args: : (<object 1236105> (scdr (cdr s)))
> def args: : (<object 1236105> (scddr (cdr scdr)))
> def args: : (<object 1236177> (scdr (cdr s)))
> def args: : (<object 1236177> (scddr (cdr scdr)))
> def args: : (<object 1236245> (scdr (cdr s)))
> def args: : (<object 1236245> (scddr (cdr scdr)))
> def args: : (<object 1236317> (scdr (cdr s)))
> def args: : (<object 1236317> (scddr (cdr scdr)))
> def args: : (<object 1236385> (scdr (cdr s)))
> def args: : (<object 1236385> (scddr (cdr scdr)))
> def args: : (<object 1236457> (scdr (cdr s)))
> def args: : (<object 1236457> (scddr (cdr scdr)))
> def args: : (<object 1236525> (scdr (cdr s)))
> def args: : (<object 1236525> (scddr (cdr scdr)))
> def args: : (<object 1236597> (scdr (cdr s)))
> def args: : (<object 1236597> (scddr (cdr scdr)))
> def args: : (<object 1236665> (scdr (cdr s)))
> def args: : (<object 1236665> (scddr (cdr scdr)))
> def args: : (<object 1236737> (scdr (cdr s)))
> def args: : (<object 1236737> (scddr (cdr scdr)))
> def args: : (<object 1236805> (scdr (cdr s)))
> def args: : (<object 1236805> (scddr (cdr scdr)))
> def args: : (<object 1236877> (scdr (cdr s)))
> def args: : (<object 1236877> (scddr (cdr scdr)))
> def args: : (<object 1236945> (scdr (cdr s)))
> def args: : (<object 1236945> (scddr (cdr scdr)))
> def args: : (<object 1237017> (scdr (cdr s)))
> def args: : (<object 1237017> (scddr (cdr scdr)))
> def args: : (<object 1237085> (scdr (cdr s)))
> def args: : (<object 1237085> (scddr (cdr scdr)))
> def args: : (<object 1237157> (scdr (cdr s)))
> def args: : (<object 1237157> (scddr (cdr scdr)))
> 3741def args: : (<object 1252039> (env (if (null? @) # (car @))))
>  def args: : (<object 1252146> (env (if (null? @) # (car @))))
> def args: : (<object 1252266> (scdr (cdr s)))
> def args: : (<object 1252266> (scddr (cdr scdr)))
> def args: : (<object 1252338> (scdr (cdr s)))
> def args: : (<object 1252338> (scddr (cdr scdr)))
> def args: : (<object 1252410> (scdr (cdr s)))
> def args: : (<object 1252410> (scddr (cdr scdr)))
> def args: : (<object 1252478> (scdr (cdr s)))
> def args: : (<object 1252478> (scddr (cdr scdr)))
> def args: : (<object 1252717> (scdr (cdr s)))
> def args: : (<object 1252717> (scddr (cdr scdr)))
> def args: : (<object 1252789> (scdr (cdr s)))
> def args: : (<object 1252789> (scddr (cdr scdr)))
> def args: : (<object 1252857> (scdr (cdr s)))
> def args: : (<object 1252857> (scddr (cdr scdr)))
> def args: : (<object 1252929> (scdr (cdr s)))
> def args: : (<object 1252929> (scddr (cdr scdr)))
> def args: : (<object 1252997> (scdr (cdr s)))
> def args: : (<object 1252997> (scddr (cdr scdr)))
> def args: : (<object 1253069> (scdr (cdr s)))
> def args: : (<object 1253069> (scddr (cdr scdr)))
> def args: : (<object 1253137> (scdr (cdr s)))
> def args: : (<object 1253137> (scddr (cdr scdr)))
> def args: : (<object 1253209> (scdr (cdr s)))
> def args: : (<object 1253209> (scddr (cdr scdr)))
> def args: : (<object 1253277> (scdr (cdr s)))
> def args: : (<object 1253277> (scddr (cdr scdr)))
> def args: : (<object 1253349> (scdr (cdr s)))
> def args: : (<object 1253349> (scddr (cdr scdr)))
> def args: : (<object 1253417> (scdr (cdr s)))
> def args: : (<object 1253417> (scddr (cdr scdr)))
> def args: : (<object 1253489> (scdr (cdr s)))
> def args: : (<object 1253489> (scddr (cdr scdr)))
> def args: : (<object 1253557> (scdr (cdr s)))
> def args: : (<object 1253557> (scddr (cdr scdr)))
> def args: : (<object 1253629> (scdr (cdr s)))
> def args: : (<object 1253629> (scddr (cdr scdr)))
> def args: : (<object 1253697> (scdr (cdr s)))
> def args: : (<object 1253697> (scddr (cdr scdr)))
> def args: : (<object 1253769> (scdr (cdr s)))
> def args: : (<object 1253769> (scddr (cdr scdr)))
> def args: : (<object 1253837> (scdr (cdr s)))
> def args: : (<object 1253837> (scddr (cdr scdr)))
> def args: : (<object 1253909> (scdr (cdr s)))
> def args: : (<object 1253909> (scddr (cdr scdr)))
> def args: : (<object 1253977> (scdr (cdr s)))
> def args: : (<object 1253977> (scddr (cdr scdr)))
> def args: : (<object 1254049> (scdr (cdr s)))
> def args: : (<object 1254049> (scddr (cdr scdr)))
> def args: : (<object 1254117> (scdr (cdr s)))
> def args: : (<object 1254117> (scddr (cdr scdr)))
> def args: : (<object 1254189> (scdr (cdr s)))
> def args: : (<object 1254189> (scddr (cdr scdr)))
> def args: : (<object 1254257> (scdr (cdr s)))
> def args: : (<object 1254257> (scddr (cdr scdr)))
> def args: : (<object 1254329> (scdr (cdr s)))
> def args: : (<object 1254329> (scddr (cdr scdr)))
> def args: : (<object 1254397> (scdr (cdr s)))
> def args: : (<object 1254397> (scddr (cdr scdr)))
> def args: : (<object 1254469> (scdr (cdr s)))
> def args: : (<object 1254469> (scddr (cdr scdr)))
> def args: : (<object 1254537> (scdr (cdr s)))
> def args: : (<object 1254537> (scddr (cdr scdr)))
> def args: : (<object 1254609> (scdr (cdr s)))
> def args: : (<object 1254609> (scddr (cdr scdr)))
> def args: : (<object 1254677> (scdr (cdr s)))
> def args: : (<object 1254677> (scddr (cdr scdr)))
> def args: : (<object 1254749> (scdr (cdr s)))
> def args: : (<object 1254749> (scddr (cdr scdr)))
> def args: : (<object 1254817> (scdr (cdr s)))
> def args: : (<object 1254817> (scddr (cdr scdr)))
> def args: : (<object 1254889> (scdr (cdr s)))
> def args: : (<object 1254889> (scddr (cdr scdr)))
> def args: : (<object 1254957> (scdr (cdr s)))
> def args: : (<object 1254957> (scddr (cdr scdr)))
> def args: : (<object 1255029> (scdr (cdr s)))
> def args: : (<object 1255029> (scddr (cdr scdr)))
> def args: : (<object 1255097> (scdr (cdr s)))
> def args: : (<object 1255097> (scddr (cdr scdr)))
> def args: : (<object 1255169> (scdr (cdr s)))
> def args: : (<object 1255169> (scddr (cdr scdr)))
> def args: : (<object 1255237> (scdr (cdr s)))
> def args: : (<object 1255237> (scddr (cdr scdr)))
> def args: : (<object 1255309> (scdr (cdr s)))
> def args: : (<object 1255309> (scddr (cdr scdr)))
> def args: : (<object 1255377> (scdr (cdr s)))
> def args: : (<object 1255377> (scddr (cdr scdr)))
> def args: : (<object 1255449> (scdr (cdr s)))
> def args: : (<object 1255449> (scddr (cdr scdr)))
> def args: : (<object 1255517> (scdr (cdr s)))
> def args: : (<object 1255517> (scddr (cdr scdr)))
> def args: : (<object 1255589> (scdr (cdr s)))
> def args: : (<object 1255589> (scddr (cdr scdr)))
> def args: : (<object 1255657> (scdr (cdr s)))
> def args: : (<object 1255657> (scddr (cdr scdr)))
> def args: : (<object 1255729> (scdr (cdr s)))
> def args: : (<object 1255729> (scddr (cdr scdr)))
> def args: : (<object 1255797> (scdr (cdr s)))
> def args: : (<object 1255797> (scddr (cdr scdr)))
> def args: : (<object 1255869> (scdr (cdr s)))
> def args: : (<object 1255869> (scddr (cdr scdr)))
> def args: : (<object 1255937> (scdr (cdr s)))
> def args: : (<object 1255937> (scddr (cdr scdr)))
> def args: : (<object 1256009> (scdr (cdr s)))
> def args: : (<object 1256009> (scddr (cdr scdr)))
> def args: : (<object 1256077> (scdr (cdr s)))
> def args: : (<object 1256077> (scddr (cdr scdr)))
> def args: : (<object 1256149> (scdr (cdr s)))
> def args: : (<object 1256149> (scddr (cdr scdr)))
> def args: : (<object 1256217> (scdr (cdr s)))
> def args: : (<object 1256217> (scddr (cdr scdr)))
> def args: : (<object 1256289> (scdr (cdr s)))
> def args: : (<object 1256289> (scddr (cdr scdr)))
> def args: : (<object 1256357> (scdr (cdr s)))
> def args: : (<object 1256357> (scddr (cdr scdr)))
> def args: : (<object 1256429> (scdr (cdr s)))
> def args: : (<object 1256429> (scddr (cdr scdr)))
> def args: : (<object 1256497> (scdr (cdr s)))
> def args: : (<object 1256497> (scddr (cdr scdr)))
> def args: : (<object 1256569> (scdr (cdr s)))
> def args: : (<object 1256569> (scddr (cdr scdr)))
> def args: : (<object 1256637> (scdr (cdr s)))
> def args: : (<object 1256637> (scddr (cdr scdr)))
> def args: : (<object 1256709> (scdr (cdr s)))
> def args: : (<object 1256709> (scddr (cdr scdr)))
> def args: : (<object 1256777> (scdr (cdr s)))
> def args: : (<object 1256777> (scddr (cdr scdr)))
> def args: : (<object 1256849> (scdr (cdr s)))
> def args: : (<object 1256849> (scddr (cdr scdr)))
> def args: : (<object 1256917> (scdr (cdr s)))
> def args: : (<object 1256917> (scddr (cdr scdr)))
> def args: : (<object 1256989> (scdr (cdr s)))
> def args: : (<object 1256989> (scddr (cdr scdr)))
> def args: : (<object 1257057> (scdr (cdr s)))
> def args: : (<object 1257057> (scddr (cdr scdr)))
> def args: : (<object 1257129> (scdr (cdr s)))
> def args: : (<object 1257129> (scddr (cdr scdr)))
> def args: : (<object 1257197> (scdr (cdr s)))
> def args: : (<object 1257197> (scddr (cdr scdr)))
> def args: : (<object 1257269> (scdr (cdr s)))
> def args: : (<object 1257269> (scddr (cdr scdr)))
> def args: : (<object 1257337> (scdr (cdr s)))
> def args: : (<object 1257337> (scddr (cdr scdr)))
> def args: : (<object 1257409> (scdr (cdr s)))
> def args: : (<object 1257409> (scddr (cdr scdr)))
> def args: : (<object 1257477> (scdr (cdr s)))
> def args: : (<object 1257477> (scddr (cdr scdr)))
> def args: : (<object 1257549> (scdr (cdr s)))
> def args: : (<object 1257549> (scddr (cdr scdr)))
> def args: : (<object 1257617> (scdr (cdr s)))
> def args: : (<object 1257617> (scddr (cdr scdr)))
> def args: : (<object 1257689> (scdr (cdr s)))
> def args: : (<object 1257689> (scddr (cdr scdr)))
> def args: : (<object 1257757> (scdr (cdr s)))
> def args: : (<object 1257757> (scddr (cdr scdr)))
> def args: : (<object 1257829> (scdr (cdr s)))
> def args: : (<object 1257829> (scddr (cdr scdr)))
> def args: : (<object 1257897> (scdr (cdr s)))
> def args: : (<object 1257897> (scddr (cdr scdr)))
> def args: : (<object 1257969> (scdr (cdr s)))
> def args: : (<object 1257969> (scddr (cdr scdr)))
> def args: : (<object 1258037> (scdr (cdr s)))
> def args: : (<object 1258037> (scddr (cdr scdr)))
> def args: : (<object 1258109> (scdr (cdr s)))
> def args: : (<object 1258109> (scddr (cdr scdr)))
> def args: : (<object 1258177> (scdr (cdr s)))
> def args: : (<object 1258177> (scddr (cdr scdr)))
> def args: : (<object 1258249> (scdr (cdr s)))
> def args: : (<object 1258249> (scddr (cdr scdr)))
> def args: : (<object 1258317> (scdr (cdr s)))
> def args: : (<object 1258317> (scddr (cdr scdr)))
> def args: : (<object 1258389> (scdr (cdr s)))
> def args: : (<object 1258389> (scddr (cdr scdr)))
> def args: : (<object 1258457> (scdr (cdr s)))
> def args: : (<object 1258457> (scddr (cdr scdr)))
> def args: : (<object 1258529> (scdr (cdr s)))
> def args: : (<object 1258529> (scddr (cdr scdr)))
> def args: : (<object 1258597> (scdr (cdr s)))
> def args: : (<object 1258597> (scddr (cdr scdr)))
> def args: : (<object 1258669> (scdr (cdr s)))
> def args: : (<object 1258669> (scddr (cdr scdr)))
> def args: : (<object 1258737> (scdr (cdr s)))
> def args: : (<object 1258737> (scddr (cdr scdr)))
> def args: : (<object 1258809> (scdr (cdr s)))
> def args: : (<object 1258809> (scddr (cdr scdr)))
> def args: : (<object 1258877> (scdr (cdr s)))
> def args: : (<object 1258877> (scddr (cdr scdr)))
> def args: : (<object 1258949> (scdr (cdr s)))
> def args: : (<object 1258949> (scddr (cdr scdr)))
> def args: : (<object 1259017> (scdr (cdr s)))
> def args: : (<object 1259017> (scddr (cdr scdr)))
> def args: : (<object 1259089> (scdr (cdr s)))
> def args: : (<object 1259089> (scddr (cdr scdr)))
> def args: : (<object 1259157> (scdr (cdr s)))
> def args: : (<object 1259157> (scddr (cdr scdr)))
> def args: : (<object 1259229> (scdr (cdr s)))
> def args: : (<object 1259229> (scddr (cdr scdr)))
> def args: : (<object 1259297> (scdr (cdr s)))
> def args: : (<object 1259297> (scddr (cdr scdr)))
> def args: : (<object 1259369> (scdr (cdr s)))
> def args: : (<object 1259369> (scddr (cdr scdr)))
> def args: : (<object 1259437> (scdr (cdr s)))
> def args: : (<object 1259437> (scddr (cdr scdr)))
> def args: : (<object 1259509> (scdr (cdr s)))
> def args: : (<object 1259509> (scddr (cdr scdr)))
> def args: : (<object 1259577> (scdr (cdr s)))
> def args: : (<object 1259577> (scddr (cdr scdr)))
> def args: : (<object 1259649> (scdr (cdr s)))
> def args: : (<object 1259649> (scddr (cdr scdr)))
> def args: : (<object 1259717> (scdr (cdr s)))
> def args: : (<object 1259717> (scddr (cdr scdr)))
> def args: : (<object 1259789> (scdr (cdr s)))
> def args: : (<object 1259789> (scddr (cdr scdr)))
> def args: : (<object 1259857> (scdr (cdr s)))
> def args: : (<object 1259857> (scddr (cdr scdr)))
> def args: : (<object 1259929> (scdr (cdr s)))
> def args: : (<object 1259929> (scddr (cdr scdr)))
> def args: : (<object 1259997> (scdr (cdr s)))
> def args: : (<object 1259997> (scddr (cdr scdr)))
> def args: : (<object 1260069> (scdr (cdr s)))
> def args: : (<object 1260069> (scddr (cdr scdr)))
> def args: : (<object 1260137> (scdr (cdr s)))
> def args: : (<object 1260137> (scddr (cdr scdr)))
> def args: : (<object 1260209> (scdr (cdr s)))
> def args: : (<object 1260209> (scddr (cdr scdr)))
> def args: : (<object 1260277> (scdr (cdr s)))
> def args: : (<object 1260277> (scddr (cdr scdr)))
> def args: : (<object 1260349> (scdr (cdr s)))
> def args: : (<object 1260349> (scddr (cdr scdr)))
> def args: : (<object 1260417> (scdr (cdr s)))
> def args: : (<object 1260417> (scddr (cdr scdr)))
> def args: : (<object 1260489> (scdr (cdr s)))
> def args: : (<object 1260489> (scddr (cdr scdr)))
> def args: : (<object 1260557> (scdr (cdr s)))
> def args: : (<object 1260557> (scddr (cdr scdr)))
> def args: : (<object 1260629> (scdr (cdr s)))
> def args: : (<object 1260629> (scddr (cdr scdr)))
> def args: : (<object 1260697> (scdr (cdr s)))
> def args: : (<object 1260697> (scddr (cdr scdr)))
> def args: : (<object 1260769> (scdr (cdr s)))
> def args: : (<object 1260769> (scddr (cdr scdr)))
> def args: : (<object 1260837> (scdr (cdr s)))
> def args: : (<object 1260837> (scddr (cdr scdr)))
> def args: : (<object 1260909> (scdr (cdr s)))
> def args: : (<object 1260909> (scddr (cdr scdr)))
> def args: : (<object 1260977> (scdr (cdr s)))
> def args: : (<object 1260977> (scddr (cdr scdr)))
> def args: : (<object 1261049> (scdr (cdr s)))
> def args: : (<object 1261049> (scddr (cdr scdr)))
> def args: : (<object 1261117> (scdr (cdr s)))
> def args: : (<object 1261117> (scddr (cdr scdr)))
> def args: : (<object 1261189> (scdr (cdr s)))
> def args: : (<object 1261189> (scddr (cdr scdr)))
> def args: : (<object 1261257> (scdr (cdr s)))
> def args: : (<object 1261257> (scddr (cdr scdr)))
> def args: : (<object 1261329> (scdr (cdr s)))
> def args: : (<object 1261329> (scddr (cdr scdr)))
> def args: : (<object 1261397> (scdr (cdr s)))
> def args: : (<object 1261397> (scddr (cdr scdr)))
> def args: : (<object 1261469> (scdr (cdr s)))
> def args: : (<object 1261469> (scddr (cdr scdr)))
> def args: : (<object 1261537> (scdr (cdr s)))
> def args: : (<object 1261537> (scddr (cdr scdr)))
> def args: : (<object 1261609> (scdr (cdr s)))
> def args: : (<object 1261609> (scddr (cdr scdr)))
> def args: : (<object 1261677> (scdr (cdr s)))
> def args: : (<object 1261677> (scddr (cdr scdr)))
> def args: : (<object 1261749> (scdr (cdr s)))
> def args: : (<object 1261749> (scddr (cdr scdr)))
> def args: : (<object 1261817> (scdr (cdr s)))
> def args: : (<object 1261817> (scddr (cdr scdr)))
> def args: : (<object 1261889> (scdr (cdr s)))
> def args: : (<object 1261889> (scddr (cdr scdr)))
> def args: : (<object 1261957> (scdr (cdr s)))
> def args: : (<object 1261957> (scddr (cdr scdr)))
> def args: : (<object 1262029> (scdr (cdr s)))
> def args: : (<object 1262029> (scddr (cdr scdr)))
> def args: : (<object 1262097> (scdr (cdr s)))
> def args: : (<object 1262097> (scddr (cdr scdr)))
> def args: : (<object 1262169> (scdr (cdr s)))
> def args: : (<object 1262169> (scddr (cdr scdr)))
> def args: : (<object 1262237> (scdr (cdr s)))
> def args: : (<object 1262237> (scddr (cdr scdr)))
> def args: : (<object 1262309> (scdr (cdr s)))
> def args: : (<object 1262309> (scddr (cdr scdr)))
> def args: : (<object 1262377> (scdr (cdr s)))
> def args: : (<object 1262377> (scddr (cdr scdr)))
> def args: : (<object 1262449> (scdr (cdr s)))
> def args: : (<object 1262449> (scddr (cdr scdr)))
> def args: : (<object 1262517> (scdr (cdr s)))
> def args: : (<object 1262517> (scddr (cdr scdr)))
> def args: : (<object 1262589> (scdr (cdr s)))
> def args: : (<object 1262589> (scddr (cdr scdr)))
> def args: : (<object 1262657> (scdr (cdr s)))
> def args: : (<object 1262657> (scddr (cdr scdr)))
> def args: : (<object 1262729> (scdr (cdr s)))
> def args: : (<object 1262729> (scddr (cdr scdr)))
> def args: : (<object 1262797> (scdr (cdr s)))
> def args: : (<object 1262797> (scddr (cdr scdr)))
> def args: : (<object 1262869> (scdr (cdr s)))
> def args: : (<object 1262869> (scddr (cdr scdr)))
> def args: : (<object 1262937> (scdr (cdr s)))
> def args: : (<object 1262937> (scddr (cdr scdr)))
> def args: : (<object 1263009> (scdr (cdr s)))
> def args: : (<object 1263009> (scddr (cdr scdr)))
> def args: : (<object 1263077> (scdr (cdr s)))
> def args: : (<object 1263077> (scddr (cdr scdr)))
> def args: : (<object 1263149> (scdr (cdr s)))
> def args: : (<object 1263149> (scddr (cdr scdr)))
> def args: : (<object 1263217> (scdr (cdr s)))
> def args: : (<object 1263217> (scddr (cdr scdr)))
> def args: : (<object 1263289> (scdr (cdr s)))
> def args: : (<object 1263289> (scddr (cdr scdr)))
> def args: : (<object 1263357> (scdr (cdr s)))
> def args: : (<object 1263357> (scddr (cdr scdr)))
> def args: : (<object 1263429> (scdr (cdr s)))
> def args: : (<object 1263429> (scddr (cdr scdr)))
> def args: : (<object 1263497> (scdr (cdr s)))
> def args: : (<object 1263497> (scddr (cdr scdr)))
> def args: : (<object 1263569> (scdr (cdr s)))
> def args: : (<object 1263569> (scddr (cdr scdr)))
> def args: : (<object 1263637> (scdr (cdr s)))
> def args: : (<object 1263637> (scddr (cdr scdr)))
> def args: : (<object 1263709> (scdr (cdr s)))
> def args: : (<object 1263709> (scddr (cdr scdr)))
> def args: : (<object 1263777> (scdr (cdr s)))
> def args: : (<object 1263777> (scddr (cdr scdr)))
> def args: : (<object 1263849> (scdr (cdr s)))
> def args: : (<object 1263849> (scddr (cdr scdr)))
> def args: : (<object 1263917> (scdr (cdr s)))
> def args: : (<object 1263917> (scddr (cdr scdr)))
> def args: : (<object 1263989> (scdr (cdr s)))
> def args: : (<object 1263989> (scddr (cdr scdr)))
> def args: : (<object 1264057> (scdr (cdr s)))
> def args: : (<object 1264057> (scddr (cdr scdr)))
> def args: : (<object 1264129> (scdr (cdr s)))
> def args: : (<object 1264129> (scddr (cdr scdr)))
> def args: : (<object 1264197> (scdr (cdr s)))
> def args: : (<object 1264197> (scddr (cdr scdr)))
> def args: : (<object 1264269> (scdr (cdr s)))
> def args: : (<object 1264269> (scddr (cdr scdr)))
> def args: : (<object 1264337> (scdr (cdr s)))
> def args: : (<object 1264337> (scddr (cdr scdr)))
> def args: : (<object 1264409> (scdr (cdr s)))
> def args: : (<object 1264409> (scddr (cdr scdr)))
> def args: : (<object 1264477> (scdr (cdr s)))
> def args: : (<object 1264477> (scddr (cdr scdr)))
> def args: : (<object 1264549> (scdr (cdr s)))
> def args: : (<object 1264549> (scddr (cdr scdr)))
> 3828def args: : (<object 1279602> (env (if (null? @) # (car @))))
>  def args: : (<object 1279709> (env (if (null? @) # (car @))))
> def args: : (<object 1279829> (scdr (cdr s)))
> def args: : (<object 1279829> (scddr (cdr scdr)))
> def args: : (<object 1279901> (scdr (cdr s)))
> def args: : (<object 1279901> (scddr (cdr scdr)))
> def args: : (<object 1279973> (scdr (cdr s)))
> def args: : (<object 1279973> (scddr (cdr scdr)))
> def args: : (<object 1280041> (scdr (cdr s)))
> def args: : (<object 1280041> (scddr (cdr scdr)))
> def args: : (<object 1280280> (scdr (cdr s)))
> def args: : (<object 1280280> (scddr (cdr scdr)))
> def args: : (<object 1280352> (scdr (cdr s)))
> def args: : (<object 1280352> (scddr (cdr scdr)))
> def args: : (<object 1280420> (scdr (cdr s)))
> def args: : (<object 1280420> (scddr (cdr scdr)))
> def args: : (<object 1280492> (scdr (cdr s)))
> def args: : (<object 1280492> (scddr (cdr scdr)))
> def args: : (<object 1280560> (scdr (cdr s)))
> def args: : (<object 1280560> (scddr (cdr scdr)))
> def args: : (<object 1280632> (scdr (cdr s)))
> def args: : (<object 1280632> (scddr (cdr scdr)))
> def args: : (<object 1280700> (scdr (cdr s)))
> def args: : (<object 1280700> (scddr (cdr scdr)))
> def args: : (<object 1280772> (scdr (cdr s)))
> def args: : (<object 1280772> (scddr (cdr scdr)))
> def args: : (<object 1280840> (scdr (cdr s)))
> def args: : (<object 1280840> (scddr (cdr scdr)))
> def args: : (<object 1280912> (scdr (cdr s)))
> def args: : (<object 1280912> (scddr (cdr scdr)))
> def args: : (<object 1280980> (scdr (cdr s)))
> def args: : (<object 1280980> (scddr (cdr scdr)))
> def args: : (<object 1281052> (scdr (cdr s)))
> def args: : (<object 1281052> (scddr (cdr scdr)))
> def args: : (<object 1281120> (scdr (cdr s)))
> def args: : (<object 1281120> (scddr (cdr scdr)))
> def args: : (<object 1281192> (scdr (cdr s)))
> def args: : (<object 1281192> (scddr (cdr scdr)))
> def args: : (<object 1281260> (scdr (cdr s)))
> def args: : (<object 1281260> (scddr (cdr scdr)))
> def args: : (<object 1281332> (scdr (cdr s)))
> def args: : (<object 1281332> (scddr (cdr scdr)))
> def args: : (<object 1281400> (scdr (cdr s)))
> def args: : (<object 1281400> (scddr (cdr scdr)))
> def args: : (<object 1281472> (scdr (cdr s)))
> def args: : (<object 1281472> (scddr (cdr scdr)))
> def args: : (<object 1281540> (scdr (cdr s)))
> def args: : (<object 1281540> (scddr (cdr scdr)))
> def args: : (<object 1281612> (scdr (cdr s)))
> def args: : (<object 1281612> (scddr (cdr scdr)))
> def args: : (<object 1281680> (scdr (cdr s)))
> def args: : (<object 1281680> (scddr (cdr scdr)))
> def args: : (<object 1281752> (scdr (cdr s)))
> def args: : (<object 1281752> (scddr (cdr scdr)))
> def args: : (<object 1281820> (scdr (cdr s)))
> def args: : (<object 1281820> (scddr (cdr scdr)))
> def args: : (<object 1281892> (scdr (cdr s)))
> def args: : (<object 1281892> (scddr (cdr scdr)))
> def args: : (<object 1281960> (scdr (cdr s)))
> def args: : (<object 1281960> (scddr (cdr scdr)))
> def args: : (<object 1282032> (scdr (cdr s)))
> def args: : (<object 1282032> (scddr (cdr scdr)))
> def args: : (<object 1282100> (scdr (cdr s)))
> def args: : (<object 1282100> (scddr (cdr scdr)))
> def args: : (<object 1282172> (scdr (cdr s)))
> def args: : (<object 1282172> (scddr (cdr scdr)))
> def args: : (<object 1282240> (scdr (cdr s)))
> def args: : (<object 1282240> (scddr (cdr scdr)))
> def args: : (<object 1282312> (scdr (cdr s)))
> def args: : (<object 1282312> (scddr (cdr scdr)))
> def args: : (<object 1282380> (scdr (cdr s)))
> def args: : (<object 1282380> (scddr (cdr scdr)))
> def args: : (<object 1282452> (scdr (cdr s)))
> def args: : (<object 1282452> (scddr (cdr scdr)))
> def args: : (<object 1282520> (scdr (cdr s)))
> def args: : (<object 1282520> (scddr (cdr scdr)))
> def args: : (<object 1282592> (scdr (cdr s)))
> def args: : (<object 1282592> (scddr (cdr scdr)))
> def args: : (<object 1282660> (scdr (cdr s)))
> def args: : (<object 1282660> (scddr (cdr scdr)))
> def args: : (<object 1282732> (scdr (cdr s)))
> def args: : (<object 1282732> (scddr (cdr scdr)))
> def args: : (<object 1282800> (scdr (cdr s)))
> def args: : (<object 1282800> (scddr (cdr scdr)))
> def args: : (<object 1282872> (scdr (cdr s)))
> def args: : (<object 1282872> (scddr (cdr scdr)))
> def args: : (<object 1282940> (scdr (cdr s)))
> def args: : (<object 1282940> (scddr (cdr scdr)))
> def args: : (<object 1283012> (scdr (cdr s)))
> def args: : (<object 1283012> (scddr (cdr scdr)))
> def args: : (<object 1283080> (scdr (cdr s)))
> def args: : (<object 1283080> (scddr (cdr scdr)))
> def args: : (<object 1283152> (scdr (cdr s)))
> def args: : (<object 1283152> (scddr (cdr scdr)))
> def args: : (<object 1283220> (scdr (cdr s)))
> def args: : (<object 1283220> (scddr (cdr scdr)))
> def args: : (<object 1283292> (scdr (cdr s)))
> def args: : (<object 1283292> (scddr (cdr scdr)))
> def args: : (<object 1283360> (scdr (cdr s)))
> def args: : (<object 1283360> (scddr (cdr scdr)))
> def args: : (<object 1283432> (scdr (cdr s)))
> def args: : (<object 1283432> (scddr (cdr scdr)))
> def args: : (<object 1283500> (scdr (cdr s)))
> def args: : (<object 1283500> (scddr (cdr scdr)))
> def args: : (<object 1283572> (scdr (cdr s)))
> def args: : (<object 1283572> (scddr (cdr scdr)))
> def args: : (<object 1283640> (scdr (cdr s)))
> def args: : (<object 1283640> (scddr (cdr scdr)))
> def args: : (<object 1283712> (scdr (cdr s)))
> def args: : (<object 1283712> (scddr (cdr scdr)))
> def args: : (<object 1283780> (scdr (cdr s)))
> def args: : (<object 1283780> (scddr (cdr scdr)))
> def args: : (<object 1283852> (scdr (cdr s)))
> def args: : (<object 1283852> (scddr (cdr scdr)))
> def args: : (<object 1283920> (scdr (cdr s)))
> def args: : (<object 1283920> (scddr (cdr scdr)))
> def args: : (<object 1283992> (scdr (cdr s)))
> def args: : (<object 1283992> (scddr (cdr scdr)))
> def args: : (<object 1284060> (scdr (cdr s)))
> def args: : (<object 1284060> (scddr (cdr scdr)))
> def args: : (<object 1284132> (scdr (cdr s)))
> def args: : (<object 1284132> (scddr (cdr scdr)))
> def args: : (<object 1284200> (scdr (cdr s)))
> def args: : (<object 1284200> (scddr (cdr scdr)))
> def args: : (<object 1284272> (scdr (cdr s)))
> def args: : (<object 1284272> (scddr (cdr scdr)))
> def args: : (<object 1284340> (scdr (cdr s)))
> def args: : (<object 1284340> (scddr (cdr scdr)))
> def args: : (<object 1284412> (scdr (cdr s)))
> def args: : (<object 1284412> (scddr (cdr scdr)))
> def args: : (<object 1284480> (scdr (cdr s)))
> def args: : (<object 1284480> (scddr (cdr scdr)))
> def args: : (<object 1284552> (scdr (cdr s)))
> def args: : (<object 1284552> (scddr (cdr scdr)))
> def args: : (<object 1284620> (scdr (cdr s)))
> def args: : (<object 1284620> (scddr (cdr scdr)))
> def args: : (<object 1284692> (scdr (cdr s)))
> def args: : (<object 1284692> (scddr (cdr scdr)))
> def args: : (<object 1284760> (scdr (cdr s)))
> def args: : (<object 1284760> (scddr (cdr scdr)))
> def args: : (<object 1284832> (scdr (cdr s)))
> def args: : (<object 1284832> (scddr (cdr scdr)))
> def args: : (<object 1284900> (scdr (cdr s)))
> def args: : (<object 1284900> (scddr (cdr scdr)))
> def args: : (<object 1284972> (scdr (cdr s)))
> def args: : (<object 1284972> (scddr (cdr scdr)))
> def args: : (<object 1285040> (scdr (cdr s)))
> def args: : (<object 1285040> (scddr (cdr scdr)))
> def args: : (<object 1285112> (scdr (cdr s)))
> def args: : (<object 1285112> (scddr (cdr scdr)))
> def args: : (<object 1285180> (scdr (cdr s)))
> def args: : (<object 1285180> (scddr (cdr scdr)))
> def args: : (<object 1285252> (scdr (cdr s)))
> def args: : (<object 1285252> (scddr (cdr scdr)))
> def args: : (<object 1285320> (scdr (cdr s)))
> def args: : (<object 1285320> (scddr (cdr scdr)))
> def args: : (<object 1285392> (scdr (cdr s)))
> def args: : (<object 1285392> (scddr (cdr scdr)))
> def args: : (<object 1285460> (scdr (cdr s)))
> def args: : (<object 1285460> (scddr (cdr scdr)))
> def args: : (<object 1285532> (scdr (cdr s)))
> def args: : (<object 1285532> (scddr (cdr scdr)))
> def args: : (<object 1285600> (scdr (cdr s)))
> def args: : (<object 1285600> (scddr (cdr scdr)))
> def args: : (<object 1285672> (scdr (cdr s)))
> def args: : (<object 1285672> (scddr (cdr scdr)))
> def args: : (<object 1285740> (scdr (cdr s)))
> def args: : (<object 1285740> (scddr (cdr scdr)))
> def args: : (<object 1285812> (scdr (cdr s)))
> def args: : (<object 1285812> (scddr (cdr scdr)))
> def args: : (<object 1285880> (scdr (cdr s)))
> def args: : (<object 1285880> (scddr (cdr scdr)))
> def args: : (<object 1285952> (scdr (cdr s)))
> def args: : (<object 1285952> (scddr (cdr scdr)))
> def args: : (<object 1286020> (scdr (cdr s)))
> def args: : (<object 1286020> (scddr (cdr scdr)))
> def args: : (<object 1286092> (scdr (cdr s)))
> def args: : (<object 1286092> (scddr (cdr scdr)))
> def args: : (<object 1286160> (scdr (cdr s)))
> def args: : (<object 1286160> (scddr (cdr scdr)))
> def args: : (<object 1286232> (scdr (cdr s)))
> def args: : (<object 1286232> (scddr (cdr scdr)))
> def args: : (<object 1286300> (scdr (cdr s)))
> def args: : (<object 1286300> (scddr (cdr scdr)))
> def args: : (<object 1286372> (scdr (cdr s)))
> def args: : (<object 1286372> (scddr (cdr scdr)))
> def args: : (<object 1286440> (scdr (cdr s)))
> def args: : (<object 1286440> (scddr (cdr scdr)))
> def args: : (<object 1286512> (scdr (cdr s)))
> def args: : (<object 1286512> (scddr (cdr scdr)))
> def args: : (<object 1286580> (scdr (cdr s)))
> def args: : (<object 1286580> (scddr (cdr scdr)))
> def args: : (<object 1286652> (scdr (cdr s)))
> def args: : (<object 1286652> (scddr (cdr scdr)))
> def args: : (<object 1286720> (scdr (cdr s)))
> def args: : (<object 1286720> (scddr (cdr scdr)))
> def args: : (<object 1286792> (scdr (cdr s)))
> def args: : (<object 1286792> (scddr (cdr scdr)))
> def args: : (<object 1286860> (scdr (cdr s)))
> def args: : (<object 1286860> (scddr (cdr scdr)))
> def args: : (<object 1286932> (scdr (cdr s)))
> def args: : (<object 1286932> (scddr (cdr scdr)))
> def args: : (<object 1287000> (scdr (cdr s)))
> def args: : (<object 1287000> (scddr (cdr scdr)))
> def args: : (<object 1287072> (scdr (cdr s)))
> def args: : (<object 1287072> (scddr (cdr scdr)))
> def args: : (<object 1287140> (scdr (cdr s)))
> def args: : (<object 1287140> (scddr (cdr scdr)))
> def args: : (<object 1287212> (scdr (cdr s)))
> def args: : (<object 1287212> (scddr (cdr scdr)))
> def args: : (<object 1287280> (scdr (cdr s)))
> def args: : (<object 1287280> (scddr (cdr scdr)))
> def args: : (<object 1287352> (scdr (cdr s)))
> def args: : (<object 1287352> (scddr (cdr scdr)))
> def args: : (<object 1287420> (scdr (cdr s)))
> def args: : (<object 1287420> (scddr (cdr scdr)))
> def args: : (<object 1287492> (scdr (cdr s)))
> def args: : (<object 1287492> (scddr (cdr scdr)))
> def args: : (<object 1287560> (scdr (cdr s)))
> def args: : (<object 1287560> (scddr (cdr scdr)))
> def args: : (<object 1287632> (scdr (cdr s)))
> def args: : (<object 1287632> (scddr (cdr scdr)))
> def args: : (<object 1287700> (scdr (cdr s)))
> def args: : (<object 1287700> (scddr (cdr scdr)))
> def args: : (<object 1287772> (scdr (cdr s)))
> def args: : (<object 1287772> (scddr (cdr scdr)))
> def args: : (<object 1287840> (scdr (cdr s)))
> def args: : (<object 1287840> (scddr (cdr scdr)))
> def args: : (<object 1287912> (scdr (cdr s)))
> def args: : (<object 1287912> (scddr (cdr scdr)))
> def args: : (<object 1287980> (scdr (cdr s)))
> def args: : (<object 1287980> (scddr (cdr scdr)))
> def args: : (<object 1288052> (scdr (cdr s)))
> def args: : (<object 1288052> (scddr (cdr scdr)))
> def args: : (<object 1288120> (scdr (cdr s)))
> def args: : (<object 1288120> (scddr (cdr scdr)))
> def args: : (<object 1288192> (scdr (cdr s)))
> def args: : (<object 1288192> (scddr (cdr scdr)))
> def args: : (<object 1288260> (scdr (cdr s)))
> def args: : (<object 1288260> (scddr (cdr scdr)))
> def args: : (<object 1288332> (scdr (cdr s)))
> def args: : (<object 1288332> (scddr (cdr scdr)))
> def args: : (<object 1288400> (scdr (cdr s)))
> def args: : (<object 1288400> (scddr (cdr scdr)))
> def args: : (<object 1288472> (scdr (cdr s)))
> def args: : (<object 1288472> (scddr (cdr scdr)))
> def args: : (<object 1288540> (scdr (cdr s)))
> def args: : (<object 1288540> (scddr (cdr scdr)))
> def args: : (<object 1288612> (scdr (cdr s)))
> def args: : (<object 1288612> (scddr (cdr scdr)))
> def args: : (<object 1288680> (scdr (cdr s)))
> def args: : (<object 1288680> (scddr (cdr scdr)))
> def args: : (<object 1288752> (scdr (cdr s)))
> def args: : (<object 1288752> (scddr (cdr scdr)))
> def args: : (<object 1288820> (scdr (cdr s)))
> def args: : (<object 1288820> (scddr (cdr scdr)))
> def args: : (<object 1288892> (scdr (cdr s)))
> def args: : (<object 1288892> (scddr (cdr scdr)))
> def args: : (<object 1288960> (scdr (cdr s)))
> def args: : (<object 1288960> (scddr (cdr scdr)))
> def args: : (<object 1289032> (scdr (cdr s)))
> def args: : (<object 1289032> (scddr (cdr scdr)))
> def args: : (<object 1289100> (scdr (cdr s)))
> def args: : (<object 1289100> (scddr (cdr scdr)))
> def args: : (<object 1289172> (scdr (cdr s)))
> def args: : (<object 1289172> (scddr (cdr scdr)))
> def args: : (<object 1289240> (scdr (cdr s)))
> def args: : (<object 1289240> (scddr (cdr scdr)))
> def args: : (<object 1289312> (scdr (cdr s)))
> def args: : (<object 1289312> (scddr (cdr scdr)))
> def args: : (<object 1289380> (scdr (cdr s)))
> def args: : (<object 1289380> (scddr (cdr scdr)))
> def args: : (<object 1289452> (scdr (cdr s)))
> def args: : (<object 1289452> (scddr (cdr scdr)))
> def args: : (<object 1289520> (scdr (cdr s)))
> def args: : (<object 1289520> (scddr (cdr scdr)))
> def args: : (<object 1289592> (scdr (cdr s)))
> def args: : (<object 1289592> (scddr (cdr scdr)))
> def args: : (<object 1289660> (scdr (cdr s)))
> def args: : (<object 1289660> (scddr (cdr scdr)))
> def args: : (<object 1289732> (scdr (cdr s)))
> def args: : (<object 1289732> (scddr (cdr scdr)))
> def args: : (<object 1289800> (scdr (cdr s)))
> def args: : (<object 1289800> (scddr (cdr scdr)))
> def args: : (<object 1289872> (scdr (cdr s)))
> def args: : (<object 1289872> (scddr (cdr scdr)))
> def args: : (<object 1289940> (scdr (cdr s)))
> def args: : (<object 1289940> (scddr (cdr scdr)))
> def args: : (<object 1290012> (scdr (cdr s)))
> def args: : (<object 1290012> (scddr (cdr scdr)))
> def args: : (<object 1290080> (scdr (cdr s)))
> def args: : (<object 1290080> (scddr (cdr scdr)))
> def args: : (<object 1290152> (scdr (cdr s)))
> def args: : (<object 1290152> (scddr (cdr scdr)))
> def args: : (<object 1290220> (scdr (cdr s)))
> def args: : (<object 1290220> (scddr (cdr scdr)))
> def args: : (<object 1290292> (scdr (cdr s)))
> def args: : (<object 1290292> (scddr (cdr scdr)))
> def args: : (<object 1290360> (scdr (cdr s)))
> def args: : (<object 1290360> (scddr (cdr scdr)))
> def args: : (<object 1290432> (scdr (cdr s)))
> def args: : (<object 1290432> (scddr (cdr scdr)))
> def args: : (<object 1290500> (scdr (cdr s)))
> def args: : (<object 1290500> (scddr (cdr scdr)))
> def args: : (<object 1290572> (scdr (cdr s)))
> def args: : (<object 1290572> (scddr (cdr scdr)))
> def args: : (<object 1290640> (scdr (cdr s)))
> def args: : (<object 1290640> (scddr (cdr scdr)))
> def args: : (<object 1290712> (scdr (cdr s)))
> def args: : (<object 1290712> (scddr (cdr scdr)))
> def args: : (<object 1290780> (scdr (cdr s)))
> def args: : (<object 1290780> (scddr (cdr scdr)))
> def args: : (<object 1290852> (scdr (cdr s)))
> def args: : (<object 1290852> (scddr (cdr scdr)))
> def args: : (<object 1290920> (scdr (cdr s)))
> def args: : (<object 1290920> (scddr (cdr scdr)))
> def args: : (<object 1290992> (scdr (cdr s)))
> def args: : (<object 1290992> (scddr (cdr scdr)))
> def args: : (<object 1291060> (scdr (cdr s)))
> def args: : (<object 1291060> (scddr (cdr scdr)))
> def args: : (<object 1291132> (scdr (cdr s)))
> def args: : (<object 1291132> (scddr (cdr scdr)))
> def args: : (<object 1291200> (scdr (cdr s)))
> def args: : (<object 1291200> (scddr (cdr scdr)))
> def args: : (<object 1291272> (scdr (cdr s)))
> def args: : (<object 1291272> (scddr (cdr scdr)))
> def args: : (<object 1291340> (scdr (cdr s)))
> def args: : (<object 1291340> (scddr (cdr scdr)))
> def args: : (<object 1291412> (scdr (cdr s)))
> def args: : (<object 1291412> (scddr (cdr scdr)))
> def args: : (<object 1291480> (scdr (cdr s)))
> def args: : (<object 1291480> (scddr (cdr scdr)))
> def args: : (<object 1291552> (scdr (cdr s)))
> def args: : (<object 1291552> (scddr (cdr scdr)))
> def args: : (<object 1291620> (scdr (cdr s)))
> def args: : (<object 1291620> (scddr (cdr scdr)))
> def args: : (<object 1291692> (scdr (cdr s)))
> def args: : (<object 1291692> (scddr (cdr scdr)))
> def args: : (<object 1291760> (scdr (cdr s)))
> def args: : (<object 1291760> (scddr (cdr scdr)))
> def args: : (<object 1291832> (scdr (cdr s)))
> def args: : (<object 1291832> (scddr (cdr scdr)))
> def args: : (<object 1291900> (scdr (cdr s)))
> def args: : (<object 1291900> (scddr (cdr scdr)))
> def args: : (<object 1291972> (scdr (cdr s)))
> def args: : (<object 1291972> (scddr (cdr scdr)))
> def args: : (<object 1292040> (scdr (cdr s)))
> def args: : (<object 1292040> (scddr (cdr scdr)))
> def args: : (<object 1292112> (scdr (cdr s)))
> def args: : (<object 1292112> (scddr (cdr scdr)))
> def args: : (<object 1292180> (scdr (cdr s)))
> def args: : (<object 1292180> (scddr (cdr scdr)))
> def args: : (<object 1292252> (scdr (cdr s)))
> def args: : (<object 1292252> (scddr (cdr scdr)))
> 3916def args: : (<object 1307476> (env (if (null? @) # (car @))))
>  def args: : (<object 1307583> (env (if (null? @) # (car @))))
> def args: : (<object 1307703> (scdr (cdr s)))
> def args: : (<object 1307703> (scddr (cdr scdr)))
> def args: : (<object 1307775> (scdr (cdr s)))
> def args: : (<object 1307775> (scddr (cdr scdr)))
> def args: : (<object 1307847> (scdr (cdr s)))
> def args: : (<object 1307847> (scddr (cdr scdr)))
> def args: : (<object 1307915> (scdr (cdr s)))
> def args: : (<object 1307915> (scddr (cdr scdr)))
> def args: : (<object 1308154> (scdr (cdr s)))
> def args: : (<object 1308154> (scddr (cdr scdr)))
> def args: : (<object 1308226> (scdr (cdr s)))
> def args: : (<object 1308226> (scddr (cdr scdr)))
> def args: : (<object 1308294> (scdr (cdr s)))
> def args: : (<object 1308294> (scddr (cdr scdr)))
> def args: : (<object 1308366> (scdr (cdr s)))
> def args: : (<object 1308366> (scddr (cdr scdr)))
> def args: : (<object 1308434> (scdr (cdr s)))
> def args: : (<object 1308434> (scddr (cdr scdr)))
> def args: : (<object 1308506> (scdr (cdr s)))
> def args: : (<object 1308506> (scddr (cdr scdr)))
> def args: : (<object 1308574> (scdr (cdr s)))
> def args: : (<object 1308574> (scddr (cdr scdr)))
> def args: : (<object 1308646> (scdr (cdr s)))
> def args: : (<object 1308646> (scddr (cdr scdr)))
> def args: : (<object 1308714> (scdr (cdr s)))
> def args: : (<object 1308714> (scddr (cdr scdr)))
> def args: : (<object 1308786> (scdr (cdr s)))
> def args: : (<object 1308786> (scddr (cdr scdr)))
> def args: : (<object 1308854> (scdr (cdr s)))
> def args: : (<object 1308854> (scddr (cdr scdr)))
> def args: : (<object 1308926> (scdr (cdr s)))
> def args: : (<object 1308926> (scddr (cdr scdr)))
> def args: : (<object 1308994> (scdr (cdr s)))
> def args: : (<object 1308994> (scddr (cdr scdr)))
> def args: : (<object 1309066> (scdr (cdr s)))
> def args: : (<object 1309066> (scddr (cdr scdr)))
> def args: : (<object 1309134> (scdr (cdr s)))
> def args: : (<object 1309134> (scddr (cdr scdr)))
> def args: : (<object 1309206> (scdr (cdr s)))
> def args: : (<object 1309206> (scddr (cdr scdr)))
> def args: : (<object 1309274> (scdr (cdr s)))
> def args: : (<object 1309274> (scddr (cdr scdr)))
> def args: : (<object 1309346> (scdr (cdr s)))
> def args: : (<object 1309346> (scddr (cdr scdr)))
> def args: : (<object 1309414> (scdr (cdr s)))
> def args: : (<object 1309414> (scddr (cdr scdr)))
> def args: : (<object 1309486> (scdr (cdr s)))
> def args: : (<object 1309486> (scddr (cdr scdr)))
> def args: : (<object 1309554> (scdr (cdr s)))
> def args: : (<object 1309554> (scddr (cdr scdr)))
> def args: : (<object 1309626> (scdr (cdr s)))
> def args: : (<object 1309626> (scddr (cdr scdr)))
> def args: : (<object 1309694> (scdr (cdr s)))
> def args: : (<object 1309694> (scddr (cdr scdr)))
> def args: : (<object 1309766> (scdr (cdr s)))
> def args: : (<object 1309766> (scddr (cdr scdr)))
> def args: : (<object 1309834> (scdr (cdr s)))
> def args: : (<object 1309834> (scddr (cdr scdr)))
> def args: : (<object 1309906> (scdr (cdr s)))
> def args: : (<object 1309906> (scddr (cdr scdr)))
> def args: : (<object 1309974> (scdr (cdr s)))
> def args: : (<object 1309974> (scddr (cdr scdr)))
> def args: : (<object 1310046> (scdr (cdr s)))
> def args: : (<object 1310046> (scddr (cdr scdr)))
> def args: : (<object 1310114> (scdr (cdr s)))
> def args: : (<object 1310114> (scddr (cdr scdr)))
> def args: : (<object 1310186> (scdr (cdr s)))
> def args: : (<object 1310186> (scddr (cdr scdr)))
> def args: : (<object 1310254> (scdr (cdr s)))
> def args: : (<object 1310254> (scddr (cdr scdr)))
> def args: : (<object 1310326> (scdr (cdr s)))
> def args: : (<object 1310326> (scddr (cdr scdr)))
> def args: : (<object 1310394> (scdr (cdr s)))
> def args: : (<object 1310394> (scddr (cdr scdr)))
> def args: : (<object 1310466> (scdr (cdr s)))
> def args: : (<object 1310466> (scddr (cdr scdr)))
> def args: : (<object 1310534> (scdr (cdr s)))
> def args: : (<object 1310534> (scddr (cdr scdr)))
> def args: : (<object 1310606> (scdr (cdr s)))
> def args: : (<object 1310606> (scddr (cdr scdr)))
> def args: : (<object 1310674> (scdr (cdr s)))
> def args: : (<object 1310674> (scddr (cdr scdr)))
> def args: : (<object 1310746> (scdr (cdr s)))
> def args: : (<object 1310746> (scddr (cdr scdr)))
> def args: : (<object 1310814> (scdr (cdr s)))
> def args: : (<object 1310814> (scddr (cdr scdr)))
> def args: : (<object 1310886> (scdr (cdr s)))
> def args: : (<object 1310886> (scddr (cdr scdr)))
> def args: : (<object 1310954> (scdr (cdr s)))
> def args: : (<object 1310954> (scddr (cdr scdr)))
> def args: : (<object 1311026> (scdr (cdr s)))
> def args: : (<object 1311026> (scddr (cdr scdr)))
> def args: : (<object 1311094> (scdr (cdr s)))
> def args: : (<object 1311094> (scddr (cdr scdr)))
> def args: : (<object 1311166> (scdr (cdr s)))
> def args: : (<object 1311166> (scddr (cdr scdr)))
> def args: : (<object 1311234> (scdr (cdr s)))
> def args: : (<object 1311234> (scddr (cdr scdr)))
> def args: : (<object 1311306> (scdr (cdr s)))
> def args: : (<object 1311306> (scddr (cdr scdr)))
> def args: : (<object 1311374> (scdr (cdr s)))
> def args: : (<object 1311374> (scddr (cdr scdr)))
> def args: : (<object 1311446> (scdr (cdr s)))
> def args: : (<object 1311446> (scddr (cdr scdr)))
> def args: : (<object 1311514> (scdr (cdr s)))
> def args: : (<object 1311514> (scddr (cdr scdr)))
> def args: : (<object 1311586> (scdr (cdr s)))
> def args: : (<object 1311586> (scddr (cdr scdr)))
> def args: : (<object 1311654> (scdr (cdr s)))
> def args: : (<object 1311654> (scddr (cdr scdr)))
> def args: : (<object 1311726> (scdr (cdr s)))
> def args: : (<object 1311726> (scddr (cdr scdr)))
> def args: : (<object 1311794> (scdr (cdr s)))
> def args: : (<object 1311794> (scddr (cdr scdr)))
> def args: : (<object 1311866> (scdr (cdr s)))
> def args: : (<object 1311866> (scddr (cdr scdr)))
> def args: : (<object 1311934> (scdr (cdr s)))
> def args: : (<object 1311934> (scddr (cdr scdr)))
> def args: : (<object 1312006> (scdr (cdr s)))
> def args: : (<object 1312006> (scddr (cdr scdr)))
> def args: : (<object 1312074> (scdr (cdr s)))
> def args: : (<object 1312074> (scddr (cdr scdr)))
> def args: : (<object 1312146> (scdr (cdr s)))
> def args: : (<object 1312146> (scddr (cdr scdr)))
> def args: : (<object 1312214> (scdr (cdr s)))
> def args: : (<object 1312214> (scddr (cdr scdr)))
> def args: : (<object 1312286> (scdr (cdr s)))
> def args: : (<object 1312286> (scddr (cdr scdr)))
> def args: : (<object 1312354> (scdr (cdr s)))
> def args: : (<object 1312354> (scddr (cdr scdr)))
> def args: : (<object 1312426> (scdr (cdr s)))
> def args: : (<object 1312426> (scddr (cdr scdr)))
> def args: : (<object 1312494> (scdr (cdr s)))
> def args: : (<object 1312494> (scddr (cdr scdr)))
> def args: : (<object 1312566> (scdr (cdr s)))
> def args: : (<object 1312566> (scddr (cdr scdr)))
> def args: : (<object 1312634> (scdr (cdr s)))
> def args: : (<object 1312634> (scddr (cdr scdr)))
> def args: : (<object 1312706> (scdr (cdr s)))
> def args: : (<object 1312706> (scddr (cdr scdr)))
> def args: : (<object 1312774> (scdr (cdr s)))
> def args: : (<object 1312774> (scddr (cdr scdr)))
> def args: : (<object 1312846> (scdr (cdr s)))
> def args: : (<object 1312846> (scddr (cdr scdr)))
> def args: : (<object 1312914> (scdr (cdr s)))
> def args: : (<object 1312914> (scddr (cdr scdr)))
> def args: : (<object 1312986> (scdr (cdr s)))
> def args: : (<object 1312986> (scddr (cdr scdr)))
> def args: : (<object 1313054> (scdr (cdr s)))
> def args: : (<object 1313054> (scddr (cdr scdr)))
> def args: : (<object 1313126> (scdr (cdr s)))
> def args: : (<object 1313126> (scddr (cdr scdr)))
> def args: : (<object 1313194> (scdr (cdr s)))
> def args: : (<object 1313194> (scddr (cdr scdr)))
> def args: : (<object 1313266> (scdr (cdr s)))
> def args: : (<object 1313266> (scddr (cdr scdr)))
> def args: : (<object 1313334> (scdr (cdr s)))
> def args: : (<object 1313334> (scddr (cdr scdr)))
> def args: : (<object 1313406> (scdr (cdr s)))
> def args: : (<object 1313406> (scddr (cdr scdr)))
> def args: : (<object 1313474> (scdr (cdr s)))
> def args: : (<object 1313474> (scddr (cdr scdr)))
> def args: : (<object 1313546> (scdr (cdr s)))
> def args: : (<object 1313546> (scddr (cdr scdr)))
> def args: : (<object 1313614> (scdr (cdr s)))
> def args: : (<object 1313614> (scddr (cdr scdr)))
> def args: : (<object 1313686> (scdr (cdr s)))
> def args: : (<object 1313686> (scddr (cdr scdr)))
> def args: : (<object 1313754> (scdr (cdr s)))
> def args: : (<object 1313754> (scddr (cdr scdr)))
> def args: : (<object 1313826> (scdr (cdr s)))
> def args: : (<object 1313826> (scddr (cdr scdr)))
> def args: : (<object 1313894> (scdr (cdr s)))
> def args: : (<object 1313894> (scddr (cdr scdr)))
> def args: : (<object 1313966> (scdr (cdr s)))
> def args: : (<object 1313966> (scddr (cdr scdr)))
> def args: : (<object 1314034> (scdr (cdr s)))
> def args: : (<object 1314034> (scddr (cdr scdr)))
> def args: : (<object 1314106> (scdr (cdr s)))
> def args: : (<object 1314106> (scddr (cdr scdr)))
> def args: : (<object 1314174> (scdr (cdr s)))
> def args: : (<object 1314174> (scddr (cdr scdr)))
> def args: : (<object 1314246> (scdr (cdr s)))
> def args: : (<object 1314246> (scddr (cdr scdr)))
> def args: : (<object 1314314> (scdr (cdr s)))
> def args: : (<object 1314314> (scddr (cdr scdr)))
> def args: : (<object 1314386> (scdr (cdr s)))
> def args: : (<object 1314386> (scddr (cdr scdr)))
> def args: : (<object 1314454> (scdr (cdr s)))
> def args: : (<object 1314454> (scddr (cdr scdr)))
> def args: : (<object 1314526> (scdr (cdr s)))
> def args: : (<object 1314526> (scddr (cdr scdr)))
> def args: : (<object 1314594> (scdr (cdr s)))
> def args: : (<object 1314594> (scddr (cdr scdr)))
> def args: : (<object 1314666> (scdr (cdr s)))
> def args: : (<object 1314666> (scddr (cdr scdr)))
> def args: : (<object 1314734> (scdr (cdr s)))
> def args: : (<object 1314734> (scddr (cdr scdr)))
> def args: : (<object 1314806> (scdr (cdr s)))
> def args: : (<object 1314806> (scddr (cdr scdr)))
> def args: : (<object 1314874> (scdr (cdr s)))
> def args: : (<object 1314874> (scddr (cdr scdr)))
> def args: : (<object 1314946> (scdr (cdr s)))
> def args: : (<object 1314946> (scddr (cdr scdr)))
> def args: : (<object 1315014> (scdr (cdr s)))
> def args: : (<object 1315014> (scddr (cdr scdr)))
> def args: : (<object 1315086> (scdr (cdr s)))
> def args: : (<object 1315086> (scddr (cdr scdr)))
> def args: : (<object 1315154> (scdr (cdr s)))
> def args: : (<object 1315154> (scddr (cdr scdr)))
> def args: : (<object 1315226> (scdr (cdr s)))
> def args: : (<object 1315226> (scddr (cdr scdr)))
> def args: : (<object 1315294> (scdr (cdr s)))
> def args: : (<object 1315294> (scddr (cdr scdr)))
> def args: : (<object 1315366> (scdr (cdr s)))
> def args: : (<object 1315366> (scddr (cdr scdr)))
> def args: : (<object 1315434> (scdr (cdr s)))
> def args: : (<object 1315434> (scddr (cdr scdr)))
> def args: : (<object 1315506> (scdr (cdr s)))
> def args: : (<object 1315506> (scddr (cdr scdr)))
> def args: : (<object 1315574> (scdr (cdr s)))
> def args: : (<object 1315574> (scddr (cdr scdr)))
> def args: : (<object 1315646> (scdr (cdr s)))
> def args: : (<object 1315646> (scddr (cdr scdr)))
> def args: : (<object 1315714> (scdr (cdr s)))
> def args: : (<object 1315714> (scddr (cdr scdr)))
> def args: : (<object 1315786> (scdr (cdr s)))
> def args: : (<object 1315786> (scddr (cdr scdr)))
> def args: : (<object 1315854> (scdr (cdr s)))
> def args: : (<object 1315854> (scddr (cdr scdr)))
> def args: : (<object 1315926> (scdr (cdr s)))
> def args: : (<object 1315926> (scddr (cdr scdr)))
> def args: : (<object 1315994> (scdr (cdr s)))
> def args: : (<object 1315994> (scddr (cdr scdr)))
> def args: : (<object 1316066> (scdr (cdr s)))
> def args: : (<object 1316066> (scddr (cdr scdr)))
> def args: : (<object 1316134> (scdr (cdr s)))
> def args: : (<object 1316134> (scddr (cdr scdr)))
> def args: : (<object 1316206> (scdr (cdr s)))
> def args: : (<object 1316206> (scddr (cdr scdr)))
> def args: : (<object 1316274> (scdr (cdr s)))
> def args: : (<object 1316274> (scddr (cdr scdr)))
> def args: : (<object 1316346> (scdr (cdr s)))
> def args: : (<object 1316346> (scddr (cdr scdr)))
> def args: : (<object 1316414> (scdr (cdr s)))
> def args: : (<object 1316414> (scddr (cdr scdr)))
> def args: : (<object 1316486> (scdr (cdr s)))
> def args: : (<object 1316486> (scddr (cdr scdr)))
> def args: : (<object 1316554> (scdr (cdr s)))
> def args: : (<object 1316554> (scddr (cdr scdr)))
> def args: : (<object 1316626> (scdr (cdr s)))
> def args: : (<object 1316626> (scddr (cdr scdr)))
> def args: : (<object 1316694> (scdr (cdr s)))
> def args: : (<object 1316694> (scddr (cdr scdr)))
> def args: : (<object 1316766> (scdr (cdr s)))
> def args: : (<object 1316766> (scddr (cdr scdr)))
> def args: : (<object 1316834> (scdr (cdr s)))
> def args: : (<object 1316834> (scddr (cdr scdr)))
> def args: : (<object 1316906> (scdr (cdr s)))
> def args: : (<object 1316906> (scddr (cdr scdr)))
> def args: : (<object 1316974> (scdr (cdr s)))
> def args: : (<object 1316974> (scddr (cdr scdr)))
> def args: : (<object 1317046> (scdr (cdr s)))
> def args: : (<object 1317046> (scddr (cdr scdr)))
> def args: : (<object 1317114> (scdr (cdr s)))
> def args: : (<object 1317114> (scddr (cdr scdr)))
> def args: : (<object 1317186> (scdr (cdr s)))
> def args: : (<object 1317186> (scddr (cdr scdr)))
> def args: : (<object 1317254> (scdr (cdr s)))
> def args: : (<object 1317254> (scddr (cdr scdr)))
> def args: : (<object 1317326> (scdr (cdr s)))
> def args: : (<object 1317326> (scddr (cdr scdr)))
> def args: : (<object 1317394> (scdr (cdr s)))
> def args: : (<object 1317394> (scddr (cdr scdr)))
> def args: : (<object 1317466> (scdr (cdr s)))
> def args: : (<object 1317466> (scddr (cdr scdr)))
> def args: : (<object 1317534> (scdr (cdr s)))
> def args: : (<object 1317534> (scddr (cdr scdr)))
> def args: : (<object 1317606> (scdr (cdr s)))
> def args: : (<object 1317606> (scddr (cdr scdr)))
> def args: : (<object 1317674> (scdr (cdr s)))
> def args: : (<object 1317674> (scddr (cdr scdr)))
> def args: : (<object 1317746> (scdr (cdr s)))
> def args: : (<object 1317746> (scddr (cdr scdr)))
> def args: : (<object 1317814> (scdr (cdr s)))
> def args: : (<object 1317814> (scddr (cdr scdr)))
> def args: : (<object 1317886> (scdr (cdr s)))
> def args: : (<object 1317886> (scddr (cdr scdr)))
> def args: : (<object 1317954> (scdr (cdr s)))
> def args: : (<object 1317954> (scddr (cdr scdr)))
> def args: : (<object 1318026> (scdr (cdr s)))
> def args: : (<object 1318026> (scddr (cdr scdr)))
> def args: : (<object 1318094> (scdr (cdr s)))
> def args: : (<object 1318094> (scddr (cdr scdr)))
> def args: : (<object 1318166> (scdr (cdr s)))
> def args: : (<object 1318166> (scddr (cdr scdr)))
> def args: : (<object 1318234> (scdr (cdr s)))
> def args: : (<object 1318234> (scddr (cdr scdr)))
> def args: : (<object 1318306> (scdr (cdr s)))
> def args: : (<object 1318306> (scddr (cdr scdr)))
> def args: : (<object 1318374> (scdr (cdr s)))
> def args: : (<object 1318374> (scddr (cdr scdr)))
> def args: : (<object 1318446> (scdr (cdr s)))
> def args: : (<object 1318446> (scddr (cdr scdr)))
> def args: : (<object 1318514> (scdr (cdr s)))
> def args: : (<object 1318514> (scddr (cdr scdr)))
> def args: : (<object 1318586> (scdr (cdr s)))
> def args: : (<object 1318586> (scddr (cdr scdr)))
> def args: : (<object 1318654> (scdr (cdr s)))
> def args: : (<object 1318654> (scddr (cdr scdr)))
> def args: : (<object 1318726> (scdr (cdr s)))
> def args: : (<object 1318726> (scddr (cdr scdr)))
> def args: : (<object 1318794> (scdr (cdr s)))
> def args: : (<object 1318794> (scddr (cdr scdr)))
> def args: : (<object 1318866> (scdr (cdr s)))
> def args: : (<object 1318866> (scddr (cdr scdr)))
> def args: : (<object 1318934> (scdr (cdr s)))
> def args: : (<object 1318934> (scddr (cdr scdr)))
> def args: : (<object 1319006> (scdr (cdr s)))
> def args: : (<object 1319006> (scddr (cdr scdr)))
> def args: : (<object 1319074> (scdr (cdr s)))
> def args: : (<object 1319074> (scddr (cdr scdr)))
> def args: : (<object 1319146> (scdr (cdr s)))
> def args: : (<object 1319146> (scddr (cdr scdr)))
> def args: : (<object 1319214> (scdr (cdr s)))
> def args: : (<object 1319214> (scddr (cdr scdr)))
> def args: : (<object 1319286> (scdr (cdr s)))
> def args: : (<object 1319286> (scddr (cdr scdr)))
> def args: : (<object 1319354> (scdr (cdr s)))
> def args: : (<object 1319354> (scddr (cdr scdr)))
> def args: : (<object 1319426> (scdr (cdr s)))
> def args: : (<object 1319426> (scddr (cdr scdr)))
> def args: : (<object 1319494> (scdr (cdr s)))
> def args: : (<object 1319494> (scddr (cdr scdr)))
> def args: : (<object 1319566> (scdr (cdr s)))
> def args: : (<object 1319566> (scddr (cdr scdr)))
> def args: : (<object 1319634> (scdr (cdr s)))
> def args: : (<object 1319634> (scddr (cdr scdr)))
> def args: : (<object 1319706> (scdr (cdr s)))
> def args: : (<object 1319706> (scddr (cdr scdr)))
> def args: : (<object 1319774> (scdr (cdr s)))
> def args: : (<object 1319774> (scddr (cdr scdr)))
> def args: : (<object 1319846> (scdr (cdr s)))
> def args: : (<object 1319846> (scddr (cdr scdr)))
> def args: : (<object 1319914> (scdr (cdr s)))
> def args: : (<object 1319914> (scddr (cdr scdr)))
> def args: : (<object 1319986> (scdr (cdr s)))
> def args: : (<object 1319986> (scddr (cdr scdr)))
> def args: : (<object 1320054> (scdr (cdr s)))
> def args: : (<object 1320054> (scddr (cdr scdr)))
> def args: : (<object 1320126> (scdr (cdr s)))
> def args: : (<object 1320126> (scddr (cdr scdr)))
> def args: : (<object 1320194> (scdr (cdr s)))
> def args: : (<object 1320194> (scddr (cdr scdr)))
> def args: : (<object 1320266> (scdr (cdr s)))
> def args: : (<object 1320266> (scddr (cdr scdr)))
> 4005def args: : (<object 1335661> (env (if (null? @) # (car @))))
>  def args: : (<object 1335768> (env (if (null? @) # (car @))))
> def args: : (<object 1335888> (scdr (cdr s)))
> def args: : (<object 1335888> (scddr (cdr scdr)))
> def args: : (<object 1335960> (scdr (cdr s)))
> def args: : (<object 1335960> (scddr (cdr scdr)))
> def args: : (<object 1336032> (scdr (cdr s)))
> def args: : (<object 1336032> (scddr (cdr scdr)))
> def args: : (<object 1336100> (scdr (cdr s)))
> def args: : (<object 1336100> (scddr (cdr scdr)))
> def args: : (<object 1336339> (scdr (cdr s)))
> def args: : (<object 1336339> (scddr (cdr scdr)))
> def args: : (<object 1336411> (scdr (cdr s)))
> def args: : (<object 1336411> (scddr (cdr scdr)))
> def args: : (<object 1336479> (scdr (cdr s)))
> def args: : (<object 1336479> (scddr (cdr scdr)))
> def args: : (<object 1336551> (scdr (cdr s)))
> def args: : (<object 1336551> (scddr (cdr scdr)))
> def args: : (<object 1336619> (scdr (cdr s)))
> def args: : (<object 1336619> (scddr (cdr scdr)))
> def args: : (<object 1336691> (scdr (cdr s)))
> def args: : (<object 1336691> (scddr (cdr scdr)))
> def args: : (<object 1336759> (scdr (cdr s)))
> def args: : (<object 1336759> (scddr (cdr scdr)))
> def args: : (<object 1336831> (scdr (cdr s)))
> def args: : (<object 1336831> (scddr (cdr scdr)))
> def args: : (<object 1336899> (scdr (cdr s)))
> def args: : (<object 1336899> (scddr (cdr scdr)))
> def args: : (<object 1336971> (scdr (cdr s)))
> def args: : (<object 1336971> (scddr (cdr scdr)))
> def args: : (<object 1337039> (scdr (cdr s)))
> def args: : (<object 1337039> (scddr (cdr scdr)))
> def args: : (<object 1337111> (scdr (cdr s)))
> def args: : (<object 1337111> (scddr (cdr scdr)))
> def args: : (<object 1337179> (scdr (cdr s)))
> def args: : (<object 1337179> (scddr (cdr scdr)))
> def args: : (<object 1337251> (scdr (cdr s)))
> def args: : (<object 1337251> (scddr (cdr scdr)))
> def args: : (<object 1337319> (scdr (cdr s)))
> def args: : (<object 1337319> (scddr (cdr scdr)))
> def args: : (<object 1337391> (scdr (cdr s)))
> def args: : (<object 1337391> (scddr (cdr scdr)))
> def args: : (<object 1337459> (scdr (cdr s)))
> def args: : (<object 1337459> (scddr (cdr scdr)))
> def args: : (<object 1337531> (scdr (cdr s)))
> def args: : (<object 1337531> (scddr (cdr scdr)))
> def args: : (<object 1337599> (scdr (cdr s)))
> def args: : (<object 1337599> (scddr (cdr scdr)))
> def args: : (<object 1337671> (scdr (cdr s)))
> def args: : (<object 1337671> (scddr (cdr scdr)))
> def args: : (<object 1337739> (scdr (cdr s)))
> def args: : (<object 1337739> (scddr (cdr scdr)))
> def args: : (<object 1337811> (scdr (cdr s)))
> def args: : (<object 1337811> (scddr (cdr scdr)))
> def args: : (<object 1337879> (scdr (cdr s)))
> def args: : (<object 1337879> (scddr (cdr scdr)))
> def args: : (<object 1337951> (scdr (cdr s)))
> def args: : (<object 1337951> (scddr (cdr scdr)))
> def args: : (<object 1338019> (scdr (cdr s)))
> def args: : (<object 1338019> (scddr (cdr scdr)))
> def args: : (<object 1338091> (scdr (cdr s)))
> def args: : (<object 1338091> (scddr (cdr scdr)))
> def args: : (<object 1338159> (scdr (cdr s)))
> def args: : (<object 1338159> (scddr (cdr scdr)))
> def args: : (<object 1338231> (scdr (cdr s)))
> def args: : (<object 1338231> (scddr (cdr scdr)))
> def args: : (<object 1338299> (scdr (cdr s)))
> def args: : (<object 1338299> (scddr (cdr scdr)))
> def args: : (<object 1338371> (scdr (cdr s)))
> def args: : (<object 1338371> (scddr (cdr scdr)))
> def args: : (<object 1338439> (scdr (cdr s)))
> def args: : (<object 1338439> (scddr (cdr scdr)))
> def args: : (<object 1338511> (scdr (cdr s)))
> def args: : (<object 1338511> (scddr (cdr scdr)))
> def args: : (<object 1338579> (scdr (cdr s)))
> def args: : (<object 1338579> (scddr (cdr scdr)))
> def args: : (<object 1338651> (scdr (cdr s)))
> def args: : (<object 1338651> (scddr (cdr scdr)))
> def args: : (<object 1338719> (scdr (cdr s)))
> def args: : (<object 1338719> (scddr (cdr scdr)))
> def args: : (<object 1338791> (scdr (cdr s)))
> def args: : (<object 1338791> (scddr (cdr scdr)))
> def args: : (<object 1338859> (scdr (cdr s)))
> def args: : (<object 1338859> (scddr (cdr scdr)))
> def args: : (<object 1338931> (scdr (cdr s)))
> def args: : (<object 1338931> (scddr (cdr scdr)))
> def args: : (<object 1338999> (scdr (cdr s)))
> def args: : (<object 1338999> (scddr (cdr scdr)))
> def args: : (<object 1339071> (scdr (cdr s)))
> def args: : (<object 1339071> (scddr (cdr scdr)))
> def args: : (<object 1339139> (scdr (cdr s)))
> def args: : (<object 1339139> (scddr (cdr scdr)))
> def args: : (<object 1339211> (scdr (cdr s)))
> def args: : (<object 1339211> (scddr (cdr scdr)))
> def args: : (<object 1339279> (scdr (cdr s)))
> def args: : (<object 1339279> (scddr (cdr scdr)))
> def args: : (<object 1339351> (scdr (cdr s)))
> def args: : (<object 1339351> (scddr (cdr scdr)))
> def args: : (<object 1339419> (scdr (cdr s)))
> def args: : (<object 1339419> (scddr (cdr scdr)))
> def args: : (<object 1339491> (scdr (cdr s)))
> def args: : (<object 1339491> (scddr (cdr scdr)))
> def args: : (<object 1339559> (scdr (cdr s)))
> def args: : (<object 1339559> (scddr (cdr scdr)))
> def args: : (<object 1339631> (scdr (cdr s)))
> def args: : (<object 1339631> (scddr (cdr scdr)))
> def args: : (<object 1339699> (scdr (cdr s)))
> def args: : (<object 1339699> (scddr (cdr scdr)))
> def args: : (<object 1339771> (scdr (cdr s)))
> def args: : (<object 1339771> (scddr (cdr scdr)))
> def args: : (<object 1339839> (scdr (cdr s)))
> def args: : (<object 1339839> (scddr (cdr scdr)))
> def args: : (<object 1339911> (scdr (cdr s)))
> def args: : (<object 1339911> (scddr (cdr scdr)))
> def args: : (<object 1339979> (scdr (cdr s)))
> def args: : (<object 1339979> (scddr (cdr scdr)))
> def args: : (<object 1340051> (scdr (cdr s)))
> def args: : (<object 1340051> (scddr (cdr scdr)))
> def args: : (<object 1340119> (scdr (cdr s)))
> def args: : (<object 1340119> (scddr (cdr scdr)))
> def args: : (<object 1340191> (scdr (cdr s)))
> def args: : (<object 1340191> (scddr (cdr scdr)))
> def args: : (<object 1340259> (scdr (cdr s)))
> def args: : (<object 1340259> (scddr (cdr scdr)))
> def args: : (<object 1340331> (scdr (cdr s)))
> def args: : (<object 1340331> (scddr (cdr scdr)))
> def args: : (<object 1340399> (scdr (cdr s)))
> def args: : (<object 1340399> (scddr (cdr scdr)))
> def args: : (<object 1340471> (scdr (cdr s)))
> def args: : (<object 1340471> (scddr (cdr scdr)))
> def args: : (<object 1340539> (scdr (cdr s)))
> def args: : (<object 1340539> (scddr (cdr scdr)))
> def args: : (<object 1340611> (scdr (cdr s)))
> def args: : (<object 1340611> (scddr (cdr scdr)))
> def args: : (<object 1340679> (scdr (cdr s)))
> def args: : (<object 1340679> (scddr (cdr scdr)))
> def args: : (<object 1340751> (scdr (cdr s)))
> def args: : (<object 1340751> (scddr (cdr scdr)))
> def args: : (<object 1340819> (scdr (cdr s)))
> def args: : (<object 1340819> (scddr (cdr scdr)))
> def args: : (<object 1340891> (scdr (cdr s)))
> def args: : (<object 1340891> (scddr (cdr scdr)))
> def args: : (<object 1340959> (scdr (cdr s)))
> def args: : (<object 1340959> (scddr (cdr scdr)))
> def args: : (<object 1341031> (scdr (cdr s)))
> def args: : (<object 1341031> (scddr (cdr scdr)))
> def args: : (<object 1341099> (scdr (cdr s)))
> def args: : (<object 1341099> (scddr (cdr scdr)))
> def args: : (<object 1341171> (scdr (cdr s)))
> def args: : (<object 1341171> (scddr (cdr scdr)))
> def args: : (<object 1341239> (scdr (cdr s)))
> def args: : (<object 1341239> (scddr (cdr scdr)))
> def args: : (<object 1341311> (scdr (cdr s)))
> def args: : (<object 1341311> (scddr (cdr scdr)))
> def args: : (<object 1341379> (scdr (cdr s)))
> def args: : (<object 1341379> (scddr (cdr scdr)))
> def args: : (<object 1341451> (scdr (cdr s)))
> def args: : (<object 1341451> (scddr (cdr scdr)))
> def args: : (<object 1341519> (scdr (cdr s)))
> def args: : (<object 1341519> (scddr (cdr scdr)))
> def args: : (<object 1341591> (scdr (cdr s)))
> def args: : (<object 1341591> (scddr (cdr scdr)))
> def args: : (<object 1341659> (scdr (cdr s)))
> def args: : (<object 1341659> (scddr (cdr scdr)))
> def args: : (<object 1341731> (scdr (cdr s)))
> def args: : (<object 1341731> (scddr (cdr scdr)))
> def args: : (<object 1341799> (scdr (cdr s)))
> def args: : (<object 1341799> (scddr (cdr scdr)))
> def args: : (<object 1341871> (scdr (cdr s)))
> def args: : (<object 1341871> (scddr (cdr scdr)))
> def args: : (<object 1341939> (scdr (cdr s)))
> def args: : (<object 1341939> (scddr (cdr scdr)))
> def args: : (<object 1342011> (scdr (cdr s)))
> def args: : (<object 1342011> (scddr (cdr scdr)))
> def args: : (<object 1342079> (scdr (cdr s)))
> def args: : (<object 1342079> (scddr (cdr scdr)))
> def args: : (<object 1342151> (scdr (cdr s)))
> def args: : (<object 1342151> (scddr (cdr scdr)))
> def args: : (<object 1342219> (scdr (cdr s)))
> def args: : (<object 1342219> (scddr (cdr scdr)))
> def args: : (<object 1342291> (scdr (cdr s)))
> def args: : (<object 1342291> (scddr (cdr scdr)))
> def args: : (<object 1342359> (scdr (cdr s)))
> def args: : (<object 1342359> (scddr (cdr scdr)))
> def args: : (<object 1342431> (scdr (cdr s)))
> def args: : (<object 1342431> (scddr (cdr scdr)))
> def args: : (<object 1342499> (scdr (cdr s)))
> def args: : (<object 1342499> (scddr (cdr scdr)))
> def args: : (<object 1342571> (scdr (cdr s)))
> def args: : (<object 1342571> (scddr (cdr scdr)))
> def args: : (<object 1342639> (scdr (cdr s)))
> def args: : (<object 1342639> (scddr (cdr scdr)))
> def args: : (<object 1342711> (scdr (cdr s)))
> def args: : (<object 1342711> (scddr (cdr scdr)))
> def args: : (<object 1342779> (scdr (cdr s)))
> def args: : (<object 1342779> (scddr (cdr scdr)))
> def args: : (<object 1342851> (scdr (cdr s)))
> def args: : (<object 1342851> (scddr (cdr scdr)))
> def args: : (<object 1342919> (scdr (cdr s)))
> def args: : (<object 1342919> (scddr (cdr scdr)))
> def args: : (<object 1342991> (scdr (cdr s)))
> def args: : (<object 1342991> (scddr (cdr scdr)))
> def args: : (<object 1343059> (scdr (cdr s)))
> def args: : (<object 1343059> (scddr (cdr scdr)))
> def args: : (<object 1343131> (scdr (cdr s)))
> def args: : (<object 1343131> (scddr (cdr scdr)))
> def args: : (<object 1343199> (scdr (cdr s)))
> def args: : (<object 1343199> (scddr (cdr scdr)))
> def args: : (<object 1343271> (scdr (cdr s)))
> def args: : (<object 1343271> (scddr (cdr scdr)))
> def args: : (<object 1343339> (scdr (cdr s)))
> def args: : (<object 1343339> (scddr (cdr scdr)))
> def args: : (<object 1343411> (scdr (cdr s)))
> def args: : (<object 1343411> (scddr (cdr scdr)))
> def args: : (<object 1343479> (scdr (cdr s)))
> def args: : (<object 1343479> (scddr (cdr scdr)))
> def args: : (<object 1343551> (scdr (cdr s)))
> def args: : (<object 1343551> (scddr (cdr scdr)))
> def args: : (<object 1343619> (scdr (cdr s)))
> def args: : (<object 1343619> (scddr (cdr scdr)))
> def args: : (<object 1343691> (scdr (cdr s)))
> def args: : (<object 1343691> (scddr (cdr scdr)))
> def args: : (<object 1343759> (scdr (cdr s)))
> def args: : (<object 1343759> (scddr (cdr scdr)))
> def args: : (<object 1343831> (scdr (cdr s)))
> def args: : (<object 1343831> (scddr (cdr scdr)))
> def args: : (<object 1343899> (scdr (cdr s)))
> def args: : (<object 1343899> (scddr (cdr scdr)))
> def args: : (<object 1343971> (scdr (cdr s)))
> def args: : (<object 1343971> (scddr (cdr scdr)))
> def args: : (<object 1344039> (scdr (cdr s)))
> def args: : (<object 1344039> (scddr (cdr scdr)))
> def args: : (<object 1344111> (scdr (cdr s)))
> def args: : (<object 1344111> (scddr (cdr scdr)))
> def args: : (<object 1344179> (scdr (cdr s)))
> def args: : (<object 1344179> (scddr (cdr scdr)))
> def args: : (<object 1344251> (scdr (cdr s)))
> def args: : (<object 1344251> (scddr (cdr scdr)))
> def args: : (<object 1344319> (scdr (cdr s)))
> def args: : (<object 1344319> (scddr (cdr scdr)))
> def args: : (<object 1344391> (scdr (cdr s)))
> def args: : (<object 1344391> (scddr (cdr scdr)))
> def args: : (<object 1344459> (scdr (cdr s)))
> def args: : (<object 1344459> (scddr (cdr scdr)))
> def args: : (<object 1344531> (scdr (cdr s)))
> def args: : (<object 1344531> (scddr (cdr scdr)))
> def args: : (<object 1344599> (scdr (cdr s)))
> def args: : (<object 1344599> (scddr (cdr scdr)))
> def args: : (<object 1344671> (scdr (cdr s)))
> def args: : (<object 1344671> (scddr (cdr scdr)))
> def args: : (<object 1344739> (scdr (cdr s)))
> def args: : (<object 1344739> (scddr (cdr scdr)))
> def args: : (<object 1344811> (scdr (cdr s)))
> def args: : (<object 1344811> (scddr (cdr scdr)))
> def args: : (<object 1344879> (scdr (cdr s)))
> def args: : (<object 1344879> (scddr (cdr scdr)))
> def args: : (<object 1344951> (scdr (cdr s)))
> def args: : (<object 1344951> (scddr (cdr scdr)))
> def args: : (<object 1345019> (scdr (cdr s)))
> def args: : (<object 1345019> (scddr (cdr scdr)))
> def args: : (<object 1345091> (scdr (cdr s)))
> def args: : (<object 1345091> (scddr (cdr scdr)))
> def args: : (<object 1345159> (scdr (cdr s)))
> def args: : (<object 1345159> (scddr (cdr scdr)))
> def args: : (<object 1345231> (scdr (cdr s)))
> def args: : (<object 1345231> (scddr (cdr scdr)))
> def args: : (<object 1345299> (scdr (cdr s)))
> def args: : (<object 1345299> (scddr (cdr scdr)))
> def args: : (<object 1345371> (scdr (cdr s)))
> def args: : (<object 1345371> (scddr (cdr scdr)))
> def args: : (<object 1345439> (scdr (cdr s)))
> def args: : (<object 1345439> (scddr (cdr scdr)))
> def args: : (<object 1345511> (scdr (cdr s)))
> def args: : (<object 1345511> (scddr (cdr scdr)))
> def args: : (<object 1345579> (scdr (cdr s)))
> def args: : (<object 1345579> (scddr (cdr scdr)))
> def args: : (<object 1345651> (scdr (cdr s)))
> def args: : (<object 1345651> (scddr (cdr scdr)))
> def args: : (<object 1345719> (scdr (cdr s)))
> def args: : (<object 1345719> (scddr (cdr scdr)))
> def args: : (<object 1345791> (scdr (cdr s)))
> def args: : (<object 1345791> (scddr (cdr scdr)))
> def args: : (<object 1345859> (scdr (cdr s)))
> def args: : (<object 1345859> (scddr (cdr scdr)))
> def args: : (<object 1345931> (scdr (cdr s)))
> def args: : (<object 1345931> (scddr (cdr scdr)))
> def args: : (<object 1345999> (scdr (cdr s)))
> def args: : (<object 1345999> (scddr (cdr scdr)))
> def args: : (<object 1346071> (scdr (cdr s)))
> def args: : (<object 1346071> (scddr (cdr scdr)))
> def args: : (<object 1346139> (scdr (cdr s)))
> def args: : (<object 1346139> (scddr (cdr scdr)))
> def args: : (<object 1346211> (scdr (cdr s)))
> def args: : (<object 1346211> (scddr (cdr scdr)))
> def args: : (<object 1346279> (scdr (cdr s)))
> def args: : (<object 1346279> (scddr (cdr scdr)))
> def args: : (<object 1346351> (scdr (cdr s)))
> def args: : (<object 1346351> (scddr (cdr scdr)))
> def args: : (<object 1346419> (scdr (cdr s)))
> def args: : (<object 1346419> (scddr (cdr scdr)))
> def args: : (<object 1346491> (scdr (cdr s)))
> def args: : (<object 1346491> (scddr (cdr scdr)))
> def args: : (<object 1346559> (scdr (cdr s)))
> def args: : (<object 1346559> (scddr (cdr scdr)))
> def args: : (<object 1346631> (scdr (cdr s)))
> def args: : (<object 1346631> (scddr (cdr scdr)))
> def args: : (<object 1346699> (scdr (cdr s)))
> def args: : (<object 1346699> (scddr (cdr scdr)))
> def args: : (<object 1346771> (scdr (cdr s)))
> def args: : (<object 1346771> (scddr (cdr scdr)))
> def args: : (<object 1346839> (scdr (cdr s)))
> def args: : (<object 1346839> (scddr (cdr scdr)))
> def args: : (<object 1346911> (scdr (cdr s)))
> def args: : (<object 1346911> (scddr (cdr scdr)))
> def args: : (<object 1346979> (scdr (cdr s)))
> def args: : (<object 1346979> (scddr (cdr scdr)))
> def args: : (<object 1347051> (scdr (cdr s)))
> def args: : (<object 1347051> (scddr (cdr scdr)))
> def args: : (<object 1347119> (scdr (cdr s)))
> def args: : (<object 1347119> (scddr (cdr scdr)))
> def args: : (<object 1347191> (scdr (cdr s)))
> def args: : (<object 1347191> (scddr (cdr scdr)))
> def args: : (<object 1347259> (scdr (cdr s)))
> def args: : (<object 1347259> (scddr (cdr scdr)))
> def args: : (<object 1347331> (scdr (cdr s)))
> def args: : (<object 1347331> (scddr (cdr scdr)))
> def args: : (<object 1347399> (scdr (cdr s)))
> def args: : (<object 1347399> (scddr (cdr scdr)))
> def args: : (<object 1347471> (scdr (cdr s)))
> def args: : (<object 1347471> (scddr (cdr scdr)))
> def args: : (<object 1347539> (scdr (cdr s)))
> def args: : (<object 1347539> (scddr (cdr scdr)))
> def args: : (<object 1347611> (scdr (cdr s)))
> def args: : (<object 1347611> (scddr (cdr scdr)))
> def args: : (<object 1347679> (scdr (cdr s)))
> def args: : (<object 1347679> (scddr (cdr scdr)))
> def args: : (<object 1347751> (scdr (cdr s)))
> def args: : (<object 1347751> (scddr (cdr scdr)))
> def args: : (<object 1347819> (scdr (cdr s)))
> def args: : (<object 1347819> (scddr (cdr scdr)))
> def args: : (<object 1347891> (scdr (cdr s)))
> def args: : (<object 1347891> (scddr (cdr scdr)))
> def args: : (<object 1347959> (scdr (cdr s)))
> def args: : (<object 1347959> (scddr (cdr scdr)))
> def args: : (<object 1348031> (scdr (cdr s)))
> def args: : (<object 1348031> (scddr (cdr scdr)))
> def args: : (<object 1348099> (scdr (cdr s)))
> def args: : (<object 1348099> (scddr (cdr scdr)))
> def args: : (<object 1348171> (scdr (cdr s)))
> def args: : (<object 1348171> (scddr (cdr scdr)))
> def args: : (<object 1348239> (scdr (cdr s)))
> def args: : (<object 1348239> (scddr (cdr scdr)))
> def args: : (<object 1348311> (scdr (cdr s)))
> def args: : (<object 1348311> (scddr (cdr scdr)))
> def args: : (<object 1348379> (scdr (cdr s)))
> def args: : (<object 1348379> (scddr (cdr scdr)))
> def args: : (<object 1348451> (scdr (cdr s)))
> def args: : (<object 1348451> (scddr (cdr scdr)))
> def args: : (<object 1348519> (scdr (cdr s)))
> def args: : (<object 1348519> (scddr (cdr scdr)))
> def args: : (<object 1348591> (scdr (cdr s)))
> def args: : (<object 1348591> (scddr (cdr scdr)))
> 4095def args: : (<object 1364157> (env (if (null? @) # (car @))))
>  def args: : (<object 1364264> (env (if (null? @) # (car @))))
> def args: : (<object 1364384> (scdr (cdr s)))
> def args: : (<object 1364384> (scddr (cdr scdr)))
> def args: : (<object 1364456> (scdr (cdr s)))
> def args: : (<object 1364456> (scddr (cdr scdr)))
> def args: : (<object 1364528> (scdr (cdr s)))
> def args: : (<object 1364528> (scddr (cdr scdr)))
> def args: : (<object 1364596> (scdr (cdr s)))
> def args: : (<object 1364596> (scddr (cdr scdr)))
> def args: : (<object 1364835> (scdr (cdr s)))
> def args: : (<object 1364835> (scddr (cdr scdr)))
> def args: : (<object 1364907> (scdr (cdr s)))
> def args: : (<object 1364907> (scddr (cdr scdr)))
> def args: : (<object 1364975> (scdr (cdr s)))
> def args: : (<object 1364975> (scddr (cdr scdr)))
> def args: : (<object 1365047> (scdr (cdr s)))
> def args: : (<object 1365047> (scddr (cdr scdr)))
> def args: : (<object 1365115> (scdr (cdr s)))
> def args: : (<object 1365115> (scddr (cdr scdr)))
> def args: : (<object 1365187> (scdr (cdr s)))
> def args: : (<object 1365187> (scddr (cdr scdr)))
> def args: : (<object 1365255> (scdr (cdr s)))
> def args: : (<object 1365255> (scddr (cdr scdr)))
> def args: : (<object 1365327> (scdr (cdr s)))
> def args: : (<object 1365327> (scddr (cdr scdr)))
> def args: : (<object 1365395> (scdr (cdr s)))
> def args: : (<object 1365395> (scddr (cdr scdr)))
> def args: : (<object 1365467> (scdr (cdr s)))
> def args: : (<object 1365467> (scddr (cdr scdr)))
> def args: : (<object 1365535> (scdr (cdr s)))
> def args: : (<object 1365535> (scddr (cdr scdr)))
> def args: : (<object 1365607> (scdr (cdr s)))
> def args: : (<object 1365607> (scddr (cdr scdr)))
> def args: : (<object 1365675> (scdr (cdr s)))
> def args: : (<object 1365675> (scddr (cdr scdr)))
> def args: : (<object 1365747> (scdr (cdr s)))
> def args: : (<object 1365747> (scddr (cdr scdr)))
> def args: : (<object 1365815> (scdr (cdr s)))
> def args: : (<object 1365815> (scddr (cdr scdr)))
> def args: : (<object 1365887> (scdr (cdr s)))
> def args: : (<object 1365887> (scddr (cdr scdr)))
> def args: : (<object 1365955> (scdr (cdr s)))
> def args: : (<object 1365955> (scddr (cdr scdr)))
> def args: : (<object 1366027> (scdr (cdr s)))
> def args: : (<object 1366027> (scddr (cdr scdr)))
> def args: : (<object 1366095> (scdr (cdr s)))
> def args: : (<object 1366095> (scddr (cdr scdr)))
> def args: : (<object 1366167> (scdr (cdr s)))
> def args: : (<object 1366167> (scddr (cdr scdr)))
> def args: : (<object 1366235> (scdr (cdr s)))
> def args: : (<object 1366235> (scddr (cdr scdr)))
> def args: : (<object 1366307> (scdr (cdr s)))
> def args: : (<object 1366307> (scddr (cdr scdr)))
> def args: : (<object 1366375> (scdr (cdr s)))
> def args: : (<object 1366375> (scddr (cdr scdr)))
> def args: : (<object 1366447> (scdr (cdr s)))
> def args: : (<object 1366447> (scddr (cdr scdr)))
> def args: : (<object 1366515> (scdr (cdr s)))
> def args: : (<object 1366515> (scddr (cdr scdr)))
> def args: : (<object 1366587> (scdr (cdr s)))
> def args: : (<object 1366587> (scddr (cdr scdr)))
> def args: : (<object 1366655> (scdr (cdr s)))
> def args: : (<object 1366655> (scddr (cdr scdr)))
> def args: : (<object 1366727> (scdr (cdr s)))
> def args: : (<object 1366727> (scddr (cdr scdr)))
> def args: : (<object 1366795> (scdr (cdr s)))
> def args: : (<object 1366795> (scddr (cdr scdr)))
> def args: : (<object 1366867> (scdr (cdr s)))
> def args: : (<object 1366867> (scddr (cdr scdr)))
> def args: : (<object 1366935> (scdr (cdr s)))
> def args: : (<object 1366935> (scddr (cdr scdr)))
> def args: : (<object 1367007> (scdr (cdr s)))
> def args: : (<object 1367007> (scddr (cdr scdr)))
> def args: : (<object 1367075> (scdr (cdr s)))
> def args: : (<object 1367075> (scddr (cdr scdr)))
> def args: : (<object 1367147> (scdr (cdr s)))
> def args: : (<object 1367147> (scddr (cdr scdr)))
> def args: : (<object 1367215> (scdr (cdr s)))
> def args: : (<object 1367215> (scddr (cdr scdr)))
> def args: : (<object 1367287> (scdr (cdr s)))
> def args: : (<object 1367287> (scddr (cdr scdr)))
> def args: : (<object 1367355> (scdr (cdr s)))
> def args: : (<object 1367355> (scddr (cdr scdr)))
> def args: : (<object 1367427> (scdr (cdr s)))
> def args: : (<object 1367427> (scddr (cdr scdr)))
> def args: : (<object 1367495> (scdr (cdr s)))
> def args: : (<object 1367495> (scddr (cdr scdr)))
> def args: : (<object 1367567> (scdr (cdr s)))
> def args: : (<object 1367567> (scddr (cdr scdr)))
> def args: : (<object 1367635> (scdr (cdr s)))
> def args: : (<object 1367635> (scddr (cdr scdr)))
> def args: : (<object 1367707> (scdr (cdr s)))
> def args: : (<object 1367707> (scddr (cdr scdr)))
> def args: : (<object 1367775> (scdr (cdr s)))
> def args: : (<object 1367775> (scddr (cdr scdr)))
> def args: : (<object 1367847> (scdr (cdr s)))
> def args: : (<object 1367847> (scddr (cdr scdr)))
> def args: : (<object 1367915> (scdr (cdr s)))
> def args: : (<object 1367915> (scddr (cdr scdr)))
> def args: : (<object 1367987> (scdr (cdr s)))
> def args: : (<object 1367987> (scddr (cdr scdr)))
> def args: : (<object 1368055> (scdr (cdr s)))
> def args: : (<object 1368055> (scddr (cdr scdr)))
> def args: : (<object 1368127> (scdr (cdr s)))
> def args: : (<object 1368127> (scddr (cdr scdr)))
> def args: : (<object 1368195> (scdr (cdr s)))
> def args: : (<object 1368195> (scddr (cdr scdr)))
> def args: : (<object 1368267> (scdr (cdr s)))
> def args: : (<object 1368267> (scddr (cdr scdr)))
> def args: : (<object 1368335> (scdr (cdr s)))
> def args: : (<object 1368335> (scddr (cdr scdr)))
> def args: : (<object 1368407> (scdr (cdr s)))
> def args: : (<object 1368407> (scddr (cdr scdr)))
> def args: : (<object 1368475> (scdr (cdr s)))
> def args: : (<object 1368475> (scddr (cdr scdr)))
> def args: : (<object 1368547> (scdr (cdr s)))
> def args: : (<object 1368547> (scddr (cdr scdr)))
> def args: : (<object 1368615> (scdr (cdr s)))
> def args: : (<object 1368615> (scddr (cdr scdr)))
> def args: : (<object 1368687> (scdr (cdr s)))
> def args: : (<object 1368687> (scddr (cdr scdr)))
> def args: : (<object 1368755> (scdr (cdr s)))
> def args: : (<object 1368755> (scddr (cdr scdr)))
> def args: : (<object 1368827> (scdr (cdr s)))
> def args: : (<object 1368827> (scddr (cdr scdr)))
> def args: : (<object 1368895> (scdr (cdr s)))
> def args: : (<object 1368895> (scddr (cdr scdr)))
> def args: : (<object 1368967> (scdr (cdr s)))
> def args: : (<object 1368967> (scddr (cdr scdr)))
> def args: : (<object 1369035> (scdr (cdr s)))
> def args: : (<object 1369035> (scddr (cdr scdr)))
> def args: : (<object 1369107> (scdr (cdr s)))
> def args: : (<object 1369107> (scddr (cdr scdr)))
> def args: : (<object 1369175> (scdr (cdr s)))
> def args: : (<object 1369175> (scddr (cdr scdr)))
> def args: : (<object 1369247> (scdr (cdr s)))
> def args: : (<object 1369247> (scddr (cdr scdr)))
> def args: : (<object 1369315> (scdr (cdr s)))
> def args: : (<object 1369315> (scddr (cdr scdr)))
> def args: : (<object 1369387> (scdr (cdr s)))
> def args: : (<object 1369387> (scddr (cdr scdr)))
> def args: : (<object 1369455> (scdr (cdr s)))
> def args: : (<object 1369455> (scddr (cdr scdr)))
> def args: : (<object 1369527> (scdr (cdr s)))
> def args: : (<object 1369527> (scddr (cdr scdr)))
> def args: : (<object 1369595> (scdr (cdr s)))
> def args: : (<object 1369595> (scddr (cdr scdr)))
> def args: : (<object 1369667> (scdr (cdr s)))
> def args: : (<object 1369667> (scddr (cdr scdr)))
> def args: : (<object 1369735> (scdr (cdr s)))
> def args: : (<object 1369735> (scddr (cdr scdr)))
> def args: : (<object 1369807> (scdr (cdr s)))
> def args: : (<object 1369807> (scddr (cdr scdr)))
> def args: : (<object 1369875> (scdr (cdr s)))
> def args: : (<object 1369875> (scddr (cdr scdr)))
> def args: : (<object 1369947> (scdr (cdr s)))
> def args: : (<object 1369947> (scddr (cdr scdr)))
> def args: : (<object 1370015> (scdr (cdr s)))
> def args: : (<object 1370015> (scddr (cdr scdr)))
> def args: : (<object 1370087> (scdr (cdr s)))
> def args: : (<object 1370087> (scddr (cdr scdr)))
> def args: : (<object 1370155> (scdr (cdr s)))
> def args: : (<object 1370155> (scddr (cdr scdr)))
> def args: : (<object 1370227> (scdr (cdr s)))
> def args: : (<object 1370227> (scddr (cdr scdr)))
> def args: : (<object 1370295> (scdr (cdr s)))
> def args: : (<object 1370295> (scddr (cdr scdr)))
> def args: : (<object 1370367> (scdr (cdr s)))
> def args: : (<object 1370367> (scddr (cdr scdr)))
> def args: : (<object 1370435> (scdr (cdr s)))
> def args: : (<object 1370435> (scddr (cdr scdr)))
> def args: : (<object 1370507> (scdr (cdr s)))
> def args: : (<object 1370507> (scddr (cdr scdr)))
> def args: : (<object 1370575> (scdr (cdr s)))
> def args: : (<object 1370575> (scddr (cdr scdr)))
> def args: : (<object 1370647> (scdr (cdr s)))
> def args: : (<object 1370647> (scddr (cdr scdr)))
> def args: : (<object 1370715> (scdr (cdr s)))
> def args: : (<object 1370715> (scddr (cdr scdr)))
> def args: : (<object 1370787> (scdr (cdr s)))
> def args: : (<object 1370787> (scddr (cdr scdr)))
> def args: : (<object 1370855> (scdr (cdr s)))
> def args: : (<object 1370855> (scddr (cdr scdr)))
> def args: : (<object 1370927> (scdr (cdr s)))
> def args: : (<object 1370927> (scddr (cdr scdr)))
> def args: : (<object 1370995> (scdr (cdr s)))
> def args: : (<object 1370995> (scddr (cdr scdr)))
> def args: : (<object 1371067> (scdr (cdr s)))
> def args: : (<object 1371067> (scddr (cdr scdr)))
> def args: : (<object 1371135> (scdr (cdr s)))
> def args: : (<object 1371135> (scddr (cdr scdr)))
> def args: : (<object 1371207> (scdr (cdr s)))
> def args: : (<object 1371207> (scddr (cdr scdr)))
> def args: : (<object 1371275> (scdr (cdr s)))
> def args: : (<object 1371275> (scddr (cdr scdr)))
> def args: : (<object 1371347> (scdr (cdr s)))
> def args: : (<object 1371347> (scddr (cdr scdr)))
> def args: : (<object 1371415> (scdr (cdr s)))
> def args: : (<object 1371415> (scddr (cdr scdr)))
> def args: : (<object 1371487> (scdr (cdr s)))
> def args: : (<object 1371487> (scddr (cdr scdr)))
> def args: : (<object 1371555> (scdr (cdr s)))
> def args: : (<object 1371555> (scddr (cdr scdr)))
> def args: : (<object 1371627> (scdr (cdr s)))
> def args: : (<object 1371627> (scddr (cdr scdr)))
> def args: : (<object 1371695> (scdr (cdr s)))
> def args: : (<object 1371695> (scddr (cdr scdr)))
> def args: : (<object 1371767> (scdr (cdr s)))
> def args: : (<object 1371767> (scddr (cdr scdr)))
> def args: : (<object 1371835> (scdr (cdr s)))
> def args: : (<object 1371835> (scddr (cdr scdr)))
> def args: : (<object 1371907> (scdr (cdr s)))
> def args: : (<object 1371907> (scddr (cdr scdr)))
> def args: : (<object 1371975> (scdr (cdr s)))
> def args: : (<object 1371975> (scddr (cdr scdr)))
> def args: : (<object 1372047> (scdr (cdr s)))
> def args: : (<object 1372047> (scddr (cdr scdr)))
> def args: : (<object 1372115> (scdr (cdr s)))
> def args: : (<object 1372115> (scddr (cdr scdr)))
> def args: : (<object 1372187> (scdr (cdr s)))
> def args: : (<object 1372187> (scddr (cdr scdr)))
> def args: : (<object 1372255> (scdr (cdr s)))
> def args: : (<object 1372255> (scddr (cdr scdr)))
> def args: : (<object 1372327> (scdr (cdr s)))
> def args: : (<object 1372327> (scddr (cdr scdr)))
> def args: : (<object 1372395> (scdr (cdr s)))
> def args: : (<object 1372395> (scddr (cdr scdr)))
> def args: : (<object 1372467> (scdr (cdr s)))
> def args: : (<object 1372467> (scddr (cdr scdr)))
> def args: : (<object 1372535> (scdr (cdr s)))
> def args: : (<object 1372535> (scddr (cdr scdr)))
> def args: : (<object 1372607> (scdr (cdr s)))
> def args: : (<object 1372607> (scddr (cdr scdr)))
> def args: : (<object 1372675> (scdr (cdr s)))
> def args: : (<object 1372675> (scddr (cdr scdr)))
> def args: : (<object 1372747> (scdr (cdr s)))
> def args: : (<object 1372747> (scddr (cdr scdr)))
> def args: : (<object 1372815> (scdr (cdr s)))
> def args: : (<object 1372815> (scddr (cdr scdr)))
> def args: : (<object 1372887> (scdr (cdr s)))
> def args: : (<object 1372887> (scddr (cdr scdr)))
> def args: : (<object 1372955> (scdr (cdr s)))
> def args: : (<object 1372955> (scddr (cdr scdr)))
> def args: : (<object 1373027> (scdr (cdr s)))
> def args: : (<object 1373027> (scddr (cdr scdr)))
> def args: : (<object 1373095> (scdr (cdr s)))
> def args: : (<object 1373095> (scddr (cdr scdr)))
> def args: : (<object 1373167> (scdr (cdr s)))
> def args: : (<object 1373167> (scddr (cdr scdr)))
> def args: : (<object 1373235> (scdr (cdr s)))
> def args: : (<object 1373235> (scddr (cdr scdr)))
> def args: : (<object 1373307> (scdr (cdr s)))
> def args: : (<object 1373307> (scddr (cdr scdr)))
> def args: : (<object 1373375> (scdr (cdr s)))
> def args: : (<object 1373375> (scddr (cdr scdr)))
> def args: : (<object 1373447> (scdr (cdr s)))
> def args: : (<object 1373447> (scddr (cdr scdr)))
> def args: : (<object 1373515> (scdr (cdr s)))
> def args: : (<object 1373515> (scddr (cdr scdr)))
> def args: : (<object 1373587> (scdr (cdr s)))
> def args: : (<object 1373587> (scddr (cdr scdr)))
> def args: : (<object 1373655> (scdr (cdr s)))
> def args: : (<object 1373655> (scddr (cdr scdr)))
> def args: : (<object 1373727> (scdr (cdr s)))
> def args: : (<object 1373727> (scddr (cdr scdr)))
> def args: : (<object 1373795> (scdr (cdr s)))
> def args: : (<object 1373795> (scddr (cdr scdr)))
> def args: : (<object 1373867> (scdr (cdr s)))
> def args: : (<object 1373867> (scddr (cdr scdr)))
> def args: : (<object 1373935> (scdr (cdr s)))
> def args: : (<object 1373935> (scddr (cdr scdr)))
> def args: : (<object 1374007> (scdr (cdr s)))
> def args: : (<object 1374007> (scddr (cdr scdr)))
> def args: : (<object 1374075> (scdr (cdr s)))
> def args: : (<object 1374075> (scddr (cdr scdr)))
> def args: : (<object 1374147> (scdr (cdr s)))
> def args: : (<object 1374147> (scddr (cdr scdr)))
> def args: : (<object 1374215> (scdr (cdr s)))
> def args: : (<object 1374215> (scddr (cdr scdr)))
> def args: : (<object 1374287> (scdr (cdr s)))
> def args: : (<object 1374287> (scddr (cdr scdr)))
> def args: : (<object 1374355> (scdr (cdr s)))
> def args: : (<object 1374355> (scddr (cdr scdr)))
> def args: : (<object 1374427> (scdr (cdr s)))
> def args: : (<object 1374427> (scddr (cdr scdr)))
> def args: : (<object 1374495> (scdr (cdr s)))
> def args: : (<object 1374495> (scddr (cdr scdr)))
> def args: : (<object 1374567> (scdr (cdr s)))
> def args: : (<object 1374567> (scddr (cdr scdr)))
> def args: : (<object 1374635> (scdr (cdr s)))
> def args: : (<object 1374635> (scddr (cdr scdr)))
> def args: : (<object 1374707> (scdr (cdr s)))
> def args: : (<object 1374707> (scddr (cdr scdr)))
> def args: : (<object 1374775> (scdr (cdr s)))
> def args: : (<object 1374775> (scddr (cdr scdr)))
> def args: : (<object 1374847> (scdr (cdr s)))
> def args: : (<object 1374847> (scddr (cdr scdr)))
> def args: : (<object 1374915> (scdr (cdr s)))
> def args: : (<object 1374915> (scddr (cdr scdr)))
> def args: : (<object 1374987> (scdr (cdr s)))
> def args: : (<object 1374987> (scddr (cdr scdr)))
> def args: : (<object 1375055> (scdr (cdr s)))
> def args: : (<object 1375055> (scddr (cdr scdr)))
> def args: : (<object 1375127> (scdr (cdr s)))
> def args: : (<object 1375127> (scddr (cdr scdr)))
> def args: : (<object 1375195> (scdr (cdr s)))
> def args: : (<object 1375195> (scddr (cdr scdr)))
> def args: : (<object 1375267> (scdr (cdr s)))
> def args: : (<object 1375267> (scddr (cdr scdr)))
> def args: : (<object 1375335> (scdr (cdr s)))
> def args: : (<object 1375335> (scddr (cdr scdr)))
> def args: : (<object 1375407> (scdr (cdr s)))
> def args: : (<object 1375407> (scddr (cdr scdr)))
> def args: : (<object 1375475> (scdr (cdr s)))
> def args: : (<object 1375475> (scddr (cdr scdr)))
> def args: : (<object 1375547> (scdr (cdr s)))
> def args: : (<object 1375547> (scddr (cdr scdr)))
> def args: : (<object 1375615> (scdr (cdr s)))
> def args: : (<object 1375615> (scddr (cdr scdr)))
> def args: : (<object 1375687> (scdr (cdr s)))
> def args: : (<object 1375687> (scddr (cdr scdr)))
> def args: : (<object 1375755> (scdr (cdr s)))
> def args: : (<object 1375755> (scddr (cdr scdr)))
> def args: : (<object 1375827> (scdr (cdr s)))
> def args: : (<object 1375827> (scddr (cdr scdr)))
> def args: : (<object 1375895> (scdr (cdr s)))
> def args: : (<object 1375895> (scddr (cdr scdr)))
> def args: : (<object 1375967> (scdr (cdr s)))
> def args: : (<object 1375967> (scddr (cdr scdr)))
> def args: : (<object 1376035> (scdr (cdr s)))
> def args: : (<object 1376035> (scddr (cdr scdr)))
> def args: : (<object 1376107> (scdr (cdr s)))
> def args: : (<object 1376107> (scddr (cdr scdr)))
> def args: : (<object 1376175> (scdr (cdr s)))
> def args: : (<object 1376175> (scddr (cdr scdr)))
> def args: : (<object 1376247> (scdr (cdr s)))
> def args: : (<object 1376247> (scddr (cdr scdr)))
> def args: : (<object 1376315> (scdr (cdr s)))
> def args: : (<object 1376315> (scddr (cdr scdr)))
> def args: : (<object 1376387> (scdr (cdr s)))
> def args: : (<object 1376387> (scddr (cdr scdr)))
> def args: : (<object 1376455> (scdr (cdr s)))
> def args: : (<object 1376455> (scddr (cdr scdr)))
> def args: : (<object 1376527> (scdr (cdr s)))
> def args: : (<object 1376527> (scddr (cdr scdr)))
> def args: : (<object 1376595> (scdr (cdr s)))
> def args: : (<object 1376595> (scddr (cdr scdr)))
> def args: : (<object 1376667> (scdr (cdr s)))
> def args: : (<object 1376667> (scddr (cdr scdr)))
> def args: : (<object 1376735> (scdr (cdr s)))
> def args: : (<object 1376735> (scddr (cdr scdr)))
> def args: : (<object 1376807> (scdr (cdr s)))
> def args: : (<object 1376807> (scddr (cdr scdr)))
> def args: : (<object 1376875> (scdr (cdr s)))
> def args: : (<object 1376875> (scddr (cdr scdr)))
> def args: : (<object 1376947> (scdr (cdr s)))
> def args: : (<object 1376947> (scddr (cdr scdr)))
> def args: : (<object 1377015> (scdr (cdr s)))
> def args: : (<object 1377015> (scddr (cdr scdr)))
> def args: : (<object 1377087> (scdr (cdr s)))
> def args: : (<object 1377087> (scddr (cdr scdr)))
> def args: : (<object 1377155> (scdr (cdr s)))
> def args: : (<object 1377155> (scddr (cdr scdr)))
> def args: : (<object 1377227> (scdr (cdr s)))
> def args: : (<object 1377227> (scddr (cdr scdr)))
> 4186def args: : (<object 1392964> (env (if (null? @) # (car @))))
>  def args: : (<object 1393071> (env (if (null? @) # (car @))))
> def args: : (<object 1393191> (scdr (cdr s)))
> def args: : (<object 1393191> (scddr (cdr scdr)))
> def args: : (<object 1393263> (scdr (cdr s)))
> def args: : (<object 1393263> (scddr (cdr scdr)))
> def args: : (<object 1393335> (scdr (cdr s)))
> def args: : (<object 1393335> (scddr (cdr scdr)))
> def args: : (<object 1393403> (scdr (cdr s)))
> def args: : (<object 1393403> (scddr (cdr scdr)))
> def args: : (<object 1393642> (scdr (cdr s)))
> def args: : (<object 1393642> (scddr (cdr scdr)))
> def args: : (<object 1393714> (scdr (cdr s)))
> def args: : (<object 1393714> (scddr (cdr scdr)))
> def args: : (<object 1393782> (scdr (cdr s)))
> def args: : (<object 1393782> (scddr (cdr scdr)))
> def args: : (<object 1393854> (scdr (cdr s)))
> def args: : (<object 1393854> (scddr (cdr scdr)))
> def args: : (<object 1393922> (scdr (cdr s)))
> def args: : (<object 1393922> (scddr (cdr scdr)))
> def args: : (<object 1393994> (scdr (cdr s)))
> def args: : (<object 1393994> (scddr (cdr scdr)))
> def args: : (<object 1394062> (scdr (cdr s)))
> def args: : (<object 1394062> (scddr (cdr scdr)))
> def args: : (<object 1394134> (scdr (cdr s)))
> def args: : (<object 1394134> (scddr (cdr scdr)))
> def args: : (<object 1394202> (scdr (cdr s)))
> def args: : (<object 1394202> (scddr (cdr scdr)))
> def args: : (<object 1394274> (scdr (cdr s)))
> def args: : (<object 1394274> (scddr (cdr scdr)))
> def args: : (<object 1394342> (scdr (cdr s)))
> def args: : (<object 1394342> (scddr (cdr scdr)))
> def args: : (<object 1394414> (scdr (cdr s)))
> def args: : (<object 1394414> (scddr (cdr scdr)))
> def args: : (<object 1394482> (scdr (cdr s)))
> def args: : (<object 1394482> (scddr (cdr scdr)))
> def args: : (<object 1394554> (scdr (cdr s)))
> def args: : (<object 1394554> (scddr (cdr scdr)))
> def args: : (<object 1394622> (scdr (cdr s)))
> def args: : (<object 1394622> (scddr (cdr scdr)))
> def args: : (<object 1394694> (scdr (cdr s)))
> def args: : (<object 1394694> (scddr (cdr scdr)))
> def args: : (<object 1394762> (scdr (cdr s)))
> def args: : (<object 1394762> (scddr (cdr scdr)))
> def args: : (<object 1394834> (scdr (cdr s)))
> def args: : (<object 1394834> (scddr (cdr scdr)))
> def args: : (<object 1394902> (scdr (cdr s)))
> def args: : (<object 1394902> (scddr (cdr scdr)))
> def args: : (<object 1394974> (scdr (cdr s)))
> def args: : (<object 1394974> (scddr (cdr scdr)))
> def args: : (<object 1395042> (scdr (cdr s)))
> def args: : (<object 1395042> (scddr (cdr scdr)))
> def args: : (<object 1395114> (scdr (cdr s)))
> def args: : (<object 1395114> (scddr (cdr scdr)))
> def args: : (<object 1395182> (scdr (cdr s)))
> def args: : (<object 1395182> (scddr (cdr scdr)))
> def args: : (<object 1395254> (scdr (cdr s)))
> def args: : (<object 1395254> (scddr (cdr scdr)))
> def args: : (<object 1395322> (scdr (cdr s)))
> def args: : (<object 1395322> (scddr (cdr scdr)))
> def args: : (<object 1395394> (scdr (cdr s)))
> def args: : (<object 1395394> (scddr (cdr scdr)))
> def args: : (<object 1395462> (scdr (cdr s)))
> def args: : (<object 1395462> (scddr (cdr scdr)))
> def args: : (<object 1395534> (scdr (cdr s)))
> def args: : (<object 1395534> (scddr (cdr scdr)))
> def args: : (<object 1395602> (scdr (cdr s)))
> def args: : (<object 1395602> (scddr (cdr scdr)))
> def args: : (<object 1395674> (scdr (cdr s)))
> def args: : (<object 1395674> (scddr (cdr scdr)))
> def args: : (<object 1395742> (scdr (cdr s)))
> def args: : (<object 1395742> (scddr (cdr scdr)))
> def args: : (<object 1395814> (scdr (cdr s)))
> def args: : (<object 1395814> (scddr (cdr scdr)))
> def args: : (<object 1395882> (scdr (cdr s)))
> def args: : (<object 1395882> (scddr (cdr scdr)))
> def args: : (<object 1395954> (scdr (cdr s)))
> def args: : (<object 1395954> (scddr (cdr scdr)))
> def args: : (<object 1396022> (scdr (cdr s)))
> def args: : (<object 1396022> (scddr (cdr scdr)))
> def args: : (<object 1396094> (scdr (cdr s)))
> def args: : (<object 1396094> (scddr (cdr scdr)))
> def args: : (<object 1396162> (scdr (cdr s)))
> def args: : (<object 1396162> (scddr (cdr scdr)))
> def args: : (<object 1396234> (scdr (cdr s)))
> def args: : (<object 1396234> (scddr (cdr scdr)))
> def args: : (<object 1396302> (scdr (cdr s)))
> def args: : (<object 1396302> (scddr (cdr scdr)))
> def args: : (<object 1396374> (scdr (cdr s)))
> def args: : (<object 1396374> (scddr (cdr scdr)))
> def args: : (<object 1396442> (scdr (cdr s)))
> def args: : (<object 1396442> (scddr (cdr scdr)))
> def args: : (<object 1396514> (scdr (cdr s)))
> def args: : (<object 1396514> (scddr (cdr scdr)))
> def args: : (<object 1396582> (scdr (cdr s)))
> def args: : (<object 1396582> (scddr (cdr scdr)))
> def args: : (<object 1396654> (scdr (cdr s)))
> def args: : (<object 1396654> (scddr (cdr scdr)))
> def args: : (<object 1396722> (scdr (cdr s)))
> def args: : (<object 1396722> (scddr (cdr scdr)))
> def args: : (<object 1396794> (scdr (cdr s)))
> def args: : (<object 1396794> (scddr (cdr scdr)))
> def args: : (<object 1396862> (scdr (cdr s)))
> def args: : (<object 1396862> (scddr (cdr scdr)))
> def args: : (<object 1396934> (scdr (cdr s)))
> def args: : (<object 1396934> (scddr (cdr scdr)))
> def args: : (<object 1397002> (scdr (cdr s)))
> def args: : (<object 1397002> (scddr (cdr scdr)))
> def args: : (<object 1397074> (scdr (cdr s)))
> def args: : (<object 1397074> (scddr (cdr scdr)))
> def args: : (<object 1397142> (scdr (cdr s)))
> def args: : (<object 1397142> (scddr (cdr scdr)))
> def args: : (<object 1397214> (scdr (cdr s)))
> def args: : (<object 1397214> (scddr (cdr scdr)))
> def args: : (<object 1397282> (scdr (cdr s)))
> def args: : (<object 1397282> (scddr (cdr scdr)))
> def args: : (<object 1397354> (scdr (cdr s)))
> def args: : (<object 1397354> (scddr (cdr scdr)))
> def args: : (<object 1397422> (scdr (cdr s)))
> def args: : (<object 1397422> (scddr (cdr scdr)))
> def args: : (<object 1397494> (scdr (cdr s)))
> def args: : (<object 1397494> (scddr (cdr scdr)))
> def args: : (<object 1397562> (scdr (cdr s)))
> def args: : (<object 1397562> (scddr (cdr scdr)))
> def args: : (<object 1397634> (scdr (cdr s)))
> def args: : (<object 1397634> (scddr (cdr scdr)))
> def args: : (<object 1397702> (scdr (cdr s)))
> def args: : (<object 1397702> (scddr (cdr scdr)))
> def args: : (<object 1397774> (scdr (cdr s)))
> def args: : (<object 1397774> (scddr (cdr scdr)))
> def args: : (<object 1397842> (scdr (cdr s)))
> def args: : (<object 1397842> (scddr (cdr scdr)))
> def args: : (<object 1397914> (scdr (cdr s)))
> def args: : (<object 1397914> (scddr (cdr scdr)))
> def args: : (<object 1397982> (scdr (cdr s)))
> def args: : (<object 1397982> (scddr (cdr scdr)))
> def args: : (<object 1398054> (scdr (cdr s)))
> def args: : (<object 1398054> (scddr (cdr scdr)))
> def args: : (<object 1398122> (scdr (cdr s)))
> def args: : (<object 1398122> (scddr (cdr scdr)))
> def args: : (<object 1398194> (scdr (cdr s)))
> def args: : (<object 1398194> (scddr (cdr scdr)))
> def args: : (<object 1398262> (scdr (cdr s)))
> def args: : (<object 1398262> (scddr (cdr scdr)))
> def args: : (<object 1398334> (scdr (cdr s)))
> def args: : (<object 1398334> (scddr (cdr scdr)))
> def args: : (<object 1398402> (scdr (cdr s)))
> def args: : (<object 1398402> (scddr (cdr scdr)))
> def args: : (<object 1398474> (scdr (cdr s)))
> def args: : (<object 1398474> (scddr (cdr scdr)))
> def args: : (<object 1398542> (scdr (cdr s)))
> def args: : (<object 1398542> (scddr (cdr scdr)))
> def args: : (<object 1398614> (scdr (cdr s)))
> def args: : (<object 1398614> (scddr (cdr scdr)))
> def args: : (<object 1398682> (scdr (cdr s)))
> def args: : (<object 1398682> (scddr (cdr scdr)))
> def args: : (<object 1398754> (scdr (cdr s)))
> def args: : (<object 1398754> (scddr (cdr scdr)))
> def args: : (<object 1398822> (scdr (cdr s)))
> def args: : (<object 1398822> (scddr (cdr scdr)))
> def args: : (<object 1398894> (scdr (cdr s)))
> def args: : (<object 1398894> (scddr (cdr scdr)))
> def args: : (<object 1398962> (scdr (cdr s)))
> def args: : (<object 1398962> (scddr (cdr scdr)))
> def args: : (<object 1399034> (scdr (cdr s)))
> def args: : (<object 1399034> (scddr (cdr scdr)))
> def args: : (<object 1399102> (scdr (cdr s)))
> def args: : (<object 1399102> (scddr (cdr scdr)))
> def args: : (<object 1399174> (scdr (cdr s)))
> def args: : (<object 1399174> (scddr (cdr scdr)))
> def args: : (<object 1399242> (scdr (cdr s)))
> def args: : (<object 1399242> (scddr (cdr scdr)))
> def args: : (<object 1399314> (scdr (cdr s)))
> def args: : (<object 1399314> (scddr (cdr scdr)))
> def args: : (<object 1399382> (scdr (cdr s)))
> def args: : (<object 1399382> (scddr (cdr scdr)))
> def args: : (<object 1399454> (scdr (cdr s)))
> def args: : (<object 1399454> (scddr (cdr scdr)))
> def args: : (<object 1399522> (scdr (cdr s)))
> def args: : (<object 1399522> (scddr (cdr scdr)))
> def args: : (<object 1399594> (scdr (cdr s)))
> def args: : (<object 1399594> (scddr (cdr scdr)))
> def args: : (<object 1399662> (scdr (cdr s)))
> def args: : (<object 1399662> (scddr (cdr scdr)))
> def args: : (<object 1399734> (scdr (cdr s)))
> def args: : (<object 1399734> (scddr (cdr scdr)))
> def args: : (<object 1399802> (scdr (cdr s)))
> def args: : (<object 1399802> (scddr (cdr scdr)))
> def args: : (<object 1399874> (scdr (cdr s)))
> def args: : (<object 1399874> (scddr (cdr scdr)))
> def args: : (<object 1399942> (scdr (cdr s)))
> def args: : (<object 1399942> (scddr (cdr scdr)))
> def args: : (<object 1400014> (scdr (cdr s)))
> def args: : (<object 1400014> (scddr (cdr scdr)))
> def args: : (<object 1400082> (scdr (cdr s)))
> def args: : (<object 1400082> (scddr (cdr scdr)))
> def args: : (<object 1400154> (scdr (cdr s)))
> def args: : (<object 1400154> (scddr (cdr scdr)))
> def args: : (<object 1400222> (scdr (cdr s)))
> def args: : (<object 1400222> (scddr (cdr scdr)))
> def args: : (<object 1400294> (scdr (cdr s)))
> def args: : (<object 1400294> (scddr (cdr scdr)))
> def args: : (<object 1400362> (scdr (cdr s)))
> def args: : (<object 1400362> (scddr (cdr scdr)))
> def args: : (<object 1400434> (scdr (cdr s)))
> def args: : (<object 1400434> (scddr (cdr scdr)))
> def args: : (<object 1400502> (scdr (cdr s)))
> def args: : (<object 1400502> (scddr (cdr scdr)))
> def args: : (<object 1400574> (scdr (cdr s)))
> def args: : (<object 1400574> (scddr (cdr scdr)))
> def args: : (<object 1400642> (scdr (cdr s)))
> def args: : (<object 1400642> (scddr (cdr scdr)))
> def args: : (<object 1400714> (scdr (cdr s)))
> def args: : (<object 1400714> (scddr (cdr scdr)))
> def args: : (<object 1400782> (scdr (cdr s)))
> def args: : (<object 1400782> (scddr (cdr scdr)))
> def args: : (<object 1400854> (scdr (cdr s)))
> def args: : (<object 1400854> (scddr (cdr scdr)))
> def args: : (<object 1400922> (scdr (cdr s)))
> def args: : (<object 1400922> (scddr (cdr scdr)))
> def args: : (<object 1400994> (scdr (cdr s)))
> def args: : (<object 1400994> (scddr (cdr scdr)))
> def args: : (<object 1401062> (scdr (cdr s)))
> def args: : (<object 1401062> (scddr (cdr scdr)))
> def args: : (<object 1401134> (scdr (cdr s)))
> def args: : (<object 1401134> (scddr (cdr scdr)))
> def args: : (<object 1401202> (scdr (cdr s)))
> def args: : (<object 1401202> (scddr (cdr scdr)))
> def args: : (<object 1401274> (scdr (cdr s)))
> def args: : (<object 1401274> (scddr (cdr scdr)))
> def args: : (<object 1401342> (scdr (cdr s)))
> def args: : (<object 1401342> (scddr (cdr scdr)))
> def args: : (<object 1401414> (scdr (cdr s)))
> def args: : (<object 1401414> (scddr (cdr scdr)))
> def args: : (<object 1401482> (scdr (cdr s)))
> def args: : (<object 1401482> (scddr (cdr scdr)))
> def args: : (<object 1401554> (scdr (cdr s)))
> def args: : (<object 1401554> (scddr (cdr scdr)))
> def args: : (<object 1401622> (scdr (cdr s)))
> def args: : (<object 1401622> (scddr (cdr scdr)))
> def args: : (<object 1401694> (scdr (cdr s)))
> def args: : (<object 1401694> (scddr (cdr scdr)))
> def args: : (<object 1401762> (scdr (cdr s)))
> def args: : (<object 1401762> (scddr (cdr scdr)))
> def args: : (<object 1401834> (scdr (cdr s)))
> def args: : (<object 1401834> (scddr (cdr scdr)))
> def args: : (<object 1401902> (scdr (cdr s)))
> def args: : (<object 1401902> (scddr (cdr scdr)))
> def args: : (<object 1401974> (scdr (cdr s)))
> def args: : (<object 1401974> (scddr (cdr scdr)))
> def args: : (<object 1402042> (scdr (cdr s)))
> def args: : (<object 1402042> (scddr (cdr scdr)))
> def args: : (<object 1402114> (scdr (cdr s)))
> def args: : (<object 1402114> (scddr (cdr scdr)))
> def args: : (<object 1402182> (scdr (cdr s)))
> def args: : (<object 1402182> (scddr (cdr scdr)))
> def args: : (<object 1402254> (scdr (cdr s)))
> def args: : (<object 1402254> (scddr (cdr scdr)))
> def args: : (<object 1402322> (scdr (cdr s)))
> def args: : (<object 1402322> (scddr (cdr scdr)))
> def args: : (<object 1402394> (scdr (cdr s)))
> def args: : (<object 1402394> (scddr (cdr scdr)))
> def args: : (<object 1402462> (scdr (cdr s)))
> def args: : (<object 1402462> (scddr (cdr scdr)))
> def args: : (<object 1402534> (scdr (cdr s)))
> def args: : (<object 1402534> (scddr (cdr scdr)))
> def args: : (<object 1402602> (scdr (cdr s)))
> def args: : (<object 1402602> (scddr (cdr scdr)))
> def args: : (<object 1402674> (scdr (cdr s)))
> def args: : (<object 1402674> (scddr (cdr scdr)))
> def args: : (<object 1402742> (scdr (cdr s)))
> def args: : (<object 1402742> (scddr (cdr scdr)))
> def args: : (<object 1402814> (scdr (cdr s)))
> def args: : (<object 1402814> (scddr (cdr scdr)))
> def args: : (<object 1402882> (scdr (cdr s)))
> def args: : (<object 1402882> (scddr (cdr scdr)))
> def args: : (<object 1402954> (scdr (cdr s)))
> def args: : (<object 1402954> (scddr (cdr scdr)))
> def args: : (<object 1403022> (scdr (cdr s)))
> def args: : (<object 1403022> (scddr (cdr scdr)))
> def args: : (<object 1403094> (scdr (cdr s)))
> def args: : (<object 1403094> (scddr (cdr scdr)))
> def args: : (<object 1403162> (scdr (cdr s)))
> def args: : (<object 1403162> (scddr (cdr scdr)))
> def args: : (<object 1403234> (scdr (cdr s)))
> def args: : (<object 1403234> (scddr (cdr scdr)))
> def args: : (<object 1403302> (scdr (cdr s)))
> def args: : (<object 1403302> (scddr (cdr scdr)))
> def args: : (<object 1403374> (scdr (cdr s)))
> def args: : (<object 1403374> (scddr (cdr scdr)))
> def args: : (<object 1403442> (scdr (cdr s)))
> def args: : (<object 1403442> (scddr (cdr scdr)))
> def args: : (<object 1403514> (scdr (cdr s)))
> def args: : (<object 1403514> (scddr (cdr scdr)))
> def args: : (<object 1403582> (scdr (cdr s)))
> def args: : (<object 1403582> (scddr (cdr scdr)))
> def args: : (<object 1403654> (scdr (cdr s)))
> def args: : (<object 1403654> (scddr (cdr scdr)))
> def args: : (<object 1403722> (scdr (cdr s)))
> def args: : (<object 1403722> (scddr (cdr scdr)))
> def args: : (<object 1403794> (scdr (cdr s)))
> def args: : (<object 1403794> (scddr (cdr scdr)))
> def args: : (<object 1403862> (scdr (cdr s)))
> def args: : (<object 1403862> (scddr (cdr scdr)))
> def args: : (<object 1403934> (scdr (cdr s)))
> def args: : (<object 1403934> (scddr (cdr scdr)))
> def args: : (<object 1404002> (scdr (cdr s)))
> def args: : (<object 1404002> (scddr (cdr scdr)))
> def args: : (<object 1404074> (scdr (cdr s)))
> def args: : (<object 1404074> (scddr (cdr scdr)))
> def args: : (<object 1404142> (scdr (cdr s)))
> def args: : (<object 1404142> (scddr (cdr scdr)))
> def args: : (<object 1404214> (scdr (cdr s)))
> def args: : (<object 1404214> (scddr (cdr scdr)))
> def args: : (<object 1404282> (scdr (cdr s)))
> def args: : (<object 1404282> (scddr (cdr scdr)))
> def args: : (<object 1404354> (scdr (cdr s)))
> def args: : (<object 1404354> (scddr (cdr scdr)))
> def args: : (<object 1404422> (scdr (cdr s)))
> def args: : (<object 1404422> (scddr (cdr scdr)))
> def args: : (<object 1404494> (scdr (cdr s)))
> def args: : (<object 1404494> (scddr (cdr scdr)))
> def args: : (<object 1404562> (scdr (cdr s)))
> def args: : (<object 1404562> (scddr (cdr scdr)))
> def args: : (<object 1404634> (scdr (cdr s)))
> def args: : (<object 1404634> (scddr (cdr scdr)))
> def args: : (<object 1404702> (scdr (cdr s)))
> def args: : (<object 1404702> (scddr (cdr scdr)))
> def args: : (<object 1404774> (scdr (cdr s)))
> def args: : (<object 1404774> (scddr (cdr scdr)))
> def args: : (<object 1404842> (scdr (cdr s)))
> def args: : (<object 1404842> (scddr (cdr scdr)))
> def args: : (<object 1404914> (scdr (cdr s)))
> def args: : (<object 1404914> (scddr (cdr scdr)))
> def args: : (<object 1404982> (scdr (cdr s)))
> def args: : (<object 1404982> (scddr (cdr scdr)))
> def args: : (<object 1405054> (scdr (cdr s)))
> def args: : (<object 1405054> (scddr (cdr scdr)))
> def args: : (<object 1405122> (scdr (cdr s)))
> def args: : (<object 1405122> (scddr (cdr scdr)))
> def args: : (<object 1405194> (scdr (cdr s)))
> def args: : (<object 1405194> (scddr (cdr scdr)))
> def args: : (<object 1405262> (scdr (cdr s)))
> def args: : (<object 1405262> (scddr (cdr scdr)))
> def args: : (<object 1405334> (scdr (cdr s)))
> def args: : (<object 1405334> (scddr (cdr scdr)))
> def args: : (<object 1405402> (scdr (cdr s)))
> def args: : (<object 1405402> (scddr (cdr scdr)))
> def args: : (<object 1405474> (scdr (cdr s)))
> def args: : (<object 1405474> (scddr (cdr scdr)))
> def args: : (<object 1405542> (scdr (cdr s)))
> def args: : (<object 1405542> (scddr (cdr scdr)))
> def args: : (<object 1405614> (scdr (cdr s)))
> def args: : (<object 1405614> (scddr (cdr scdr)))
> def args: : (<object 1405682> (scdr (cdr s)))
> def args: : (<object 1405682> (scddr (cdr scdr)))
> def args: : (<object 1405754> (scdr (cdr s)))
> def args: : (<object 1405754> (scddr (cdr scdr)))
> def args: : (<object 1405822> (scdr (cdr s)))
> def args: : (<object 1405822> (scddr (cdr scdr)))
> def args: : (<object 1405894> (scdr (cdr s)))
> def args: : (<object 1405894> (scddr (cdr scdr)))
> def args: : (<object 1405962> (scdr (cdr s)))
> def args: : (<object 1405962> (scddr (cdr scdr)))
> def args: : (<object 1406034> (scdr (cdr s)))
> def args: : (<object 1406034> (scddr (cdr scdr)))
> def args: : (<object 1406102> (scdr (cdr s)))
> def args: : (<object 1406102> (scddr (cdr scdr)))
> def args: : (<object 1406174> (scdr (cdr s)))
> def args: : (<object 1406174> (scddr (cdr scdr)))
> 4278def args: : (<object 1422082> (env (if (null? @) # (car @))))
>  def args: : (<object 1422189> (env (if (null? @) # (car @))))
> def args: : (<object 1422309> (scdr (cdr s)))
> def args: : (<object 1422309> (scddr (cdr scdr)))
> def args: : (<object 1422381> (scdr (cdr s)))
> def args: : (<object 1422381> (scddr (cdr scdr)))
> def args: : (<object 1422453> (scdr (cdr s)))
> def args: : (<object 1422453> (scddr (cdr scdr)))
> def args: : (<object 1422521> (scdr (cdr s)))
> def args: : (<object 1422521> (scddr (cdr scdr)))
> def args: : (<object 1422760> (scdr (cdr s)))
> def args: : (<object 1422760> (scddr (cdr scdr)))
> def args: : (<object 1422832> (scdr (cdr s)))
> def args: : (<object 1422832> (scddr (cdr scdr)))
> def args: : (<object 1422900> (scdr (cdr s)))
> def args: : (<object 1422900> (scddr (cdr scdr)))
> def args: : (<object 1422972> (scdr (cdr s)))
> def args: : (<object 1422972> (scddr (cdr scdr)))
> def args: : (<object 1423040> (scdr (cdr s)))
> def args: : (<object 1423040> (scddr (cdr scdr)))
> def args: : (<object 1423112> (scdr (cdr s)))
> def args: : (<object 1423112> (scddr (cdr scdr)))
> def args: : (<object 1423180> (scdr (cdr s)))
> def args: : (<object 1423180> (scddr (cdr scdr)))
> def args: : (<object 1423252> (scdr (cdr s)))
> def args: : (<object 1423252> (scddr (cdr scdr)))
> def args: : (<object 1423320> (scdr (cdr s)))
> def args: : (<object 1423320> (scddr (cdr scdr)))
> def args: : (<object 1423392> (scdr (cdr s)))
> def args: : (<object 1423392> (scddr (cdr scdr)))
> def args: : (<object 1423460> (scdr (cdr s)))
> def args: : (<object 1423460> (scddr (cdr scdr)))
> def args: : (<object 1423532> (scdr (cdr s)))
> def args: : (<object 1423532> (scddr (cdr scdr)))
> def args: : (<object 1423600> (scdr (cdr s)))
> def args: : (<object 1423600> (scddr (cdr scdr)))
> def args: : (<object 1423672> (scdr (cdr s)))
> def args: : (<object 1423672> (scddr (cdr scdr)))
> def args: : (<object 1423740> (scdr (cdr s)))
> def args: : (<object 1423740> (scddr (cdr scdr)))
> def args: : (<object 1423812> (scdr (cdr s)))
> def args: : (<object 1423812> (scddr (cdr scdr)))
> def args: : (<object 1423880> (scdr (cdr s)))
> def args: : (<object 1423880> (scddr (cdr scdr)))
> def args: : (<object 1423952> (scdr (cdr s)))
> def args: : (<object 1423952> (scddr (cdr scdr)))
> def args: : (<object 1424020> (scdr (cdr s)))
> def args: : (<object 1424020> (scddr (cdr scdr)))
> def args: : (<object 1424092> (scdr (cdr s)))
> def args: : (<object 1424092> (scddr (cdr scdr)))
> def args: : (<object 1424160> (scdr (cdr s)))
> def args: : (<object 1424160> (scddr (cdr scdr)))
> def args: : (<object 1424232> (scdr (cdr s)))
> def args: : (<object 1424232> (scddr (cdr scdr)))
> def args: : (<object 1424300> (scdr (cdr s)))
> def args: : (<object 1424300> (scddr (cdr scdr)))
> def args: : (<object 1424372> (scdr (cdr s)))
> def args: : (<object 1424372> (scddr (cdr scdr)))
> def args: : (<object 1424440> (scdr (cdr s)))
> def args: : (<object 1424440> (scddr (cdr scdr)))
> def args: : (<object 1424512> (scdr (cdr s)))
> def args: : (<object 1424512> (scddr (cdr scdr)))
> def args: : (<object 1424580> (scdr (cdr s)))
> def args: : (<object 1424580> (scddr (cdr scdr)))
> def args: : (<object 1424652> (scdr (cdr s)))
> def args: : (<object 1424652> (scddr (cdr scdr)))
> def args: : (<object 1424720> (scdr (cdr s)))
> def args: : (<object 1424720> (scddr (cdr scdr)))
> def args: : (<object 1424792> (scdr (cdr s)))
> def args: : (<object 1424792> (scddr (cdr scdr)))
> def args: : (<object 1424860> (scdr (cdr s)))
> def args: : (<object 1424860> (scddr (cdr scdr)))
> def args: : (<object 1424932> (scdr (cdr s)))
> def args: : (<object 1424932> (scddr (cdr scdr)))
> def args: : (<object 1425000> (scdr (cdr s)))
> def args: : (<object 1425000> (scddr (cdr scdr)))
> def args: : (<object 1425072> (scdr (cdr s)))
> def args: : (<object 1425072> (scddr (cdr scdr)))
> def args: : (<object 1425140> (scdr (cdr s)))
> def args: : (<object 1425140> (scddr (cdr scdr)))
> def args: : (<object 1425212> (scdr (cdr s)))
> def args: : (<object 1425212> (scddr (cdr scdr)))
> def args: : (<object 1425280> (scdr (cdr s)))
> def args: : (<object 1425280> (scddr (cdr scdr)))
> def args: : (<object 1425352> (scdr (cdr s)))
> def args: : (<object 1425352> (scddr (cdr scdr)))
> def args: : (<object 1425420> (scdr (cdr s)))
> def args: : (<object 1425420> (scddr (cdr scdr)))
> def args: : (<object 1425492> (scdr (cdr s)))
> def args: : (<object 1425492> (scddr (cdr scdr)))
> def args: : (<object 1425560> (scdr (cdr s)))
> def args: : (<object 1425560> (scddr (cdr scdr)))
> def args: : (<object 1425632> (scdr (cdr s)))
> def args: : (<object 1425632> (scddr (cdr scdr)))
> def args: : (<object 1425700> (scdr (cdr s)))
> def args: : (<object 1425700> (scddr (cdr scdr)))
> def args: : (<object 1425772> (scdr (cdr s)))
> def args: : (<object 1425772> (scddr (cdr scdr)))
> def args: : (<object 1425840> (scdr (cdr s)))
> def args: : (<object 1425840> (scddr (cdr scdr)))
> def args: : (<object 1425912> (scdr (cdr s)))
> def args: : (<object 1425912> (scddr (cdr scdr)))
> def args: : (<object 1425980> (scdr (cdr s)))
> def args: : (<object 1425980> (scddr (cdr scdr)))
> def args: : (<object 1426052> (scdr (cdr s)))
> def args: : (<object 1426052> (scddr (cdr scdr)))
> def args: : (<object 1426120> (scdr (cdr s)))
> def args: : (<object 1426120> (scddr (cdr scdr)))
> def args: : (<object 1426192> (scdr (cdr s)))
> def args: : (<object 1426192> (scddr (cdr scdr)))
> def args: : (<object 1426260> (scdr (cdr s)))
> def args: : (<object 1426260> (scddr (cdr scdr)))
> def args: : (<object 1426332> (scdr (cdr s)))
> def args: : (<object 1426332> (scddr (cdr scdr)))
> def args: : (<object 1426400> (scdr (cdr s)))
> def args: : (<object 1426400> (scddr (cdr scdr)))
> def args: : (<object 1426472> (scdr (cdr s)))
> def args: : (<object 1426472> (scddr (cdr scdr)))
> def args: : (<object 1426540> (scdr (cdr s)))
> def args: : (<object 1426540> (scddr (cdr scdr)))
> def args: : (<object 1426612> (scdr (cdr s)))
> def args: : (<object 1426612> (scddr (cdr scdr)))
> def args: : (<object 1426680> (scdr (cdr s)))
> def args: : (<object 1426680> (scddr (cdr scdr)))
> def args: : (<object 1426752> (scdr (cdr s)))
> def args: : (<object 1426752> (scddr (cdr scdr)))
> def args: : (<object 1426820> (scdr (cdr s)))
> def args: : (<object 1426820> (scddr (cdr scdr)))
> def args: : (<object 1426892> (scdr (cdr s)))
> def args: : (<object 1426892> (scddr (cdr scdr)))
> def args: : (<object 1426960> (scdr (cdr s)))
> def args: : (<object 1426960> (scddr (cdr scdr)))
> def args: : (<object 1427032> (scdr (cdr s)))
> def args: : (<object 1427032> (scddr (cdr scdr)))
> def args: : (<object 1427100> (scdr (cdr s)))
> def args: : (<object 1427100> (scddr (cdr scdr)))
> def args: : (<object 1427172> (scdr (cdr s)))
> def args: : (<object 1427172> (scddr (cdr scdr)))
> def args: : (<object 1427240> (scdr (cdr s)))
> def args: : (<object 1427240> (scddr (cdr scdr)))
> def args: : (<object 1427312> (scdr (cdr s)))
> def args: : (<object 1427312> (scddr (cdr scdr)))
> def args: : (<object 1427380> (scdr (cdr s)))
> def args: : (<object 1427380> (scddr (cdr scdr)))
> def args: : (<object 1427452> (scdr (cdr s)))
> def args: : (<object 1427452> (scddr (cdr scdr)))
> def args: : (<object 1427520> (scdr (cdr s)))
> def args: : (<object 1427520> (scddr (cdr scdr)))
> def args: : (<object 1427592> (scdr (cdr s)))
> def args: : (<object 1427592> (scddr (cdr scdr)))
> def args: : (<object 1427660> (scdr (cdr s)))
> def args: : (<object 1427660> (scddr (cdr scdr)))
> def args: : (<object 1427732> (scdr (cdr s)))
> def args: : (<object 1427732> (scddr (cdr scdr)))
> def args: : (<object 1427800> (scdr (cdr s)))
> def args: : (<object 1427800> (scddr (cdr scdr)))
> def args: : (<object 1427872> (scdr (cdr s)))
> def args: : (<object 1427872> (scddr (cdr scdr)))
> def args: : (<object 1427940> (scdr (cdr s)))
> def args: : (<object 1427940> (scddr (cdr scdr)))
> def args: : (<object 1428012> (scdr (cdr s)))
> def args: : (<object 1428012> (scddr (cdr scdr)))
> def args: : (<object 1428080> (scdr (cdr s)))
> def args: : (<object 1428080> (scddr (cdr scdr)))
> def args: : (<object 1428152> (scdr (cdr s)))
> def args: : (<object 1428152> (scddr (cdr scdr)))
> def args: : (<object 1428220> (scdr (cdr s)))
> def args: : (<object 1428220> (scddr (cdr scdr)))
> def args: : (<object 1428292> (scdr (cdr s)))
> def args: : (<object 1428292> (scddr (cdr scdr)))
> def args: : (<object 1428360> (scdr (cdr s)))
> def args: : (<object 1428360> (scddr (cdr scdr)))
> def args: : (<object 1428432> (scdr (cdr s)))
> def args: : (<object 1428432> (scddr (cdr scdr)))
> def args: : (<object 1428500> (scdr (cdr s)))
> def args: : (<object 1428500> (scddr (cdr scdr)))
> def args: : (<object 1428572> (scdr (cdr s)))
> def args: : (<object 1428572> (scddr (cdr scdr)))
> def args: : (<object 1428640> (scdr (cdr s)))
> def args: : (<object 1428640> (scddr (cdr scdr)))
> def args: : (<object 1428712> (scdr (cdr s)))
> def args: : (<object 1428712> (scddr (cdr scdr)))
> def args: : (<object 1428780> (scdr (cdr s)))
> def args: : (<object 1428780> (scddr (cdr scdr)))
> def args: : (<object 1428852> (scdr (cdr s)))
> def args: : (<object 1428852> (scddr (cdr scdr)))
> def args: : (<object 1428920> (scdr (cdr s)))
> def args: : (<object 1428920> (scddr (cdr scdr)))
> def args: : (<object 1428992> (scdr (cdr s)))
> def args: : (<object 1428992> (scddr (cdr scdr)))
> def args: : (<object 1429060> (scdr (cdr s)))
> def args: : (<object 1429060> (scddr (cdr scdr)))
> def args: : (<object 1429132> (scdr (cdr s)))
> def args: : (<object 1429132> (scddr (cdr scdr)))
> def args: : (<object 1429200> (scdr (cdr s)))
> def args: : (<object 1429200> (scddr (cdr scdr)))
> def args: : (<object 1429272> (scdr (cdr s)))
> def args: : (<object 1429272> (scddr (cdr scdr)))
> def args: : (<object 1429340> (scdr (cdr s)))
> def args: : (<object 1429340> (scddr (cdr scdr)))
> def args: : (<object 1429412> (scdr (cdr s)))
> def args: : (<object 1429412> (scddr (cdr scdr)))
> def args: : (<object 1429480> (scdr (cdr s)))
> def args: : (<object 1429480> (scddr (cdr scdr)))
> def args: : (<object 1429552> (scdr (cdr s)))
> def args: : (<object 1429552> (scddr (cdr scdr)))
> def args: : (<object 1429620> (scdr (cdr s)))
> def args: : (<object 1429620> (scddr (cdr scdr)))
> def args: : (<object 1429692> (scdr (cdr s)))
> def args: : (<object 1429692> (scddr (cdr scdr)))
> def args: : (<object 1429760> (scdr (cdr s)))
> def args: : (<object 1429760> (scddr (cdr scdr)))
> def args: : (<object 1429832> (scdr (cdr s)))
> def args: : (<object 1429832> (scddr (cdr scdr)))
> def args: : (<object 1429900> (scdr (cdr s)))
> def args: : (<object 1429900> (scddr (cdr scdr)))
> def args: : (<object 1429972> (scdr (cdr s)))
> def args: : (<object 1429972> (scddr (cdr scdr)))
> def args: : (<object 1430040> (scdr (cdr s)))
> def args: : (<object 1430040> (scddr (cdr scdr)))
> def args: : (<object 1430112> (scdr (cdr s)))
> def args: : (<object 1430112> (scddr (cdr scdr)))
> def args: : (<object 1430180> (scdr (cdr s)))
> def args: : (<object 1430180> (scddr (cdr scdr)))
> def args: : (<object 1430252> (scdr (cdr s)))
> def args: : (<object 1430252> (scddr (cdr scdr)))
> def args: : (<object 1430320> (scdr (cdr s)))
> def args: : (<object 1430320> (scddr (cdr scdr)))
> def args: : (<object 1430392> (scdr (cdr s)))
> def args: : (<object 1430392> (scddr (cdr scdr)))
> def args: : (<object 1430460> (scdr (cdr s)))
> def args: : (<object 1430460> (scddr (cdr scdr)))
> def args: : (<object 1430532> (scdr (cdr s)))
> def args: : (<object 1430532> (scddr (cdr scdr)))
> def args: : (<object 1430600> (scdr (cdr s)))
> def args: : (<object 1430600> (scddr (cdr scdr)))
> def args: : (<object 1430672> (scdr (cdr s)))
> def args: : (<object 1430672> (scddr (cdr scdr)))
> def args: : (<object 1430740> (scdr (cdr s)))
> def args: : (<object 1430740> (scddr (cdr scdr)))
> def args: : (<object 1430812> (scdr (cdr s)))
> def args: : (<object 1430812> (scddr (cdr scdr)))
> def args: : (<object 1430880> (scdr (cdr s)))
> def args: : (<object 1430880> (scddr (cdr scdr)))
> def args: : (<object 1430952> (scdr (cdr s)))
> def args: : (<object 1430952> (scddr (cdr scdr)))
> def args: : (<object 1431020> (scdr (cdr s)))
> def args: : (<object 1431020> (scddr (cdr scdr)))
> def args: : (<object 1431092> (scdr (cdr s)))
> def args: : (<object 1431092> (scddr (cdr scdr)))
> def args: : (<object 1431160> (scdr (cdr s)))
> def args: : (<object 1431160> (scddr (cdr scdr)))
> def args: : (<object 1431232> (scdr (cdr s)))
> def args: : (<object 1431232> (scddr (cdr scdr)))
> def args: : (<object 1431300> (scdr (cdr s)))
> def args: : (<object 1431300> (scddr (cdr scdr)))
> def args: : (<object 1431372> (scdr (cdr s)))
> def args: : (<object 1431372> (scddr (cdr scdr)))
> def args: : (<object 1431440> (scdr (cdr s)))
> def args: : (<object 1431440> (scddr (cdr scdr)))
> def args: : (<object 1431512> (scdr (cdr s)))
> def args: : (<object 1431512> (scddr (cdr scdr)))
> def args: : (<object 1431580> (scdr (cdr s)))
> def args: : (<object 1431580> (scddr (cdr scdr)))
> def args: : (<object 1431652> (scdr (cdr s)))
> def args: : (<object 1431652> (scddr (cdr scdr)))
> def args: : (<object 1431720> (scdr (cdr s)))
> def args: : (<object 1431720> (scddr (cdr scdr)))
> def args: : (<object 1431792> (scdr (cdr s)))
> def args: : (<object 1431792> (scddr (cdr scdr)))
> def args: : (<object 1431860> (scdr (cdr s)))
> def args: : (<object 1431860> (scddr (cdr scdr)))
> def args: : (<object 1431932> (scdr (cdr s)))
> def args: : (<object 1431932> (scddr (cdr scdr)))
> def args: : (<object 1432000> (scdr (cdr s)))
> def args: : (<object 1432000> (scddr (cdr scdr)))
> def args: : (<object 1432072> (scdr (cdr s)))
> def args: : (<object 1432072> (scddr (cdr scdr)))
> def args: : (<object 1432140> (scdr (cdr s)))
> def args: : (<object 1432140> (scddr (cdr scdr)))
> def args: : (<object 1432212> (scdr (cdr s)))
> def args: : (<object 1432212> (scddr (cdr scdr)))
> def args: : (<object 1432280> (scdr (cdr s)))
> def args: : (<object 1432280> (scddr (cdr scdr)))
> def args: : (<object 1432352> (scdr (cdr s)))
> def args: : (<object 1432352> (scddr (cdr scdr)))
> def args: : (<object 1432420> (scdr (cdr s)))
> def args: : (<object 1432420> (scddr (cdr scdr)))
> def args: : (<object 1432492> (scdr (cdr s)))
> def args: : (<object 1432492> (scddr (cdr scdr)))
> def args: : (<object 1432560> (scdr (cdr s)))
> def args: : (<object 1432560> (scddr (cdr scdr)))
> def args: : (<object 1432632> (scdr (cdr s)))
> def args: : (<object 1432632> (scddr (cdr scdr)))
> def args: : (<object 1432700> (scdr (cdr s)))
> def args: : (<object 1432700> (scddr (cdr scdr)))
> def args: : (<object 1432772> (scdr (cdr s)))
> def args: : (<object 1432772> (scddr (cdr scdr)))
> def args: : (<object 1432840> (scdr (cdr s)))
> def args: : (<object 1432840> (scddr (cdr scdr)))
> def args: : (<object 1432912> (scdr (cdr s)))
> def args: : (<object 1432912> (scddr (cdr scdr)))
> def args: : (<object 1432980> (scdr (cdr s)))
> def args: : (<object 1432980> (scddr (cdr scdr)))
> def args: : (<object 1433052> (scdr (cdr s)))
> def args: : (<object 1433052> (scddr (cdr scdr)))
> def args: : (<object 1433120> (scdr (cdr s)))
> def args: : (<object 1433120> (scddr (cdr scdr)))
> def args: : (<object 1433192> (scdr (cdr s)))
> def args: : (<object 1433192> (scddr (cdr scdr)))
> def args: : (<object 1433260> (scdr (cdr s)))
> def args: : (<object 1433260> (scddr (cdr scdr)))
> def args: : (<object 1433332> (scdr (cdr s)))
> def args: : (<object 1433332> (scddr (cdr scdr)))
> def args: : (<object 1433400> (scdr (cdr s)))
> def args: : (<object 1433400> (scddr (cdr scdr)))
> def args: : (<object 1433472> (scdr (cdr s)))
> def args: : (<object 1433472> (scddr (cdr scdr)))
> def args: : (<object 1433540> (scdr (cdr s)))
> def args: : (<object 1433540> (scddr (cdr scdr)))
> def args: : (<object 1433612> (scdr (cdr s)))
> def args: : (<object 1433612> (scddr (cdr scdr)))
> def args: : (<object 1433680> (scdr (cdr s)))
> def args: : (<object 1433680> (scddr (cdr scdr)))
> def args: : (<object 1433752> (scdr (cdr s)))
> def args: : (<object 1433752> (scddr (cdr scdr)))
> def args: : (<object 1433820> (scdr (cdr s)))
> def args: : (<object 1433820> (scddr (cdr scdr)))
> def args: : (<object 1433892> (scdr (cdr s)))
> def args: : (<object 1433892> (scddr (cdr scdr)))
> def args: : (<object 1433960> (scdr (cdr s)))
> def args: : (<object 1433960> (scddr (cdr scdr)))
> def args: : (<object 1434032> (scdr (cdr s)))
> def args: : (<object 1434032> (scddr (cdr scdr)))
> def args: : (<object 1434100> (scdr (cdr s)))
> def args: : (<object 1434100> (scddr (cdr scdr)))
> def args: : (<object 1434172> (scdr (cdr s)))
> def args: : (<object 1434172> (scddr (cdr scdr)))
> def args: : (<object 1434240> (scdr (cdr s)))
> def args: : (<object 1434240> (scddr (cdr scdr)))
> def args: : (<object 1434312> (scdr (cdr s)))
> def args: : (<object 1434312> (scddr (cdr scdr)))
> def args: : (<object 1434380> (scdr (cdr s)))
> def args: : (<object 1434380> (scddr (cdr scdr)))
> def args: : (<object 1434452> (scdr (cdr s)))
> def args: : (<object 1434452> (scddr (cdr scdr)))
> def args: : (<object 1434520> (scdr (cdr s)))
> def args: : (<object 1434520> (scddr (cdr scdr)))
> def args: : (<object 1434592> (scdr (cdr s)))
> def args: : (<object 1434592> (scddr (cdr scdr)))
> def args: : (<object 1434660> (scdr (cdr s)))
> def args: : (<object 1434660> (scddr (cdr scdr)))
> def args: : (<object 1434732> (scdr (cdr s)))
> def args: : (<object 1434732> (scddr (cdr scdr)))
> def args: : (<object 1434800> (scdr (cdr s)))
> def args: : (<object 1434800> (scddr (cdr scdr)))
> def args: : (<object 1434872> (scdr (cdr s)))
> def args: : (<object 1434872> (scddr (cdr scdr)))
> def args: : (<object 1434940> (scdr (cdr s)))
> def args: : (<object 1434940> (scddr (cdr scdr)))
> def args: : (<object 1435012> (scdr (cdr s)))
> def args: : (<object 1435012> (scddr (cdr scdr)))
> def args: : (<object 1435080> (scdr (cdr s)))
> def args: : (<object 1435080> (scddr (cdr scdr)))
> def args: : (<object 1435152> (scdr (cdr s)))
> def args: : (<object 1435152> (scddr (cdr scdr)))
> def args: : (<object 1435220> (scdr (cdr s)))
> def args: : (<object 1435220> (scddr (cdr scdr)))
> def args: : (<object 1435292> (scdr (cdr s)))
> def args: : (<object 1435292> (scddr (cdr scdr)))
> def args: : (<object 1435360> (scdr (cdr s)))
> def args: : (<object 1435360> (scddr (cdr scdr)))
> def args: : (<object 1435432> (scdr (cdr s)))
> def args: : (<object 1435432> (scddr (cdr scdr)))
> 4371def args: : (<object 1451511> (env (if (null? @) # (car @))))
>  def args: : (<object 1451618> (env (if (null? @) # (car @))))
> def args: : (<object 1451738> (scdr (cdr s)))
> def args: : (<object 1451738> (scddr (cdr scdr)))
> def args: : (<object 1451810> (scdr (cdr s)))
> def args: : (<object 1451810> (scddr (cdr scdr)))
> def args: : (<object 1451882> (scdr (cdr s)))
> def args: : (<object 1451882> (scddr (cdr scdr)))
> def args: : (<object 1451950> (scdr (cdr s)))
> def args: : (<object 1451950> (scddr (cdr scdr)))
> def args: : (<object 1452189> (scdr (cdr s)))
> def args: : (<object 1452189> (scddr (cdr scdr)))
> def args: : (<object 1452261> (scdr (cdr s)))
> def args: : (<object 1452261> (scddr (cdr scdr)))
> def args: : (<object 1452329> (scdr (cdr s)))
> def args: : (<object 1452329> (scddr (cdr scdr)))
> def args: : (<object 1452401> (scdr (cdr s)))
> def args: : (<object 1452401> (scddr (cdr scdr)))
> def args: : (<object 1452469> (scdr (cdr s)))
> def args: : (<object 1452469> (scddr (cdr scdr)))
> def args: : (<object 1452541> (scdr (cdr s)))
> def args: : (<object 1452541> (scddr (cdr scdr)))
> def args: : (<object 1452609> (scdr (cdr s)))
> def args: : (<object 1452609> (scddr (cdr scdr)))
> def args: : (<object 1452681> (scdr (cdr s)))
> def args: : (<object 1452681> (scddr (cdr scdr)))
> def args: : (<object 1452749> (scdr (cdr s)))
> def args: : (<object 1452749> (scddr (cdr scdr)))
> def args: : (<object 1452821> (scdr (cdr s)))
> def args: : (<object 1452821> (scddr (cdr scdr)))
> def args: : (<object 1452889> (scdr (cdr s)))
> def args: : (<object 1452889> (scddr (cdr scdr)))
> def args: : (<object 1452961> (scdr (cdr s)))
> def args: : (<object 1452961> (scddr (cdr scdr)))
> def args: : (<object 1453029> (scdr (cdr s)))
> def args: : (<object 1453029> (scddr (cdr scdr)))
> def args: : (<object 1453101> (scdr (cdr s)))
> def args: : (<object 1453101> (scddr (cdr scdr)))
> def args: : (<object 1453169> (scdr (cdr s)))
> def args: : (<object 1453169> (scddr (cdr scdr)))
> def args: : (<object 1453241> (scdr (cdr s)))
> def args: : (<object 1453241> (scddr (cdr scdr)))
> def args: : (<object 1453309> (scdr (cdr s)))
> def args: : (<object 1453309> (scddr (cdr scdr)))
> def args: : (<object 1453381> (scdr (cdr s)))
> def args: : (<object 1453381> (scddr (cdr scdr)))
> def args: : (<object 1453449> (scdr (cdr s)))
> def args: : (<object 1453449> (scddr (cdr scdr)))
> def args: : (<object 1453521> (scdr (cdr s)))
> def args: : (<object 1453521> (scddr (cdr scdr)))
> def args: : (<object 1453589> (scdr (cdr s)))
> def args: : (<object 1453589> (scddr (cdr scdr)))
> def args: : (<object 1453661> (scdr (cdr s)))
> def args: : (<object 1453661> (scddr (cdr scdr)))
> def args: : (<object 1453729> (scdr (cdr s)))
> def args: : (<object 1453729> (scddr (cdr scdr)))
> def args: : (<object 1453801> (scdr (cdr s)))
> def args: : (<object 1453801> (scddr (cdr scdr)))
> def args: : (<object 1453869> (scdr (cdr s)))
> def args: : (<object 1453869> (scddr (cdr scdr)))
> def args: : (<object 1453941> (scdr (cdr s)))
> def args: : (<object 1453941> (scddr (cdr scdr)))
> def args: : (<object 1454009> (scdr (cdr s)))
> def args: : (<object 1454009> (scddr (cdr scdr)))
> def args: : (<object 1454081> (scdr (cdr s)))
> def args: : (<object 1454081> (scddr (cdr scdr)))
> def args: : (<object 1454149> (scdr (cdr s)))
> def args: : (<object 1454149> (scddr (cdr scdr)))
> def args: : (<object 1454221> (scdr (cdr s)))
> def args: : (<object 1454221> (scddr (cdr scdr)))
> def args: : (<object 1454289> (scdr (cdr s)))
> def args: : (<object 1454289> (scddr (cdr scdr)))
> def args: : (<object 1454361> (scdr (cdr s)))
> def args: : (<object 1454361> (scddr (cdr scdr)))
> def args: : (<object 1454429> (scdr (cdr s)))
> def args: : (<object 1454429> (scddr (cdr scdr)))
> def args: : (<object 1454501> (scdr (cdr s)))
> def args: : (<object 1454501> (scddr (cdr scdr)))
> def args: : (<object 1454569> (scdr (cdr s)))
> def args: : (<object 1454569> (scddr (cdr scdr)))
> def args: : (<object 1454641> (scdr (cdr s)))
> def args: : (<object 1454641> (scddr (cdr scdr)))
> def args: : (<object 1454709> (scdr (cdr s)))
> def args: : (<object 1454709> (scddr (cdr scdr)))
> def args: : (<object 1454781> (scdr (cdr s)))
> def args: : (<object 1454781> (scddr (cdr scdr)))
> def args: : (<object 1454849> (scdr (cdr s)))
> def args: : (<object 1454849> (scddr (cdr scdr)))
> def args: : (<object 1454921> (scdr (cdr s)))
> def args: : (<object 1454921> (scddr (cdr scdr)))
> def args: : (<object 1454989> (scdr (cdr s)))
> def args: : (<object 1454989> (scddr (cdr scdr)))
> def args: : (<object 1455061> (scdr (cdr s)))
> def args: : (<object 1455061> (scddr (cdr scdr)))
> def args: : (<object 1455129> (scdr (cdr s)))
> def args: : (<object 1455129> (scddr (cdr scdr)))
> def args: : (<object 1455201> (scdr (cdr s)))
> def args: : (<object 1455201> (scddr (cdr scdr)))
> def args: : (<object 1455269> (scdr (cdr s)))
> def args: : (<object 1455269> (scddr (cdr scdr)))
> def args: : (<object 1455341> (scdr (cdr s)))
> def args: : (<object 1455341> (scddr (cdr scdr)))
> def args: : (<object 1455409> (scdr (cdr s)))
> def args: : (<object 1455409> (scddr (cdr scdr)))
> def args: : (<object 1455481> (scdr (cdr s)))
> def args: : (<object 1455481> (scddr (cdr scdr)))
> def args: : (<object 1455549> (scdr (cdr s)))
> def args: : (<object 1455549> (scddr (cdr scdr)))
> def args: : (<object 1455621> (scdr (cdr s)))
> def args: : (<object 1455621> (scddr (cdr scdr)))
> def args: : (<object 1455689> (scdr (cdr s)))
> def args: : (<object 1455689> (scddr (cdr scdr)))
> def args: : (<object 1455761> (scdr (cdr s)))
> def args: : (<object 1455761> (scddr (cdr scdr)))
> def args: : (<object 1455829> (scdr (cdr s)))
> def args: : (<object 1455829> (scddr (cdr scdr)))
> def args: : (<object 1455901> (scdr (cdr s)))
> def args: : (<object 1455901> (scddr (cdr scdr)))
> def args: : (<object 1455969> (scdr (cdr s)))
> def args: : (<object 1455969> (scddr (cdr scdr)))
> def args: : (<object 1456041> (scdr (cdr s)))
> def args: : (<object 1456041> (scddr (cdr scdr)))
> def args: : (<object 1456109> (scdr (cdr s)))
> def args: : (<object 1456109> (scddr (cdr scdr)))
> def args: : (<object 1456181> (scdr (cdr s)))
> def args: : (<object 1456181> (scddr (cdr scdr)))
> def args: : (<object 1456249> (scdr (cdr s)))
> def args: : (<object 1456249> (scddr (cdr scdr)))
> def args: : (<object 1456321> (scdr (cdr s)))
> def args: : (<object 1456321> (scddr (cdr scdr)))
> def args: : (<object 1456389> (scdr (cdr s)))
> def args: : (<object 1456389> (scddr (cdr scdr)))
> def args: : (<object 1456461> (scdr (cdr s)))
> def args: : (<object 1456461> (scddr (cdr scdr)))
> def args: : (<object 1456529> (scdr (cdr s)))
> def args: : (<object 1456529> (scddr (cdr scdr)))
> def args: : (<object 1456601> (scdr (cdr s)))
> def args: : (<object 1456601> (scddr (cdr scdr)))
> def args: : (<object 1456669> (scdr (cdr s)))
> def args: : (<object 1456669> (scddr (cdr scdr)))
> def args: : (<object 1456741> (scdr (cdr s)))
> def args: : (<object 1456741> (scddr (cdr scdr)))
> def args: : (<object 1456809> (scdr (cdr s)))
> def args: : (<object 1456809> (scddr (cdr scdr)))
> def args: : (<object 1456881> (scdr (cdr s)))
> def args: : (<object 1456881> (scddr (cdr scdr)))
> def args: : (<object 1456949> (scdr (cdr s)))
> def args: : (<object 1456949> (scddr (cdr scdr)))
> def args: : (<object 1457021> (scdr (cdr s)))
> def args: : (<object 1457021> (scddr (cdr scdr)))
> def args: : (<object 1457089> (scdr (cdr s)))
> def args: : (<object 1457089> (scddr (cdr scdr)))
> def args: : (<object 1457161> (scdr (cdr s)))
> def args: : (<object 1457161> (scddr (cdr scdr)))
> def args: : (<object 1457229> (scdr (cdr s)))
> def args: : (<object 1457229> (scddr (cdr scdr)))
> def args: : (<object 1457301> (scdr (cdr s)))
> def args: : (<object 1457301> (scddr (cdr scdr)))
> def args: : (<object 1457369> (scdr (cdr s)))
> def args: : (<object 1457369> (scddr (cdr scdr)))
> def args: : (<object 1457441> (scdr (cdr s)))
> def args: : (<object 1457441> (scddr (cdr scdr)))
> def args: : (<object 1457509> (scdr (cdr s)))
> def args: : (<object 1457509> (scddr (cdr scdr)))
> def args: : (<object 1457581> (scdr (cdr s)))
> def args: : (<object 1457581> (scddr (cdr scdr)))
> def args: : (<object 1457649> (scdr (cdr s)))
> def args: : (<object 1457649> (scddr (cdr scdr)))
> def args: : (<object 1457721> (scdr (cdr s)))
> def args: : (<object 1457721> (scddr (cdr scdr)))
> def args: : (<object 1457789> (scdr (cdr s)))
> def args: : (<object 1457789> (scddr (cdr scdr)))
> def args: : (<object 1457861> (scdr (cdr s)))
> def args: : (<object 1457861> (scddr (cdr scdr)))
> def args: : (<object 1457929> (scdr (cdr s)))
> def args: : (<object 1457929> (scddr (cdr scdr)))
> def args: : (<object 1458001> (scdr (cdr s)))
> def args: : (<object 1458001> (scddr (cdr scdr)))
> def args: : (<object 1458069> (scdr (cdr s)))
> def args: : (<object 1458069> (scddr (cdr scdr)))
> def args: : (<object 1458141> (scdr (cdr s)))
> def args: : (<object 1458141> (scddr (cdr scdr)))
> def args: : (<object 1458209> (scdr (cdr s)))
> def args: : (<object 1458209> (scddr (cdr scdr)))
> def args: : (<object 1458281> (scdr (cdr s)))
> def args: : (<object 1458281> (scddr (cdr scdr)))
> def args: : (<object 1458349> (scdr (cdr s)))
> def args: : (<object 1458349> (scddr (cdr scdr)))
> def args: : (<object 1458421> (scdr (cdr s)))
> def args: : (<object 1458421> (scddr (cdr scdr)))
> def args: : (<object 1458489> (scdr (cdr s)))
> def args: : (<object 1458489> (scddr (cdr scdr)))
> def args: : (<object 1458561> (scdr (cdr s)))
> def args: : (<object 1458561> (scddr (cdr scdr)))
> def args: : (<object 1458629> (scdr (cdr s)))
> def args: : (<object 1458629> (scddr (cdr scdr)))
> def args: : (<object 1458701> (scdr (cdr s)))
> def args: : (<object 1458701> (scddr (cdr scdr)))
> def args: : (<object 1458769> (scdr (cdr s)))
> def args: : (<object 1458769> (scddr (cdr scdr)))
> def args: : (<object 1458841> (scdr (cdr s)))
> def args: : (<object 1458841> (scddr (cdr scdr)))
> def args: : (<object 1458909> (scdr (cdr s)))
> def args: : (<object 1458909> (scddr (cdr scdr)))
> def args: : (<object 1458981> (scdr (cdr s)))
> def args: : (<object 1458981> (scddr (cdr scdr)))
> def args: : (<object 1459049> (scdr (cdr s)))
> def args: : (<object 1459049> (scddr (cdr scdr)))
> def args: : (<object 1459121> (scdr (cdr s)))
> def args: : (<object 1459121> (scddr (cdr scdr)))
> def args: : (<object 1459189> (scdr (cdr s)))
> def args: : (<object 1459189> (scddr (cdr scdr)))
> def args: : (<object 1459261> (scdr (cdr s)))
> def args: : (<object 1459261> (scddr (cdr scdr)))
> def args: : (<object 1459329> (scdr (cdr s)))
> def args: : (<object 1459329> (scddr (cdr scdr)))
> def args: : (<object 1459401> (scdr (cdr s)))
> def args: : (<object 1459401> (scddr (cdr scdr)))
> def args: : (<object 1459469> (scdr (cdr s)))
> def args: : (<object 1459469> (scddr (cdr scdr)))
> def args: : (<object 1459541> (scdr (cdr s)))
> def args: : (<object 1459541> (scddr (cdr scdr)))
> def args: : (<object 1459609> (scdr (cdr s)))
> def args: : (<object 1459609> (scddr (cdr scdr)))
> def args: : (<object 1459681> (scdr (cdr s)))
> def args: : (<object 1459681> (scddr (cdr scdr)))
> def args: : (<object 1459749> (scdr (cdr s)))
> def args: : (<object 1459749> (scddr (cdr scdr)))
> def args: : (<object 1459821> (scdr (cdr s)))
> def args: : (<object 1459821> (scddr (cdr scdr)))
> def args: : (<object 1459889> (scdr (cdr s)))
> def args: : (<object 1459889> (scddr (cdr scdr)))
> def args: : (<object 1459961> (scdr (cdr s)))
> def args: : (<object 1459961> (scddr (cdr scdr)))
> def args: : (<object 1460029> (scdr (cdr s)))
> def args: : (<object 1460029> (scddr (cdr scdr)))
> def args: : (<object 1460101> (scdr (cdr s)))
> def args: : (<object 1460101> (scddr (cdr scdr)))
> def args: : (<object 1460169> (scdr (cdr s)))
> def args: : (<object 1460169> (scddr (cdr scdr)))
> def args: : (<object 1460241> (scdr (cdr s)))
> def args: : (<object 1460241> (scddr (cdr scdr)))
> def args: : (<object 1460309> (scdr (cdr s)))
> def args: : (<object 1460309> (scddr (cdr scdr)))
> def args: : (<object 1460381> (scdr (cdr s)))
> def args: : (<object 1460381> (scddr (cdr scdr)))
> def args: : (<object 1460449> (scdr (cdr s)))
> def args: : (<object 1460449> (scddr (cdr scdr)))
> def args: : (<object 1460521> (scdr (cdr s)))
> def args: : (<object 1460521> (scddr (cdr scdr)))
> def args: : (<object 1460589> (scdr (cdr s)))
> def args: : (<object 1460589> (scddr (cdr scdr)))
> def args: : (<object 1460661> (scdr (cdr s)))
> def args: : (<object 1460661> (scddr (cdr scdr)))
> def args: : (<object 1460729> (scdr (cdr s)))
> def args: : (<object 1460729> (scddr (cdr scdr)))
> def args: : (<object 1460801> (scdr (cdr s)))
> def args: : (<object 1460801> (scddr (cdr scdr)))
> def args: : (<object 1460869> (scdr (cdr s)))
> def args: : (<object 1460869> (scddr (cdr scdr)))
> def args: : (<object 1460941> (scdr (cdr s)))
> def args: : (<object 1460941> (scddr (cdr scdr)))
> def args: : (<object 1461009> (scdr (cdr s)))
> def args: : (<object 1461009> (scddr (cdr scdr)))
> def args: : (<object 1461081> (scdr (cdr s)))
> def args: : (<object 1461081> (scddr (cdr scdr)))
> def args: : (<object 1461149> (scdr (cdr s)))
> def args: : (<object 1461149> (scddr (cdr scdr)))
> def args: : (<object 1461221> (scdr (cdr s)))
> def args: : (<object 1461221> (scddr (cdr scdr)))
> def args: : (<object 1461289> (scdr (cdr s)))
> def args: : (<object 1461289> (scddr (cdr scdr)))
> def args: : (<object 1461361> (scdr (cdr s)))
> def args: : (<object 1461361> (scddr (cdr scdr)))
> def args: : (<object 1461429> (scdr (cdr s)))
> def args: : (<object 1461429> (scddr (cdr scdr)))
> def args: : (<object 1461501> (scdr (cdr s)))
> def args: : (<object 1461501> (scddr (cdr scdr)))
> def args: : (<object 1461569> (scdr (cdr s)))
> def args: : (<object 1461569> (scddr (cdr scdr)))
> def args: : (<object 1461641> (scdr (cdr s)))
> def args: : (<object 1461641> (scddr (cdr scdr)))
> def args: : (<object 1461709> (scdr (cdr s)))
> def args: : (<object 1461709> (scddr (cdr scdr)))
> def args: : (<object 1461781> (scdr (cdr s)))
> def args: : (<object 1461781> (scddr (cdr scdr)))
> def args: : (<object 1461849> (scdr (cdr s)))
> def args: : (<object 1461849> (scddr (cdr scdr)))
> def args: : (<object 1461921> (scdr (cdr s)))
> def args: : (<object 1461921> (scddr (cdr scdr)))
> def args: : (<object 1461989> (scdr (cdr s)))
> def args: : (<object 1461989> (scddr (cdr scdr)))
> def args: : (<object 1462061> (scdr (cdr s)))
> def args: : (<object 1462061> (scddr (cdr scdr)))
> def args: : (<object 1462129> (scdr (cdr s)))
> def args: : (<object 1462129> (scddr (cdr scdr)))
> def args: : (<object 1462201> (scdr (cdr s)))
> def args: : (<object 1462201> (scddr (cdr scdr)))
> def args: : (<object 1462269> (scdr (cdr s)))
> def args: : (<object 1462269> (scddr (cdr scdr)))
> def args: : (<object 1462341> (scdr (cdr s)))
> def args: : (<object 1462341> (scddr (cdr scdr)))
> def args: : (<object 1462409> (scdr (cdr s)))
> def args: : (<object 1462409> (scddr (cdr scdr)))
> def args: : (<object 1462481> (scdr (cdr s)))
> def args: : (<object 1462481> (scddr (cdr scdr)))
> def args: : (<object 1462549> (scdr (cdr s)))
> def args: : (<object 1462549> (scddr (cdr scdr)))
> def args: : (<object 1462621> (scdr (cdr s)))
> def args: : (<object 1462621> (scddr (cdr scdr)))
> def args: : (<object 1462689> (scdr (cdr s)))
> def args: : (<object 1462689> (scddr (cdr scdr)))
> def args: : (<object 1462761> (scdr (cdr s)))
> def args: : (<object 1462761> (scddr (cdr scdr)))
> def args: : (<object 1462829> (scdr (cdr s)))
> def args: : (<object 1462829> (scddr (cdr scdr)))
> def args: : (<object 1462901> (scdr (cdr s)))
> def args: : (<object 1462901> (scddr (cdr scdr)))
> def args: : (<object 1462969> (scdr (cdr s)))
> def args: : (<object 1462969> (scddr (cdr scdr)))
> def args: : (<object 1463041> (scdr (cdr s)))
> def args: : (<object 1463041> (scddr (cdr scdr)))
> def args: : (<object 1463109> (scdr (cdr s)))
> def args: : (<object 1463109> (scddr (cdr scdr)))
> def args: : (<object 1463181> (scdr (cdr s)))
> def args: : (<object 1463181> (scddr (cdr scdr)))
> def args: : (<object 1463249> (scdr (cdr s)))
> def args: : (<object 1463249> (scddr (cdr scdr)))
> def args: : (<object 1463321> (scdr (cdr s)))
> def args: : (<object 1463321> (scddr (cdr scdr)))
> def args: : (<object 1463389> (scdr (cdr s)))
> def args: : (<object 1463389> (scddr (cdr scdr)))
> def args: : (<object 1463461> (scdr (cdr s)))
> def args: : (<object 1463461> (scddr (cdr scdr)))
> def args: : (<object 1463529> (scdr (cdr s)))
> def args: : (<object 1463529> (scddr (cdr scdr)))
> def args: : (<object 1463601> (scdr (cdr s)))
> def args: : (<object 1463601> (scddr (cdr scdr)))
> def args: : (<object 1463669> (scdr (cdr s)))
> def args: : (<object 1463669> (scddr (cdr scdr)))
> def args: : (<object 1463741> (scdr (cdr s)))
> def args: : (<object 1463741> (scddr (cdr scdr)))
> def args: : (<object 1463809> (scdr (cdr s)))
> def args: : (<object 1463809> (scddr (cdr scdr)))
> def args: : (<object 1463881> (scdr (cdr s)))
> def args: : (<object 1463881> (scddr (cdr scdr)))
> def args: : (<object 1463949> (scdr (cdr s)))
> def args: : (<object 1463949> (scddr (cdr scdr)))
> def args: : (<object 1464021> (scdr (cdr s)))
> def args: : (<object 1464021> (scddr (cdr scdr)))
> def args: : (<object 1464089> (scdr (cdr s)))
> def args: : (<object 1464089> (scddr (cdr scdr)))
> def args: : (<object 1464161> (scdr (cdr s)))
> def args: : (<object 1464161> (scddr (cdr scdr)))
> def args: : (<object 1464229> (scdr (cdr s)))
> def args: : (<object 1464229> (scddr (cdr scdr)))
> def args: : (<object 1464301> (scdr (cdr s)))
> def args: : (<object 1464301> (scddr (cdr scdr)))
> def args: : (<object 1464369> (scdr (cdr s)))
> def args: : (<object 1464369> (scddr (cdr scdr)))
> def args: : (<object 1464441> (scdr (cdr s)))
> def args: : (<object 1464441> (scddr (cdr scdr)))
> def args: : (<object 1464509> (scdr (cdr s)))
> def args: : (<object 1464509> (scddr (cdr scdr)))
> def args: : (<object 1464581> (scdr (cdr s)))
> def args: : (<object 1464581> (scddr (cdr scdr)))
> def args: : (<object 1464649> (scdr (cdr s)))
> def args: : (<object 1464649> (scddr (cdr scdr)))
> def args: : (<object 1464721> (scdr (cdr s)))
> def args: : (<object 1464721> (scddr (cdr scdr)))
> def args: : (<object 1464789> (scdr (cdr s)))
> def args: : (<object 1464789> (scddr (cdr scdr)))
> def args: : (<object 1464861> (scdr (cdr s)))
> def args: : (<object 1464861> (scddr (cdr scdr)))
> def args: : (<object 1464929> (scdr (cdr s)))
> def args: : (<object 1464929> (scddr (cdr scdr)))
> def args: : (<object 1465001> (scdr (cdr s)))
> def args: : (<object 1465001> (scddr (cdr scdr)))
> 4465def args: : (<object 1481251> (env (if (null? @) # (car @))))
>  def args: : (<object 1481358> (env (if (null? @) # (car @))))
> def args: : (<object 1481478> (scdr (cdr s)))
> def args: : (<object 1481478> (scddr (cdr scdr)))
> def args: : (<object 1481550> (scdr (cdr s)))
> def args: : (<object 1481550> (scddr (cdr scdr)))
> def args: : (<object 1481622> (scdr (cdr s)))
> def args: : (<object 1481622> (scddr (cdr scdr)))
> def args: : (<object 1481690> (scdr (cdr s)))
> def args: : (<object 1481690> (scddr (cdr scdr)))
> def args: : (<object 1481929> (scdr (cdr s)))
> def args: : (<object 1481929> (scddr (cdr scdr)))
> def args: : (<object 1482001> (scdr (cdr s)))
> def args: : (<object 1482001> (scddr (cdr scdr)))
> def args: : (<object 1482069> (scdr (cdr s)))
> def args: : (<object 1482069> (scddr (cdr scdr)))
> def args: : (<object 1482141> (scdr (cdr s)))
> def args: : (<object 1482141> (scddr (cdr scdr)))
> def args: : (<object 1482209> (scdr (cdr s)))
> def args: : (<object 1482209> (scddr (cdr scdr)))
> def args: : (<object 1482281> (scdr (cdr s)))
> def args: : (<object 1482281> (scddr (cdr scdr)))
> def args: : (<object 1482349> (scdr (cdr s)))
> def args: : (<object 1482349> (scddr (cdr scdr)))
> def args: : (<object 1482421> (scdr (cdr s)))
> def args: : (<object 1482421> (scddr (cdr scdr)))
> def args: : (<object 1482489> (scdr (cdr s)))
> def args: : (<object 1482489> (scddr (cdr scdr)))
> def args: : (<object 1482561> (scdr (cdr s)))
> def args: : (<object 1482561> (scddr (cdr scdr)))
> def args: : (<object 1482629> (scdr (cdr s)))
> def args: : (<object 1482629> (scddr (cdr scdr)))
> def args: : (<object 1482701> (scdr (cdr s)))
> def args: : (<object 1482701> (scddr (cdr scdr)))
> def args: : (<object 1482769> (scdr (cdr s)))
> def args: : (<object 1482769> (scddr (cdr scdr)))
> def args: : (<object 1482841> (scdr (cdr s)))
> def args: : (<object 1482841> (scddr (cdr scdr)))
> def args: : (<object 1482909> (scdr (cdr s)))
> def args: : (<object 1482909> (scddr (cdr scdr)))
> def args: : (<object 1482981> (scdr (cdr s)))
> def args: : (<object 1482981> (scddr (cdr scdr)))
> def args: : (<object 1483049> (scdr (cdr s)))
> def args: : (<object 1483049> (scddr (cdr scdr)))
> def args: : (<object 1483121> (scdr (cdr s)))
> def args: : (<object 1483121> (scddr (cdr scdr)))
> def args: : (<object 1483189> (scdr (cdr s)))
> def args: : (<object 1483189> (scddr (cdr scdr)))
> def args: : (<object 1483261> (scdr (cdr s)))
> def args: : (<object 1483261> (scddr (cdr scdr)))
> def args: : (<object 1483329> (scdr (cdr s)))
> def args: : (<object 1483329> (scddr (cdr scdr)))
> def args: : (<object 1483401> (scdr (cdr s)))
> def args: : (<object 1483401> (scddr (cdr scdr)))
> def args: : (<object 1483469> (scdr (cdr s)))
> def args: : (<object 1483469> (scddr (cdr scdr)))
> def args: : (<object 1483541> (scdr (cdr s)))
> def args: : (<object 1483541> (scddr (cdr scdr)))
> def args: : (<object 1483609> (scdr (cdr s)))
> def args: : (<object 1483609> (scddr (cdr scdr)))
> def args: : (<object 1483681> (scdr (cdr s)))
> def args: : (<object 1483681> (scddr (cdr scdr)))
> def args: : (<object 1483749> (scdr (cdr s)))
> def args: : (<object 1483749> (scddr (cdr scdr)))
> def args: : (<object 1483821> (scdr (cdr s)))
> def args: : (<object 1483821> (scddr (cdr scdr)))
> def args: : (<object 1483889> (scdr (cdr s)))
> def args: : (<object 1483889> (scddr (cdr scdr)))
> def args: : (<object 1483961> (scdr (cdr s)))
> def args: : (<object 1483961> (scddr (cdr scdr)))
> def args: : (<object 1484029> (scdr (cdr s)))
> def args: : (<object 1484029> (scddr (cdr scdr)))
> def args: : (<object 1484101> (scdr (cdr s)))
> def args: : (<object 1484101> (scddr (cdr scdr)))
> def args: : (<object 1484169> (scdr (cdr s)))
> def args: : (<object 1484169> (scddr (cdr scdr)))
> def args: : (<object 1484241> (scdr (cdr s)))
> def args: : (<object 1484241> (scddr (cdr scdr)))
> def args: : (<object 1484309> (scdr (cdr s)))
> def args: : (<object 1484309> (scddr (cdr scdr)))
> def args: : (<object 1484381> (scdr (cdr s)))
> def args: : (<object 1484381> (scddr (cdr scdr)))
> def args: : (<object 1484449> (scdr (cdr s)))
> def args: : (<object 1484449> (scddr (cdr scdr)))
> def args: : (<object 1484521> (scdr (cdr s)))
> def args: : (<object 1484521> (scddr (cdr scdr)))
> def args: : (<object 1484589> (scdr (cdr s)))
> def args: : (<object 1484589> (scddr (cdr scdr)))
> def args: : (<object 1484661> (scdr (cdr s)))
> def args: : (<object 1484661> (scddr (cdr scdr)))
> def args: : (<object 1484729> (scdr (cdr s)))
> def args: : (<object 1484729> (scddr (cdr scdr)))
> def args: : (<object 1484801> (scdr (cdr s)))
> def args: : (<object 1484801> (scddr (cdr scdr)))
> def args: : (<object 1484869> (scdr (cdr s)))
> def args: : (<object 1484869> (scddr (cdr scdr)))
> def args: : (<object 1484941> (scdr (cdr s)))
> def args: : (<object 1484941> (scddr (cdr scdr)))
> def args: : (<object 1485009> (scdr (cdr s)))
> def args: : (<object 1485009> (scddr (cdr scdr)))
> def args: : (<object 1485081> (scdr (cdr s)))
> def args: : (<object 1485081> (scddr (cdr scdr)))
> def args: : (<object 1485149> (scdr (cdr s)))
> def args: : (<object 1485149> (scddr (cdr scdr)))
> def args: : (<object 1485221> (scdr (cdr s)))
> def args: : (<object 1485221> (scddr (cdr scdr)))
> def args: : (<object 1485289> (scdr (cdr s)))
> def args: : (<object 1485289> (scddr (cdr scdr)))
> def args: : (<object 1485361> (scdr (cdr s)))
> def args: : (<object 1485361> (scddr (cdr scdr)))
> def args: : (<object 1485429> (scdr (cdr s)))
> def args: : (<object 1485429> (scddr (cdr scdr)))
> def args: : (<object 1485501> (scdr (cdr s)))
> def args: : (<object 1485501> (scddr (cdr scdr)))
> def args: : (<object 1485569> (scdr (cdr s)))
> def args: : (<object 1485569> (scddr (cdr scdr)))
> def args: : (<object 1485641> (scdr (cdr s)))
> def args: : (<object 1485641> (scddr (cdr scdr)))
> def args: : (<object 1485709> (scdr (cdr s)))
> def args: : (<object 1485709> (scddr (cdr scdr)))
> def args: : (<object 1485781> (scdr (cdr s)))
> def args: : (<object 1485781> (scddr (cdr scdr)))
> def args: : (<object 1485849> (scdr (cdr s)))
> def args: : (<object 1485849> (scddr (cdr scdr)))
> def args: : (<object 1485921> (scdr (cdr s)))
> def args: : (<object 1485921> (scddr (cdr scdr)))
> def args: : (<object 1485989> (scdr (cdr s)))
> def args: : (<object 1485989> (scddr (cdr scdr)))
> def args: : (<object 1486061> (scdr (cdr s)))
> def args: : (<object 1486061> (scddr (cdr scdr)))
> def args: : (<object 1486129> (scdr (cdr s)))
> def args: : (<object 1486129> (scddr (cdr scdr)))
> def args: : (<object 1486201> (scdr (cdr s)))
> def args: : (<object 1486201> (scddr (cdr scdr)))
> def args: : (<object 1486269> (scdr (cdr s)))
> def args: : (<object 1486269> (scddr (cdr scdr)))
> def args: : (<object 1486341> (scdr (cdr s)))
> def args: : (<object 1486341> (scddr (cdr scdr)))
> def args: : (<object 1486409> (scdr (cdr s)))
> def args: : (<object 1486409> (scddr (cdr scdr)))
> def args: : (<object 1486481> (scdr (cdr s)))
> def args: : (<object 1486481> (scddr (cdr scdr)))
> def args: : (<object 1486549> (scdr (cdr s)))
> def args: : (<object 1486549> (scddr (cdr scdr)))
> def args: : (<object 1486621> (scdr (cdr s)))
> def args: : (<object 1486621> (scddr (cdr scdr)))
> def args: : (<object 1486689> (scdr (cdr s)))
> def args: : (<object 1486689> (scddr (cdr scdr)))
> def args: : (<object 1486761> (scdr (cdr s)))
> def args: : (<object 1486761> (scddr (cdr scdr)))
> def args: : (<object 1486829> (scdr (cdr s)))
> def args: : (<object 1486829> (scddr (cdr scdr)))
> def args: : (<object 1486901> (scdr (cdr s)))
> def args: : (<object 1486901> (scddr (cdr scdr)))
> def args: : (<object 1486969> (scdr (cdr s)))
> def args: : (<object 1486969> (scddr (cdr scdr)))
> def args: : (<object 1487041> (scdr (cdr s)))
> def args: : (<object 1487041> (scddr (cdr scdr)))
> def args: : (<object 1487109> (scdr (cdr s)))
> def args: : (<object 1487109> (scddr (cdr scdr)))
> def args: : (<object 1487181> (scdr (cdr s)))
> def args: : (<object 1487181> (scddr (cdr scdr)))
> def args: : (<object 1487249> (scdr (cdr s)))
> def args: : (<object 1487249> (scddr (cdr scdr)))
> def args: : (<object 1487321> (scdr (cdr s)))
> def args: : (<object 1487321> (scddr (cdr scdr)))
> def args: : (<object 1487389> (scdr (cdr s)))
> def args: : (<object 1487389> (scddr (cdr scdr)))
> def args: : (<object 1487461> (scdr (cdr s)))
> def args: : (<object 1487461> (scddr (cdr scdr)))
> def args: : (<object 1487529> (scdr (cdr s)))
> def args: : (<object 1487529> (scddr (cdr scdr)))
> def args: : (<object 1487601> (scdr (cdr s)))
> def args: : (<object 1487601> (scddr (cdr scdr)))
> def args: : (<object 1487669> (scdr (cdr s)))
> def args: : (<object 1487669> (scddr (cdr scdr)))
> def args: : (<object 1487741> (scdr (cdr s)))
> def args: : (<object 1487741> (scddr (cdr scdr)))
> def args: : (<object 1487809> (scdr (cdr s)))
> def args: : (<object 1487809> (scddr (cdr scdr)))
> def args: : (<object 1487881> (scdr (cdr s)))
> def args: : (<object 1487881> (scddr (cdr scdr)))
> def args: : (<object 1487949> (scdr (cdr s)))
> def args: : (<object 1487949> (scddr (cdr scdr)))
> def args: : (<object 1488021> (scdr (cdr s)))
> def args: : (<object 1488021> (scddr (cdr scdr)))
> def args: : (<object 1488089> (scdr (cdr s)))
> def args: : (<object 1488089> (scddr (cdr scdr)))
> def args: : (<object 1488161> (scdr (cdr s)))
> def args: : (<object 1488161> (scddr (cdr scdr)))
> def args: : (<object 1488229> (scdr (cdr s)))
> def args: : (<object 1488229> (scddr (cdr scdr)))
> def args: : (<object 1488301> (scdr (cdr s)))
> def args: : (<object 1488301> (scddr (cdr scdr)))
> def args: : (<object 1488369> (scdr (cdr s)))
> def args: : (<object 1488369> (scddr (cdr scdr)))
> def args: : (<object 1488441> (scdr (cdr s)))
> def args: : (<object 1488441> (scddr (cdr scdr)))
> def args: : (<object 1488509> (scdr (cdr s)))
> def args: : (<object 1488509> (scddr (cdr scdr)))
> def args: : (<object 1488581> (scdr (cdr s)))
> def args: : (<object 1488581> (scddr (cdr scdr)))
> def args: : (<object 1488649> (scdr (cdr s)))
> def args: : (<object 1488649> (scddr (cdr scdr)))
> def args: : (<object 1488721> (scdr (cdr s)))
> def args: : (<object 1488721> (scddr (cdr scdr)))
> def args: : (<object 1488789> (scdr (cdr s)))
> def args: : (<object 1488789> (scddr (cdr scdr)))
> def args: : (<object 1488861> (scdr (cdr s)))
> def args: : (<object 1488861> (scddr (cdr scdr)))
> def args: : (<object 1488929> (scdr (cdr s)))
> def args: : (<object 1488929> (scddr (cdr scdr)))
> def args: : (<object 1489001> (scdr (cdr s)))
> def args: : (<object 1489001> (scddr (cdr scdr)))
> def args: : (<object 1489069> (scdr (cdr s)))
> def args: : (<object 1489069> (scddr (cdr scdr)))
> def args: : (<object 1489141> (scdr (cdr s)))
> def args: : (<object 1489141> (scddr (cdr scdr)))
> def args: : (<object 1489209> (scdr (cdr s)))
> def args: : (<object 1489209> (scddr (cdr scdr)))
> def args: : (<object 1489281> (scdr (cdr s)))
> def args: : (<object 1489281> (scddr (cdr scdr)))
> def args: : (<object 1489349> (scdr (cdr s)))
> def args: : (<object 1489349> (scddr (cdr scdr)))
> def args: : (<object 1489421> (scdr (cdr s)))
> def args: : (<object 1489421> (scddr (cdr scdr)))
> def args: : (<object 1489489> (scdr (cdr s)))
> def args: : (<object 1489489> (scddr (cdr scdr)))
> def args: : (<object 1489561> (scdr (cdr s)))
> def args: : (<object 1489561> (scddr (cdr scdr)))
> def args: : (<object 1489629> (scdr (cdr s)))
> def args: : (<object 1489629> (scddr (cdr scdr)))
> def args: : (<object 1489701> (scdr (cdr s)))
> def args: : (<object 1489701> (scddr (cdr scdr)))
> def args: : (<object 1489769> (scdr (cdr s)))
> def args: : (<object 1489769> (scddr (cdr scdr)))
> def args: : (<object 1489841> (scdr (cdr s)))
> def args: : (<object 1489841> (scddr (cdr scdr)))
> def args: : (<object 1489909> (scdr (cdr s)))
> def args: : (<object 1489909> (scddr (cdr scdr)))
> def args: : (<object 1489981> (scdr (cdr s)))
> def args: : (<object 1489981> (scddr (cdr scdr)))
> def args: : (<object 1490049> (scdr (cdr s)))
> def args: : (<object 1490049> (scddr (cdr scdr)))
> def args: : (<object 1490121> (scdr (cdr s)))
> def args: : (<object 1490121> (scddr (cdr scdr)))
> def args: : (<object 1490189> (scdr (cdr s)))
> def args: : (<object 1490189> (scddr (cdr scdr)))
> def args: : (<object 1490261> (scdr (cdr s)))
> def args: : (<object 1490261> (scddr (cdr scdr)))
> def args: : (<object 1490329> (scdr (cdr s)))
> def args: : (<object 1490329> (scddr (cdr scdr)))
> def args: : (<object 1490401> (scdr (cdr s)))
> def args: : (<object 1490401> (scddr (cdr scdr)))
> def args: : (<object 1490469> (scdr (cdr s)))
> def args: : (<object 1490469> (scddr (cdr scdr)))
> def args: : (<object 1490541> (scdr (cdr s)))
> def args: : (<object 1490541> (scddr (cdr scdr)))
> def args: : (<object 1490609> (scdr (cdr s)))
> def args: : (<object 1490609> (scddr (cdr scdr)))
> def args: : (<object 1490681> (scdr (cdr s)))
> def args: : (<object 1490681> (scddr (cdr scdr)))
> def args: : (<object 1490749> (scdr (cdr s)))
> def args: : (<object 1490749> (scddr (cdr scdr)))
> def args: : (<object 1490821> (scdr (cdr s)))
> def args: : (<object 1490821> (scddr (cdr scdr)))
> def args: : (<object 1490889> (scdr (cdr s)))
> def args: : (<object 1490889> (scddr (cdr scdr)))
> def args: : (<object 1490961> (scdr (cdr s)))
> def args: : (<object 1490961> (scddr (cdr scdr)))
> def args: : (<object 1491029> (scdr (cdr s)))
> def args: : (<object 1491029> (scddr (cdr scdr)))
> def args: : (<object 1491101> (scdr (cdr s)))
> def args: : (<object 1491101> (scddr (cdr scdr)))
> def args: : (<object 1491169> (scdr (cdr s)))
> def args: : (<object 1491169> (scddr (cdr scdr)))
> def args: : (<object 1491241> (scdr (cdr s)))
> def args: : (<object 1491241> (scddr (cdr scdr)))
> def args: : (<object 1491309> (scdr (cdr s)))
> def args: : (<object 1491309> (scddr (cdr scdr)))
> def args: : (<object 1491381> (scdr (cdr s)))
> def args: : (<object 1491381> (scddr (cdr scdr)))
> def args: : (<object 1491449> (scdr (cdr s)))
> def args: : (<object 1491449> (scddr (cdr scdr)))
> def args: : (<object 1491521> (scdr (cdr s)))
> def args: : (<object 1491521> (scddr (cdr scdr)))
> def args: : (<object 1491589> (scdr (cdr s)))
> def args: : (<object 1491589> (scddr (cdr scdr)))
> def args: : (<object 1491661> (scdr (cdr s)))
> def args: : (<object 1491661> (scddr (cdr scdr)))
> def args: : (<object 1491729> (scdr (cdr s)))
> def args: : (<object 1491729> (scddr (cdr scdr)))
> def args: : (<object 1491801> (scdr (cdr s)))
> def args: : (<object 1491801> (scddr (cdr scdr)))
> def args: : (<object 1491869> (scdr (cdr s)))
> def args: : (<object 1491869> (scddr (cdr scdr)))
> def args: : (<object 1491941> (scdr (cdr s)))
> def args: : (<object 1491941> (scddr (cdr scdr)))
> def args: : (<object 1492009> (scdr (cdr s)))
> def args: : (<object 1492009> (scddr (cdr scdr)))
> def args: : (<object 1492081> (scdr (cdr s)))
> def args: : (<object 1492081> (scddr (cdr scdr)))
> def args: : (<object 1492149> (scdr (cdr s)))
> def args: : (<object 1492149> (scddr (cdr scdr)))
> def args: : (<object 1492221> (scdr (cdr s)))
> def args: : (<object 1492221> (scddr (cdr scdr)))
> def args: : (<object 1492289> (scdr (cdr s)))
> def args: : (<object 1492289> (scddr (cdr scdr)))
> def args: : (<object 1492361> (scdr (cdr s)))
> def args: : (<object 1492361> (scddr (cdr scdr)))
> def args: : (<object 1492429> (scdr (cdr s)))
> def args: : (<object 1492429> (scddr (cdr scdr)))
> def args: : (<object 1492501> (scdr (cdr s)))
> def args: : (<object 1492501> (scddr (cdr scdr)))
> def args: : (<object 1492569> (scdr (cdr s)))
> def args: : (<object 1492569> (scddr (cdr scdr)))
> def args: : (<object 1492641> (scdr (cdr s)))
> def args: : (<object 1492641> (scddr (cdr scdr)))
> def args: : (<object 1492709> (scdr (cdr s)))
> def args: : (<object 1492709> (scddr (cdr scdr)))
> def args: : (<object 1492781> (scdr (cdr s)))
> def args: : (<object 1492781> (scddr (cdr scdr)))
> def args: : (<object 1492849> (scdr (cdr s)))
> def args: : (<object 1492849> (scddr (cdr scdr)))
> def args: : (<object 1492921> (scdr (cdr s)))
> def args: : (<object 1492921> (scddr (cdr scdr)))
> def args: : (<object 1492989> (scdr (cdr s)))
> def args: : (<object 1492989> (scddr (cdr scdr)))
> def args: : (<object 1493061> (scdr (cdr s)))
> def args: : (<object 1493061> (scddr (cdr scdr)))
> def args: : (<object 1493129> (scdr (cdr s)))
> def args: : (<object 1493129> (scddr (cdr scdr)))
> def args: : (<object 1493201> (scdr (cdr s)))
> def args: : (<object 1493201> (scddr (cdr scdr)))
> def args: : (<object 1493269> (scdr (cdr s)))
> def args: : (<object 1493269> (scddr (cdr scdr)))
> def args: : (<object 1493341> (scdr (cdr s)))
> def args: : (<object 1493341> (scddr (cdr scdr)))
> def args: : (<object 1493409> (scdr (cdr s)))
> def args: : (<object 1493409> (scddr (cdr scdr)))
> def args: : (<object 1493481> (scdr (cdr s)))
> def args: : (<object 1493481> (scddr (cdr scdr)))
> def args: : (<object 1493549> (scdr (cdr s)))
> def args: : (<object 1493549> (scddr (cdr scdr)))
> def args: : (<object 1493621> (scdr (cdr s)))
> def args: : (<object 1493621> (scddr (cdr scdr)))
> def args: : (<object 1493689> (scdr (cdr s)))
> def args: : (<object 1493689> (scddr (cdr scdr)))
> def args: : (<object 1493761> (scdr (cdr s)))
> def args: : (<object 1493761> (scddr (cdr scdr)))
> def args: : (<object 1493829> (scdr (cdr s)))
> def args: : (<object 1493829> (scddr (cdr scdr)))
> def args: : (<object 1493901> (scdr (cdr s)))
> def args: : (<object 1493901> (scddr (cdr scdr)))
> def args: : (<object 1493969> (scdr (cdr s)))
> def args: : (<object 1493969> (scddr (cdr scdr)))
> def args: : (<object 1494041> (scdr (cdr s)))
> def args: : (<object 1494041> (scddr (cdr scdr)))
> def args: : (<object 1494109> (scdr (cdr s)))
> def args: : (<object 1494109> (scddr (cdr scdr)))
> def args: : (<object 1494181> (scdr (cdr s)))
> def args: : (<object 1494181> (scddr (cdr scdr)))
> def args: : (<object 1494249> (scdr (cdr s)))
> def args: : (<object 1494249> (scddr (cdr scdr)))
> def args: : (<object 1494321> (scdr (cdr s)))
> def args: : (<object 1494321> (scddr (cdr scdr)))
> def args: : (<object 1494389> (scdr (cdr s)))
> def args: : (<object 1494389> (scddr (cdr scdr)))
> def args: : (<object 1494461> (scdr (cdr s)))
> def args: : (<object 1494461> (scddr (cdr scdr)))
> def args: : (<object 1494529> (scdr (cdr s)))
> def args: : (<object 1494529> (scddr (cdr scdr)))
> def args: : (<object 1494601> (scdr (cdr s)))
> def args: : (<object 1494601> (scddr (cdr scdr)))
> def args: : (<object 1494669> (scdr (cdr s)))
> def args: : (<object 1494669> (scddr (cdr scdr)))
> def args: : (<object 1494741> (scdr (cdr s)))
> def args: : (<object 1494741> (scddr (cdr scdr)))
> def args: : (<object 1494809> (scdr (cdr s)))
> def args: : (<object 1494809> (scddr (cdr scdr)))
> def args: : (<object 1494881> (scdr (cdr s)))
> def args: : (<object 1494881> (scddr (cdr scdr)))
> 4560def args: : (<object 1511302> (env (if (null? @) # (car @))))
>  def args: : (<object 1511409> (env (if (null? @) # (car @))))
> def args: : (<object 1511529> (scdr (cdr s)))
> def args: : (<object 1511529> (scddr (cdr scdr)))
> def args: : (<object 1511601> (scdr (cdr s)))
> def args: : (<object 1511601> (scddr (cdr scdr)))
> def args: : (<object 1511673> (scdr (cdr s)))
> def args: : (<object 1511673> (scddr (cdr scdr)))
> def args: : (<object 1511741> (scdr (cdr s)))
> def args: : (<object 1511741> (scddr (cdr scdr)))
> def args: : (<object 1511980> (scdr (cdr s)))
> def args: : (<object 1511980> (scddr (cdr scdr)))
> def args: : (<object 1512052> (scdr (cdr s)))
> def args: : (<object 1512052> (scddr (cdr scdr)))
> def args: : (<object 1512120> (scdr (cdr s)))
> def args: : (<object 1512120> (scddr (cdr scdr)))
> def args: : (<object 1512192> (scdr (cdr s)))
> def args: : (<object 1512192> (scddr (cdr scdr)))
> def args: : (<object 1512260> (scdr (cdr s)))
> def args: : (<object 1512260> (scddr (cdr scdr)))
> def args: : (<object 1512332> (scdr (cdr s)))
> def args: : (<object 1512332> (scddr (cdr scdr)))
> def args: : (<object 1512400> (scdr (cdr s)))
> def args: : (<object 1512400> (scddr (cdr scdr)))
> def args: : (<object 1512472> (scdr (cdr s)))
> def args: : (<object 1512472> (scddr (cdr scdr)))
> def args: : (<object 1512540> (scdr (cdr s)))
> def args: : (<object 1512540> (scddr (cdr scdr)))
> def args: : (<object 1512612> (scdr (cdr s)))
> def args: : (<object 1512612> (scddr (cdr scdr)))
> def args: : (<object 1512680> (scdr (cdr s)))
> def args: : (<object 1512680> (scddr (cdr scdr)))
> def args: : (<object 1512752> (scdr (cdr s)))
> def args: : (<object 1512752> (scddr (cdr scdr)))
> def args: : (<object 1512820> (scdr (cdr s)))
> def args: : (<object 1512820> (scddr (cdr scdr)))
> def args: : (<object 1512892> (scdr (cdr s)))
> def args: : (<object 1512892> (scddr (cdr scdr)))
> def args: : (<object 1512960> (scdr (cdr s)))
> def args: : (<object 1512960> (scddr (cdr scdr)))
> def args: : (<object 1513032> (scdr (cdr s)))
> def args: : (<object 1513032> (scddr (cdr scdr)))
> def args: : (<object 1513100> (scdr (cdr s)))
> def args: : (<object 1513100> (scddr (cdr scdr)))
> def args: : (<object 1513172> (scdr (cdr s)))
> def args: : (<object 1513172> (scddr (cdr scdr)))
> def args: : (<object 1513240> (scdr (cdr s)))
> def args: : (<object 1513240> (scddr (cdr scdr)))
> def args: : (<object 1513312> (scdr (cdr s)))
> def args: : (<object 1513312> (scddr (cdr scdr)))
> def args: : (<object 1513380> (scdr (cdr s)))
> def args: : (<object 1513380> (scddr (cdr scdr)))
> def args: : (<object 1513452> (scdr (cdr s)))
> def args: : (<object 1513452> (scddr (cdr scdr)))
> def args: : (<object 1513520> (scdr (cdr s)))
> def args: : (<object 1513520> (scddr (cdr scdr)))
> def args: : (<object 1513592> (scdr (cdr s)))
> def args: : (<object 1513592> (scddr (cdr scdr)))
> def args: : (<object 1513660> (scdr (cdr s)))
> def args: : (<object 1513660> (scddr (cdr scdr)))
> def args: : (<object 1513732> (scdr (cdr s)))
> def args: : (<object 1513732> (scddr (cdr scdr)))
> def args: : (<object 1513800> (scdr (cdr s)))
> def args: : (<object 1513800> (scddr (cdr scdr)))
> def args: : (<object 1513872> (scdr (cdr s)))
> def args: : (<object 1513872> (scddr (cdr scdr)))
> def args: : (<object 1513940> (scdr (cdr s)))
> def args: : (<object 1513940> (scddr (cdr scdr)))
> def args: : (<object 1514012> (scdr (cdr s)))
> def args: : (<object 1514012> (scddr (cdr scdr)))
> def args: : (<object 1514080> (scdr (cdr s)))
> def args: : (<object 1514080> (scddr (cdr scdr)))
> def args: : (<object 1514152> (scdr (cdr s)))
> def args: : (<object 1514152> (scddr (cdr scdr)))
> def args: : (<object 1514220> (scdr (cdr s)))
> def args: : (<object 1514220> (scddr (cdr scdr)))
> def args: : (<object 1514292> (scdr (cdr s)))
> def args: : (<object 1514292> (scddr (cdr scdr)))
> def args: : (<object 1514360> (scdr (cdr s)))
> def args: : (<object 1514360> (scddr (cdr scdr)))
> def args: : (<object 1514432> (scdr (cdr s)))
> def args: : (<object 1514432> (scddr (cdr scdr)))
> def args: : (<object 1514500> (scdr (cdr s)))
> def args: : (<object 1514500> (scddr (cdr scdr)))
> def args: : (<object 1514572> (scdr (cdr s)))
> def args: : (<object 1514572> (scddr (cdr scdr)))
> def args: : (<object 1514640> (scdr (cdr s)))
> def args: : (<object 1514640> (scddr (cdr scdr)))
> def args: : (<object 1514712> (scdr (cdr s)))
> def args: : (<object 1514712> (scddr (cdr scdr)))
> def args: : (<object 1514780> (scdr (cdr s)))
> def args: : (<object 1514780> (scddr (cdr scdr)))
> def args: : (<object 1514852> (scdr (cdr s)))
> def args: : (<object 1514852> (scddr (cdr scdr)))
> def args: : (<object 1514920> (scdr (cdr s)))
> def args: : (<object 1514920> (scddr (cdr scdr)))
> def args: : (<object 1514992> (scdr (cdr s)))
> def args: : (<object 1514992> (scddr (cdr scdr)))
> def args: : (<object 1515060> (scdr (cdr s)))
> def args: : (<object 1515060> (scddr (cdr scdr)))
> def args: : (<object 1515132> (scdr (cdr s)))
> def args: : (<object 1515132> (scddr (cdr scdr)))
> def args: : (<object 1515200> (scdr (cdr s)))
> def args: : (<object 1515200> (scddr (cdr scdr)))
> def args: : (<object 1515272> (scdr (cdr s)))
> def args: : (<object 1515272> (scddr (cdr scdr)))
> def args: : (<object 1515340> (scdr (cdr s)))
> def args: : (<object 1515340> (scddr (cdr scdr)))
> def args: : (<object 1515412> (scdr (cdr s)))
> def args: : (<object 1515412> (scddr (cdr scdr)))
> def args: : (<object 1515480> (scdr (cdr s)))
> def args: : (<object 1515480> (scddr (cdr scdr)))
> def args: : (<object 1515552> (scdr (cdr s)))
> def args: : (<object 1515552> (scddr (cdr scdr)))
> def args: : (<object 1515620> (scdr (cdr s)))
> def args: : (<object 1515620> (scddr (cdr scdr)))
> def args: : (<object 1515692> (scdr (cdr s)))
> def args: : (<object 1515692> (scddr (cdr scdr)))
> def args: : (<object 1515760> (scdr (cdr s)))
> def args: : (<object 1515760> (scddr (cdr scdr)))
> def args: : (<object 1515832> (scdr (cdr s)))
> def args: : (<object 1515832> (scddr (cdr scdr)))
> def args: : (<object 1515900> (scdr (cdr s)))
> def args: : (<object 1515900> (scddr (cdr scdr)))
> def args: : (<object 1515972> (scdr (cdr s)))
> def args: : (<object 1515972> (scddr (cdr scdr)))
> def args: : (<object 1516040> (scdr (cdr s)))
> def args: : (<object 1516040> (scddr (cdr scdr)))
> def args: : (<object 1516112> (scdr (cdr s)))
> def args: : (<object 1516112> (scddr (cdr scdr)))
> def args: : (<object 1516180> (scdr (cdr s)))
> def args: : (<object 1516180> (scddr (cdr scdr)))
> def args: : (<object 1516252> (scdr (cdr s)))
> def args: : (<object 1516252> (scddr (cdr scdr)))
> def args: : (<object 1516320> (scdr (cdr s)))
> def args: : (<object 1516320> (scddr (cdr scdr)))
> def args: : (<object 1516392> (scdr (cdr s)))
> def args: : (<object 1516392> (scddr (cdr scdr)))
> def args: : (<object 1516460> (scdr (cdr s)))
> def args: : (<object 1516460> (scddr (cdr scdr)))
> def args: : (<object 1516532> (scdr (cdr s)))
> def args: : (<object 1516532> (scddr (cdr scdr)))
> def args: : (<object 1516600> (scdr (cdr s)))
> def args: : (<object 1516600> (scddr (cdr scdr)))
> def args: : (<object 1516672> (scdr (cdr s)))
> def args: : (<object 1516672> (scddr (cdr scdr)))
> def args: : (<object 1516740> (scdr (cdr s)))
> def args: : (<object 1516740> (scddr (cdr scdr)))
> def args: : (<object 1516812> (scdr (cdr s)))
> def args: : (<object 1516812> (scddr (cdr scdr)))
> def args: : (<object 1516880> (scdr (cdr s)))
> def args: : (<object 1516880> (scddr (cdr scdr)))
> def args: : (<object 1516952> (scdr (cdr s)))
> def args: : (<object 1516952> (scddr (cdr scdr)))
> def args: : (<object 1517020> (scdr (cdr s)))
> def args: : (<object 1517020> (scddr (cdr scdr)))
> def args: : (<object 1517092> (scdr (cdr s)))
> def args: : (<object 1517092> (scddr (cdr scdr)))
> def args: : (<object 1517160> (scdr (cdr s)))
> def args: : (<object 1517160> (scddr (cdr scdr)))
> def args: : (<object 1517232> (scdr (cdr s)))
> def args: : (<object 1517232> (scddr (cdr scdr)))
> def args: : (<object 1517300> (scdr (cdr s)))
> def args: : (<object 1517300> (scddr (cdr scdr)))
> def args: : (<object 1517372> (scdr (cdr s)))
> def args: : (<object 1517372> (scddr (cdr scdr)))
> def args: : (<object 1517440> (scdr (cdr s)))
> def args: : (<object 1517440> (scddr (cdr scdr)))
> def args: : (<object 1517512> (scdr (cdr s)))
> def args: : (<object 1517512> (scddr (cdr scdr)))
> def args: : (<object 1517580> (scdr (cdr s)))
> def args: : (<object 1517580> (scddr (cdr scdr)))
> def args: : (<object 1517652> (scdr (cdr s)))
> def args: : (<object 1517652> (scddr (cdr scdr)))
> def args: : (<object 1517720> (scdr (cdr s)))
> def args: : (<object 1517720> (scddr (cdr scdr)))
> def args: : (<object 1517792> (scdr (cdr s)))
> def args: : (<object 1517792> (scddr (cdr scdr)))
> def args: : (<object 1517860> (scdr (cdr s)))
> def args: : (<object 1517860> (scddr (cdr scdr)))
> def args: : (<object 1517932> (scdr (cdr s)))
> def args: : (<object 1517932> (scddr (cdr scdr)))
> def args: : (<object 1518000> (scdr (cdr s)))
> def args: : (<object 1518000> (scddr (cdr scdr)))
> def args: : (<object 1518072> (scdr (cdr s)))
> def args: : (<object 1518072> (scddr (cdr scdr)))
> def args: : (<object 1518140> (scdr (cdr s)))
> def args: : (<object 1518140> (scddr (cdr scdr)))
> def args: : (<object 1518212> (scdr (cdr s)))
> def args: : (<object 1518212> (scddr (cdr scdr)))
> def args: : (<object 1518280> (scdr (cdr s)))
> def args: : (<object 1518280> (scddr (cdr scdr)))
> def args: : (<object 1518352> (scdr (cdr s)))
> def args: : (<object 1518352> (scddr (cdr scdr)))
> def args: : (<object 1518420> (scdr (cdr s)))
> def args: : (<object 1518420> (scddr (cdr scdr)))
> def args: : (<object 1518492> (scdr (cdr s)))
> def args: : (<object 1518492> (scddr (cdr scdr)))
> def args: : (<object 1518560> (scdr (cdr s)))
> def args: : (<object 1518560> (scddr (cdr scdr)))
> def args: : (<object 1518632> (scdr (cdr s)))
> def args: : (<object 1518632> (scddr (cdr scdr)))
> def args: : (<object 1518700> (scdr (cdr s)))
> def args: : (<object 1518700> (scddr (cdr scdr)))
> def args: : (<object 1518772> (scdr (cdr s)))
> def args: : (<object 1518772> (scddr (cdr scdr)))
> def args: : (<object 1518840> (scdr (cdr s)))
> def args: : (<object 1518840> (scddr (cdr scdr)))
> def args: : (<object 1518912> (scdr (cdr s)))
> def args: : (<object 1518912> (scddr (cdr scdr)))
> def args: : (<object 1518980> (scdr (cdr s)))
> def args: : (<object 1518980> (scddr (cdr scdr)))
> def args: : (<object 1519052> (scdr (cdr s)))
> def args: : (<object 1519052> (scddr (cdr scdr)))
> def args: : (<object 1519120> (scdr (cdr s)))
> def args: : (<object 1519120> (scddr (cdr scdr)))
> def args: : (<object 1519192> (scdr (cdr s)))
> def args: : (<object 1519192> (scddr (cdr scdr)))
> def args: : (<object 1519260> (scdr (cdr s)))
> def args: : (<object 1519260> (scddr (cdr scdr)))
> def args: : (<object 1519332> (scdr (cdr s)))
> def args: : (<object 1519332> (scddr (cdr scdr)))
> def args: : (<object 1519400> (scdr (cdr s)))
> def args: : (<object 1519400> (scddr (cdr scdr)))
> def args: : (<object 1519472> (scdr (cdr s)))
> def args: : (<object 1519472> (scddr (cdr scdr)))
> def args: : (<object 1519540> (scdr (cdr s)))
> def args: : (<object 1519540> (scddr (cdr scdr)))
> def args: : (<object 1519612> (scdr (cdr s)))
> def args: : (<object 1519612> (scddr (cdr scdr)))
> def args: : (<object 1519680> (scdr (cdr s)))
> def args: : (<object 1519680> (scddr (cdr scdr)))
> def args: : (<object 1519752> (scdr (cdr s)))
> def args: : (<object 1519752> (scddr (cdr scdr)))
> def args: : (<object 1519820> (scdr (cdr s)))
> def args: : (<object 1519820> (scddr (cdr scdr)))
> def args: : (<object 1519892> (scdr (cdr s)))
> def args: : (<object 1519892> (scddr (cdr scdr)))
> def args: : (<object 1519960> (scdr (cdr s)))
> def args: : (<object 1519960> (scddr (cdr scdr)))
> def args: : (<object 1520032> (scdr (cdr s)))
> def args: : (<object 1520032> (scddr (cdr scdr)))
> def args: : (<object 1520100> (scdr (cdr s)))
> def args: : (<object 1520100> (scddr (cdr scdr)))
> def args: : (<object 1520172> (scdr (cdr s)))
> def args: : (<object 1520172> (scddr (cdr scdr)))
> def args: : (<object 1520240> (scdr (cdr s)))
> def args: : (<object 1520240> (scddr (cdr scdr)))
> def args: : (<object 1520312> (scdr (cdr s)))
> def args: : (<object 1520312> (scddr (cdr scdr)))
> def args: : (<object 1520380> (scdr (cdr s)))
> def args: : (<object 1520380> (scddr (cdr scdr)))
> def args: : (<object 1520452> (scdr (cdr s)))
> def args: : (<object 1520452> (scddr (cdr scdr)))
> def args: : (<object 1520520> (scdr (cdr s)))
> def args: : (<object 1520520> (scddr (cdr scdr)))
> def args: : (<object 1520592> (scdr (cdr s)))
> def args: : (<object 1520592> (scddr (cdr scdr)))
> def args: : (<object 1520660> (scdr (cdr s)))
> def args: : (<object 1520660> (scddr (cdr scdr)))
> def args: : (<object 1520732> (scdr (cdr s)))
> def args: : (<object 1520732> (scddr (cdr scdr)))
> def args: : (<object 1520800> (scdr (cdr s)))
> def args: : (<object 1520800> (scddr (cdr scdr)))
> def args: : (<object 1520872> (scdr (cdr s)))
> def args: : (<object 1520872> (scddr (cdr scdr)))
> def args: : (<object 1520940> (scdr (cdr s)))
> def args: : (<object 1520940> (scddr (cdr scdr)))
> def args: : (<object 1521012> (scdr (cdr s)))
> def args: : (<object 1521012> (scddr (cdr scdr)))
> def args: : (<object 1521080> (scdr (cdr s)))
> def args: : (<object 1521080> (scddr (cdr scdr)))
> def args: : (<object 1521152> (scdr (cdr s)))
> def args: : (<object 1521152> (scddr (cdr scdr)))
> def args: : (<object 1521220> (scdr (cdr s)))
> def args: : (<object 1521220> (scddr (cdr scdr)))
> def args: : (<object 1521292> (scdr (cdr s)))
> def args: : (<object 1521292> (scddr (cdr scdr)))
> def args: : (<object 1521360> (scdr (cdr s)))
> def args: : (<object 1521360> (scddr (cdr scdr)))
> def args: : (<object 1521432> (scdr (cdr s)))
> def args: : (<object 1521432> (scddr (cdr scdr)))
> def args: : (<object 1521500> (scdr (cdr s)))
> def args: : (<object 1521500> (scddr (cdr scdr)))
> def args: : (<object 1521572> (scdr (cdr s)))
> def args: : (<object 1521572> (scddr (cdr scdr)))
> def args: : (<object 1521640> (scdr (cdr s)))
> def args: : (<object 1521640> (scddr (cdr scdr)))
> def args: : (<object 1521712> (scdr (cdr s)))
> def args: : (<object 1521712> (scddr (cdr scdr)))
> def args: : (<object 1521780> (scdr (cdr s)))
> def args: : (<object 1521780> (scddr (cdr scdr)))
> def args: : (<object 1521852> (scdr (cdr s)))
> def args: : (<object 1521852> (scddr (cdr scdr)))
> def args: : (<object 1521920> (scdr (cdr s)))
> def args: : (<object 1521920> (scddr (cdr scdr)))
> def args: : (<object 1521992> (scdr (cdr s)))
> def args: : (<object 1521992> (scddr (cdr scdr)))
> def args: : (<object 1522060> (scdr (cdr s)))
> def args: : (<object 1522060> (scddr (cdr scdr)))
> def args: : (<object 1522132> (scdr (cdr s)))
> def args: : (<object 1522132> (scddr (cdr scdr)))
> def args: : (<object 1522200> (scdr (cdr s)))
> def args: : (<object 1522200> (scddr (cdr scdr)))
> def args: : (<object 1522272> (scdr (cdr s)))
> def args: : (<object 1522272> (scddr (cdr scdr)))
> def args: : (<object 1522340> (scdr (cdr s)))
> def args: : (<object 1522340> (scddr (cdr scdr)))
> def args: : (<object 1522412> (scdr (cdr s)))
> def args: : (<object 1522412> (scddr (cdr scdr)))
> def args: : (<object 1522480> (scdr (cdr s)))
> def args: : (<object 1522480> (scddr (cdr scdr)))
> def args: : (<object 1522552> (scdr (cdr s)))
> def args: : (<object 1522552> (scddr (cdr scdr)))
> def args: : (<object 1522620> (scdr (cdr s)))
> def args: : (<object 1522620> (scddr (cdr scdr)))
> def args: : (<object 1522692> (scdr (cdr s)))
> def args: : (<object 1522692> (scddr (cdr scdr)))
> def args: : (<object 1522760> (scdr (cdr s)))
> def args: : (<object 1522760> (scddr (cdr scdr)))
> def args: : (<object 1522832> (scdr (cdr s)))
> def args: : (<object 1522832> (scddr (cdr scdr)))
> def args: : (<object 1522900> (scdr (cdr s)))
> def args: : (<object 1522900> (scddr (cdr scdr)))
> def args: : (<object 1522972> (scdr (cdr s)))
> def args: : (<object 1522972> (scddr (cdr scdr)))
> def args: : (<object 1523040> (scdr (cdr s)))
> def args: : (<object 1523040> (scddr (cdr scdr)))
> def args: : (<object 1523112> (scdr (cdr s)))
> def args: : (<object 1523112> (scddr (cdr scdr)))
> def args: : (<object 1523180> (scdr (cdr s)))
> def args: : (<object 1523180> (scddr (cdr scdr)))
> def args: : (<object 1523252> (scdr (cdr s)))
> def args: : (<object 1523252> (scddr (cdr scdr)))
> def args: : (<object 1523320> (scdr (cdr s)))
> def args: : (<object 1523320> (scddr (cdr scdr)))
> def args: : (<object 1523392> (scdr (cdr s)))
> def args: : (<object 1523392> (scddr (cdr scdr)))
> def args: : (<object 1523460> (scdr (cdr s)))
> def args: : (<object 1523460> (scddr (cdr scdr)))
> def args: : (<object 1523532> (scdr (cdr s)))
> def args: : (<object 1523532> (scddr (cdr scdr)))
> def args: : (<object 1523600> (scdr (cdr s)))
> def args: : (<object 1523600> (scddr (cdr scdr)))
> def args: : (<object 1523672> (scdr (cdr s)))
> def args: : (<object 1523672> (scddr (cdr scdr)))
> def args: : (<object 1523740> (scdr (cdr s)))
> def args: : (<object 1523740> (scddr (cdr scdr)))
> def args: : (<object 1523812> (scdr (cdr s)))
> def args: : (<object 1523812> (scddr (cdr scdr)))
> def args: : (<object 1523880> (scdr (cdr s)))
> def args: : (<object 1523880> (scddr (cdr scdr)))
> def args: : (<object 1523952> (scdr (cdr s)))
> def args: : (<object 1523952> (scddr (cdr scdr)))
> def args: : (<object 1524020> (scdr (cdr s)))
> def args: : (<object 1524020> (scddr (cdr scdr)))
> def args: : (<object 1524092> (scdr (cdr s)))
> def args: : (<object 1524092> (scddr (cdr scdr)))
> def args: : (<object 1524160> (scdr (cdr s)))
> def args: : (<object 1524160> (scddr (cdr scdr)))
> def args: : (<object 1524232> (scdr (cdr s)))
> def args: : (<object 1524232> (scddr (cdr scdr)))
> def args: : (<object 1524300> (scdr (cdr s)))
> def args: : (<object 1524300> (scddr (cdr scdr)))
> def args: : (<object 1524372> (scdr (cdr s)))
> def args: : (<object 1524372> (scddr (cdr scdr)))
> def args: : (<object 1524440> (scdr (cdr s)))
> def args: : (<object 1524440> (scddr (cdr scdr)))
> def args: : (<object 1524512> (scdr (cdr s)))
> def args: : (<object 1524512> (scddr (cdr scdr)))
> def args: : (<object 1524580> (scdr (cdr s)))
> def args: : (<object 1524580> (scddr (cdr scdr)))
> def args: : (<object 1524652> (scdr (cdr s)))
> def args: : (<object 1524652> (scddr (cdr scdr)))
> def args: : (<object 1524720> (scdr (cdr s)))
> def args: : (<object 1524720> (scddr (cdr scdr)))
> def args: : (<object 1524792> (scdr (cdr s)))
> def args: : (<object 1524792> (scddr (cdr scdr)))
> def args: : (<object 1524860> (scdr (cdr s)))
> def args: : (<object 1524860> (scddr (cdr scdr)))
> def args: : (<object 1524932> (scdr (cdr s)))
> def args: : (<object 1524932> (scddr (cdr scdr)))
> def args: : (<object 1525000> (scdr (cdr s)))
> def args: : (<object 1525000> (scddr (cdr scdr)))
> def args: : (<object 1525072> (scdr (cdr s)))
> def args: : (<object 1525072> (scddr (cdr scdr)))
> 4656def args: : (<object 1541664> (env (if (null? @) # (car @))))
>  def args: : (<object 1541771> (env (if (null? @) # (car @))))
> def args: : (<object 1541891> (scdr (cdr s)))
> def args: : (<object 1541891> (scddr (cdr scdr)))
> def args: : (<object 1541963> (scdr (cdr s)))
> def args: : (<object 1541963> (scddr (cdr scdr)))
> def args: : (<object 1542035> (scdr (cdr s)))
> def args: : (<object 1542035> (scddr (cdr scdr)))
> def args: : (<object 1542103> (scdr (cdr s)))
> def args: : (<object 1542103> (scddr (cdr scdr)))
> def args: : (<object 1542342> (scdr (cdr s)))
> def args: : (<object 1542342> (scddr (cdr scdr)))
> def args: : (<object 1542414> (scdr (cdr s)))
> def args: : (<object 1542414> (scddr (cdr scdr)))
> def args: : (<object 1542482> (scdr (cdr s)))
> def args: : (<object 1542482> (scddr (cdr scdr)))
> def args: : (<object 1542554> (scdr (cdr s)))
> def args: : (<object 1542554> (scddr (cdr scdr)))
> def args: : (<object 1542622> (scdr (cdr s)))
> def args: : (<object 1542622> (scddr (cdr scdr)))
> def args: : (<object 1542694> (scdr (cdr s)))
> def args: : (<object 1542694> (scddr (cdr scdr)))
> def args: : (<object 1542762> (scdr (cdr s)))
> def args: : (<object 1542762> (scddr (cdr scdr)))
> def args: : (<object 1542834> (scdr (cdr s)))
> def args: : (<object 1542834> (scddr (cdr scdr)))
> def args: : (<object 1542902> (scdr (cdr s)))
> def args: : (<object 1542902> (scddr (cdr scdr)))
> def args: : (<object 1542974> (scdr (cdr s)))
> def args: : (<object 1542974> (scddr (cdr scdr)))
> def args: : (<object 1543042> (scdr (cdr s)))
> def args: : (<object 1543042> (scddr (cdr scdr)))
> def args: : (<object 1543114> (scdr (cdr s)))
> def args: : (<object 1543114> (scddr (cdr scdr)))
> def args: : (<object 1543182> (scdr (cdr s)))
> def args: : (<object 1543182> (scddr (cdr scdr)))
> def args: : (<object 1543254> (scdr (cdr s)))
> def args: : (<object 1543254> (scddr (cdr scdr)))
> def args: : (<object 1543322> (scdr (cdr s)))
> def args: : (<object 1543322> (scddr (cdr scdr)))
> def args: : (<object 1543394> (scdr (cdr s)))
> def args: : (<object 1543394> (scddr (cdr scdr)))
> def args: : (<object 1543462> (scdr (cdr s)))
> def args: : (<object 1543462> (scddr (cdr scdr)))
> def args: : (<object 1543534> (scdr (cdr s)))
> def args: : (<object 1543534> (scddr (cdr scdr)))
> def args: : (<object 1543602> (scdr (cdr s)))
> def args: : (<object 1543602> (scddr (cdr scdr)))
> def args: : (<object 1543674> (scdr (cdr s)))
> def args: : (<object 1543674> (scddr (cdr scdr)))
> def args: : (<object 1543742> (scdr (cdr s)))
> def args: : (<object 1543742> (scddr (cdr scdr)))
> def args: : (<object 1543814> (scdr (cdr s)))
> def args: : (<object 1543814> (scddr (cdr scdr)))
> def args: : (<object 1543882> (scdr (cdr s)))
> def args: : (<object 1543882> (scddr (cdr scdr)))
> def args: : (<object 1543954> (scdr (cdr s)))
> def args: : (<object 1543954> (scddr (cdr scdr)))
> def args: : (<object 1544022> (scdr (cdr s)))
> def args: : (<object 1544022> (scddr (cdr scdr)))
> def args: : (<object 1544094> (scdr (cdr s)))
> def args: : (<object 1544094> (scddr (cdr scdr)))
> def args: : (<object 1544162> (scdr (cdr s)))
> def args: : (<object 1544162> (scddr (cdr scdr)))
> def args: : (<object 1544234> (scdr (cdr s)))
> def args: : (<object 1544234> (scddr (cdr scdr)))
> def args: : (<object 1544302> (scdr (cdr s)))
> def args: : (<object 1544302> (scddr (cdr scdr)))
> def args: : (<object 1544374> (scdr (cdr s)))
> def args: : (<object 1544374> (scddr (cdr scdr)))
> def args: : (<object 1544442> (scdr (cdr s)))
> def args: : (<object 1544442> (scddr (cdr scdr)))
> def args: : (<object 1544514> (scdr (cdr s)))
> def args: : (<object 1544514> (scddr (cdr scdr)))
> def args: : (<object 1544582> (scdr (cdr s)))
> def args: : (<object 1544582> (scddr (cdr scdr)))
> def args: : (<object 1544654> (scdr (cdr s)))
> def args: : (<object 1544654> (scddr (cdr scdr)))
> def args: : (<object 1544722> (scdr (cdr s)))
> def args: : (<object 1544722> (scddr (cdr scdr)))
> def args: : (<object 1544794> (scdr (cdr s)))
> def args: : (<object 1544794> (scddr (cdr scdr)))
> def args: : (<object 1544862> (scdr (cdr s)))
> def args: : (<object 1544862> (scddr (cdr scdr)))
> def args: : (<object 1544934> (scdr (cdr s)))
> def args: : (<object 1544934> (scddr (cdr scdr)))
> def args: : (<object 1545002> (scdr (cdr s)))
> def args: : (<object 1545002> (scddr (cdr scdr)))
> def args: : (<object 1545074> (scdr (cdr s)))
> def args: : (<object 1545074> (scddr (cdr scdr)))
> def args: : (<object 1545142> (scdr (cdr s)))
> def args: : (<object 1545142> (scddr (cdr scdr)))
> def args: : (<object 1545214> (scdr (cdr s)))
> def args: : (<object 1545214> (scddr (cdr scdr)))
> def args: : (<object 1545282> (scdr (cdr s)))
> def args: : (<object 1545282> (scddr (cdr scdr)))
> def args: : (<object 1545354> (scdr (cdr s)))
> def args: : (<object 1545354> (scddr (cdr scdr)))
> def args: : (<object 1545422> (scdr (cdr s)))
> def args: : (<object 1545422> (scddr (cdr scdr)))
> def args: : (<object 1545494> (scdr (cdr s)))
> def args: : (<object 1545494> (scddr (cdr scdr)))
> def args: : (<object 1545562> (scdr (cdr s)))
> def args: : (<object 1545562> (scddr (cdr scdr)))
> def args: : (<object 1545634> (scdr (cdr s)))
> def args: : (<object 1545634> (scddr (cdr scdr)))
> def args: : (<object 1545702> (scdr (cdr s)))
> def args: : (<object 1545702> (scddr (cdr scdr)))
> def args: : (<object 1545774> (scdr (cdr s)))
> def args: : (<object 1545774> (scddr (cdr scdr)))
> def args: : (<object 1545842> (scdr (cdr s)))
> def args: : (<object 1545842> (scddr (cdr scdr)))
> def args: : (<object 1545914> (scdr (cdr s)))
> def args: : (<object 1545914> (scddr (cdr scdr)))
> def args: : (<object 1545982> (scdr (cdr s)))
> def args: : (<object 1545982> (scddr (cdr scdr)))
> def args: : (<object 1546054> (scdr (cdr s)))
> def args: : (<object 1546054> (scddr (cdr scdr)))
> def args: : (<object 1546122> (scdr (cdr s)))
> def args: : (<object 1546122> (scddr (cdr scdr)))
> def args: : (<object 1546194> (scdr (cdr s)))
> def args: : (<object 1546194> (scddr (cdr scdr)))
> def args: : (<object 1546262> (scdr (cdr s)))
> def args: : (<object 1546262> (scddr (cdr scdr)))
> def args: : (<object 1546334> (scdr (cdr s)))
> def args: : (<object 1546334> (scddr (cdr scdr)))
> def args: : (<object 1546402> (scdr (cdr s)))
> def args: : (<object 1546402> (scddr (cdr scdr)))
> def args: : (<object 1546474> (scdr (cdr s)))
> def args: : (<object 1546474> (scddr (cdr scdr)))
> def args: : (<object 1546542> (scdr (cdr s)))
> def args: : (<object 1546542> (scddr (cdr scdr)))
> def args: : (<object 1546614> (scdr (cdr s)))
> def args: : (<object 1546614> (scddr (cdr scdr)))
> def args: : (<object 1546682> (scdr (cdr s)))
> def args: : (<object 1546682> (scddr (cdr scdr)))
> def args: : (<object 1546754> (scdr (cdr s)))
> def args: : (<object 1546754> (scddr (cdr scdr)))
> def args: : (<object 1546822> (scdr (cdr s)))
> def args: : (<object 1546822> (scddr (cdr scdr)))
> def args: : (<object 1546894> (scdr (cdr s)))
> def args: : (<object 1546894> (scddr (cdr scdr)))
> def args: : (<object 1546962> (scdr (cdr s)))
> def args: : (<object 1546962> (scddr (cdr scdr)))
> def args: : (<object 1547034> (scdr (cdr s)))
> def args: : (<object 1547034> (scddr (cdr scdr)))
> def args: : (<object 1547102> (scdr (cdr s)))
> def args: : (<object 1547102> (scddr (cdr scdr)))
> def args: : (<object 1547174> (scdr (cdr s)))
> def args: : (<object 1547174> (scddr (cdr scdr)))
> def args: : (<object 1547242> (scdr (cdr s)))
> def args: : (<object 1547242> (scddr (cdr scdr)))
> def args: : (<object 1547314> (scdr (cdr s)))
> def args: : (<object 1547314> (scddr (cdr scdr)))
> def args: : (<object 1547382> (scdr (cdr s)))
> def args: : (<object 1547382> (scddr (cdr scdr)))
> def args: : (<object 1547454> (scdr (cdr s)))
> def args: : (<object 1547454> (scddr (cdr scdr)))
> def args: : (<object 1547522> (scdr (cdr s)))
> def args: : (<object 1547522> (scddr (cdr scdr)))
> def args: : (<object 1547594> (scdr (cdr s)))
> def args: : (<object 1547594> (scddr (cdr scdr)))
> def args: : (<object 1547662> (scdr (cdr s)))
> def args: : (<object 1547662> (scddr (cdr scdr)))
> def args: : (<object 1547734> (scdr (cdr s)))
> def args: : (<object 1547734> (scddr (cdr scdr)))
> def args: : (<object 1547802> (scdr (cdr s)))
> def args: : (<object 1547802> (scddr (cdr scdr)))
> def args: : (<object 1547874> (scdr (cdr s)))
> def args: : (<object 1547874> (scddr (cdr scdr)))
> def args: : (<object 1547942> (scdr (cdr s)))
> def args: : (<object 1547942> (scddr (cdr scdr)))
> def args: : (<object 1548014> (scdr (cdr s)))
> def args: : (<object 1548014> (scddr (cdr scdr)))
> def args: : (<object 1548082> (scdr (cdr s)))
> def args: : (<object 1548082> (scddr (cdr scdr)))
> def args: : (<object 1548154> (scdr (cdr s)))
> def args: : (<object 1548154> (scddr (cdr scdr)))
> def args: : (<object 1548222> (scdr (cdr s)))
> def args: : (<object 1548222> (scddr (cdr scdr)))
> def args: : (<object 1548294> (scdr (cdr s)))
> def args: : (<object 1548294> (scddr (cdr scdr)))
> def args: : (<object 1548362> (scdr (cdr s)))
> def args: : (<object 1548362> (scddr (cdr scdr)))
> def args: : (<object 1548434> (scdr (cdr s)))
> def args: : (<object 1548434> (scddr (cdr scdr)))
> def args: : (<object 1548502> (scdr (cdr s)))
> def args: : (<object 1548502> (scddr (cdr scdr)))
> def args: : (<object 1548574> (scdr (cdr s)))
> def args: : (<object 1548574> (scddr (cdr scdr)))
> def args: : (<object 1548642> (scdr (cdr s)))
> def args: : (<object 1548642> (scddr (cdr scdr)))
> def args: : (<object 1548714> (scdr (cdr s)))
> def args: : (<object 1548714> (scddr (cdr scdr)))
> def args: : (<object 1548782> (scdr (cdr s)))
> def args: : (<object 1548782> (scddr (cdr scdr)))
> def args: : (<object 1548854> (scdr (cdr s)))
> def args: : (<object 1548854> (scddr (cdr scdr)))
> def args: : (<object 1548922> (scdr (cdr s)))
> def args: : (<object 1548922> (scddr (cdr scdr)))
> def args: : (<object 1548994> (scdr (cdr s)))
> def args: : (<object 1548994> (scddr (cdr scdr)))
> def args: : (<object 1549062> (scdr (cdr s)))
> def args: : (<object 1549062> (scddr (cdr scdr)))
> def args: : (<object 1549134> (scdr (cdr s)))
> def args: : (<object 1549134> (scddr (cdr scdr)))
> def args: : (<object 1549202> (scdr (cdr s)))
> def args: : (<object 1549202> (scddr (cdr scdr)))
> def args: : (<object 1549274> (scdr (cdr s)))
> def args: : (<object 1549274> (scddr (cdr scdr)))
> def args: : (<object 1549342> (scdr (cdr s)))
> def args: : (<object 1549342> (scddr (cdr scdr)))
> def args: : (<object 1549414> (scdr (cdr s)))
> def args: : (<object 1549414> (scddr (cdr scdr)))
> def args: : (<object 1549482> (scdr (cdr s)))
> def args: : (<object 1549482> (scddr (cdr scdr)))
> def args: : (<object 1549554> (scdr (cdr s)))
> def args: : (<object 1549554> (scddr (cdr scdr)))
> def args: : (<object 1549622> (scdr (cdr s)))
> def args: : (<object 1549622> (scddr (cdr scdr)))
> def args: : (<object 1549694> (scdr (cdr s)))
> def args: : (<object 1549694> (scddr (cdr scdr)))
> def args: : (<object 1549762> (scdr (cdr s)))
> def args: : (<object 1549762> (scddr (cdr scdr)))
> def args: : (<object 1549834> (scdr (cdr s)))
> def args: : (<object 1549834> (scddr (cdr scdr)))
> def args: : (<object 1549902> (scdr (cdr s)))
> def args: : (<object 1549902> (scddr (cdr scdr)))
> def args: : (<object 1549974> (scdr (cdr s)))
> def args: : (<object 1549974> (scddr (cdr scdr)))
> def args: : (<object 1550042> (scdr (cdr s)))
> def args: : (<object 1550042> (scddr (cdr scdr)))
> def args: : (<object 1550114> (scdr (cdr s)))
> def args: : (<object 1550114> (scddr (cdr scdr)))
> def args: : (<object 1550182> (scdr (cdr s)))
> def args: : (<object 1550182> (scddr (cdr scdr)))
> def args: : (<object 1550254> (scdr (cdr s)))
> def args: : (<object 1550254> (scddr (cdr scdr)))
> def args: : (<object 1550322> (scdr (cdr s)))
> def args: : (<object 1550322> (scddr (cdr scdr)))
> def args: : (<object 1550394> (scdr (cdr s)))
> def args: : (<object 1550394> (scddr (cdr scdr)))
> def args: : (<object 1550462> (scdr (cdr s)))
> def args: : (<object 1550462> (scddr (cdr scdr)))
> def args: : (<object 1550534> (scdr (cdr s)))
> def args: : (<object 1550534> (scddr (cdr scdr)))
> def args: : (<object 1550602> (scdr (cdr s)))
> def args: : (<object 1550602> (scddr (cdr scdr)))
> def args: : (<object 1550674> (scdr (cdr s)))
> def args: : (<object 1550674> (scddr (cdr scdr)))
> def args: : (<object 1550742> (scdr (cdr s)))
> def args: : (<object 1550742> (scddr (cdr scdr)))
> def args: : (<object 1550814> (scdr (cdr s)))
> def args: : (<object 1550814> (scddr (cdr scdr)))
> def args: : (<object 1550882> (scdr (cdr s)))
> def args: : (<object 1550882> (scddr (cdr scdr)))
> def args: : (<object 1550954> (scdr (cdr s)))
> def args: : (<object 1550954> (scddr (cdr scdr)))
> def args: : (<object 1551022> (scdr (cdr s)))
> def args: : (<object 1551022> (scddr (cdr scdr)))
> def args: : (<object 1551094> (scdr (cdr s)))
> def args: : (<object 1551094> (scddr (cdr scdr)))
> def args: : (<object 1551162> (scdr (cdr s)))
> def args: : (<object 1551162> (scddr (cdr scdr)))
> def args: : (<object 1551234> (scdr (cdr s)))
> def args: : (<object 1551234> (scddr (cdr scdr)))
> def args: : (<object 1551302> (scdr (cdr s)))
> def args: : (<object 1551302> (scddr (cdr scdr)))
> def args: : (<object 1551374> (scdr (cdr s)))
> def args: : (<object 1551374> (scddr (cdr scdr)))
> def args: : (<object 1551442> (scdr (cdr s)))
> def args: : (<object 1551442> (scddr (cdr scdr)))
> def args: : (<object 1551514> (scdr (cdr s)))
> def args: : (<object 1551514> (scddr (cdr scdr)))
> def args: : (<object 1551582> (scdr (cdr s)))
> def args: : (<object 1551582> (scddr (cdr scdr)))
> def args: : (<object 1551654> (scdr (cdr s)))
> def args: : (<object 1551654> (scddr (cdr scdr)))
> def args: : (<object 1551722> (scdr (cdr s)))
> def args: : (<object 1551722> (scddr (cdr scdr)))
> def args: : (<object 1551794> (scdr (cdr s)))
> def args: : (<object 1551794> (scddr (cdr scdr)))
> def args: : (<object 1551862> (scdr (cdr s)))
> def args: : (<object 1551862> (scddr (cdr scdr)))
> def args: : (<object 1551934> (scdr (cdr s)))
> def args: : (<object 1551934> (scddr (cdr scdr)))
> def args: : (<object 1552002> (scdr (cdr s)))
> def args: : (<object 1552002> (scddr (cdr scdr)))
> def args: : (<object 1552074> (scdr (cdr s)))
> def args: : (<object 1552074> (scddr (cdr scdr)))
> def args: : (<object 1552142> (scdr (cdr s)))
> def args: : (<object 1552142> (scddr (cdr scdr)))
> def args: : (<object 1552214> (scdr (cdr s)))
> def args: : (<object 1552214> (scddr (cdr scdr)))
> def args: : (<object 1552282> (scdr (cdr s)))
> def args: : (<object 1552282> (scddr (cdr scdr)))
> def args: : (<object 1552354> (scdr (cdr s)))
> def args: : (<object 1552354> (scddr (cdr scdr)))
> def args: : (<object 1552422> (scdr (cdr s)))
> def args: : (<object 1552422> (scddr (cdr scdr)))
> def args: : (<object 1552494> (scdr (cdr s)))
> def args: : (<object 1552494> (scddr (cdr scdr)))
> def args: : (<object 1552562> (scdr (cdr s)))
> def args: : (<object 1552562> (scddr (cdr scdr)))
> def args: : (<object 1552634> (scdr (cdr s)))
> def args: : (<object 1552634> (scddr (cdr scdr)))
> def args: : (<object 1552702> (scdr (cdr s)))
> def args: : (<object 1552702> (scddr (cdr scdr)))
> def args: : (<object 1552774> (scdr (cdr s)))
> def args: : (<object 1552774> (scddr (cdr scdr)))
> def args: : (<object 1552842> (scdr (cdr s)))
> def args: : (<object 1552842> (scddr (cdr scdr)))
> def args: : (<object 1552914> (scdr (cdr s)))
> def args: : (<object 1552914> (scddr (cdr scdr)))
> def args: : (<object 1552982> (scdr (cdr s)))
> def args: : (<object 1552982> (scddr (cdr scdr)))
> def args: : (<object 1553054> (scdr (cdr s)))
> def args: : (<object 1553054> (scddr (cdr scdr)))
> def args: : (<object 1553122> (scdr (cdr s)))
> def args: : (<object 1553122> (scddr (cdr scdr)))
> def args: : (<object 1553194> (scdr (cdr s)))
> def args: : (<object 1553194> (scddr (cdr scdr)))
> def args: : (<object 1553262> (scdr (cdr s)))
> def args: : (<object 1553262> (scddr (cdr scdr)))
> def args: : (<object 1553334> (scdr (cdr s)))
> def args: : (<object 1553334> (scddr (cdr scdr)))
> def args: : (<object 1553402> (scdr (cdr s)))
> def args: : (<object 1553402> (scddr (cdr scdr)))
> def args: : (<object 1553474> (scdr (cdr s)))
> def args: : (<object 1553474> (scddr (cdr scdr)))
> def args: : (<object 1553542> (scdr (cdr s)))
> def args: : (<object 1553542> (scddr (cdr scdr)))
> def args: : (<object 1553614> (scdr (cdr s)))
> def args: : (<object 1553614> (scddr (cdr scdr)))
> def args: : (<object 1553682> (scdr (cdr s)))
> def args: : (<object 1553682> (scddr (cdr scdr)))
> def args: : (<object 1553754> (scdr (cdr s)))
> def args: : (<object 1553754> (scddr (cdr scdr)))
> def args: : (<object 1553822> (scdr (cdr s)))
> def args: : (<object 1553822> (scddr (cdr scdr)))
> def args: : (<object 1553894> (scdr (cdr s)))
> def args: : (<object 1553894> (scddr (cdr scdr)))
> def args: : (<object 1553962> (scdr (cdr s)))
> def args: : (<object 1553962> (scddr (cdr scdr)))
> def args: : (<object 1554034> (scdr (cdr s)))
> def args: : (<object 1554034> (scddr (cdr scdr)))
> def args: : (<object 1554102> (scdr (cdr s)))
> def args: : (<object 1554102> (scddr (cdr scdr)))
> def args: : (<object 1554174> (scdr (cdr s)))
> def args: : (<object 1554174> (scddr (cdr scdr)))
> def args: : (<object 1554242> (scdr (cdr s)))
> def args: : (<object 1554242> (scddr (cdr scdr)))
> def args: : (<object 1554314> (scdr (cdr s)))
> def args: : (<object 1554314> (scddr (cdr scdr)))
> def args: : (<object 1554382> (scdr (cdr s)))
> def args: : (<object 1554382> (scddr (cdr scdr)))
> def args: : (<object 1554454> (scdr (cdr s)))
> def args: : (<object 1554454> (scddr (cdr scdr)))
> def args: : (<object 1554522> (scdr (cdr s)))
> def args: : (<object 1554522> (scddr (cdr scdr)))
> def args: : (<object 1554594> (scdr (cdr s)))
> def args: : (<object 1554594> (scddr (cdr scdr)))
> def args: : (<object 1554662> (scdr (cdr s)))
> def args: : (<object 1554662> (scddr (cdr scdr)))
> def args: : (<object 1554734> (scdr (cdr s)))
> def args: : (<object 1554734> (scddr (cdr scdr)))
> def args: : (<object 1554802> (scdr (cdr s)))
> def args: : (<object 1554802> (scddr (cdr scdr)))
> def args: : (<object 1554874> (scdr (cdr s)))
> def args: : (<object 1554874> (scddr (cdr scdr)))
> def args: : (<object 1554942> (scdr (cdr s)))
> def args: : (<object 1554942> (scddr (cdr scdr)))
> def args: : (<object 1555014> (scdr (cdr s)))
> def args: : (<object 1555014> (scddr (cdr scdr)))
> def args: : (<object 1555082> (scdr (cdr s)))
> def args: : (<object 1555082> (scddr (cdr scdr)))
> def args: : (<object 1555154> (scdr (cdr s)))
> def args: : (<object 1555154> (scddr (cdr scdr)))
> def args: : (<object 1555222> (scdr (cdr s)))
> def args: : (<object 1555222> (scddr (cdr scdr)))
> def args: : (<object 1555294> (scdr (cdr s)))
> def args: : (<object 1555294> (scddr (cdr scdr)))
> def args: : (<object 1555362> (scdr (cdr s)))
> def args: : (<object 1555362> (scddr (cdr scdr)))
> def args: : (<object 1555434> (scdr (cdr s)))
> def args: : (<object 1555434> (scddr (cdr scdr)))
> def args: : (<object 1555502> (scdr (cdr s)))
> def args: : (<object 1555502> (scddr (cdr scdr)))
> def args: : (<object 1555574> (scdr (cdr s)))
> def args: : (<object 1555574> (scddr (cdr scdr)))
> 4753def args: : (<object 1572337> (env (if (null? @) # (car @))))
>  def args: : (<object 1572444> (env (if (null? @) # (car @))))
> def args: : (<object 1572564> (scdr (cdr s)))
> def args: : (<object 1572564> (scddr (cdr scdr)))
> def args: : (<object 1572636> (scdr (cdr s)))
> def args: : (<object 1572636> (scddr (cdr scdr)))
> def args: : (<object 1572708> (scdr (cdr s)))
> def args: : (<object 1572708> (scddr (cdr scdr)))
> def args: : (<object 1572776> (scdr (cdr s)))
> def args: : (<object 1572776> (scddr (cdr scdr)))
> def args: : (<object 1573015> (scdr (cdr s)))
> def args: : (<object 1573015> (scddr (cdr scdr)))
> def args: : (<object 1573087> (scdr (cdr s)))
> def args: : (<object 1573087> (scddr (cdr scdr)))
> def args: : (<object 1573155> (scdr (cdr s)))
> def args: : (<object 1573155> (scddr (cdr scdr)))
> def args: : (<object 1573227> (scdr (cdr s)))
> def args: : (<object 1573227> (scddr (cdr scdr)))
> def args: : (<object 1573295> (scdr (cdr s)))
> def args: : (<object 1573295> (scddr (cdr scdr)))
> def args: : (<object 1573367> (scdr (cdr s)))
> def args: : (<object 1573367> (scddr (cdr scdr)))
> def args: : (<object 1573435> (scdr (cdr s)))
> def args: : (<object 1573435> (scddr (cdr scdr)))
> def args: : (<object 1573507> (scdr (cdr s)))
> def args: : (<object 1573507> (scddr (cdr scdr)))
> def args: : (<object 1573575> (scdr (cdr s)))
> def args: : (<object 1573575> (scddr (cdr scdr)))
> def args: : (<object 1573647> (scdr (cdr s)))
> def args: : (<object 1573647> (scddr (cdr scdr)))
> def args: : (<object 1573715> (scdr (cdr s)))
> def args: : (<object 1573715> (scddr (cdr scdr)))
> def args: : (<object 1573787> (scdr (cdr s)))
> def args: : (<object 1573787> (scddr (cdr scdr)))
> def args: : (<object 1573855> (scdr (cdr s)))
> def args: : (<object 1573855> (scddr (cdr scdr)))
> def args: : (<object 1573927> (scdr (cdr s)))
> def args: : (<object 1573927> (scddr (cdr scdr)))
> def args: : (<object 1573995> (scdr (cdr s)))
> def args: : (<object 1573995> (scddr (cdr scdr)))
> def args: : (<object 1574067> (scdr (cdr s)))
> def args: : (<object 1574067> (scddr (cdr scdr)))
> def args: : (<object 1574135> (scdr (cdr s)))
> def args: : (<object 1574135> (scddr (cdr scdr)))
> def args: : (<object 1574207> (scdr (cdr s)))
> def args: : (<object 1574207> (scddr (cdr scdr)))
> def args: : (<object 1574275> (scdr (cdr s)))
> def args: : (<object 1574275> (scddr (cdr scdr)))
> def args: : (<object 1574347> (scdr (cdr s)))
> def args: : (<object 1574347> (scddr (cdr scdr)))
> def args: : (<object 1574415> (scdr (cdr s)))
> def args: : (<object 1574415> (scddr (cdr scdr)))
> def args: : (<object 1574487> (scdr (cdr s)))
> def args: : (<object 1574487> (scddr (cdr scdr)))
> def args: : (<object 1574555> (scdr (cdr s)))
> def args: : (<object 1574555> (scddr (cdr scdr)))
> def args: : (<object 1574627> (scdr (cdr s)))
> def args: : (<object 1574627> (scddr (cdr scdr)))
> def args: : (<object 1574695> (scdr (cdr s)))
> def args: : (<object 1574695> (scddr (cdr scdr)))
> def args: : (<object 1574767> (scdr (cdr s)))
> def args: : (<object 1574767> (scddr (cdr scdr)))
> def args: : (<object 1574835> (scdr (cdr s)))
> def args: : (<object 1574835> (scddr (cdr scdr)))
> def args: : (<object 1574907> (scdr (cdr s)))
> def args: : (<object 1574907> (scddr (cdr scdr)))
> def args: : (<object 1574975> (scdr (cdr s)))
> def args: : (<object 1574975> (scddr (cdr scdr)))
> def args: : (<object 1575047> (scdr (cdr s)))
> def args: : (<object 1575047> (scddr (cdr scdr)))
> def args: : (<object 1575115> (scdr (cdr s)))
> def args: : (<object 1575115> (scddr (cdr scdr)))
> def args: : (<object 1575187> (scdr (cdr s)))
> def args: : (<object 1575187> (scddr (cdr scdr)))
> def args: : (<object 1575255> (scdr (cdr s)))
> def args: : (<object 1575255> (scddr (cdr scdr)))
> def args: : (<object 1575327> (scdr (cdr s)))
> def args: : (<object 1575327> (scddr (cdr scdr)))
> def args: : (<object 1575395> (scdr (cdr s)))
> def args: : (<object 1575395> (scddr (cdr scdr)))
> def args: : (<object 1575467> (scdr (cdr s)))
> def args: : (<object 1575467> (scddr (cdr scdr)))
> def args: : (<object 1575535> (scdr (cdr s)))
> def args: : (<object 1575535> (scddr (cdr scdr)))
> def args: : (<object 1575607> (scdr (cdr s)))
> def args: : (<object 1575607> (scddr (cdr scdr)))
> def args: : (<object 1575675> (scdr (cdr s)))
> def args: : (<object 1575675> (scddr (cdr scdr)))
> def args: : (<object 1575747> (scdr (cdr s)))
> def args: : (<object 1575747> (scddr (cdr scdr)))
> def args: : (<object 1575815> (scdr (cdr s)))
> def args: : (<object 1575815> (scddr (cdr scdr)))
> def args: : (<object 1575887> (scdr (cdr s)))
> def args: : (<object 1575887> (scddr (cdr scdr)))
> def args: : (<object 1575955> (scdr (cdr s)))
> def args: : (<object 1575955> (scddr (cdr scdr)))
> def args: : (<object 1576027> (scdr (cdr s)))
> def args: : (<object 1576027> (scddr (cdr scdr)))
> def args: : (<object 1576095> (scdr (cdr s)))
> def args: : (<object 1576095> (scddr (cdr scdr)))
> def args: : (<object 1576167> (scdr (cdr s)))
> def args: : (<object 1576167> (scddr (cdr scdr)))
> def args: : (<object 1576235> (scdr (cdr s)))
> def args: : (<object 1576235> (scddr (cdr scdr)))
> def args: : (<object 1576307> (scdr (cdr s)))
> def args: : (<object 1576307> (scddr (cdr scdr)))
> def args: : (<object 1576375> (scdr (cdr s)))
> def args: : (<object 1576375> (scddr (cdr scdr)))
> def args: : (<object 1576447> (scdr (cdr s)))
> def args: : (<object 1576447> (scddr (cdr scdr)))
> def args: : (<object 1576515> (scdr (cdr s)))
> def args: : (<object 1576515> (scddr (cdr scdr)))
> def args: : (<object 1576587> (scdr (cdr s)))
> def args: : (<object 1576587> (scddr (cdr scdr)))
> def args: : (<object 1576655> (scdr (cdr s)))
> def args: : (<object 1576655> (scddr (cdr scdr)))
> def args: : (<object 1576727> (scdr (cdr s)))
> def args: : (<object 1576727> (scddr (cdr scdr)))
> def args: : (<object 1576795> (scdr (cdr s)))
> def args: : (<object 1576795> (scddr (cdr scdr)))
> def args: : (<object 1576867> (scdr (cdr s)))
> def args: : (<object 1576867> (scddr (cdr scdr)))
> def args: : (<object 1576935> (scdr (cdr s)))
> def args: : (<object 1576935> (scddr (cdr scdr)))
> def args: : (<object 1577007> (scdr (cdr s)))
> def args: : (<object 1577007> (scddr (cdr scdr)))
> def args: : (<object 1577075> (scdr (cdr s)))
> def args: : (<object 1577075> (scddr (cdr scdr)))
> def args: : (<object 1577147> (scdr (cdr s)))
> def args: : (<object 1577147> (scddr (cdr scdr)))
> def args: : (<object 1577215> (scdr (cdr s)))
> def args: : (<object 1577215> (scddr (cdr scdr)))
> def args: : (<object 1577287> (scdr (cdr s)))
> def args: : (<object 1577287> (scddr (cdr scdr)))
> def args: : (<object 1577355> (scdr (cdr s)))
> def args: : (<object 1577355> (scddr (cdr scdr)))
> def args: : (<object 1577427> (scdr (cdr s)))
> def args: : (<object 1577427> (scddr (cdr scdr)))
> def args: : (<object 1577495> (scdr (cdr s)))
> def args: : (<object 1577495> (scddr (cdr scdr)))
> def args: : (<object 1577567> (scdr (cdr s)))
> def args: : (<object 1577567> (scddr (cdr scdr)))
> def args: : (<object 1577635> (scdr (cdr s)))
> def args: : (<object 1577635> (scddr (cdr scdr)))
> def args: : (<object 1577707> (scdr (cdr s)))
> def args: : (<object 1577707> (scddr (cdr scdr)))
> def args: : (<object 1577775> (scdr (cdr s)))
> def args: : (<object 1577775> (scddr (cdr scdr)))
> def args: : (<object 1577847> (scdr (cdr s)))
> def args: : (<object 1577847> (scddr (cdr scdr)))
> def args: : (<object 1577915> (scdr (cdr s)))
> def args: : (<object 1577915> (scddr (cdr scdr)))
> def args: : (<object 1577987> (scdr (cdr s)))
> def args: : (<object 1577987> (scddr (cdr scdr)))
> def args: : (<object 1578055> (scdr (cdr s)))
> def args: : (<object 1578055> (scddr (cdr scdr)))
> def args: : (<object 1578127> (scdr (cdr s)))
> def args: : (<object 1578127> (scddr (cdr scdr)))
> def args: : (<object 1578195> (scdr (cdr s)))
> def args: : (<object 1578195> (scddr (cdr scdr)))
> def args: : (<object 1578267> (scdr (cdr s)))
> def args: : (<object 1578267> (scddr (cdr scdr)))
> def args: : (<object 1578335> (scdr (cdr s)))
> def args: : (<object 1578335> (scddr (cdr scdr)))
> def args: : (<object 1578407> (scdr (cdr s)))
> def args: : (<object 1578407> (scddr (cdr scdr)))
> def args: : (<object 1578475> (scdr (cdr s)))
> def args: : (<object 1578475> (scddr (cdr scdr)))
> def args: : (<object 1578547> (scdr (cdr s)))
> def args: : (<object 1578547> (scddr (cdr scdr)))
> def args: : (<object 1578615> (scdr (cdr s)))
> def args: : (<object 1578615> (scddr (cdr scdr)))
> def args: : (<object 1578687> (scdr (cdr s)))
> def args: : (<object 1578687> (scddr (cdr scdr)))
> def args: : (<object 1578755> (scdr (cdr s)))
> def args: : (<object 1578755> (scddr (cdr scdr)))
> def args: : (<object 1578827> (scdr (cdr s)))
> def args: : (<object 1578827> (scddr (cdr scdr)))
> def args: : (<object 1578895> (scdr (cdr s)))
> def args: : (<object 1578895> (scddr (cdr scdr)))
> def args: : (<object 1578967> (scdr (cdr s)))
> def args: : (<object 1578967> (scddr (cdr scdr)))
> def args: : (<object 1579035> (scdr (cdr s)))
> def args: : (<object 1579035> (scddr (cdr scdr)))
> def args: : (<object 1579107> (scdr (cdr s)))
> def args: : (<object 1579107> (scddr (cdr scdr)))
> def args: : (<object 1579175> (scdr (cdr s)))
> def args: : (<object 1579175> (scddr (cdr scdr)))
> def args: : (<object 1579247> (scdr (cdr s)))
> def args: : (<object 1579247> (scddr (cdr scdr)))
> def args: : (<object 1579315> (scdr (cdr s)))
> def args: : (<object 1579315> (scddr (cdr scdr)))
> def args: : (<object 1579387> (scdr (cdr s)))
> def args: : (<object 1579387> (scddr (cdr scdr)))
> def args: : (<object 1579455> (scdr (cdr s)))
> def args: : (<object 1579455> (scddr (cdr scdr)))
> def args: : (<object 1579527> (scdr (cdr s)))
> def args: : (<object 1579527> (scddr (cdr scdr)))
> def args: : (<object 1579595> (scdr (cdr s)))
> def args: : (<object 1579595> (scddr (cdr scdr)))
> def args: : (<object 1579667> (scdr (cdr s)))
> def args: : (<object 1579667> (scddr (cdr scdr)))
> def args: : (<object 1579735> (scdr (cdr s)))
> def args: : (<object 1579735> (scddr (cdr scdr)))
> def args: : (<object 1579807> (scdr (cdr s)))
> def args: : (<object 1579807> (scddr (cdr scdr)))
> def args: : (<object 1579875> (scdr (cdr s)))
> def args: : (<object 1579875> (scddr (cdr scdr)))
> def args: : (<object 1579947> (scdr (cdr s)))
> def args: : (<object 1579947> (scddr (cdr scdr)))
> def args: : (<object 1580015> (scdr (cdr s)))
> def args: : (<object 1580015> (scddr (cdr scdr)))
> def args: : (<object 1580087> (scdr (cdr s)))
> def args: : (<object 1580087> (scddr (cdr scdr)))
> def args: : (<object 1580155> (scdr (cdr s)))
> def args: : (<object 1580155> (scddr (cdr scdr)))
> def args: : (<object 1580227> (scdr (cdr s)))
> def args: : (<object 1580227> (scddr (cdr scdr)))
> def args: : (<object 1580295> (scdr (cdr s)))
> def args: : (<object 1580295> (scddr (cdr scdr)))
> def args: : (<object 1580367> (scdr (cdr s)))
> def args: : (<object 1580367> (scddr (cdr scdr)))
> def args: : (<object 1580435> (scdr (cdr s)))
> def args: : (<object 1580435> (scddr (cdr scdr)))
> def args: : (<object 1580507> (scdr (cdr s)))
> def args: : (<object 1580507> (scddr (cdr scdr)))
> def args: : (<object 1580575> (scdr (cdr s)))
> def args: : (<object 1580575> (scddr (cdr scdr)))
> def args: : (<object 1580647> (scdr (cdr s)))
> def args: : (<object 1580647> (scddr (cdr scdr)))
> def args: : (<object 1580715> (scdr (cdr s)))
> def args: : (<object 1580715> (scddr (cdr scdr)))
> def args: : (<object 1580787> (scdr (cdr s)))
> def args: : (<object 1580787> (scddr (cdr scdr)))
> def args: : (<object 1580855> (scdr (cdr s)))
> def args: : (<object 1580855> (scddr (cdr scdr)))
> def args: : (<object 1580927> (scdr (cdr s)))
> def args: : (<object 1580927> (scddr (cdr scdr)))
> def args: : (<object 1580995> (scdr (cdr s)))
> def args: : (<object 1580995> (scddr (cdr scdr)))
> def args: : (<object 1581067> (scdr (cdr s)))
> def args: : (<object 1581067> (scddr (cdr scdr)))
> def args: : (<object 1581135> (scdr (cdr s)))
> def args: : (<object 1581135> (scddr (cdr scdr)))
> def args: : (<object 1581207> (scdr (cdr s)))
> def args: : (<object 1581207> (scddr (cdr scdr)))
> def args: : (<object 1581275> (scdr (cdr s)))
> def args: : (<object 1581275> (scddr (cdr scdr)))
> def args: : (<object 1581347> (scdr (cdr s)))
> def args: : (<object 1581347> (scddr (cdr scdr)))
> def args: : (<object 1581415> (scdr (cdr s)))
> def args: : (<object 1581415> (scddr (cdr scdr)))
> def args: : (<object 1581487> (scdr (cdr s)))
> def args: : (<object 1581487> (scddr (cdr scdr)))
> def args: : (<object 1581555> (scdr (cdr s)))
> def args: : (<object 1581555> (scddr (cdr scdr)))
> def args: : (<object 1581627> (scdr (cdr s)))
> def args: : (<object 1581627> (scddr (cdr scdr)))
> def args: : (<object 1581695> (scdr (cdr s)))
> def args: : (<object 1581695> (scddr (cdr scdr)))
> def args: : (<object 1581767> (scdr (cdr s)))
> def args: : (<object 1581767> (scddr (cdr scdr)))
> def args: : (<object 1581835> (scdr (cdr s)))
> def args: : (<object 1581835> (scddr (cdr scdr)))
> def args: : (<object 1581907> (scdr (cdr s)))
> def args: : (<object 1581907> (scddr (cdr scdr)))
> def args: : (<object 1581975> (scdr (cdr s)))
> def args: : (<object 1581975> (scddr (cdr scdr)))
> def args: : (<object 1582047> (scdr (cdr s)))
> def args: : (<object 1582047> (scddr (cdr scdr)))
> def args: : (<object 1582115> (scdr (cdr s)))
> def args: : (<object 1582115> (scddr (cdr scdr)))
> def args: : (<object 1582187> (scdr (cdr s)))
> def args: : (<object 1582187> (scddr (cdr scdr)))
> def args: : (<object 1582255> (scdr (cdr s)))
> def args: : (<object 1582255> (scddr (cdr scdr)))
> def args: : (<object 1582327> (scdr (cdr s)))
> def args: : (<object 1582327> (scddr (cdr scdr)))
> def args: : (<object 1582395> (scdr (cdr s)))
> def args: : (<object 1582395> (scddr (cdr scdr)))
> def args: : (<object 1582467> (scdr (cdr s)))
> def args: : (<object 1582467> (scddr (cdr scdr)))
> def args: : (<object 1582535> (scdr (cdr s)))
> def args: : (<object 1582535> (scddr (cdr scdr)))
> def args: : (<object 1582607> (scdr (cdr s)))
> def args: : (<object 1582607> (scddr (cdr scdr)))
> def args: : (<object 1582675> (scdr (cdr s)))
> def args: : (<object 1582675> (scddr (cdr scdr)))
> def args: : (<object 1582747> (scdr (cdr s)))
> def args: : (<object 1582747> (scddr (cdr scdr)))
> def args: : (<object 1582815> (scdr (cdr s)))
> def args: : (<object 1582815> (scddr (cdr scdr)))
> def args: : (<object 1582887> (scdr (cdr s)))
> def args: : (<object 1582887> (scddr (cdr scdr)))
> def args: : (<object 1582955> (scdr (cdr s)))
> def args: : (<object 1582955> (scddr (cdr scdr)))
> def args: : (<object 1583027> (scdr (cdr s)))
> def args: : (<object 1583027> (scddr (cdr scdr)))
> def args: : (<object 1583095> (scdr (cdr s)))
> def args: : (<object 1583095> (scddr (cdr scdr)))
> def args: : (<object 1583167> (scdr (cdr s)))
> def args: : (<object 1583167> (scddr (cdr scdr)))
> def args: : (<object 1583235> (scdr (cdr s)))
> def args: : (<object 1583235> (scddr (cdr scdr)))
> def args: : (<object 1583307> (scdr (cdr s)))
> def args: : (<object 1583307> (scddr (cdr scdr)))
> def args: : (<object 1583375> (scdr (cdr s)))
> def args: : (<object 1583375> (scddr (cdr scdr)))
> def args: : (<object 1583447> (scdr (cdr s)))
> def args: : (<object 1583447> (scddr (cdr scdr)))
> def args: : (<object 1583515> (scdr (cdr s)))
> def args: : (<object 1583515> (scddr (cdr scdr)))
> def args: : (<object 1583587> (scdr (cdr s)))
> def args: : (<object 1583587> (scddr (cdr scdr)))
> def args: : (<object 1583655> (scdr (cdr s)))
> def args: : (<object 1583655> (scddr (cdr scdr)))
> def args: : (<object 1583727> (scdr (cdr s)))
> def args: : (<object 1583727> (scddr (cdr scdr)))
> def args: : (<object 1583795> (scdr (cdr s)))
> def args: : (<object 1583795> (scddr (cdr scdr)))
> def args: : (<object 1583867> (scdr (cdr s)))
> def args: : (<object 1583867> (scddr (cdr scdr)))
> def args: : (<object 1583935> (scdr (cdr s)))
> def args: : (<object 1583935> (scddr (cdr scdr)))
> def args: : (<object 1584007> (scdr (cdr s)))
> def args: : (<object 1584007> (scddr (cdr scdr)))
> def args: : (<object 1584075> (scdr (cdr s)))
> def args: : (<object 1584075> (scddr (cdr scdr)))
> def args: : (<object 1584147> (scdr (cdr s)))
> def args: : (<object 1584147> (scddr (cdr scdr)))
> def args: : (<object 1584215> (scdr (cdr s)))
> def args: : (<object 1584215> (scddr (cdr scdr)))
> def args: : (<object 1584287> (scdr (cdr s)))
> def args: : (<object 1584287> (scddr (cdr scdr)))
> def args: : (<object 1584355> (scdr (cdr s)))
> def args: : (<object 1584355> (scddr (cdr scdr)))
> def args: : (<object 1584427> (scdr (cdr s)))
> def args: : (<object 1584427> (scddr (cdr scdr)))
> def args: : (<object 1584495> (scdr (cdr s)))
> def args: : (<object 1584495> (scddr (cdr scdr)))
> def args: : (<object 1584567> (scdr (cdr s)))
> def args: : (<object 1584567> (scddr (cdr scdr)))
> def args: : (<object 1584635> (scdr (cdr s)))
> def args: : (<object 1584635> (scddr (cdr scdr)))
> def args: : (<object 1584707> (scdr (cdr s)))
> def args: : (<object 1584707> (scddr (cdr scdr)))
> def args: : (<object 1584775> (scdr (cdr s)))
> def args: : (<object 1584775> (scddr (cdr scdr)))
> def args: : (<object 1584847> (scdr (cdr s)))
> def args: : (<object 1584847> (scddr (cdr scdr)))
> def args: : (<object 1584915> (scdr (cdr s)))
> def args: : (<object 1584915> (scddr (cdr scdr)))
> def args: : (<object 1584987> (scdr (cdr s)))
> def args: : (<object 1584987> (scddr (cdr scdr)))
> def args: : (<object 1585055> (scdr (cdr s)))
> def args: : (<object 1585055> (scddr (cdr scdr)))
> def args: : (<object 1585127> (scdr (cdr s)))
> def args: : (<object 1585127> (scddr (cdr scdr)))
> def args: : (<object 1585195> (scdr (cdr s)))
> def args: : (<object 1585195> (scddr (cdr scdr)))
> def args: : (<object 1585267> (scdr (cdr s)))
> def args: : (<object 1585267> (scddr (cdr scdr)))
> def args: : (<object 1585335> (scdr (cdr s)))
> def args: : (<object 1585335> (scddr (cdr scdr)))
> def args: : (<object 1585407> (scdr (cdr s)))
> def args: : (<object 1585407> (scddr (cdr scdr)))
> def args: : (<object 1585475> (scdr (cdr s)))
> def args: : (<object 1585475> (scddr (cdr scdr)))
> def args: : (<object 1585547> (scdr (cdr s)))
> def args: : (<object 1585547> (scddr (cdr scdr)))
> def args: : (<object 1585615> (scdr (cdr s)))
> def args: : (<object 1585615> (scddr (cdr scdr)))
> def args: : (<object 1585687> (scdr (cdr s)))
> def args: : (<object 1585687> (scddr (cdr scdr)))
> def args: : (<object 1585755> (scdr (cdr s)))
> def args: : (<object 1585755> (scddr (cdr scdr)))
> def args: : (<object 1585827> (scdr (cdr s)))
> def args: : (<object 1585827> (scddr (cdr scdr)))
> def args: : (<object 1585895> (scdr (cdr s)))
> def args: : (<object 1585895> (scddr (cdr scdr)))
> def args: : (<object 1585967> (scdr (cdr s)))
> def args: : (<object 1585967> (scddr (cdr scdr)))
> def args: : (<object 1586035> (scdr (cdr s)))
> def args: : (<object 1586035> (scddr (cdr scdr)))
> def args: : (<object 1586107> (scdr (cdr s)))
> def args: : (<object 1586107> (scddr (cdr scdr)))
> def args: : (<object 1586175> (scdr (cdr s)))
> def args: : (<object 1586175> (scddr (cdr scdr)))
> def args: : (<object 1586247> (scdr (cdr s)))
> def args: : (<object 1586247> (scddr (cdr scdr)))
> def args: : (<object 1586315> (scdr (cdr s)))
> def args: : (<object 1586315> (scddr (cdr scdr)))
> def args: : (<object 1586387> (scdr (cdr s)))
> def args: : (<object 1586387> (scddr (cdr scdr)))
> 4851def args: : (<object 1603321> (env (if (null? @) # (car @))))
>  def args: : (<object 1603428> (env (if (null? @) # (car @))))
> def args: : (<object 1603548> (scdr (cdr s)))
> def args: : (<object 1603548> (scddr (cdr scdr)))
> def args: : (<object 1603620> (scdr (cdr s)))
> def args: : (<object 1603620> (scddr (cdr scdr)))
> def args: : (<object 1603692> (scdr (cdr s)))
> def args: : (<object 1603692> (scddr (cdr scdr)))
> def args: : (<object 1603760> (scdr (cdr s)))
> def args: : (<object 1603760> (scddr (cdr scdr)))
> def args: : (<object 1603999> (scdr (cdr s)))
> def args: : (<object 1603999> (scddr (cdr scdr)))
> def args: : (<object 1604071> (scdr (cdr s)))
> def args: : (<object 1604071> (scddr (cdr scdr)))
> def args: : (<object 1604139> (scdr (cdr s)))
> def args: : (<object 1604139> (scddr (cdr scdr)))
> def args: : (<object 1604211> (scdr (cdr s)))
> def args: : (<object 1604211> (scddr (cdr scdr)))
> def args: : (<object 1604279> (scdr (cdr s)))
> def args: : (<object 1604279> (scddr (cdr scdr)))
> def args: : (<object 1604351> (scdr (cdr s)))
> def args: : (<object 1604351> (scddr (cdr scdr)))
> def args: : (<object 1604419> (scdr (cdr s)))
> def args: : (<object 1604419> (scddr (cdr scdr)))
> def args: : (<object 1604491> (scdr (cdr s)))
> def args: : (<object 1604491> (scddr (cdr scdr)))
> def args: : (<object 1604559> (scdr (cdr s)))
> def args: : (<object 1604559> (scddr (cdr scdr)))
> def args: : (<object 1604631> (scdr (cdr s)))
> def args: : (<object 1604631> (scddr (cdr scdr)))
> def args: : (<object 1604699> (scdr (cdr s)))
> def args: : (<object 1604699> (scddr (cdr scdr)))
> def args: : (<object 1604771> (scdr (cdr s)))
> def args: : (<object 1604771> (scddr (cdr scdr)))
> def args: : (<object 1604839> (scdr (cdr s)))
> def args: : (<object 1604839> (scddr (cdr scdr)))
> def args: : (<object 1604911> (scdr (cdr s)))
> def args: : (<object 1604911> (scddr (cdr scdr)))
> def args: : (<object 1604979> (scdr (cdr s)))
> def args: : (<object 1604979> (scddr (cdr scdr)))
> def args: : (<object 1605051> (scdr (cdr s)))
> def args: : (<object 1605051> (scddr (cdr scdr)))
> def args: : (<object 1605119> (scdr (cdr s)))
> def args: : (<object 1605119> (scddr (cdr scdr)))
> def args: : (<object 1605191> (scdr (cdr s)))
> def args: : (<object 1605191> (scddr (cdr scdr)))
> def args: : (<object 1605259> (scdr (cdr s)))
> def args: : (<object 1605259> (scddr (cdr scdr)))
> def args: : (<object 1605331> (scdr (cdr s)))
> def args: : (<object 1605331> (scddr (cdr scdr)))
> def args: : (<object 1605399> (scdr (cdr s)))
> def args: : (<object 1605399> (scddr (cdr scdr)))
> def args: : (<object 1605471> (scdr (cdr s)))
> def args: : (<object 1605471> (scddr (cdr scdr)))
> def args: : (<object 1605539> (scdr (cdr s)))
> def args: : (<object 1605539> (scddr (cdr scdr)))
> def args: : (<object 1605611> (scdr (cdr s)))
> def args: : (<object 1605611> (scddr (cdr scdr)))
> def args: : (<object 1605679> (scdr (cdr s)))
> def args: : (<object 1605679> (scddr (cdr scdr)))
> def args: : (<object 1605751> (scdr (cdr s)))
> def args: : (<object 1605751> (scddr (cdr scdr)))
> def args: : (<object 1605819> (scdr (cdr s)))
> def args: : (<object 1605819> (scddr (cdr scdr)))
> def args: : (<object 1605891> (scdr (cdr s)))
> def args: : (<object 1605891> (scddr (cdr scdr)))
> def args: : (<object 1605959> (scdr (cdr s)))
> def args: : (<object 1605959> (scddr (cdr scdr)))
> def args: : (<object 1606031> (scdr (cdr s)))
> def args: : (<object 1606031> (scddr (cdr scdr)))
> def args: : (<object 1606099> (scdr (cdr s)))
> def args: : (<object 1606099> (scddr (cdr scdr)))
> def args: : (<object 1606171> (scdr (cdr s)))
> def args: : (<object 1606171> (scddr (cdr scdr)))
> def args: : (<object 1606239> (scdr (cdr s)))
> def args: : (<object 1606239> (scddr (cdr scdr)))
> def args: : (<object 1606311> (scdr (cdr s)))
> def args: : (<object 1606311> (scddr (cdr scdr)))
> def args: : (<object 1606379> (scdr (cdr s)))
> def args: : (<object 1606379> (scddr (cdr scdr)))
> def args: : (<object 1606451> (scdr (cdr s)))
> def args: : (<object 1606451> (scddr (cdr scdr)))
> def args: : (<object 1606519> (scdr (cdr s)))
> def args: : (<object 1606519> (scddr (cdr scdr)))
> def args: : (<object 1606591> (scdr (cdr s)))
> def args: : (<object 1606591> (scddr (cdr scdr)))
> def args: : (<object 1606659> (scdr (cdr s)))
> def args: : (<object 1606659> (scddr (cdr scdr)))
> def args: : (<object 1606731> (scdr (cdr s)))
> def args: : (<object 1606731> (scddr (cdr scdr)))
> def args: : (<object 1606799> (scdr (cdr s)))
> def args: : (<object 1606799> (scddr (cdr scdr)))
> def args: : (<object 1606871> (scdr (cdr s)))
> def args: : (<object 1606871> (scddr (cdr scdr)))
> def args: : (<object 1606939> (scdr (cdr s)))
> def args: : (<object 1606939> (scddr (cdr scdr)))
> def args: : (<object 1607011> (scdr (cdr s)))
> def args: : (<object 1607011> (scddr (cdr scdr)))
> def args: : (<object 1607079> (scdr (cdr s)))
> def args: : (<object 1607079> (scddr (cdr scdr)))
> def args: : (<object 1607151> (scdr (cdr s)))
> def args: : (<object 1607151> (scddr (cdr scdr)))
> def args: : (<object 1607219> (scdr (cdr s)))
> def args: : (<object 1607219> (scddr (cdr scdr)))
> def args: : (<object 1607291> (scdr (cdr s)))
> def args: : (<object 1607291> (scddr (cdr scdr)))
> def args: : (<object 1607359> (scdr (cdr s)))
> def args: : (<object 1607359> (scddr (cdr scdr)))
> def args: : (<object 1607431> (scdr (cdr s)))
> def args: : (<object 1607431> (scddr (cdr scdr)))
> def args: : (<object 1607499> (scdr (cdr s)))
> def args: : (<object 1607499> (scddr (cdr scdr)))
> def args: : (<object 1607571> (scdr (cdr s)))
> def args: : (<object 1607571> (scddr (cdr scdr)))
> def args: : (<object 1607639> (scdr (cdr s)))
> def args: : (<object 1607639> (scddr (cdr scdr)))
> def args: : (<object 1607711> (scdr (cdr s)))
> def args: : (<object 1607711> (scddr (cdr scdr)))
> def args: : (<object 1607779> (scdr (cdr s)))
> def args: : (<object 1607779> (scddr (cdr scdr)))
> def args: : (<object 1607851> (scdr (cdr s)))
> def args: : (<object 1607851> (scddr (cdr scdr)))
> def args: : (<object 1607919> (scdr (cdr s)))
> def args: : (<object 1607919> (scddr (cdr scdr)))
> def args: : (<object 1607991> (scdr (cdr s)))
> def args: : (<object 1607991> (scddr (cdr scdr)))
> def args: : (<object 1608059> (scdr (cdr s)))
> def args: : (<object 1608059> (scddr (cdr scdr)))
> def args: : (<object 1608131> (scdr (cdr s)))
> def args: : (<object 1608131> (scddr (cdr scdr)))
> def args: : (<object 1608199> (scdr (cdr s)))
> def args: : (<object 1608199> (scddr (cdr scdr)))
> def args: : (<object 1608271> (scdr (cdr s)))
> def args: : (<object 1608271> (scddr (cdr scdr)))
> def args: : (<object 1608339> (scdr (cdr s)))
> def args: : (<object 1608339> (scddr (cdr scdr)))
> def args: : (<object 1608411> (scdr (cdr s)))
> def args: : (<object 1608411> (scddr (cdr scdr)))
> def args: : (<object 1608479> (scdr (cdr s)))
> def args: : (<object 1608479> (scddr (cdr scdr)))
> def args: : (<object 1608551> (scdr (cdr s)))
> def args: : (<object 1608551> (scddr (cdr scdr)))
> def args: : (<object 1608619> (scdr (cdr s)))
> def args: : (<object 1608619> (scddr (cdr scdr)))
> def args: : (<object 1608691> (scdr (cdr s)))
> def args: : (<object 1608691> (scddr (cdr scdr)))
> def args: : (<object 1608759> (scdr (cdr s)))
> def args: : (<object 1608759> (scddr (cdr scdr)))
> def args: : (<object 1608831> (scdr (cdr s)))
> def args: : (<object 1608831> (scddr (cdr scdr)))
> def args: : (<object 1608899> (scdr (cdr s)))
> def args: : (<object 1608899> (scddr (cdr scdr)))
> def args: : (<object 1608971> (scdr (cdr s)))
> def args: : (<object 1608971> (scddr (cdr scdr)))
> def args: : (<object 1609039> (scdr (cdr s)))
> def args: : (<object 1609039> (scddr (cdr scdr)))
> def args: : (<object 1609111> (scdr (cdr s)))
> def args: : (<object 1609111> (scddr (cdr scdr)))
> def args: : (<object 1609179> (scdr (cdr s)))
> def args: : (<object 1609179> (scddr (cdr scdr)))
> def args: : (<object 1609251> (scdr (cdr s)))
> def args: : (<object 1609251> (scddr (cdr scdr)))
> def args: : (<object 1609319> (scdr (cdr s)))
> def args: : (<object 1609319> (scddr (cdr scdr)))
> def args: : (<object 1609391> (scdr (cdr s)))
> def args: : (<object 1609391> (scddr (cdr scdr)))
> def args: : (<object 1609459> (scdr (cdr s)))
> def args: : (<object 1609459> (scddr (cdr scdr)))
> def args: : (<object 1609531> (scdr (cdr s)))
> def args: : (<object 1609531> (scddr (cdr scdr)))
> def args: : (<object 1609599> (scdr (cdr s)))
> def args: : (<object 1609599> (scddr (cdr scdr)))
> def args: : (<object 1609671> (scdr (cdr s)))
> def args: : (<object 1609671> (scddr (cdr scdr)))
> def args: : (<object 1609739> (scdr (cdr s)))
> def args: : (<object 1609739> (scddr (cdr scdr)))
> def args: : (<object 1609811> (scdr (cdr s)))
> def args: : (<object 1609811> (scddr (cdr scdr)))
> def args: : (<object 1609879> (scdr (cdr s)))
> def args: : (<object 1609879> (scddr (cdr scdr)))
> def args: : (<object 1609951> (scdr (cdr s)))
> def args: : (<object 1609951> (scddr (cdr scdr)))
> def args: : (<object 1610019> (scdr (cdr s)))
> def args: : (<object 1610019> (scddr (cdr scdr)))
> def args: : (<object 1610091> (scdr (cdr s)))
> def args: : (<object 1610091> (scddr (cdr scdr)))
> def args: : (<object 1610159> (scdr (cdr s)))
> def args: : (<object 1610159> (scddr (cdr scdr)))
> def args: : (<object 1610231> (scdr (cdr s)))
> def args: : (<object 1610231> (scddr (cdr scdr)))
> def args: : (<object 1610299> (scdr (cdr s)))
> def args: : (<object 1610299> (scddr (cdr scdr)))
> def args: : (<object 1610371> (scdr (cdr s)))
> def args: : (<object 1610371> (scddr (cdr scdr)))
> def args: : (<object 1610439> (scdr (cdr s)))
> def args: : (<object 1610439> (scddr (cdr scdr)))
> def args: : (<object 1610511> (scdr (cdr s)))
> def args: : (<object 1610511> (scddr (cdr scdr)))
> def args: : (<object 1610579> (scdr (cdr s)))
> def args: : (<object 1610579> (scddr (cdr scdr)))
> def args: : (<object 1610651> (scdr (cdr s)))
> def args: : (<object 1610651> (scddr (cdr scdr)))
> def args: : (<object 1610719> (scdr (cdr s)))
> def args: : (<object 1610719> (scddr (cdr scdr)))
> def args: : (<object 1610791> (scdr (cdr s)))
> def args: : (<object 1610791> (scddr (cdr scdr)))
> def args: : (<object 1610859> (scdr (cdr s)))
> def args: : (<object 1610859> (scddr (cdr scdr)))
> def args: : (<object 1610931> (scdr (cdr s)))
> def args: : (<object 1610931> (scddr (cdr scdr)))
> def args: : (<object 1610999> (scdr (cdr s)))
> def args: : (<object 1610999> (scddr (cdr scdr)))
> def args: : (<object 1611071> (scdr (cdr s)))
> def args: : (<object 1611071> (scddr (cdr scdr)))
> def args: : (<object 1611139> (scdr (cdr s)))
> def args: : (<object 1611139> (scddr (cdr scdr)))
> def args: : (<object 1611211> (scdr (cdr s)))
> def args: : (<object 1611211> (scddr (cdr scdr)))
> def args: : (<object 1611279> (scdr (cdr s)))
> def args: : (<object 1611279> (scddr (cdr scdr)))
> def args: : (<object 1611351> (scdr (cdr s)))
> def args: : (<object 1611351> (scddr (cdr scdr)))
> def args: : (<object 1611419> (scdr (cdr s)))
> def args: : (<object 1611419> (scddr (cdr scdr)))
> def args: : (<object 1611491> (scdr (cdr s)))
> def args: : (<object 1611491> (scddr (cdr scdr)))
> def args: : (<object 1611559> (scdr (cdr s)))
> def args: : (<object 1611559> (scddr (cdr scdr)))
> def args: : (<object 1611631> (scdr (cdr s)))
> def args: : (<object 1611631> (scddr (cdr scdr)))
> def args: : (<object 1611699> (scdr (cdr s)))
> def args: : (<object 1611699> (scddr (cdr scdr)))
> def args: : (<object 1611771> (scdr (cdr s)))
> def args: : (<object 1611771> (scddr (cdr scdr)))
> def args: : (<object 1611839> (scdr (cdr s)))
> def args: : (<object 1611839> (scddr (cdr scdr)))
> def args: : (<object 1611911> (scdr (cdr s)))
> def args: : (<object 1611911> (scddr (cdr scdr)))
> def args: : (<object 1611979> (scdr (cdr s)))
> def args: : (<object 1611979> (scddr (cdr scdr)))
> def args: : (<object 1612051> (scdr (cdr s)))
> def args: : (<object 1612051> (scddr (cdr scdr)))
> def args: : (<object 1612119> (scdr (cdr s)))
> def args: : (<object 1612119> (scddr (cdr scdr)))
> def args: : (<object 1612191> (scdr (cdr s)))
> def args: : (<object 1612191> (scddr (cdr scdr)))
> def args: : (<object 1612259> (scdr (cdr s)))
> def args: : (<object 1612259> (scddr (cdr scdr)))
> def args: : (<object 1612331> (scdr (cdr s)))
> def args: : (<object 1612331> (scddr (cdr scdr)))
> def args: : (<object 1612399> (scdr (cdr s)))
> def args: : (<object 1612399> (scddr (cdr scdr)))
> def args: : (<object 1612471> (scdr (cdr s)))
> def args: : (<object 1612471> (scddr (cdr scdr)))
> def args: : (<object 1612539> (scdr (cdr s)))
> def args: : (<object 1612539> (scddr (cdr scdr)))
> def args: : (<object 1612611> (scdr (cdr s)))
> def args: : (<object 1612611> (scddr (cdr scdr)))
> def args: : (<object 1612679> (scdr (cdr s)))
> def args: : (<object 1612679> (scddr (cdr scdr)))
> def args: : (<object 1612751> (scdr (cdr s)))
> def args: : (<object 1612751> (scddr (cdr scdr)))
> def args: : (<object 1612819> (scdr (cdr s)))
> def args: : (<object 1612819> (scddr (cdr scdr)))
> def args: : (<object 1612891> (scdr (cdr s)))
> def args: : (<object 1612891> (scddr (cdr scdr)))
> def args: : (<object 1612959> (scdr (cdr s)))
> def args: : (<object 1612959> (scddr (cdr scdr)))
> def args: : (<object 1613031> (scdr (cdr s)))
> def args: : (<object 1613031> (scddr (cdr scdr)))
> def args: : (<object 1613099> (scdr (cdr s)))
> def args: : (<object 1613099> (scddr (cdr scdr)))
> def args: : (<object 1613171> (scdr (cdr s)))
> def args: : (<object 1613171> (scddr (cdr scdr)))
> def args: : (<object 1613239> (scdr (cdr s)))
> def args: : (<object 1613239> (scddr (cdr scdr)))
> def args: : (<object 1613311> (scdr (cdr s)))
> def args: : (<object 1613311> (scddr (cdr scdr)))
> def args: : (<object 1613379> (scdr (cdr s)))
> def args: : (<object 1613379> (scddr (cdr scdr)))
> def args: : (<object 1613451> (scdr (cdr s)))
> def args: : (<object 1613451> (scddr (cdr scdr)))
> def args: : (<object 1613519> (scdr (cdr s)))
> def args: : (<object 1613519> (scddr (cdr scdr)))
> def args: : (<object 1613591> (scdr (cdr s)))
> def args: : (<object 1613591> (scddr (cdr scdr)))
> def args: : (<object 1613659> (scdr (cdr s)))
> def args: : (<object 1613659> (scddr (cdr scdr)))
> def args: : (<object 1613731> (scdr (cdr s)))
> def args: : (<object 1613731> (scddr (cdr scdr)))
> def args: : (<object 1613799> (scdr (cdr s)))
> def args: : (<object 1613799> (scddr (cdr scdr)))
> def args: : (<object 1613871> (scdr (cdr s)))
> def args: : (<object 1613871> (scddr (cdr scdr)))
> def args: : (<object 1613939> (scdr (cdr s)))
> def args: : (<object 1613939> (scddr (cdr scdr)))
> def args: : (<object 1614011> (scdr (cdr s)))
> def args: : (<object 1614011> (scddr (cdr scdr)))
> def args: : (<object 1614079> (scdr (cdr s)))
> def args: : (<object 1614079> (scddr (cdr scdr)))
> def args: : (<object 1614151> (scdr (cdr s)))
> def args: : (<object 1614151> (scddr (cdr scdr)))
> def args: : (<object 1614219> (scdr (cdr s)))
> def args: : (<object 1614219> (scddr (cdr scdr)))
> def args: : (<object 1614291> (scdr (cdr s)))
> def args: : (<object 1614291> (scddr (cdr scdr)))
> def args: : (<object 1614359> (scdr (cdr s)))
> def args: : (<object 1614359> (scddr (cdr scdr)))
> def args: : (<object 1614431> (scdr (cdr s)))
> def args: : (<object 1614431> (scddr (cdr scdr)))
> def args: : (<object 1614499> (scdr (cdr s)))
> def args: : (<object 1614499> (scddr (cdr scdr)))
> def args: : (<object 1614571> (scdr (cdr s)))
> def args: : (<object 1614571> (scddr (cdr scdr)))
> def args: : (<object 1614639> (scdr (cdr s)))
> def args: : (<object 1614639> (scddr (cdr scdr)))
> def args: : (<object 1614711> (scdr (cdr s)))
> def args: : (<object 1614711> (scddr (cdr scdr)))
> def args: : (<object 1614779> (scdr (cdr s)))
> def args: : (<object 1614779> (scddr (cdr scdr)))
> def args: : (<object 1614851> (scdr (cdr s)))
> def args: : (<object 1614851> (scddr (cdr scdr)))
> def args: : (<object 1614919> (scdr (cdr s)))
> def args: : (<object 1614919> (scddr (cdr scdr)))
> def args: : (<object 1614991> (scdr (cdr s)))
> def args: : (<object 1614991> (scddr (cdr scdr)))
> def args: : (<object 1615059> (scdr (cdr s)))
> def args: : (<object 1615059> (scddr (cdr scdr)))
> def args: : (<object 1615131> (scdr (cdr s)))
> def args: : (<object 1615131> (scddr (cdr scdr)))
> def args: : (<object 1615199> (scdr (cdr s)))
> def args: : (<object 1615199> (scddr (cdr scdr)))
> def args: : (<object 1615271> (scdr (cdr s)))
> def args: : (<object 1615271> (scddr (cdr scdr)))
> def args: : (<object 1615339> (scdr (cdr s)))
> def args: : (<object 1615339> (scddr (cdr scdr)))
> def args: : (<object 1615411> (scdr (cdr s)))
> def args: : (<object 1615411> (scddr (cdr scdr)))
> def args: : (<object 1615479> (scdr (cdr s)))
> def args: : (<object 1615479> (scddr (cdr scdr)))
> def args: : (<object 1615551> (scdr (cdr s)))
> def args: : (<object 1615551> (scddr (cdr scdr)))
> def args: : (<object 1615619> (scdr (cdr s)))
> def args: : (<object 1615619> (scddr (cdr scdr)))
> def args: : (<object 1615691> (scdr (cdr s)))
> def args: : (<object 1615691> (scddr (cdr scdr)))
> def args: : (<object 1615759> (scdr (cdr s)))
> def args: : (<object 1615759> (scddr (cdr scdr)))
> def args: : (<object 1615831> (scdr (cdr s)))
> def args: : (<object 1615831> (scddr (cdr scdr)))
> def args: : (<object 1615899> (scdr (cdr s)))
> def args: : (<object 1615899> (scddr (cdr scdr)))
> def args: : (<object 1615971> (scdr (cdr s)))
> def args: : (<object 1615971> (scddr (cdr scdr)))
> def args: : (<object 1616039> (scdr (cdr s)))
> def args: : (<object 1616039> (scddr (cdr scdr)))
> def args: : (<object 1616111> (scdr (cdr s)))
> def args: : (<object 1616111> (scddr (cdr scdr)))
> def args: : (<object 1616179> (scdr (cdr s)))
> def args: : (<object 1616179> (scddr (cdr scdr)))
> def args: : (<object 1616251> (scdr (cdr s)))
> def args: : (<object 1616251> (scddr (cdr scdr)))
> def args: : (<object 1616319> (scdr (cdr s)))
> def args: : (<object 1616319> (scddr (cdr scdr)))
> def args: : (<object 1616391> (scdr (cdr s)))
> def args: : (<object 1616391> (scddr (cdr scdr)))
> def args: : (<object 1616459> (scdr (cdr s)))
> def args: : (<object 1616459> (scddr (cdr scdr)))
> def args: : (<object 1616531> (scdr (cdr s)))
> def args: : (<object 1616531> (scddr (cdr scdr)))
> def args: : (<object 1616599> (scdr (cdr s)))
> def args: : (<object 1616599> (scddr (cdr scdr)))
> def args: : (<object 1616671> (scdr (cdr s)))
> def args: : (<object 1616671> (scddr (cdr scdr)))
> def args: : (<object 1616739> (scdr (cdr s)))
> def args: : (<object 1616739> (scddr (cdr scdr)))
> def args: : (<object 1616811> (scdr (cdr s)))
> def args: : (<object 1616811> (scddr (cdr scdr)))
> def args: : (<object 1616879> (scdr (cdr s)))
> def args: : (<object 1616879> (scddr (cdr scdr)))
> def args: : (<object 1616951> (scdr (cdr s)))
> def args: : (<object 1616951> (scddr (cdr scdr)))
> def args: : (<object 1617019> (scdr (cdr s)))
> def args: : (<object 1617019> (scddr (cdr scdr)))
> def args: : (<object 1617091> (scdr (cdr s)))
> def args: : (<object 1617091> (scddr (cdr scdr)))
> def args: : (<object 1617159> (scdr (cdr s)))
> def args: : (<object 1617159> (scddr (cdr scdr)))
> def args: : (<object 1617231> (scdr (cdr s)))
> def args: : (<object 1617231> (scddr (cdr scdr)))
> def args: : (<object 1617299> (scdr (cdr s)))
> def args: : (<object 1617299> (scddr (cdr scdr)))
> def args: : (<object 1617371> (scdr (cdr s)))
> def args: : (<object 1617371> (scddr (cdr scdr)))
> def args: : (<object 1617439> (scdr (cdr s)))
> def args: : (<object 1617439> (scddr (cdr scdr)))
> def args: : (<object 1617511> (scdr (cdr s)))
> def args: : (<object 1617511> (scddr (cdr scdr)))
> 4950def args: : (<object 1634616> (env (if (null? @) # (car @))))
>  def args: : (<object 1634723> (env (if (null? @) # (car @))))
> def args: : (<object 1634843> (scdr (cdr s)))
> def args: : (<object 1634843> (scddr (cdr scdr)))
> def args: : (<object 1634915> (scdr (cdr s)))
> def args: : (<object 1634915> (scddr (cdr scdr)))
> def args: : (<object 1634987> (scdr (cdr s)))
> def args: : (<object 1634987> (scddr (cdr scdr)))
> def args: : (<object 1635055> (scdr (cdr s)))
> def args: : (<object 1635055> (scddr (cdr scdr)))
> def args: : (<object 1635294> (scdr (cdr s)))
> def args: : (<object 1635294> (scddr (cdr scdr)))
> def args: : (<object 1635366> (scdr (cdr s)))
> def args: : (<object 1635366> (scddr (cdr scdr)))
> def args: : (<object 1635434> (scdr (cdr s)))
> def args: : (<object 1635434> (scddr (cdr scdr)))
> def args: : (<object 1635506> (scdr (cdr s)))
> def args: : (<object 1635506> (scddr (cdr scdr)))
> def args: : (<object 1635574> (scdr (cdr s)))
> def args: : (<object 1635574> (scddr (cdr scdr)))
> def args: : (<object 1635646> (scdr (cdr s)))
> def args: : (<object 1635646> (scddr (cdr scdr)))
> def args: : (<object 1635714> (scdr (cdr s)))
> def args: : (<object 1635714> (scddr (cdr scdr)))
> def args: : (<object 1635786> (scdr (cdr s)))
> def args: : (<object 1635786> (scddr (cdr scdr)))
> def args: : (<object 1635854> (scdr (cdr s)))
> def args: : (<object 1635854> (scddr (cdr scdr)))
> def args: : (<object 1635926> (scdr (cdr s)))
> def args: : (<object 1635926> (scddr (cdr scdr)))
> def args: : (<object 1635994> (scdr (cdr s)))
> def args: : (<object 1635994> (scddr (cdr scdr)))
> def args: : (<object 1636066> (scdr (cdr s)))
> def args: : (<object 1636066> (scddr (cdr scdr)))
> def args: : (<object 1636134> (scdr (cdr s)))
> def args: : (<object 1636134> (scddr (cdr scdr)))
> def args: : (<object 1636206> (scdr (cdr s)))
> def args: : (<object 1636206> (scddr (cdr scdr)))
> def args: : (<object 1636274> (scdr (cdr s)))
> def args: : (<object 1636274> (scddr (cdr scdr)))
> def args: : (<object 1636346> (scdr (cdr s)))
> def args: : (<object 1636346> (scddr (cdr scdr)))
> def args: : (<object 1636414> (scdr (cdr s)))
> def args: : (<object 1636414> (scddr (cdr scdr)))
> def args: : (<object 1636486> (scdr (cdr s)))
> def args: : (<object 1636486> (scddr (cdr scdr)))
> def args: : (<object 1636554> (scdr (cdr s)))
> def args: : (<object 1636554> (scddr (cdr scdr)))
> def args: : (<object 1636626> (scdr (cdr s)))
> def args: : (<object 1636626> (scddr (cdr scdr)))
> def args: : (<object 1636694> (scdr (cdr s)))
> def args: : (<object 1636694> (scddr (cdr scdr)))
> def args: : (<object 1636766> (scdr (cdr s)))
> def args: : (<object 1636766> (scddr (cdr scdr)))
> def args: : (<object 1636834> (scdr (cdr s)))
> def args: : (<object 1636834> (scddr (cdr scdr)))
> def args: : (<object 1636906> (scdr (cdr s)))
> def args: : (<object 1636906> (scddr (cdr scdr)))
> def args: : (<object 1636974> (scdr (cdr s)))
> def args: : (<object 1636974> (scddr (cdr scdr)))
> def args: : (<object 1637046> (scdr (cdr s)))
> def args: : (<object 1637046> (scddr (cdr scdr)))
> def args: : (<object 1637114> (scdr (cdr s)))
> def args: : (<object 1637114> (scddr (cdr scdr)))
> def args: : (<object 1637186> (scdr (cdr s)))
> def args: : (<object 1637186> (scddr (cdr scdr)))
> def args: : (<object 1637254> (scdr (cdr s)))
> def args: : (<object 1637254> (scddr (cdr scdr)))
> def args: : (<object 1637326> (scdr (cdr s)))
> def args: : (<object 1637326> (scddr (cdr scdr)))
> def args: : (<object 1637394> (scdr (cdr s)))
> def args: : (<object 1637394> (scddr (cdr scdr)))
> def args: : (<object 1637466> (scdr (cdr s)))
> def args: : (<object 1637466> (scddr (cdr scdr)))
> def args: : (<object 1637534> (scdr (cdr s)))
> def args: : (<object 1637534> (scddr (cdr scdr)))
> def args: : (<object 1637606> (scdr (cdr s)))
> def args: : (<object 1637606> (scddr (cdr scdr)))
> def args: : (<object 1637674> (scdr (cdr s)))
> def args: : (<object 1637674> (scddr (cdr scdr)))
> def args: : (<object 1637746> (scdr (cdr s)))
> def args: : (<object 1637746> (scddr (cdr scdr)))
> def args: : (<object 1637814> (scdr (cdr s)))
> def args: : (<object 1637814> (scddr (cdr scdr)))
> def args: : (<object 1637886> (scdr (cdr s)))
> def args: : (<object 1637886> (scddr (cdr scdr)))
> def args: : (<object 1637954> (scdr (cdr s)))
> def args: : (<object 1637954> (scddr (cdr scdr)))
> def args: : (<object 1638026> (scdr (cdr s)))
> def args: : (<object 1638026> (scddr (cdr scdr)))
> def args: : (<object 1638094> (scdr (cdr s)))
> def args: : (<object 1638094> (scddr (cdr scdr)))
> def args: : (<object 1638166> (scdr (cdr s)))
> def args: : (<object 1638166> (scddr (cdr scdr)))
> def args: : (<object 1638234> (scdr (cdr s)))
> def args: : (<object 1638234> (scddr (cdr scdr)))
> def args: : (<object 1638306> (scdr (cdr s)))
> def args: : (<object 1638306> (scddr (cdr scdr)))
> def args: : (<object 1638374> (scdr (cdr s)))
> def args: : (<object 1638374> (scddr (cdr scdr)))
> def args: : (<object 1638446> (scdr (cdr s)))
> def args: : (<object 1638446> (scddr (cdr scdr)))
> def args: : (<object 1638514> (scdr (cdr s)))
> def args: : (<object 1638514> (scddr (cdr scdr)))
> def args: : (<object 1638586> (scdr (cdr s)))
> def args: : (<object 1638586> (scddr (cdr scdr)))
> def args: : (<object 1638654> (scdr (cdr s)))
> def args: : (<object 1638654> (scddr (cdr scdr)))
> def args: : (<object 1638726> (scdr (cdr s)))
> def args: : (<object 1638726> (scddr (cdr scdr)))
> def args: : (<object 1638794> (scdr (cdr s)))
> def args: : (<object 1638794> (scddr (cdr scdr)))
> def args: : (<object 1638866> (scdr (cdr s)))
> def args: : (<object 1638866> (scddr (cdr scdr)))
> def args: : (<object 1638934> (scdr (cdr s)))
> def args: : (<object 1638934> (scddr (cdr scdr)))
> def args: : (<object 1639006> (scdr (cdr s)))
> def args: : (<object 1639006> (scddr (cdr scdr)))
> def args: : (<object 1639074> (scdr (cdr s)))
> def args: : (<object 1639074> (scddr (cdr scdr)))
> def args: : (<object 1639146> (scdr (cdr s)))
> def args: : (<object 1639146> (scddr (cdr scdr)))
> def args: : (<object 1639214> (scdr (cdr s)))
> def args: : (<object 1639214> (scddr (cdr scdr)))
> def args: : (<object 1639286> (scdr (cdr s)))
> def args: : (<object 1639286> (scddr (cdr scdr)))
> def args: : (<object 1639354> (scdr (cdr s)))
> def args: : (<object 1639354> (scddr (cdr scdr)))
> def args: : (<object 1639426> (scdr (cdr s)))
> def args: : (<object 1639426> (scddr (cdr scdr)))
> def args: : (<object 1639494> (scdr (cdr s)))
> def args: : (<object 1639494> (scddr (cdr scdr)))
> def args: : (<object 1639566> (scdr (cdr s)))
> def args: : (<object 1639566> (scddr (cdr scdr)))
> def args: : (<object 1639634> (scdr (cdr s)))
> def args: : (<object 1639634> (scddr (cdr scdr)))
> def args: : (<object 1639706> (scdr (cdr s)))
> def args: : (<object 1639706> (scddr (cdr scdr)))
> def args: : (<object 1639774> (scdr (cdr s)))
> def args: : (<object 1639774> (scddr (cdr scdr)))
> def args: : (<object 1639846> (scdr (cdr s)))
> def args: : (<object 1639846> (scddr (cdr scdr)))
> def args: : (<object 1639914> (scdr (cdr s)))
> def args: : (<object 1639914> (scddr (cdr scdr)))
> def args: : (<object 1639986> (scdr (cdr s)))
> def args: : (<object 1639986> (scddr (cdr scdr)))
> def args: : (<object 1640054> (scdr (cdr s)))
> def args: : (<object 1640054> (scddr (cdr scdr)))
> def args: : (<object 1640126> (scdr (cdr s)))
> def args: : (<object 1640126> (scddr (cdr scdr)))
> def args: : (<object 1640194> (scdr (cdr s)))
> def args: : (<object 1640194> (scddr (cdr scdr)))
> def args: : (<object 1640266> (scdr (cdr s)))
> def args: : (<object 1640266> (scddr (cdr scdr)))
> def args: : (<object 1640334> (scdr (cdr s)))
> def args: : (<object 1640334> (scddr (cdr scdr)))
> def args: : (<object 1640406> (scdr (cdr s)))
> def args: : (<object 1640406> (scddr (cdr scdr)))
> def args: : (<object 1640474> (scdr (cdr s)))
> def args: : (<object 1640474> (scddr (cdr scdr)))
> def args: : (<object 1640546> (scdr (cdr s)))
> def args: : (<object 1640546> (scddr (cdr scdr)))
> def args: : (<object 1640614> (scdr (cdr s)))
> def args: : (<object 1640614> (scddr (cdr scdr)))
> def args: : (<object 1640686> (scdr (cdr s)))
> def args: : (<object 1640686> (scddr (cdr scdr)))
> def args: : (<object 1640754> (scdr (cdr s)))
> def args: : (<object 1640754> (scddr (cdr scdr)))
> def args: : (<object 1640826> (scdr (cdr s)))
> def args: : (<object 1640826> (scddr (cdr scdr)))
> def args: : (<object 1640894> (scdr (cdr s)))
> def args: : (<object 1640894> (scddr (cdr scdr)))
> def args: : (<object 1640966> (scdr (cdr s)))
> def args: : (<object 1640966> (scddr (cdr scdr)))
> def args: : (<object 1641034> (scdr (cdr s)))
> def args: : (<object 1641034> (scddr (cdr scdr)))
> def args: : (<object 1641106> (scdr (cdr s)))
> def args: : (<object 1641106> (scddr (cdr scdr)))
> def args: : (<object 1641174> (scdr (cdr s)))
> def args: : (<object 1641174> (scddr (cdr scdr)))
> def args: : (<object 1641246> (scdr (cdr s)))
> def args: : (<object 1641246> (scddr (cdr scdr)))
> def args: : (<object 1641314> (scdr (cdr s)))
> def args: : (<object 1641314> (scddr (cdr scdr)))
> def args: : (<object 1641386> (scdr (cdr s)))
> def args: : (<object 1641386> (scddr (cdr scdr)))
> def args: : (<object 1641454> (scdr (cdr s)))
> def args: : (<object 1641454> (scddr (cdr scdr)))
> def args: : (<object 1641526> (scdr (cdr s)))
> def args: : (<object 1641526> (scddr (cdr scdr)))
> def args: : (<object 1641594> (scdr (cdr s)))
> def args: : (<object 1641594> (scddr (cdr scdr)))
> def args: : (<object 1641666> (scdr (cdr s)))
> def args: : (<object 1641666> (scddr (cdr scdr)))
> def args: : (<object 1641734> (scdr (cdr s)))
> def args: : (<object 1641734> (scddr (cdr scdr)))
> def args: : (<object 1641806> (scdr (cdr s)))
> def args: : (<object 1641806> (scddr (cdr scdr)))
> def args: : (<object 1641874> (scdr (cdr s)))
> def args: : (<object 1641874> (scddr (cdr scdr)))
> def args: : (<object 1641946> (scdr (cdr s)))
> def args: : (<object 1641946> (scddr (cdr scdr)))
> def args: : (<object 1642014> (scdr (cdr s)))
> def args: : (<object 1642014> (scddr (cdr scdr)))
> def args: : (<object 1642086> (scdr (cdr s)))
> def args: : (<object 1642086> (scddr (cdr scdr)))
> def args: : (<object 1642154> (scdr (cdr s)))
> def args: : (<object 1642154> (scddr (cdr scdr)))
> def args: : (<object 1642226> (scdr (cdr s)))
> def args: : (<object 1642226> (scddr (cdr scdr)))
> def args: : (<object 1642294> (scdr (cdr s)))
> def args: : (<object 1642294> (scddr (cdr scdr)))
> def args: : (<object 1642366> (scdr (cdr s)))
> def args: : (<object 1642366> (scddr (cdr scdr)))
> def args: : (<object 1642434> (scdr (cdr s)))
> def args: : (<object 1642434> (scddr (cdr scdr)))
> def args: : (<object 1642506> (scdr (cdr s)))
> def args: : (<object 1642506> (scddr (cdr scdr)))
> def args: : (<object 1642574> (scdr (cdr s)))
> def args: : (<object 1642574> (scddr (cdr scdr)))
> def args: : (<object 1642646> (scdr (cdr s)))
> def args: : (<object 1642646> (scddr (cdr scdr)))
> def args: : (<object 1642714> (scdr (cdr s)))
> def args: : (<object 1642714> (scddr (cdr scdr)))
> def args: : (<object 1642786> (scdr (cdr s)))
> def args: : (<object 1642786> (scddr (cdr scdr)))
> def args: : (<object 1642854> (scdr (cdr s)))
> def args: : (<object 1642854> (scddr (cdr scdr)))
> def args: : (<object 1642926> (scdr (cdr s)))
> def args: : (<object 1642926> (scddr (cdr scdr)))
> def args: : (<object 1642994> (scdr (cdr s)))
> def args: : (<object 1642994> (scddr (cdr scdr)))
> def args: : (<object 1643066> (scdr (cdr s)))
> def args: : (<object 1643066> (scddr (cdr scdr)))
> def args: : (<object 1643134> (scdr (cdr s)))
> def args: : (<object 1643134> (scddr (cdr scdr)))
> def args: : (<object 1643206> (scdr (cdr s)))
> def args: : (<object 1643206> (scddr (cdr scdr)))
> def args: : (<object 1643274> (scdr (cdr s)))
> def args: : (<object 1643274> (scddr (cdr scdr)))
> def args: : (<object 1643346> (scdr (cdr s)))
> def args: : (<object 1643346> (scddr (cdr scdr)))
> def args: : (<object 1643414> (scdr (cdr s)))
> def args: : (<object 1643414> (scddr (cdr scdr)))
> def args: : (<object 1643486> (scdr (cdr s)))
> def args: : (<object 1643486> (scddr (cdr scdr)))
> def args: : (<object 1643554> (scdr (cdr s)))
> def args: : (<object 1643554> (scddr (cdr scdr)))
> def args: : (<object 1643626> (scdr (cdr s)))
> def args: : (<object 1643626> (scddr (cdr scdr)))
> def args: : (<object 1643694> (scdr (cdr s)))
> def args: : (<object 1643694> (scddr (cdr scdr)))
> def args: : (<object 1643766> (scdr (cdr s)))
> def args: : (<object 1643766> (scddr (cdr scdr)))
> def args: : (<object 1643834> (scdr (cdr s)))
> def args: : (<object 1643834> (scddr (cdr scdr)))
> def args: : (<object 1643906> (scdr (cdr s)))
> def args: : (<object 1643906> (scddr (cdr scdr)))
> def args: : (<object 1643974> (scdr (cdr s)))
> def args: : (<object 1643974> (scddr (cdr scdr)))
> def args: : (<object 1644046> (scdr (cdr s)))
> def args: : (<object 1644046> (scddr (cdr scdr)))
> def args: : (<object 1644114> (scdr (cdr s)))
> def args: : (<object 1644114> (scddr (cdr scdr)))
> def args: : (<object 1644186> (scdr (cdr s)))
> def args: : (<object 1644186> (scddr (cdr scdr)))
> def args: : (<object 1644254> (scdr (cdr s)))
> def args: : (<object 1644254> (scddr (cdr scdr)))
> def args: : (<object 1644326> (scdr (cdr s)))
> def args: : (<object 1644326> (scddr (cdr scdr)))
> def args: : (<object 1644394> (scdr (cdr s)))
> def args: : (<object 1644394> (scddr (cdr scdr)))
> def args: : (<object 1644466> (scdr (cdr s)))
> def args: : (<object 1644466> (scddr (cdr scdr)))
> def args: : (<object 1644534> (scdr (cdr s)))
> def args: : (<object 1644534> (scddr (cdr scdr)))
> def args: : (<object 1644606> (scdr (cdr s)))
> def args: : (<object 1644606> (scddr (cdr scdr)))
> def args: : (<object 1644674> (scdr (cdr s)))
> def args: : (<object 1644674> (scddr (cdr scdr)))
> def args: : (<object 1644746> (scdr (cdr s)))
> def args: : (<object 1644746> (scddr (cdr scdr)))
> def args: : (<object 1644814> (scdr (cdr s)))
> def args: : (<object 1644814> (scddr (cdr scdr)))
> def args: : (<object 1644886> (scdr (cdr s)))
> def args: : (<object 1644886> (scddr (cdr scdr)))
> def args: : (<object 1644954> (scdr (cdr s)))
> def args: : (<object 1644954> (scddr (cdr scdr)))
> def args: : (<object 1645026> (scdr (cdr s)))
> def args: : (<object 1645026> (scddr (cdr scdr)))
> def args: : (<object 1645094> (scdr (cdr s)))
> def args: : (<object 1645094> (scddr (cdr scdr)))
> def args: : (<object 1645166> (scdr (cdr s)))
> def args: : (<object 1645166> (scddr (cdr scdr)))
> def args: : (<object 1645234> (scdr (cdr s)))
> def args: : (<object 1645234> (scddr (cdr scdr)))
> def args: : (<object 1645306> (scdr (cdr s)))
> def args: : (<object 1645306> (scddr (cdr scdr)))
> def args: : (<object 1645374> (scdr (cdr s)))
> def args: : (<object 1645374> (scddr (cdr scdr)))
> def args: : (<object 1645446> (scdr (cdr s)))
> def args: : (<object 1645446> (scddr (cdr scdr)))
> def args: : (<object 1645514> (scdr (cdr s)))
> def args: : (<object 1645514> (scddr (cdr scdr)))
> def args: : (<object 1645586> (scdr (cdr s)))
> def args: : (<object 1645586> (scddr (cdr scdr)))
> def args: : (<object 1645654> (scdr (cdr s)))
> def args: : (<object 1645654> (scddr (cdr scdr)))
> def args: : (<object 1645726> (scdr (cdr s)))
> def args: : (<object 1645726> (scddr (cdr scdr)))
> def args: : (<object 1645794> (scdr (cdr s)))
> def args: : (<object 1645794> (scddr (cdr scdr)))
> def args: : (<object 1645866> (scdr (cdr s)))
> def args: : (<object 1645866> (scddr (cdr scdr)))
> def args: : (<object 1645934> (scdr (cdr s)))
> def args: : (<object 1645934> (scddr (cdr scdr)))
> def args: : (<object 1646006> (scdr (cdr s)))
> def args: : (<object 1646006> (scddr (cdr scdr)))
> def args: : (<object 1646074> (scdr (cdr s)))
> def args: : (<object 1646074> (scddr (cdr scdr)))
> def args: : (<object 1646146> (scdr (cdr s)))
> def args: : (<object 1646146> (scddr (cdr scdr)))
> def args: : (<object 1646214> (scdr (cdr s)))
> def args: : (<object 1646214> (scddr (cdr scdr)))
> def args: : (<object 1646286> (scdr (cdr s)))
> def args: : (<object 1646286> (scddr (cdr scdr)))
> def args: : (<object 1646354> (scdr (cdr s)))
> def args: : (<object 1646354> (scddr (cdr scdr)))
> def args: : (<object 1646426> (scdr (cdr s)))
> def args: : (<object 1646426> (scddr (cdr scdr)))
> def args: : (<object 1646494> (scdr (cdr s)))
> def args: : (<object 1646494> (scddr (cdr scdr)))
> def args: : (<object 1646566> (scdr (cdr s)))
> def args: : (<object 1646566> (scddr (cdr scdr)))
> def args: : (<object 1646634> (scdr (cdr s)))
> def args: : (<object 1646634> (scddr (cdr scdr)))
> def args: : (<object 1646706> (scdr (cdr s)))
> def args: : (<object 1646706> (scddr (cdr scdr)))
> def args: : (<object 1646774> (scdr (cdr s)))
> def args: : (<object 1646774> (scddr (cdr scdr)))
> def args: : (<object 1646846> (scdr (cdr s)))
> def args: : (<object 1646846> (scddr (cdr scdr)))
> def args: : (<object 1646914> (scdr (cdr s)))
> def args: : (<object 1646914> (scddr (cdr scdr)))
> def args: : (<object 1646986> (scdr (cdr s)))
> def args: : (<object 1646986> (scddr (cdr scdr)))
> def args: : (<object 1647054> (scdr (cdr s)))
> def args: : (<object 1647054> (scddr (cdr scdr)))
> def args: : (<object 1647126> (scdr (cdr s)))
> def args: : (<object 1647126> (scddr (cdr scdr)))
> def args: : (<object 1647194> (scdr (cdr s)))
> def args: : (<object 1647194> (scddr (cdr scdr)))
> def args: : (<object 1647266> (scdr (cdr s)))
> def args: : (<object 1647266> (scddr (cdr scdr)))
> def args: : (<object 1647334> (scdr (cdr s)))
> def args: : (<object 1647334> (scddr (cdr scdr)))
> def args: : (<object 1647406> (scdr (cdr s)))
> def args: : (<object 1647406> (scddr (cdr scdr)))
> def args: : (<object 1647474> (scdr (cdr s)))
> def args: : (<object 1647474> (scddr (cdr scdr)))
> def args: : (<object 1647546> (scdr (cdr s)))
> def args: : (<object 1647546> (scddr (cdr scdr)))
> def args: : (<object 1647614> (scdr (cdr s)))
> def args: : (<object 1647614> (scddr (cdr scdr)))
> def args: : (<object 1647686> (scdr (cdr s)))
> def args: : (<object 1647686> (scddr (cdr scdr)))
> def args: : (<object 1647754> (scdr (cdr s)))
> def args: : (<object 1647754> (scddr (cdr scdr)))
> def args: : (<object 1647826> (scdr (cdr s)))
> def args: : (<object 1647826> (scddr (cdr scdr)))
> def args: : (<object 1647894> (scdr (cdr s)))
> def args: : (<object 1647894> (scddr (cdr scdr)))
> def args: : (<object 1647966> (scdr (cdr s)))
> def args: : (<object 1647966> (scddr (cdr scdr)))
> def args: : (<object 1648034> (scdr (cdr s)))
> def args: : (<object 1648034> (scddr (cdr scdr)))
> def args: : (<object 1648106> (scdr (cdr s)))
> def args: : (<object 1648106> (scddr (cdr scdr)))
> def args: : (<object 1648174> (scdr (cdr s)))
> def args: : (<object 1648174> (scddr (cdr scdr)))
> def args: : (<object 1648246> (scdr (cdr s)))
> def args: : (<object 1648246> (scddr (cdr scdr)))
> def args: : (<object 1648314> (scdr (cdr s)))
> def args: : (<object 1648314> (scddr (cdr scdr)))
> def args: : (<object 1648386> (scdr (cdr s)))
> def args: : (<object 1648386> (scddr (cdr scdr)))
> def args: : (<object 1648454> (scdr (cdr s)))
> def args: : (<object 1648454> (scddr (cdr scdr)))
> def args: : (<object 1648526> (scdr (cdr s)))
> def args: : (<object 1648526> (scddr (cdr scdr)))
> def args: : (<object 1648594> (scdr (cdr s)))
> def args: : (<object 1648594> (scddr (cdr scdr)))
> def args: : (<object 1648666> (scdr (cdr s)))
> def args: : (<object 1648666> (scddr (cdr scdr)))
> def args: : (<object 1648734> (scdr (cdr s)))
> def args: : (<object 1648734> (scddr (cdr scdr)))
> def args: : (<object 1648806> (scdr (cdr s)))
> def args: : (<object 1648806> (scddr (cdr scdr)))
> def args: : (<object 1648874> (scdr (cdr s)))
> def args: : (<object 1648874> (scddr (cdr scdr)))
> def args: : (<object 1648946> (scdr (cdr s)))
> def args: : (<object 1648946> (scddr (cdr scdr)))
> 5050def args: : (<object 1666222> (env (if (null? @) # (car @))))
>  def args: : (<object 1666329> (env (if (null? @) # (car @))))
> def args: : (<object 1666449> (scdr (cdr s)))
> def args: : (<object 1666449> (scddr (cdr scdr)))
> def args: : (<object 1666521> (scdr (cdr s)))
> def args: : (<object 1666521> (scddr (cdr scdr)))
> def args: : (<object 1666593> (scdr (cdr s)))
> def args: : (<object 1666593> (scddr (cdr scdr)))
> def args: : (<object 1666661> (scdr (cdr s)))
> def args: : (<object 1666661> (scddr (cdr scdr)))
> def args: : (<object 1666900> (scdr (cdr s)))
> def args: : (<object 1666900> (scddr (cdr scdr)))
> def args: : (<object 1666972> (scdr (cdr s)))
> def args: : (<object 1666972> (scddr (cdr scdr)))
> def args: : (<object 1667040> (scdr (cdr s)))
> def args: : (<object 1667040> (scddr (cdr scdr)))
> def args: : (<object 1667112> (scdr (cdr s)))
> def args: : (<object 1667112> (scddr (cdr scdr)))
> def args: : (<object 1667180> (scdr (cdr s)))
> def args: : (<object 1667180> (scddr (cdr scdr)))
> def args: : (<object 1667252> (scdr (cdr s)))
> def args: : (<object 1667252> (scddr (cdr scdr)))
> def args: : (<object 1667320> (scdr (cdr s)))
> def args: : (<object 1667320> (scddr (cdr scdr)))
> def args: : (<object 1667392> (scdr (cdr s)))
> def args: : (<object 1667392> (scddr (cdr scdr)))
> def args: : (<object 1667460> (scdr (cdr s)))
> def args: : (<object 1667460> (scddr (cdr scdr)))
> def args: : (<object 1667532> (scdr (cdr s)))
> def args: : (<object 1667532> (scddr (cdr scdr)))
> def args: : (<object 1667600> (scdr (cdr s)))
> def args: : (<object 1667600> (scddr (cdr scdr)))
> def args: : (<object 1667672> (scdr (cdr s)))
> def args: : (<object 1667672> (scddr (cdr scdr)))
> def args: : (<object 1667740> (scdr (cdr s)))
> def args: : (<object 1667740> (scddr (cdr scdr)))
> def args: : (<object 1667812> (scdr (cdr s)))
> def args: : (<object 1667812> (scddr (cdr scdr)))
> def args: : (<object 1667880> (scdr (cdr s)))
> def args: : (<object 1667880> (scddr (cdr scdr)))
> def args: : (<object 1667952> (scdr (cdr s)))
> def args: : (<object 1667952> (scddr (cdr scdr)))
> def args: : (<object 1668020> (scdr (cdr s)))
> def args: : (<object 1668020> (scddr (cdr scdr)))
> def args: : (<object 1668092> (scdr (cdr s)))
> def args: : (<object 1668092> (scddr (cdr scdr)))
> def args: : (<object 1668160> (scdr (cdr s)))
> def args: : (<object 1668160> (scddr (cdr scdr)))
> def args: : (<object 1668232> (scdr (cdr s)))
> def args: : (<object 1668232> (scddr (cdr scdr)))
> def args: : (<object 1668300> (scdr (cdr s)))
> def args: : (<object 1668300> (scddr (cdr scdr)))
> def args: : (<object 1668372> (scdr (cdr s)))
> def args: : (<object 1668372> (scddr (cdr scdr)))
> def args: : (<object 1668440> (scdr (cdr s)))
> def args: : (<object 1668440> (scddr (cdr scdr)))
> def args: : (<object 1668512> (scdr (cdr s)))
> def args: : (<object 1668512> (scddr (cdr scdr)))
> def args: : (<object 1668580> (scdr (cdr s)))
> def args: : (<object 1668580> (scddr (cdr scdr)))
> def args: : (<object 1668652> (scdr (cdr s)))
> def args: : (<object 1668652> (scddr (cdr scdr)))
> def args: : (<object 1668720> (scdr (cdr s)))
> def args: : (<object 1668720> (scddr (cdr scdr)))
> def args: : (<object 1668792> (scdr (cdr s)))
> def args: : (<object 1668792> (scddr (cdr scdr)))
> def args: : (<object 1668860> (scdr (cdr s)))
> def args: : (<object 1668860> (scddr (cdr scdr)))
> def args: : (<object 1668932> (scdr (cdr s)))
> def args: : (<object 1668932> (scddr (cdr scdr)))
> def args: : (<object 1669000> (scdr (cdr s)))
> def args: : (<object 1669000> (scddr (cdr scdr)))
> def args: : (<object 1669072> (scdr (cdr s)))
> def args: : (<object 1669072> (scddr (cdr scdr)))
> def args: : (<object 1669140> (scdr (cdr s)))
> def args: : (<object 1669140> (scddr (cdr scdr)))
> def args: : (<object 1669212> (scdr (cdr s)))
> def args: : (<object 1669212> (scddr (cdr scdr)))
> def args: : (<object 1669280> (scdr (cdr s)))
> def args: : (<object 1669280> (scddr (cdr scdr)))
> def args: : (<object 1669352> (scdr (cdr s)))
> def args: : (<object 1669352> (scddr (cdr scdr)))
> def args: : (<object 1669420> (scdr (cdr s)))
> def args: : (<object 1669420> (scddr (cdr scdr)))
> def args: : (<object 1669492> (scdr (cdr s)))
> def args: : (<object 1669492> (scddr (cdr scdr)))
> def args: : (<object 1669560> (scdr (cdr s)))
> def args: : (<object 1669560> (scddr (cdr scdr)))
> def args: : (<object 1669632> (scdr (cdr s)))
> def args: : (<object 1669632> (scddr (cdr scdr)))
> def args: : (<object 1669700> (scdr (cdr s)))
> def args: : (<object 1669700> (scddr (cdr scdr)))
> def args: : (<object 1669772> (scdr (cdr s)))
> def args: : (<object 1669772> (scddr (cdr scdr)))
> def args: : (<object 1669840> (scdr (cdr s)))
> def args: : (<object 1669840> (scddr (cdr scdr)))
> def args: : (<object 1669912> (scdr (cdr s)))
> def args: : (<object 1669912> (scddr (cdr scdr)))
> def args: : (<object 1669980> (scdr (cdr s)))
> def args: : (<object 1669980> (scddr (cdr scdr)))
> def args: : (<object 1670052> (scdr (cdr s)))
> def args: : (<object 1670052> (scddr (cdr scdr)))
> def args: : (<object 1670120> (scdr (cdr s)))
> def args: : (<object 1670120> (scddr (cdr scdr)))
> def args: : (<object 1670192> (scdr (cdr s)))
> def args: : (<object 1670192> (scddr (cdr scdr)))
> def args: : (<object 1670260> (scdr (cdr s)))
> def args: : (<object 1670260> (scddr (cdr scdr)))
> def args: : (<object 1670332> (scdr (cdr s)))
> def args: : (<object 1670332> (scddr (cdr scdr)))
> def args: : (<object 1670400> (scdr (cdr s)))
> def args: : (<object 1670400> (scddr (cdr scdr)))
> def args: : (<object 1670472> (scdr (cdr s)))
> def args: : (<object 1670472> (scddr (cdr scdr)))
> def args: : (<object 1670540> (scdr (cdr s)))
> def args: : (<object 1670540> (scddr (cdr scdr)))
> def args: : (<object 1670612> (scdr (cdr s)))
> def args: : (<object 1670612> (scddr (cdr scdr)))
> def args: : (<object 1670680> (scdr (cdr s)))
> def args: : (<object 1670680> (scddr (cdr scdr)))
> def args: : (<object 1670752> (scdr (cdr s)))
> def args: : (<object 1670752> (scddr (cdr scdr)))
> def args: : (<object 1670820> (scdr (cdr s)))
> def args: : (<object 1670820> (scddr (cdr scdr)))
> def args: : (<object 1670892> (scdr (cdr s)))
> def args: : (<object 1670892> (scddr (cdr scdr)))
> def args: : (<object 1670960> (scdr (cdr s)))
> def args: : (<object 1670960> (scddr (cdr scdr)))
> def args: : (<object 1671032> (scdr (cdr s)))
> def args: : (<object 1671032> (scddr (cdr scdr)))
> def args: : (<object 1671100> (scdr (cdr s)))
> def args: : (<object 1671100> (scddr (cdr scdr)))
> def args: : (<object 1671172> (scdr (cdr s)))
> def args: : (<object 1671172> (scddr (cdr scdr)))
> def args: : (<object 1671240> (scdr (cdr s)))
> def args: : (<object 1671240> (scddr (cdr scdr)))
> def args: : (<object 1671312> (scdr (cdr s)))
> def args: : (<object 1671312> (scddr (cdr scdr)))
> def args: : (<object 1671380> (scdr (cdr s)))
> def args: : (<object 1671380> (scddr (cdr scdr)))
> def args: : (<object 1671452> (scdr (cdr s)))
> def args: : (<object 1671452> (scddr (cdr scdr)))
> def args: : (<object 1671520> (scdr (cdr s)))
> def args: : (<object 1671520> (scddr (cdr scdr)))
> def args: : (<object 1671592> (scdr (cdr s)))
> def args: : (<object 1671592> (scddr (cdr scdr)))
> def args: : (<object 1671660> (scdr (cdr s)))
> def args: : (<object 1671660> (scddr (cdr scdr)))
> def args: : (<object 1671732> (scdr (cdr s)))
> def args: : (<object 1671732> (scddr (cdr scdr)))
> def args: : (<object 1671800> (scdr (cdr s)))
> def args: : (<object 1671800> (scddr (cdr scdr)))
> def args: : (<object 1671872> (scdr (cdr s)))
> def args: : (<object 1671872> (scddr (cdr scdr)))
> def args: : (<object 1671940> (scdr (cdr s)))
> def args: : (<object 1671940> (scddr (cdr scdr)))
> def args: : (<object 1672012> (scdr (cdr s)))
> def args: : (<object 1672012> (scddr (cdr scdr)))
> def args: : (<object 1672080> (scdr (cdr s)))
> def args: : (<object 1672080> (scddr (cdr scdr)))
> def args: : (<object 1672152> (scdr (cdr s)))
> def args: : (<object 1672152> (scddr (cdr scdr)))
> def args: : (<object 1672220> (scdr (cdr s)))
> def args: : (<object 1672220> (scddr (cdr scdr)))
> def args: : (<object 1672292> (scdr (cdr s)))
> def args: : (<object 1672292> (scddr (cdr scdr)))
> def args: : (<object 1672360> (scdr (cdr s)))
> def args: : (<object 1672360> (scddr (cdr scdr)))
> def args: : (<object 1672432> (scdr (cdr s)))
> def args: : (<object 1672432> (scddr (cdr scdr)))
> def args: : (<object 1672500> (scdr (cdr s)))
> def args: : (<object 1672500> (scddr (cdr scdr)))
> def args: : (<object 1672572> (scdr (cdr s)))
> def args: : (<object 1672572> (scddr (cdr scdr)))
> def args: : (<object 1672640> (scdr (cdr s)))
> def args: : (<object 1672640> (scddr (cdr scdr)))
> def args: : (<object 1672712> (scdr (cdr s)))
> def args: : (<object 1672712> (scddr (cdr scdr)))
> def args: : (<object 1672780> (scdr (cdr s)))
> def args: : (<object 1672780> (scddr (cdr scdr)))
> def args: : (<object 1672852> (scdr (cdr s)))
> def args: : (<object 1672852> (scddr (cdr scdr)))
> def args: : (<object 1672920> (scdr (cdr s)))
> def args: : (<object 1672920> (scddr (cdr scdr)))
> def args: : (<object 1672992> (scdr (cdr s)))
> def args: : (<object 1672992> (scddr (cdr scdr)))
> def args: : (<object 1673060> (scdr (cdr s)))
> def args: : (<object 1673060> (scddr (cdr scdr)))
> def args: : (<object 1673132> (scdr (cdr s)))
> def args: : (<object 1673132> (scddr (cdr scdr)))
> def args: : (<object 1673200> (scdr (cdr s)))
> def args: : (<object 1673200> (scddr (cdr scdr)))
> def args: : (<object 1673272> (scdr (cdr s)))
> def args: : (<object 1673272> (scddr (cdr scdr)))
> def args: : (<object 1673340> (scdr (cdr s)))
> def args: : (<object 1673340> (scddr (cdr scdr)))
> def args: : (<object 1673412> (scdr (cdr s)))
> def args: : (<object 1673412> (scddr (cdr scdr)))
> def args: : (<object 1673480> (scdr (cdr s)))
> def args: : (<object 1673480> (scddr (cdr scdr)))
> def args: : (<object 1673552> (scdr (cdr s)))
> def args: : (<object 1673552> (scddr (cdr scdr)))
> def args: : (<object 1673620> (scdr (cdr s)))
> def args: : (<object 1673620> (scddr (cdr scdr)))
> def args: : (<object 1673692> (scdr (cdr s)))
> def args: : (<object 1673692> (scddr (cdr scdr)))
> def args: : (<object 1673760> (scdr (cdr s)))
> def args: : (<object 1673760> (scddr (cdr scdr)))
> def args: : (<object 1673832> (scdr (cdr s)))
> def args: : (<object 1673832> (scddr (cdr scdr)))
> def args: : (<object 1673900> (scdr (cdr s)))
> def args: : (<object 1673900> (scddr (cdr scdr)))
> def args: : (<object 1673972> (scdr (cdr s)))
> def args: : (<object 1673972> (scddr (cdr scdr)))
> def args: : (<object 1674040> (scdr (cdr s)))
> def args: : (<object 1674040> (scddr (cdr scdr)))
> def args: : (<object 1674112> (scdr (cdr s)))
> def args: : (<object 1674112> (scddr (cdr scdr)))
> def args: : (<object 1674180> (scdr (cdr s)))
> def args: : (<object 1674180> (scddr (cdr scdr)))
> def args: : (<object 1674252> (scdr (cdr s)))
> def args: : (<object 1674252> (scddr (cdr scdr)))
> def args: : (<object 1674320> (scdr (cdr s)))
> def args: : (<object 1674320> (scddr (cdr scdr)))
> def args: : (<object 1674392> (scdr (cdr s)))
> def args: : (<object 1674392> (scddr (cdr scdr)))
> def args: : (<object 1674460> (scdr (cdr s)))
> def args: : (<object 1674460> (scddr (cdr scdr)))
> def args: : (<object 1674532> (scdr (cdr s)))
> def args: : (<object 1674532> (scddr (cdr scdr)))
> def args: : (<object 1674600> (scdr (cdr s)))
> def args: : (<object 1674600> (scddr (cdr scdr)))
> def args: : (<object 1674672> (scdr (cdr s)))
> def args: : (<object 1674672> (scddr (cdr scdr)))
> def args: : (<object 1674740> (scdr (cdr s)))
> def args: : (<object 1674740> (scddr (cdr scdr)))
> def args: : (<object 1674812> (scdr (cdr s)))
> def args: : (<object 1674812> (scddr (cdr scdr)))
> def args: : (<object 1674880> (scdr (cdr s)))
> def args: : (<object 1674880> (scddr (cdr scdr)))
> def args: : (<object 1674952> (scdr (cdr s)))
> def args: : (<object 1674952> (scddr (cdr scdr)))
> def args: : (<object 1675020> (scdr (cdr s)))
> def args: : (<object 1675020> (scddr (cdr scdr)))
> def args: : (<object 1675092> (scdr (cdr s)))
> def args: : (<object 1675092> (scddr (cdr scdr)))
> def args: : (<object 1675160> (scdr (cdr s)))
> def args: : (<object 1675160> (scddr (cdr scdr)))
> def args: : (<object 1675232> (scdr (cdr s)))
> def args: : (<object 1675232> (scddr (cdr scdr)))
> def args: : (<object 1675300> (scdr (cdr s)))
> def args: : (<object 1675300> (scddr (cdr scdr)))
> def args: : (<object 1675372> (scdr (cdr s)))
> def args: : (<object 1675372> (scddr (cdr scdr)))
> def args: : (<object 1675440> (scdr (cdr s)))
> def args: : (<object 1675440> (scddr (cdr scdr)))
> def args: : (<object 1675512> (scdr (cdr s)))
> def args: : (<object 1675512> (scddr (cdr scdr)))
> def args: : (<object 1675580> (scdr (cdr s)))
> def args: : (<object 1675580> (scddr (cdr scdr)))
> def args: : (<object 1675652> (scdr (cdr s)))
> def args: : (<object 1675652> (scddr (cdr scdr)))
> def args: : (<object 1675720> (scdr (cdr s)))
> def args: : (<object 1675720> (scddr (cdr scdr)))
> def args: : (<object 1675792> (scdr (cdr s)))
> def args: : (<object 1675792> (scddr (cdr scdr)))
> def args: : (<object 1675860> (scdr (cdr s)))
> def args: : (<object 1675860> (scddr (cdr scdr)))
> def args: : (<object 1675932> (scdr (cdr s)))
> def args: : (<object 1675932> (scddr (cdr scdr)))
> def args: : (<object 1676000> (scdr (cdr s)))
> def args: : (<object 1676000> (scddr (cdr scdr)))
> def args: : (<object 1676072> (scdr (cdr s)))
> def args: : (<object 1676072> (scddr (cdr scdr)))
> def args: : (<object 1676140> (scdr (cdr s)))
> def args: : (<object 1676140> (scddr (cdr scdr)))
> def args: : (<object 1676212> (scdr (cdr s)))
> def args: : (<object 1676212> (scddr (cdr scdr)))
> def args: : (<object 1676280> (scdr (cdr s)))
> def args: : (<object 1676280> (scddr (cdr scdr)))
> def args: : (<object 1676352> (scdr (cdr s)))
> def args: : (<object 1676352> (scddr (cdr scdr)))
> def args: : (<object 1676420> (scdr (cdr s)))
> def args: : (<object 1676420> (scddr (cdr scdr)))
> def args: : (<object 1676492> (scdr (cdr s)))
> def args: : (<object 1676492> (scddr (cdr scdr)))
> def args: : (<object 1676560> (scdr (cdr s)))
> def args: : (<object 1676560> (scddr (cdr scdr)))
> def args: : (<object 1676632> (scdr (cdr s)))
> def args: : (<object 1676632> (scddr (cdr scdr)))
> def args: : (<object 1676700> (scdr (cdr s)))
> def args: : (<object 1676700> (scddr (cdr scdr)))
> def args: : (<object 1676772> (scdr (cdr s)))
> def args: : (<object 1676772> (scddr (cdr scdr)))
> def args: : (<object 1676840> (scdr (cdr s)))
> def args: : (<object 1676840> (scddr (cdr scdr)))
> def args: : (<object 1676912> (scdr (cdr s)))
> def args: : (<object 1676912> (scddr (cdr scdr)))
> def args: : (<object 1676980> (scdr (cdr s)))
> def args: : (<object 1676980> (scddr (cdr scdr)))
> def args: : (<object 1677052> (scdr (cdr s)))
> def args: : (<object 1677052> (scddr (cdr scdr)))
> def args: : (<object 1677120> (scdr (cdr s)))
> def args: : (<object 1677120> (scddr (cdr scdr)))
> def args: : (<object 1677192> (scdr (cdr s)))
> def args: : (<object 1677192> (scddr (cdr scdr)))
> def args: : (<object 1677260> (scdr (cdr s)))
> def args: : (<object 1677260> (scddr (cdr scdr)))
> def args: : (<object 1677332> (scdr (cdr s)))
> def args: : (<object 1677332> (scddr (cdr scdr)))
> def args: : (<object 1677400> (scdr (cdr s)))
> def args: : (<object 1677400> (scddr (cdr scdr)))
> def args: : (<object 1677472> (scdr (cdr s)))
> def args: : (<object 1677472> (scddr (cdr scdr)))
> def args: : (<object 1677540> (scdr (cdr s)))
> def args: : (<object 1677540> (scddr (cdr scdr)))
> def args: : (<object 1677612> (scdr (cdr s)))
> def args: : (<object 1677612> (scddr (cdr scdr)))
> def args: : (<object 1677680> (scdr (cdr s)))
> def args: : (<object 1677680> (scddr (cdr scdr)))
> def args: : (<object 1677752> (scdr (cdr s)))
> def args: : (<object 1677752> (scddr (cdr scdr)))
> def args: : (<object 1677820> (scdr (cdr s)))
> def args: : (<object 1677820> (scddr (cdr scdr)))
> def args: : (<object 1677892> (scdr (cdr s)))
> def args: : (<object 1677892> (scddr (cdr scdr)))
> def args: : (<object 1677960> (scdr (cdr s)))
> def args: : (<object 1677960> (scddr (cdr scdr)))
> def args: : (<object 1678032> (scdr (cdr s)))
> def args: : (<object 1678032> (scddr (cdr scdr)))
> def args: : (<object 1678100> (scdr (cdr s)))
> def args: : (<object 1678100> (scddr (cdr scdr)))
> def args: : (<object 1678172> (scdr (cdr s)))
> def args: : (<object 1678172> (scddr (cdr scdr)))
> def args: : (<object 1678240> (scdr (cdr s)))
> def args: : (<object 1678240> (scddr (cdr scdr)))
> def args: : (<object 1678312> (scdr (cdr s)))
> def args: : (<object 1678312> (scddr (cdr scdr)))
> def args: : (<object 1678380> (scdr (cdr s)))
> def args: : (<object 1678380> (scddr (cdr scdr)))
> def args: : (<object 1678452> (scdr (cdr s)))
> def args: : (<object 1678452> (scddr (cdr scdr)))
> def args: : (<object 1678520> (scdr (cdr s)))
> def args: : (<object 1678520> (scddr (cdr scdr)))
> def args: : (<object 1678592> (scdr (cdr s)))
> def args: : (<object 1678592> (scddr (cdr scdr)))
> def args: : (<object 1678660> (scdr (cdr s)))
> def args: : (<object 1678660> (scddr (cdr scdr)))
> def args: : (<object 1678732> (scdr (cdr s)))
> def args: : (<object 1678732> (scddr (cdr scdr)))
> def args: : (<object 1678800> (scdr (cdr s)))
> def args: : (<object 1678800> (scddr (cdr scdr)))
> def args: : (<object 1678872> (scdr (cdr s)))
> def args: : (<object 1678872> (scddr (cdr scdr)))
> def args: : (<object 1678940> (scdr (cdr s)))
> def args: : (<object 1678940> (scddr (cdr scdr)))
> def args: : (<object 1679012> (scdr (cdr s)))
> def args: : (<object 1679012> (scddr (cdr scdr)))
> def args: : (<object 1679080> (scdr (cdr s)))
> def args: : (<object 1679080> (scddr (cdr scdr)))
> def args: : (<object 1679152> (scdr (cdr s)))
> def args: : (<object 1679152> (scddr (cdr scdr)))
> def args: : (<object 1679220> (scdr (cdr s)))
> def args: : (<object 1679220> (scddr (cdr scdr)))
> def args: : (<object 1679292> (scdr (cdr s)))
> def args: : (<object 1679292> (scddr (cdr scdr)))
> def args: : (<object 1679360> (scdr (cdr s)))
> def args: : (<object 1679360> (scddr (cdr scdr)))
> def args: : (<object 1679432> (scdr (cdr s)))
> def args: : (<object 1679432> (scddr (cdr scdr)))
> def args: : (<object 1679500> (scdr (cdr s)))
> def args: : (<object 1679500> (scddr (cdr scdr)))
> def args: : (<object 1679572> (scdr (cdr s)))
> def args: : (<object 1679572> (scddr (cdr scdr)))
> def args: : (<object 1679640> (scdr (cdr s)))
> def args: : (<object 1679640> (scddr (cdr scdr)))
> def args: : (<object 1679712> (scdr (cdr s)))
> def args: : (<object 1679712> (scddr (cdr scdr)))
> def args: : (<object 1679780> (scdr (cdr s)))
> def args: : (<object 1679780> (scddr (cdr scdr)))
> def args: : (<object 1679852> (scdr (cdr s)))
> def args: : (<object 1679852> (scddr (cdr scdr)))
> def args: : (<object 1679920> (scdr (cdr s)))
> def args: : (<object 1679920> (scddr (cdr scdr)))
> def args: : (<object 1679992> (scdr (cdr s)))
> def args: : (<object 1679992> (scddr (cdr scdr)))
> def args: : (<object 1680060> (scdr (cdr s)))
> def args: : (<object 1680060> (scddr (cdr scdr)))
> def args: : (<object 1680132> (scdr (cdr s)))
> def args: : (<object 1680132> (scddr (cdr scdr)))
> def args: : (<object 1680200> (scdr (cdr s)))
> def args: : (<object 1680200> (scddr (cdr scdr)))
> def args: : (<object 1680272> (scdr (cdr s)))
> def args: : (<object 1680272> (scddr (cdr scdr)))
> def args: : (<object 1680340> (scdr (cdr s)))
> def args: : (<object 1680340> (scddr (cdr scdr)))
> def args: : (<object 1680412> (scdr (cdr s)))
> def args: : (<object 1680412> (scddr (cdr scdr)))
> def args: : (<object 1680480> (scdr (cdr s)))
> def args: : (<object 1680480> (scddr (cdr scdr)))
> def args: : (<object 1680552> (scdr (cdr s)))
> def args: : (<object 1680552> (scddr (cdr scdr)))
> def args: : (<object 1680620> (scdr (cdr s)))
> def args: : (<object 1680620> (scddr (cdr scdr)))
> def args: : (<object 1680692> (scdr (cdr s)))
> def args: : (<object 1680692> (scddr (cdr scdr)))
> ...def args: : (<object 1698142> (env (if (null? @) # (car @))))
> 
> def args: : (<object 1698340> (env (if (null? @) # (car @))))
> def args: : (<object 12465> ((psum s) (define ssum (cons-stream (stream-car s) (add-streams (stream-cdr s) ssum))) ssum))
> def args: : (<object 1698481> (ssum (cons-stream (stream-car s) (add-streams (stream-cdr s) ssum))))
> 1def args: : (<object 1698763> (env (if (null? @) # (car @))))
>  def args: : (<object 1698870> (env (if (null? @) # (car @))))
> def args: : (<object 1698990> (scdr (cdr s)))
> def args: : (<object 1698990> (scddr (cdr scdr)))
> def args: : (<object 1699062> (scdr (cdr s)))
> def args: : (<object 1699062> (scddr (cdr scdr)))
> 3def args: : (<object 1699465> (env (if (null? @) # (car @))))
>  def args: : (<object 1699572> (env (if (null? @) # (car @))))
> def args: : (<object 1699692> (scdr (cdr s)))
> def args: : (<object 1699692> (scddr (cdr scdr)))
> def args: : (<object 1699764> (scdr (cdr s)))
> def args: : (<object 1699764> (scddr (cdr scdr)))
> def args: : (<object 1699832> (scdr (cdr s)))
> def args: : (<object 1699832> (scddr (cdr scdr)))
> 6def args: : (<object 1700235> (env (if (null? @) # (car @))))
>  def args: : (<object 1700342> (env (if (null? @) # (car @))))
> def args: : (<object 1700462> (scdr (cdr s)))
> def args: : (<object 1700462> (scddr (cdr scdr)))
> def args: : (<object 1700534> (scdr (cdr s)))
> def args: : (<object 1700534> (scddr (cdr scdr)))
> def args: : (<object 1700602> (scdr (cdr s)))
> def args: : (<object 1700602> (scddr (cdr scdr)))
> 10def args: : (<object 1701005> (env (if (null? @) # (car @))))
>  def args: : (<object 1701112> (env (if (null? @) # (car @))))
> def args: : (<object 1701232> (scdr (cdr s)))
> def args: : (<object 1701232> (scddr (cdr scdr)))
> def args: : (<object 1701304> (scdr (cdr s)))
> def args: : (<object 1701304> (scddr (cdr scdr)))
> def args: : (<object 1701372> (scdr (cdr s)))
> def args: : (<object 1701372> (scddr (cdr scdr)))
> 15def args: : (<object 1701775> (env (if (null? @) # (car @))))
>  def args: : (<object 1701882> (env (if (null? @) # (car @))))
> def args: : (<object 1702002> (scdr (cdr s)))
> def args: : (<object 1702002> (scddr (cdr scdr)))
> def args: : (<object 1702074> (scdr (cdr s)))
> def args: : (<object 1702074> (scddr (cdr scdr)))
> def args: : (<object 1702142> (scdr (cdr s)))
> def args: : (<object 1702142> (scddr (cdr scdr)))
> 21def args: : (<object 1702545> (env (if (null? @) # (car @))))
>  def args: : (<object 1702652> (env (if (null? @) # (car @))))
> def args: : (<object 1702772> (scdr (cdr s)))
> def args: : (<object 1702772> (scddr (cdr scdr)))
> def args: : (<object 1702844> (scdr (cdr s)))
> def args: : (<object 1702844> (scddr (cdr scdr)))
> def args: : (<object 1702912> (scdr (cdr s)))
> def args: : (<object 1702912> (scddr (cdr scdr)))
> 28def args: : (<object 1703315> (env (if (null? @) # (car @))))
>  def args: : (<object 1703422> (env (if (null? @) # (car @))))
> def args: : (<object 1703542> (scdr (cdr s)))
> def args: : (<object 1703542> (scddr (cdr scdr)))
> def args: : (<object 1703614> (scdr (cdr s)))
> def args: : (<object 1703614> (scddr (cdr scdr)))
> def args: : (<object 1703682> (scdr (cdr s)))
> def args: : (<object 1703682> (scddr (cdr scdr)))
> 36def args: : (<object 1704085> (env (if (null? @) # (car @))))
>  def args: : (<object 1704192> (env (if (null? @) # (car @))))
> def args: : (<object 1704312> (scdr (cdr s)))
> def args: : (<object 1704312> (scddr (cdr scdr)))
> def args: : (<object 1704384> (scdr (cdr s)))
> def args: : (<object 1704384> (scddr (cdr scdr)))
> def args: : (<object 1704452> (scdr (cdr s)))
> def args: : (<object 1704452> (scddr (cdr scdr)))
> 45def args: : (<object 1704855> (env (if (null? @) # (car @))))
>  def args: : (<object 1704962> (env (if (null? @) # (car @))))
> def args: : (<object 1705082> (scdr (cdr s)))
> def args: : (<object 1705082> (scddr (cdr scdr)))
> def args: : (<object 1705154> (scdr (cdr s)))
> def args: : (<object 1705154> (scddr (cdr scdr)))
> def args: : (<object 1705222> (scdr (cdr s)))
> def args: : (<object 1705222> (scddr (cdr scdr)))
> 55def args: : (<object 1705625> (env (if (null? @) # (car @))))
>  def args: : (<object 1705732> (env (if (null? @) # (car @))))
> def args: : (<object 1705852> (scdr (cdr s)))
> def args: : (<object 1705852> (scddr (cdr scdr)))
> def args: : (<object 1705924> (scdr (cdr s)))
> def args: : (<object 1705924> (scddr (cdr scdr)))
> def args: : (<object 1705992> (scdr (cdr s)))
> def args: : (<object 1705992> (scddr (cdr scdr)))
> ...def args: : (<object 1706398> (env (if (null? @) # (car @))))
> 
> def args: : (<object 1706596> (env (if (null? @) # (car @))))
------------------------------------------
env.s
------------------------------------------
9,50c9,322
< ORBIT_SOCKETDIR
< SSH_AGENT_PID
< TERM
< SHELL
< XDG_SESSION_COOKIE
< WINDOWID
< GNOME_KEYRING_CONTROL
< GTK_MODULES
< USER
< LS_COLORS
< SSH_AUTH_SOCK
< SESSION_MANAGER
< USERNAME
< DEFAULTS_PATH
< XDG_CONFIG_DIRS
< PATH
< DESKTOP_SESSION
< PWD
< EDITOR
< GDM_KEYBOARD_LAYOUT
< GNOME_KEYRING_PID
< LANG
< GDM_LANG
< MANDATORY_PATH
< UBUNTU_MENUPROXY
< GDMSESSION
< SHLVL
< HOME
< LANGUAGE
< GNOME_DESKTOP_SESSION_ID
< LOGNAME
< XDG_DATA_DIRS
< DBUS_SESSION_BUS_ADDRESS
< LESSOPEN
< VIMRUNTIME
< WINDOWPATH
< DISPLAY
< VIM
< LESSCLOSE
< COLORTERM
< XAUTHORITY
< _
---
> def args: : (<object 4796> (else #t))
> def args: : (<object 4796> (__builtin __context))
> def args: : (<object 4796> (__main-lib this))
> def args: : (<object 4796> (nil? null?))
> def args: : (<object 4796> ((valid? x) (not (null? x))))
> def args: : (<object 4796> ((head x) (car x)))
> def args: : (<object 4796> ((tail x) (cdr x)))
> def args: : (<object 4796> ((join x y) (cons x y)))
> def args: : (<object 4796> (^ expt))
> def args: : (<object 4796> (** expt))
> def args: : (<object 4796> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4796> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4796> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4796> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4796> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4796> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4796> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4796> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4796> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4796> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4796> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4796> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4796> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4796> (__type type))
> def args: : (<object 4796> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4796> ((class x) (get (quote __label) x)))
> def args: : (<object 4796> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4796> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4796> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4796> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4796> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4796> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4796> (function? closure?))
> def args: : (<object 4796> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4796> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4796> ((dec x) (- x 1)))
> def args: : (<object 4796> ((inc x) (+ x 1)))
> def args: : (<object 4796> (__display display))
> def args: : (<object 4796> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4796> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4796> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4796> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4796> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4796> ((negative? n) (< n 0)))
> def args: : (<object 4796> ((positive? n) (> n 0)))
> def args: : (<object 4796> ((newline) (println)))
> def args: : (<object 4796> (remainder %))
> def args: : (<object 4796> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4796> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4796> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4796> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4796> (integer int))
> def args: : (<object 4796> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4796> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4796> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4796> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4796> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4796> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4796> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4796> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4796> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4796> ((true? x) x))
> def args: : (<object 4796> ((false? x) (not x)))
> def args: : (<object 4796> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4796> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4796> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4796> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4796> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4796> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4796> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4796> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4796> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4796> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4796> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4796> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4796> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4796> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4796> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4796> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4796> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4796> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4796> ((stream-car s) (car s)))
> def args: : (<object 4796> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4796> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4796> ((stream-null? s) (null? s)))
> def args: : (<object 4796> ((code $s) $s))
> def args: : (<object 4796> ((member? x items) (valid? (member x items))))
> def args: : (<object 4796> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4796> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4796> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4796> (__string+ string+))
> def args: : (<object 4796> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4796> (__string string))
> def args: : (<object 4796> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4796> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4796> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4796> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4796> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4796> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4796> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4796> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4796> ((localNames env) (cadr env)))
> def args: : (<object 4796> ((localValues env) (caddr env)))
> def args: : (<object 4796> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4796> ((dot obj $name) (get $name obj)))
> def args: : (<object 4796> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4796> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12463> (spot ScamEnv))
> def args: : (<object 12463> (s (car spot)))
> SSH_AGENT_PIDdef args: : (<object 12716> (env (if (null? @) # (car @))))
> 
> def args: : (<object 12914> (env (if (null? @) # (car @))))
> def args: : (<object 13029> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> GLADE_PIXMAP_PATHdef args: : (<object 13234> (env (if (null? @) # (car @))))
> 
> def args: : (<object 13432> (env (if (null? @) # (car @))))
> def args: : (<object 13547> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> XDG_MENU_PREFIXdef args: : (<object 13750> (env (if (null? @) # (car @))))
> 
> def args: : (<object 13948> (env (if (null? @) # (car @))))
> def args: : (<object 14063> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> SHELLdef args: : (<object 14256> (env (if (null? @) # (car @))))
> 
> def args: : (<object 14454> (env (if (null? @) # (car @))))
> def args: : (<object 14569> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> TERMdef args: : (<object 14761> (env (if (null? @) # (car @))))
> 
> def args: : (<object 14959> (env (if (null? @) # (car @))))
> def args: : (<object 15074> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> XDG_SESSION_COOKIEdef args: : (<object 15280> (env (if (null? @) # (car @))))
> 
> def args: : (<object 15478> (env (if (null? @) # (car @))))
> def args: : (<object 15593> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> WINDOWIDdef args: : (<object 15789> (env (if (null? @) # (car @))))
> 
> def args: : (<object 15987> (env (if (null? @) # (car @))))
> def args: : (<object 16102> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> GNOME_KEYRING_CONTROLdef args: : (<object 16311> (env (if (null? @) # (car @))))
> 
> def args: : (<object 16509> (env (if (null? @) # (car @))))
> def args: : (<object 16624> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> USERdef args: : (<object 16816> (env (if (null? @) # (car @))))
> 
> def args: : (<object 17014> (env (if (null? @) # (car @))))
> def args: : (<object 17129> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> LS_COLORSdef args: : (<object 17326> (env (if (null? @) # (car @))))
> 
> def args: : (<object 17524> (env (if (null? @) # (car @))))
> def args: : (<object 17639> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> GLADE_MODULE_PATHdef args: : (<object 17844> (env (if (null? @) # (car @))))
> 
> def args: : (<object 18042> (env (if (null? @) # (car @))))
> def args: : (<object 18157> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> XDG_SESSION_PATHdef args: : (<object 18361> (env (if (null? @) # (car @))))
> 
> def args: : (<object 18559> (env (if (null? @) # (car @))))
> def args: : (<object 18674> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> XDG_SEAT_PATHdef args: : (<object 18875> (env (if (null? @) # (car @))))
> 
> def args: : (<object 19073> (env (if (null? @) # (car @))))
> def args: : (<object 19188> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> SSH_AUTH_SOCKdef args: : (<object 19389> (env (if (null? @) # (car @))))
> 
> def args: : (<object 19587> (env (if (null? @) # (car @))))
> def args: : (<object 19702> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> DEFAULTS_PATHdef args: : (<object 19903> (env (if (null? @) # (car @))))
> 
> def args: : (<object 20101> (env (if (null? @) # (car @))))
> def args: : (<object 20216> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> SESSION_MANAGERdef args: : (<object 20419> (env (if (null? @) # (car @))))
> 
> def args: : (<object 20617> (env (if (null? @) # (car @))))
> def args: : (<object 20732> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> XDG_CONFIG_DIRSdef args: : (<object 20935> (env (if (null? @) # (car @))))
> 
> def args: : (<object 21133> (env (if (null? @) # (car @))))
> def args: : (<object 21248> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> DESKTOP_SESSIONdef args: : (<object 21451> (env (if (null? @) # (car @))))
> 
> def args: : (<object 21649> (env (if (null? @) # (car @))))
> def args: : (<object 21764> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> PATHdef args: : (<object 21956> (env (if (null? @) # (car @))))
> 
> def args: : (<object 22154> (env (if (null? @) # (car @))))
> def args: : (<object 22269> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> PWDdef args: : (<object 22460> (env (if (null? @) # (car @))))
> 
> def args: : (<object 22658> (env (if (null? @) # (car @))))
> def args: : (<object 22773> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> EDITORdef args: : (<object 22967> (env (if (null? @) # (car @))))
> 
> def args: : (<object 23165> (env (if (null? @) # (car @))))
> def args: : (<object 23280> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> LANGdef args: : (<object 23472> (env (if (null? @) # (car @))))
> 
> def args: : (<object 23670> (env (if (null? @) # (car @))))
> def args: : (<object 23785> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> GNOME_KEYRING_PIDdef args: : (<object 23990> (env (if (null? @) # (car @))))
> 
> def args: : (<object 24188> (env (if (null? @) # (car @))))
> def args: : (<object 24303> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> MANDATORY_PATHdef args: : (<object 24505> (env (if (null? @) # (car @))))
> 
> def args: : (<object 24703> (env (if (null? @) # (car @))))
> def args: : (<object 24818> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> GDMSESSIONdef args: : (<object 25016> (env (if (null? @) # (car @))))
> 
> def args: : (<object 25214> (env (if (null? @) # (car @))))
> def args: : (<object 25329> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> HOMEdef args: : (<object 25521> (env (if (null? @) # (car @))))
> 
> def args: : (<object 25719> (env (if (null? @) # (car @))))
> def args: : (<object 25834> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> SHLVLdef args: : (<object 26027> (env (if (null? @) # (car @))))
> 
> def args: : (<object 26225> (env (if (null? @) # (car @))))
> def args: : (<object 26340> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> LANGUAGEdef args: : (<object 26536> (env (if (null? @) # (car @))))
> 
> def args: : (<object 26734> (env (if (null? @) # (car @))))
> def args: : (<object 26849> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> LOGNAMEdef args: : (<object 27044> (env (if (null? @) # (car @))))
> 
> def args: : (<object 27242> (env (if (null? @) # (car @))))
> def args: : (<object 27357> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> DBUS_SESSION_BUS_ADDRESSdef args: : (<object 27569> (env (if (null? @) # (car @))))
> 
> def args: : (<object 27767> (env (if (null? @) # (car @))))
> def args: : (<object 27882> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> XDG_DATA_DIRSdef args: : (<object 28083> (env (if (null? @) # (car @))))
> 
> def args: : (<object 28281> (env (if (null? @) # (car @))))
> def args: : (<object 28396> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> LESSOPENdef args: : (<object 28592> (env (if (null? @) # (car @))))
> 
> def args: : (<object 28790> (env (if (null? @) # (car @))))
> def args: : (<object 28905> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> EMAILdef args: : (<object 29098> (env (if (null? @) # (car @))))
> 
> def args: : (<object 29296> (env (if (null? @) # (car @))))
> def args: : (<object 29411> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> DISPLAYdef args: : (<object 29606> (env (if (null? @) # (car @))))
> 
> def args: : (<object 29804> (env (if (null? @) # (car @))))
> def args: : (<object 29919> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> LIBGLADE_MODULE_PATHdef args: : (<object 30127> (env (if (null? @) # (car @))))
> 
> def args: : (<object 30325> (env (if (null? @) # (car @))))
> def args: : (<object 30440> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> GLADE_CATALOG_PATHdef args: : (<object 30646> (env (if (null? @) # (car @))))
> 
> def args: : (<object 30844> (env (if (null? @) # (car @))))
> def args: : (<object 30959> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> XDG_CURRENT_DESKTOPdef args: : (<object 31166> (env (if (null? @) # (car @))))
> 
> def args: : (<object 31364> (env (if (null? @) # (car @))))
> def args: : (<object 31479> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> LESSCLOSEdef args: : (<object 31676> (env (if (null? @) # (car @))))
> 
> def args: : (<object 31874> (env (if (null? @) # (car @))))
> def args: : (<object 31989> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> XAUTHORITYdef args: : (<object 32187> (env (if (null? @) # (car @))))
> 
> def args: : (<object 32385> (env (if (null? @) # (car @))))
> def args: : (<object 32500> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> COLORTERMdef args: : (<object 32697> (env (if (null? @) # (car @))))
> 
> def args: : (<object 32895> (env (if (null? @) # (car @))))
> def args: : (<object 33010> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (s (car spot)))
> _def args: : (<object 33199> (env (if (null? @) # (car @))))
> 
> def args: : (<object 33397> (env (if (null? @) # (car @))))
> def args: : (<object 33512> (env (if (null? @) # (car @))))
------------------------------------------
error0.s
------------------------------------------
0a1,146
> (println "starting error0.s")
> (include "error0.s")
> 
> (define (fib n)
>     (if (< n 2)
>         n
>         (+ (fib (- n 1)) (fib (- n 2)))
>         )
>         )
> (define x 0)
> (define result)
> (define t (time))
> 
> (define x 20)
> 
> (define result (fib x))
> (println "fib(" x ") is " result)
> (println (- (time) t) " seconds")
> ------------------------------------------
> def args: : (<object 4799> (else #t))
> def args: : (<object 4799> (__builtin __context))
> def args: : (<object 4799> (__main-lib this))
> def args: : (<object 4799> (nil? null?))
> def args: : (<object 4799> ((valid? x) (not (null? x))))
> def args: : (<object 4799> ((head x) (car x)))
> def args: : (<object 4799> ((tail x) (cdr x)))
> def args: : (<object 4799> ((join x y) (cons x y)))
> def args: : (<object 4799> (^ expt))
> def args: : (<object 4799> (** expt))
> def args: : (<object 4799> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4799> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4799> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4799> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4799> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4799> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4799> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4799> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4799> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4799> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4799> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4799> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4799> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4799> (__type type))
> def args: : (<object 4799> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4799> ((class x) (get (quote __label) x)))
> def args: : (<object 4799> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4799> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4799> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4799> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4799> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4799> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4799> (function? closure?))
> def args: : (<object 4799> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4799> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4799> ((dec x) (- x 1)))
> def args: : (<object 4799> ((inc x) (+ x 1)))
> def args: : (<object 4799> (__display display))
> def args: : (<object 4799> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4799> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4799> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4799> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4799> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4799> ((negative? n) (< n 0)))
> def args: : (<object 4799> ((positive? n) (> n 0)))
> def args: : (<object 4799> ((newline) (println)))
> def args: : (<object 4799> (remainder %))
> def args: : (<object 4799> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4799> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4799> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4799> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4799> (integer int))
> def args: : (<object 4799> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4799> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4799> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4799> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4799> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4799> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4799> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4799> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4799> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4799> ((true? x) x))
> def args: : (<object 4799> ((false? x) (not x)))
> def args: : (<object 4799> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4799> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4799> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4799> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4799> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4799> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4799> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4799> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4799> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4799> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4799> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4799> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4799> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4799> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4799> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4799> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4799> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4799> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4799> ((stream-car s) (car s)))
> def args: : (<object 4799> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4799> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4799> ((stream-null? s) (null? s)))
> def args: : (<object 4799> ((code $s) $s))
> def args: : (<object 4799> ((member? x items) (valid? (member x items))))
> def args: : (<object 4799> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4799> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4799> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4799> (__string+ string+))
> def args: : (<object 4799> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4799> (__string string))
> def args: : (<object 4799> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4799> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4799> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4799> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4799> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4799> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4799> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4799> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4799> ((localNames env) (cadr env)))
> def args: : (<object 4799> ((localValues env) (caddr env)))
> def args: : (<object 4799> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4799> ((dot obj $name) (get $name obj)))
> def args: : (<object 4799> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4799> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> starting error0.sdef args: : (<object 12802> (env (if (null? @) # (car @))))
> 
> def args: : (<object 13000> (env (if (null? @) # (car @))))
> def args: : (<object 12466> ((fib n) (if (< n 2) n (+ (fib (- n 1)) (fib (- n 2))))))
> def args: : (<object 12466> (x 0))
> def args: : (<object 12466> (result))
> def args: : (<object 12466> (t (time)))
> def args: : (<object 12466> (x 20))
> def args: : (<object 12466> (result (fib x)))
> fib(def args: : (<object 1304843> (env (if (null? @) # (car @))))
> 20def args: : (<object 1304950> (env (if (null? @) # (car @))))
> ) is def args: : (<object 1305057> (env (if (null? @) # (car @))))
> 6765def args: : (<object 1305164> (env (if (null? @) # (car @))))
> 
> def args: : (<object 1305362> (env (if (null? @) # (car @))))
> 0.249742def args: : (<object 1305599> (env (if (null? @) # (car @))))
>  secondsdef args: : (<object 1305706> (env (if (null? @) # (car @))))
> 
> def args: : (<object 1305904> (env (if (null? @) # (car @))))
------------------------------------------
except2.s
------------------------------------------
47c47,166
< starting
---
> def args: : (<object 4800> (else #t))
> def args: : (<object 4800> (__builtin __context))
> def args: : (<object 4800> (__main-lib this))
> def args: : (<object 4800> (nil? null?))
> def args: : (<object 4800> ((valid? x) (not (null? x))))
> def args: : (<object 4800> ((head x) (car x)))
> def args: : (<object 4800> ((tail x) (cdr x)))
> def args: : (<object 4800> ((join x y) (cons x y)))
> def args: : (<object 4800> (^ expt))
> def args: : (<object 4800> (** expt))
> def args: : (<object 4800> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4800> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4800> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4800> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4800> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4800> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4800> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4800> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4800> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4800> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4800> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4800> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4800> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4800> (__type type))
> def args: : (<object 4800> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4800> ((class x) (get (quote __label) x)))
> def args: : (<object 4800> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4800> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4800> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4800> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4800> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4800> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4800> (function? closure?))
> def args: : (<object 4800> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4800> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4800> ((dec x) (- x 1)))
> def args: : (<object 4800> ((inc x) (+ x 1)))
> def args: : (<object 4800> (__display display))
> def args: : (<object 4800> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4800> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4800> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4800> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4800> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4800> ((negative? n) (< n 0)))
> def args: : (<object 4800> ((positive? n) (> n 0)))
> def args: : (<object 4800> ((newline) (println)))
> def args: : (<object 4800> (remainder %))
> def args: : (<object 4800> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4800> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4800> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4800> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4800> (integer int))
> def args: : (<object 4800> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4800> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4800> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4800> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4800> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4800> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4800> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4800> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4800> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4800> ((true? x) x))
> def args: : (<object 4800> ((false? x) (not x)))
> def args: : (<object 4800> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4800> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4800> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4800> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4800> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4800> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4800> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4800> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4800> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4800> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4800> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4800> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4800> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4800> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4800> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4800> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4800> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4800> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4800> ((stream-car s) (car s)))
> def args: : (<object 4800> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4800> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4800> ((stream-null? s) (null? s)))
> def args: : (<object 4800> ((code $s) $s))
> def args: : (<object 4800> ((member? x items) (valid? (member x items))))
> def args: : (<object 4800> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4800> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4800> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4800> (__string+ string+))
> def args: : (<object 4800> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4800> (__string string))
> def args: : (<object 4800> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4800> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4800> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4800> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4800> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4800> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4800> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4800> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4800> ((localNames env) (cadr env)))
> def args: : (<object 4800> ((localValues env) (caddr env)))
> def args: : (<object 4800> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4800> ((dot obj $name) (get $name obj)))
> def args: : (<object 4800> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4800> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12467> ((try # $error $a $b) (define result (catch (eval $a #))) (if (error? result) (begin (set $error result #) (set! result (eval $b #)))) result))
> def args: : (<object 12467> ((normalize a b) (* (+ a b) (+ a b))))
> def args: : (<object 12467> ((g) (define result) (define error) (try error (begin (println "starting") (throw (quote hiy) "ouch") (set! result (normalize 1 2))) (if (== (get (quote code) error) (quote nonFunction)) (begin (println "not a function!") (set! (quote result) 2)) (if (== (get (quote code) error) (quote hey)) (set! (quote result) 100) (if (== (get (quote code) error) (quote hay)) (set! (quote result) 33) (throw error))))) result))
> def args: : (<object 12467> (+ 3))
> def args: : (<object 12946> (result))
> def args: : (<object 12946> (error))
> def args: : (<object 12989> (result (catch (eval $a #))))
> startingdef args: : (<object 13150> (env (if (null? @) # (car @))))
> 
> def args: : (<object 13348> (env (if (null? @) # (car @))))
> def args: : (<object 13516> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 13666> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
------------------------------------------
except3.s
------------------------------------------
20c20,135
< rethrowing error
---
> def args: : (<object 4800> (else #t))
> def args: : (<object 4800> (__builtin __context))
> def args: : (<object 4800> (__main-lib this))
> def args: : (<object 4800> (nil? null?))
> def args: : (<object 4800> ((valid? x) (not (null? x))))
> def args: : (<object 4800> ((head x) (car x)))
> def args: : (<object 4800> ((tail x) (cdr x)))
> def args: : (<object 4800> ((join x y) (cons x y)))
> def args: : (<object 4800> (^ expt))
> def args: : (<object 4800> (** expt))
> def args: : (<object 4800> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4800> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4800> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4800> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4800> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4800> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4800> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4800> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4800> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4800> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4800> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4800> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4800> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4800> (__type type))
> def args: : (<object 4800> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4800> ((class x) (get (quote __label) x)))
> def args: : (<object 4800> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4800> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4800> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4800> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4800> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4800> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4800> (function? closure?))
> def args: : (<object 4800> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4800> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4800> ((dec x) (- x 1)))
> def args: : (<object 4800> ((inc x) (+ x 1)))
> def args: : (<object 4800> (__display display))
> def args: : (<object 4800> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4800> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4800> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4800> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4800> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4800> ((negative? n) (< n 0)))
> def args: : (<object 4800> ((positive? n) (> n 0)))
> def args: : (<object 4800> ((newline) (println)))
> def args: : (<object 4800> (remainder %))
> def args: : (<object 4800> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4800> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4800> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4800> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4800> (integer int))
> def args: : (<object 4800> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4800> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4800> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4800> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4800> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4800> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4800> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4800> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4800> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4800> ((true? x) x))
> def args: : (<object 4800> ((false? x) (not x)))
> def args: : (<object 4800> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4800> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4800> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4800> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4800> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4800> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4800> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4800> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4800> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4800> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4800> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4800> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4800> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4800> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4800> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4800> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4800> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4800> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4800> ((stream-car s) (car s)))
> def args: : (<object 4800> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4800> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4800> ((stream-null? s) (null? s)))
> def args: : (<object 4800> ((code $s) $s))
> def args: : (<object 4800> ((member? x items) (valid? (member x items))))
> def args: : (<object 4800> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4800> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4800> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4800> (__string+ string+))
> def args: : (<object 4800> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4800> (__string string))
> def args: : (<object 4800> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4800> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4800> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4800> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4800> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4800> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4800> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4800> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4800> ((localNames env) (cadr env)))
> def args: : (<object 4800> ((localValues env) (caddr env)))
> def args: : (<object 4800> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4800> ((dot obj $name) (get $name obj)))
> def args: : (<object 4800> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4800> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12467> ((f) (+ (g) 0)))
> def args: : (<object 12467> ((g) (define error) (set! error (catch (h))) (println "rethrowing error") (throw error)))
> def args: : (<object 12467> ((h) (throw (quote ouch) "hey!") 2))
> def args: : (<object 12720> (error))
> def args: : (<object 12803> (env (if (null? @) # (car @))))
> rethrowing errordef args: : (<object 12976> (env (if (null? @) # (car @))))
> 
> def args: : (<object 13174> (env (if (null? @) # (car @))))
------------------------------------------
except4.s
------------------------------------------
28,30c28,155
< beginning f(4).
< beginning g(8).
< rethrowing the error
---
> def args: : (<object 4800> (else #t))
> def args: : (<object 4800> (__builtin __context))
> def args: : (<object 4800> (__main-lib this))
> def args: : (<object 4800> (nil? null?))
> def args: : (<object 4800> ((valid? x) (not (null? x))))
> def args: : (<object 4800> ((head x) (car x)))
> def args: : (<object 4800> ((tail x) (cdr x)))
> def args: : (<object 4800> ((join x y) (cons x y)))
> def args: : (<object 4800> (^ expt))
> def args: : (<object 4800> (** expt))
> def args: : (<object 4800> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4800> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4800> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4800> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4800> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4800> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4800> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4800> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4800> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4800> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4800> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4800> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4800> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4800> (__type type))
> def args: : (<object 4800> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4800> ((class x) (get (quote __label) x)))
> def args: : (<object 4800> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4800> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4800> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4800> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4800> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4800> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4800> (function? closure?))
> def args: : (<object 4800> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4800> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4800> ((dec x) (- x 1)))
> def args: : (<object 4800> ((inc x) (+ x 1)))
> def args: : (<object 4800> (__display display))
> def args: : (<object 4800> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4800> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4800> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4800> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4800> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4800> ((negative? n) (< n 0)))
> def args: : (<object 4800> ((positive? n) (> n 0)))
> def args: : (<object 4800> ((newline) (println)))
> def args: : (<object 4800> (remainder %))
> def args: : (<object 4800> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4800> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4800> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4800> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4800> (integer int))
> def args: : (<object 4800> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4800> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4800> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4800> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4800> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4800> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4800> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4800> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4800> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4800> ((true? x) x))
> def args: : (<object 4800> ((false? x) (not x)))
> def args: : (<object 4800> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4800> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4800> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4800> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4800> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4800> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4800> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4800> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4800> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4800> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4800> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4800> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4800> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4800> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4800> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4800> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4800> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4800> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4800> ((stream-car s) (car s)))
> def args: : (<object 4800> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4800> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4800> ((stream-null? s) (null? s)))
> def args: : (<object 4800> ((code $s) $s))
> def args: : (<object 4800> ((member? x items) (valid? (member x items))))
> def args: : (<object 4800> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4800> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4800> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4800> (__string+ string+))
> def args: : (<object 4800> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4800> (__string string))
> def args: : (<object 4800> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4800> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4800> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4800> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4800> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4800> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4800> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4800> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4800> ((localNames env) (cadr env)))
> def args: : (<object 4800> ((localValues env) (caddr env)))
> def args: : (<object 4800> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4800> ((dot obj $name) (get $name obj)))
> def args: : (<object 4800> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4800> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12467> ((f x) (define result ) (println "beginning f(" x ").") (set! result (catch (g (* 2 x)))) (if (error? result) (if (== (get (quote code) result) (quote undefinedVariable)) (set! result x) (begin (println "rethrowing the error") (throw result)))) (println "done with f(" x ").") result))
> def args: : (<object 12467> ((g y) (define result ) (println "beginning g(" y ").") (throw (quote myError) "take that!") (set! result (* mnenom y)) (println "done with g(" y ").") result))
> def args: : (<object 12847> (result ))
> beginning f(def args: : (<object 12999> (env (if (null? @) # (car @))))
> 4def args: : (<object 13106> (env (if (null? @) # (car @))))
> ).def args: : (<object 13213> (env (if (null? @) # (car @))))
> 
> def args: : (<object 13411> (env (if (null? @) # (car @))))
> def args: : (<object 13528> (result ))
> beginning g(def args: : (<object 13680> (env (if (null? @) # (car @))))
> 8def args: : (<object 13787> (env (if (null? @) # (car @))))
> ).def args: : (<object 13894> (env (if (null? @) # (car @))))
> 
> def args: : (<object 14092> (env (if (null? @) # (car @))))
> def args: : (<object 14222> (env (if (null? @) # (car @))))
> def args: : (<object 14324> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 14474> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> rethrowing the errordef args: : (<object 15036> (env (if (null? @) # (car @))))
> 
> def args: : (<object 15234> (env (if (null? @) # (car @))))
------------------------------------------
except.s
------------------------------------------
24,25c24,143
< [ERROR]
< fact(5) is 120
---
> def args: : (<object 4799> (else #t))
> def args: : (<object 4799> (__builtin __context))
> def args: : (<object 4799> (__main-lib this))
> def args: : (<object 4799> (nil? null?))
> def args: : (<object 4799> ((valid? x) (not (null? x))))
> def args: : (<object 4799> ((head x) (car x)))
> def args: : (<object 4799> ((tail x) (cdr x)))
> def args: : (<object 4799> ((join x y) (cons x y)))
> def args: : (<object 4799> (^ expt))
> def args: : (<object 4799> (** expt))
> def args: : (<object 4799> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4799> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4799> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4799> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4799> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4799> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4799> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4799> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4799> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4799> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4799> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4799> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4799> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4799> (__type type))
> def args: : (<object 4799> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4799> ((class x) (get (quote __label) x)))
> def args: : (<object 4799> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4799> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4799> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4799> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4799> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4799> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4799> (function? closure?))
> def args: : (<object 4799> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4799> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4799> ((dec x) (- x 1)))
> def args: : (<object 4799> ((inc x) (+ x 1)))
> def args: : (<object 4799> (__display display))
> def args: : (<object 4799> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4799> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4799> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4799> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4799> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4799> ((negative? n) (< n 0)))
> def args: : (<object 4799> ((positive? n) (> n 0)))
> def args: : (<object 4799> ((newline) (println)))
> def args: : (<object 4799> (remainder %))
> def args: : (<object 4799> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4799> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4799> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4799> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4799> (integer int))
> def args: : (<object 4799> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4799> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4799> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4799> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4799> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4799> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4799> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4799> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4799> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4799> ((true? x) x))
> def args: : (<object 4799> ((false? x) (not x)))
> def args: : (<object 4799> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4799> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4799> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4799> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4799> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4799> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4799> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4799> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4799> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4799> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4799> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4799> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4799> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4799> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4799> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4799> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4799> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4799> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4799> ((stream-car s) (car s)))
> def args: : (<object 4799> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4799> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4799> ((stream-null? s) (null? s)))
> def args: : (<object 4799> ((code $s) $s))
> def args: : (<object 4799> ((member? x items) (valid? (member x items))))
> def args: : (<object 4799> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4799> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4799> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4799> (__string+ string+))
> def args: : (<object 4799> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4799> (__string string))
> def args: : (<object 4799> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4799> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4799> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4799> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4799> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4799> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4799> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4799> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4799> ((localNames env) (cadr env)))
> def args: : (<object 4799> ((localValues env) (caddr env)))
> def args: : (<object 4799> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4799> ((dot obj $name) (get $name obj)))
> def args: : (<object 4799> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4799> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12466> ((try # $a $b) (define result (catch (eval $a #))) (if (error? result) (eval $b #) result)))
> def args: : (<object 12466> ((fact n) (if (== n 0) (try zzz (begin (println "[ERROR]") 1)) (* n (fact (- n 1))))))
> def args: : (<object 13040> (result (catch (eval $a #))))
> def args: : (<object 13194> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 13344> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> [ERROR]def args: : (<object 13895> (env (if (null? @) # (car @))))
> 
> def args: : (<object 14093> (env (if (null? @) # (car @))))
> fact(5) is def args: : (<object 14313> (env (if (null? @) # (car @))))
> 120def args: : (<object 14420> (env (if (null? @) # (car @))))
> 
> def args: : (<object 14527> (env (if (null? @) # (car @))))
------------------------------------------
extend.s
------------------------------------------
33,36c33,217
< wow() is wow, wow, wow!
< obj . wow() is 16
< obj . yow() is 256
< obj . zow() is 65536
---
> def args: : (<object 4799> (else #t))
> def args: : (<object 4799> (__builtin __context))
> def args: : (<object 4799> (__main-lib this))
> def args: : (<object 4799> (nil? null?))
> def args: : (<object 4799> ((valid? x) (not (null? x))))
> def args: : (<object 4799> ((head x) (car x)))
> def args: : (<object 4799> ((tail x) (cdr x)))
> def args: : (<object 4799> ((join x y) (cons x y)))
> def args: : (<object 4799> (^ expt))
> def args: : (<object 4799> (** expt))
> def args: : (<object 4799> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4799> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4799> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4799> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4799> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4799> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4799> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4799> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4799> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4799> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4799> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4799> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4799> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4799> (__type type))
> def args: : (<object 4799> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4799> ((class x) (get (quote __label) x)))
> def args: : (<object 4799> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4799> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4799> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4799> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4799> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4799> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4799> (function? closure?))
> def args: : (<object 4799> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4799> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4799> ((dec x) (- x 1)))
> def args: : (<object 4799> ((inc x) (+ x 1)))
> def args: : (<object 4799> (__display display))
> def args: : (<object 4799> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4799> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4799> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4799> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4799> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4799> ((negative? n) (< n 0)))
> def args: : (<object 4799> ((positive? n) (> n 0)))
> def args: : (<object 4799> ((newline) (println)))
> def args: : (<object 4799> (remainder %))
> def args: : (<object 4799> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4799> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4799> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4799> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4799> (integer int))
> def args: : (<object 4799> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4799> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4799> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4799> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4799> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4799> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4799> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4799> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4799> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4799> ((true? x) x))
> def args: : (<object 4799> ((false? x) (not x)))
> def args: : (<object 4799> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4799> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4799> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4799> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4799> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4799> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4799> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4799> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4799> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4799> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4799> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4799> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4799> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4799> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4799> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4799> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4799> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4799> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4799> ((stream-car s) (car s)))
> def args: : (<object 4799> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4799> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4799> ((stream-null? s) (null? s)))
> def args: : (<object 4799> ((code $s) $s))
> def args: : (<object 4799> ((member? x items) (valid? (member x items))))
> def args: : (<object 4799> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4799> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4799> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4799> (__string+ string+))
> def args: : (<object 4799> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4799> (__string string))
> def args: : (<object 4799> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4799> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4799> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4799> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4799> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4799> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4799> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4799> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4799> ((localNames env) (cadr env)))
> def args: : (<object 4799> ((localValues env) (caddr env)))
> def args: : (<object 4799> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4799> ((dot obj $name) (get $name obj)))
> def args: : (<object 4799> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4799> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12466> ((prior #) (define f (get (quote __constructor) #)) (if (local? (quote __prior) f) (get (quote __prior) f) (throw (quote reflectionException) "prior field has not been set"))))
> def args: : (<object 12466> ((redefine # $params $) (if (not (pair? $params)) (throw (quote reflectionException) (string+ (fileName $params) ",line " (string (lineNumber $params)) ": can only redefine functions"))) (define p (car $params)) (define (zow) (define pf 1) this) (if (defined? p #) (define pf (get p #)) (define pf (lambda (@) #f))) (define f (eval (cons (quote define) (cons $params $)) #)) (addSymbol (quote __prior) pf f) f))
> def args: : (<object 12466> ((clone # item) (define (cloneObject item) (list (quote object) (cloneList (cadr item)) (cloneList (caddr item)))) (define (cloneObjectWithContext item env) (define c (cloneObject item)) (set (quote __context) env c) c) (define (cloneList items) (cond ((null? items) ) ((pair? items) (cons (car items) (cloneList (cdr items)))) (else items))) (cond ((closure? item) (cloneObjectWithContext item #)) ((thunk? item) (cloneObjectWithContext item #)) ((object? item) (cloneObject item)) ((pair? item) (cloneList item)) (else item))))
> def args: : (<object 12466> ((compile-reflection #) (include "compile.lib") (println "compiling prior...") (compile prior #) (println "compiling redefine...") (compile redefine #) (println "compiling clone...") (compile clone #) (println "reflection.lib compiled.")))
> def args: : (<object 12466> ((resetClosures static obj) (define (update current rest) (if (closure? current) (begin (set (quote __context) static current))) (if (valid? rest) (update (car rest) (cdr rest)))) (define values (localValues obj)) (if (!= values ) (update (car values) (cdr values))) obj))
> def args: : (<object 12466> ((inherit child parents reification static) (if (null? parents) (set (quote __context) static child) (set (quote __context) (inherit (resetClosures reification (car parents)) (cdr parents) reification static) child)) (if (valid? (child (quote __constructor))) (set (quote __label) (child (quote __constructor) (quote name)) child)) child))
> def args: : (<object 12466> ((new child) (define (chain x) (if (null? x)  (cons x (chain (x (quote parent)))))) (inherit child (chain (child (quote parent))) child (child (quote __context)))))
> def args: : (<object 12466> ((mixin object @) (inherit object @ object (object (quote __context)))))
> def args: : (<object 12466> ((super child) (child (quote __context))))
> def args: : (<object 12466> ((extend # parent) (define top (if (local? (quote inherit-top) parent) (parent (quote inherit-top)) parent)) (addSymbol (quote inherit-top) top #) (set (quote __context) (# (quote __context)) top) (set (quote __context) parent #) #))
> def args: : (<object 12466> ((setEnclosingScope a b) (set* a (quote __context) b)))
> def args: : (<object 12466> ((getEnclosingScope a) (a (quote __context))))
> def args: : (<object 12466> ((square x) (* x x)))
> def args: : (<object 12466> ((wow) "wow, wow, wow!"))
> def args: : (<object 12466> ((c x) (define parent ) (define (wow) x) this))
> def args: : (<object 12466> ((b y) (define parent (c (* y y))) (define (yow) (square (wow))) this))
> def args: : (<object 12466> ((a z) (define parent (b (* z z))) (define (zow) (square (yow))) this))
> def args: : (<object 12466> (obj (new (a 2))))
> def args: : (<object 14638> (parent (b (* z z))))
> def args: : (<object 14675> (parent (c (* y y))))
> def args: : (<object 14712> (parent ))
> def args: : (<object 14712> ((wow) x))
> def args: : (<object 14675> ((yow) (square (wow))))
> def args: : (<object 14638> ((zow) (square (yow))))
> def args: : (<object 14838> ((chain x) (if (null? x)  (cons x (chain (x (quote parent)))))))
> def args: : (<object 15112> ((update current rest) (if (closure? current) (begin (set (quote __context) static current))) (if (valid? rest) (update (car rest) (cdr rest)))))
> def args: : (<object 15112> (values (localValues obj)))
> def args: : (<object 15612> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 15762> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 16026> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 16176> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 16670> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 16820> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 17084> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 17234> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 17807> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 17957> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 18451> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 18601> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 19174> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 19324> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 19818> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 19968> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 20213> ((update current rest) (if (closure? current) (begin (set (quote __context) static current))) (if (valid? rest) (update (car rest) (cdr rest)))))
> def args: : (<object 20213> (values (localValues obj)))
> def args: : (<object 20713> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 20863> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 21127> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 21277> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 21771> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 21921> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 22185> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 22335> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 22908> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 23058> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 23552> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 23702> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 24275> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 24425> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 24689> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 24839> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> wow() is def args: : (<object 25462> (env (if (null? @) # (car @))))
> wow, wow, wow!def args: : (<object 25569> (env (if (null? @) # (car @))))
> 
> def args: : (<object 25767> (env (if (null? @) # (car @))))
> obj . wow() is def args: : (<object 26027> (env (if (null? @) # (car @))))
> 16def args: : (<object 26134> (env (if (null? @) # (car @))))
> 
> def args: : (<object 26332> (env (if (null? @) # (car @))))
> obj . yow() is def args: : (<object 26667> (env (if (null? @) # (car @))))
> 256def args: : (<object 26774> (env (if (null? @) # (car @))))
> 
> def args: : (<object 26972> (env (if (null? @) # (car @))))
> obj . zow() is def args: : (<object 27391> (env (if (null? @) # (car @))))
> 65536def args: : (<object 27498> (env (if (null? @) # (car @))))
> 
> def args: : (<object 27696> (env (if (null? @) # (car @))))
------------------------------------------
extension.s
------------------------------------------
19,20c19,191
< z = y(); z . a is 3
< new(y()) . a is 3
---
> def args: : (<object 4802> (else #t))
> def args: : (<object 4802> (__builtin __context))
> def args: : (<object 4802> (__main-lib this))
> def args: : (<object 4802> (nil? null?))
> def args: : (<object 4802> ((valid? x) (not (null? x))))
> def args: : (<object 4802> ((head x) (car x)))
> def args: : (<object 4802> ((tail x) (cdr x)))
> def args: : (<object 4802> ((join x y) (cons x y)))
> def args: : (<object 4802> (^ expt))
> def args: : (<object 4802> (** expt))
> def args: : (<object 4802> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4802> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4802> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4802> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4802> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4802> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4802> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4802> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4802> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4802> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4802> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4802> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4802> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4802> (__type type))
> def args: : (<object 4802> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4802> ((class x) (get (quote __label) x)))
> def args: : (<object 4802> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4802> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4802> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4802> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4802> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4802> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4802> (function? closure?))
> def args: : (<object 4802> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4802> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4802> ((dec x) (- x 1)))
> def args: : (<object 4802> ((inc x) (+ x 1)))
> def args: : (<object 4802> (__display display))
> def args: : (<object 4802> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4802> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4802> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4802> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4802> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4802> ((negative? n) (< n 0)))
> def args: : (<object 4802> ((positive? n) (> n 0)))
> def args: : (<object 4802> ((newline) (println)))
> def args: : (<object 4802> (remainder %))
> def args: : (<object 4802> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4802> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4802> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4802> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4802> (integer int))
> def args: : (<object 4802> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4802> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4802> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4802> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4802> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4802> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4802> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4802> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4802> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4802> ((true? x) x))
> def args: : (<object 4802> ((false? x) (not x)))
> def args: : (<object 4802> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4802> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4802> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4802> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4802> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4802> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4802> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4802> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4802> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4802> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4802> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4802> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4802> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4802> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4802> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4802> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4802> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4802> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4802> ((stream-car s) (car s)))
> def args: : (<object 4802> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4802> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4802> ((stream-null? s) (null? s)))
> def args: : (<object 4802> ((code $s) $s))
> def args: : (<object 4802> ((member? x items) (valid? (member x items))))
> def args: : (<object 4802> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4802> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4802> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4802> (__string+ string+))
> def args: : (<object 4802> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4802> (__string string))
> def args: : (<object 4802> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4802> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4802> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4802> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4802> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4802> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4802> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4802> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4802> ((localNames env) (cadr env)))
> def args: : (<object 4802> ((localValues env) (caddr env)))
> def args: : (<object 4802> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4802> ((dot obj $name) (get $name obj)))
> def args: : (<object 4802> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4802> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12469> ((prior #) (define f (get (quote __constructor) #)) (if (local? (quote __prior) f) (get (quote __prior) f) (throw (quote reflectionException) "prior field has not been set"))))
> def args: : (<object 12469> ((redefine # $params $) (if (not (pair? $params)) (throw (quote reflectionException) (string+ (fileName $params) ",line " (string (lineNumber $params)) ": can only redefine functions"))) (define p (car $params)) (define (zow) (define pf 1) this) (if (defined? p #) (define pf (get p #)) (define pf (lambda (@) #f))) (define f (eval (cons (quote define) (cons $params $)) #)) (addSymbol (quote __prior) pf f) f))
> def args: : (<object 12469> ((clone # item) (define (cloneObject item) (list (quote object) (cloneList (cadr item)) (cloneList (caddr item)))) (define (cloneObjectWithContext item env) (define c (cloneObject item)) (set (quote __context) env c) c) (define (cloneList items) (cond ((null? items) ) ((pair? items) (cons (car items) (cloneList (cdr items)))) (else items))) (cond ((closure? item) (cloneObjectWithContext item #)) ((thunk? item) (cloneObjectWithContext item #)) ((object? item) (cloneObject item)) ((pair? item) (cloneList item)) (else item))))
> def args: : (<object 12469> ((compile-reflection #) (include "compile.lib") (println "compiling prior...") (compile prior #) (println "compiling redefine...") (compile redefine #) (println "compiling clone...") (compile clone #) (println "reflection.lib compiled.")))
> def args: : (<object 12469> ((resetClosures static obj) (define (update current rest) (if (closure? current) (begin (set (quote __context) static current))) (if (valid? rest) (update (car rest) (cdr rest)))) (define values (localValues obj)) (if (!= values ) (update (car values) (cdr values))) obj))
> def args: : (<object 12469> ((inherit child parents reification static) (if (null? parents) (set (quote __context) static child) (set (quote __context) (inherit (resetClosures reification (car parents)) (cdr parents) reification static) child)) (if (valid? (child (quote __constructor))) (set (quote __label) (child (quote __constructor) (quote name)) child)) child))
> def args: : (<object 12469> ((new child) (define (chain x) (if (null? x)  (cons x (chain (x (quote parent)))))) (inherit child (chain (child (quote parent))) child (child (quote __context)))))
> def args: : (<object 12469> ((mixin object @) (inherit object @ object (object (quote __context)))))
> def args: : (<object 12469> ((super child) (child (quote __context))))
> def args: : (<object 12469> ((extend # parent) (define top (if (local? (quote inherit-top) parent) (parent (quote inherit-top)) parent)) (addSymbol (quote inherit-top) top #) (set (quote __context) (# (quote __context)) top) (set (quote __context) parent #) #))
> def args: : (<object 12469> ((setEnclosingScope a b) (set* a (quote __context) b)))
> def args: : (<object 12469> ((getEnclosingScope a) (a (quote __context))))
> def args: : (<object 12469> ((x) (define parent ) (define a 3) this))
> def args: : (<object 12469> ((y) (define parent (x)) (define b 5) this))
> def args: : (<object 12469> (z (new (y))))
> def args: : (<object 14395> (parent (x)))
> def args: : (<object 14427> (parent ))
> def args: : (<object 14427> (a 3))
> def args: : (<object 14395> (b 5))
> def args: : (<object 14494> ((chain x) (if (null? x)  (cons x (chain (x (quote parent)))))))
> def args: : (<object 14712> ((update current rest) (if (closure? current) (begin (set (quote __context) static current))) (if (valid? rest) (update (car rest) (cdr rest)))))
> def args: : (<object 14712> (values (localValues obj)))
> def args: : (<object 15212> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 15362> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 15626> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 15776> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 16270> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 16420> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 16684> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 16834> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 17407> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 17557> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 18051> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 18201> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 18465> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 18615> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> z = y(); z . a is def args: : (<object 19128> (env (if (null? @) # (car @))))
> 3def args: : (<object 19235> (env (if (null? @) # (car @))))
> 
> def args: : (<object 19433> (env (if (null? @) # (car @))))
> def args: : (<object 19552> (parent (x)))
> def args: : (<object 19584> (parent ))
> def args: : (<object 19584> (a 3))
> def args: : (<object 19552> (b 5))
> def args: : (<object 19651> ((chain x) (if (null? x)  (cons x (chain (x (quote parent)))))))
> def args: : (<object 19869> ((update current rest) (if (closure? current) (begin (set (quote __context) static current))) (if (valid? rest) (update (car rest) (cdr rest)))))
> def args: : (<object 19869> (values (localValues obj)))
> def args: : (<object 20369> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 20519> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 20783> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 20933> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 21427> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 21577> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 21841> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 21991> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 22564> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 22714> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 23208> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 23358> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 23622> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 23772> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> new(y()) . a is def args: : (<object 24283> (env (if (null? @) # (car @))))
> 3def args: : (<object 24390> (env (if (null? @) # (car @))))
> 
> def args: : (<object 24588> (env (if (null? @) # (car @))))
------------------------------------------
fact.s
------------------------------------------
18,27c18,168
< starting fact.s
< including fib.s
< starting fib.s
< including fact.s
< fib: fib(25) is 75025
< 2 seconds
< fib.s included - SHOULD ONLY SEE THIS ONCE
< fact: fib(5) is 5
< fact: fact(5) is 120
< fact.s included - SHOULD ONLY SEE THIS ONCE
---
> def args: : (<object 4797> (else #t))
> def args: : (<object 4797> (__builtin __context))
> def args: : (<object 4797> (__main-lib this))
> def args: : (<object 4797> (nil? null?))
> def args: : (<object 4797> ((valid? x) (not (null? x))))
> def args: : (<object 4797> ((head x) (car x)))
> def args: : (<object 4797> ((tail x) (cdr x)))
> def args: : (<object 4797> ((join x y) (cons x y)))
> def args: : (<object 4797> (^ expt))
> def args: : (<object 4797> (** expt))
> def args: : (<object 4797> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4797> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4797> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4797> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4797> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4797> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4797> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4797> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4797> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4797> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4797> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4797> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4797> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4797> (__type type))
> def args: : (<object 4797> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4797> ((class x) (get (quote __label) x)))
> def args: : (<object 4797> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4797> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4797> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4797> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4797> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4797> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4797> (function? closure?))
> def args: : (<object 4797> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4797> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4797> ((dec x) (- x 1)))
> def args: : (<object 4797> ((inc x) (+ x 1)))
> def args: : (<object 4797> (__display display))
> def args: : (<object 4797> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4797> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4797> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4797> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4797> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4797> ((negative? n) (< n 0)))
> def args: : (<object 4797> ((positive? n) (> n 0)))
> def args: : (<object 4797> ((newline) (println)))
> def args: : (<object 4797> (remainder %))
> def args: : (<object 4797> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4797> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4797> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4797> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4797> (integer int))
> def args: : (<object 4797> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4797> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4797> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4797> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4797> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4797> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4797> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4797> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4797> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4797> ((true? x) x))
> def args: : (<object 4797> ((false? x) (not x)))
> def args: : (<object 4797> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4797> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4797> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4797> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4797> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4797> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4797> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4797> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4797> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4797> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4797> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4797> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4797> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4797> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4797> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4797> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4797> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4797> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4797> ((stream-car s) (car s)))
> def args: : (<object 4797> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4797> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4797> ((stream-null? s) (null? s)))
> def args: : (<object 4797> ((code $s) $s))
> def args: : (<object 4797> ((member? x items) (valid? (member x items))))
> def args: : (<object 4797> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4797> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4797> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4797> (__string+ string+))
> def args: : (<object 4797> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4797> (__string string))
> def args: : (<object 4797> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4797> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4797> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4797> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4797> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4797> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4797> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4797> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4797> ((localNames env) (cadr env)))
> def args: : (<object 4797> ((localValues env) (caddr env)))
> def args: : (<object 4797> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4797> ((dot obj $name) (get $name obj)))
> def args: : (<object 4797> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4797> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> starting fact.sdef args: : (<object 12812> (env (if (null? @) # (car @))))
> 
> def args: : (<object 13010> (env (if (null? @) # (car @))))
> including fib.sdef args: : (<object 13231> (env (if (null? @) # (car @))))
> 
> def args: : (<object 13429> (env (if (null? @) # (car @))))
> starting fib.sdef args: : (<object 13946> (env (if (null? @) # (car @))))
> 
> def args: : (<object 14144> (env (if (null? @) # (car @))))
> def args: : (<object 12464> ((fib n) (if (< n 2) n (+ (fib (- n 1)) (fib (- n 2))))))
> including fact.sdef args: : (<object 14385> (env (if (null? @) # (car @))))
> 
> def args: : (<object 14583> (env (if (null? @) # (car @))))
> def args: : (<object 12464> (x 0))
> def args: : (<object 12464> (result ))
> def args: : (<object 12464> (t (time)))
> def args: : (<object 14719> (env (if (null? @) # (car @))))
> def args: : (<object 1819177> (env (if (null? @) # (car @))))
> fib: fib(def args: : (<object 1819356> (env (if (null? @) # (car @))))
> 25def args: : (<object 1819463> (env (if (null? @) # (car @))))
> ) is def args: : (<object 1819570> (env (if (null? @) # (car @))))
> 75025def args: : (<object 1819677> (env (if (null? @) # (car @))))
> 
> def args: : (<object 1819875> (env (if (null? @) # (car @))))
> 2.668126def args: : (<object 1820103> (env (if (null? @) # (car @))))
>  secondsdef args: : (<object 1820210> (env (if (null? @) # (car @))))
> 
> def args: : (<object 1820408> (env (if (null? @) # (car @))))
> fib.s included - SHOULD ONLY SEE THIS ONCEdef args: : (<object 1820638> (env (if (null? @) # (car @))))
> 
> def args: : (<object 1820836> (env (if (null? @) # (car @))))
> def args: : (<object 165> ((fact n) (if (< n 2) 1 (* n (fact (- n 1))))))
> fact: fib(5) is def args: : (<object 1821958> (env (if (null? @) # (car @))))
> 5def args: : (<object 1822065> (env (if (null? @) # (car @))))
> 
> def args: : (<object 1822263> (env (if (null? @) # (car @))))
> fact: fact(5) is def args: : (<object 1822783> (env (if (null? @) # (car @))))
> 120def args: : (<object 1822890> (env (if (null? @) # (car @))))
> 
> def args: : (<object 1823088> (env (if (null? @) # (car @))))
> fact.s included - SHOULD ONLY SEE THIS ONCEdef args: : (<object 1823318> (env (if (null? @) # (car @))))
> 
> def args: : (<object 1823516> (env (if (null? @) # (car @))))
------------------------------------------
fib-opt.s
------------------------------------------
18a19
> (println "compiling fib...")
19a21
> (println "fib compiled.")
26,27c28,791
< (fib 25) is 75025, 3 seconds.
< (fib 25) is 75025, 1 seconds.
---
> def args: : (<object 4800> (else #t))
> def args: : (<object 4800> (__builtin __context))
> def args: : (<object 4800> (__main-lib this))
> def args: : (<object 4800> (nil? null?))
> def args: : (<object 4800> ((valid? x) (not (null? x))))
> def args: : (<object 4800> ((head x) (car x)))
> def args: : (<object 4800> ((tail x) (cdr x)))
> def args: : (<object 4800> ((join x y) (cons x y)))
> def args: : (<object 4800> (^ expt))
> def args: : (<object 4800> (** expt))
> def args: : (<object 4800> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4800> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4800> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4800> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4800> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4800> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4800> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4800> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4800> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4800> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4800> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4800> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4800> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4800> (__type type))
> def args: : (<object 4800> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4800> ((class x) (get (quote __label) x)))
> def args: : (<object 4800> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4800> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4800> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4800> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4800> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4800> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4800> (function? closure?))
> def args: : (<object 4800> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4800> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4800> ((dec x) (- x 1)))
> def args: : (<object 4800> ((inc x) (+ x 1)))
> def args: : (<object 4800> (__display display))
> def args: : (<object 4800> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4800> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4800> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4800> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4800> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4800> ((negative? n) (< n 0)))
> def args: : (<object 4800> ((positive? n) (> n 0)))
> def args: : (<object 4800> ((newline) (println)))
> def args: : (<object 4800> (remainder %))
> def args: : (<object 4800> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4800> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4800> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4800> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4800> (integer int))
> def args: : (<object 4800> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4800> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4800> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4800> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4800> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4800> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4800> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4800> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4800> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4800> ((true? x) x))
> def args: : (<object 4800> ((false? x) (not x)))
> def args: : (<object 4800> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4800> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4800> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4800> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4800> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4800> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4800> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4800> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4800> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4800> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4800> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4800> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4800> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4800> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4800> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4800> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4800> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4800> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4800> ((stream-car s) (car s)))
> def args: : (<object 4800> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4800> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4800> ((stream-null? s) (null? s)))
> def args: : (<object 4800> ((code $s) $s))
> def args: : (<object 4800> ((member? x items) (valid? (member x items))))
> def args: : (<object 4800> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4800> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4800> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4800> (__string+ string+))
> def args: : (<object 4800> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4800> (__string string))
> def args: : (<object 4800> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4800> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4800> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4800> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4800> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4800> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4800> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4800> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4800> ((localNames env) (cadr env)))
> def args: : (<object 4800> ((localValues env) (caddr env)))
> def args: : (<object 4800> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4800> ((dot obj $name) (get $name obj)))
> def args: : (<object 4800> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4800> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12467> (else #t))
> def args: : (<object 12467> ((rewrite expr names free) (define (rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))) (define (rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))) (define (rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))) (define (rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))) (define (rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new) (define (rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))) (define (rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))) (cond ((null? expr) expr) ((eq? expr #t) expr) ((eq? expr #f) expr) ((eq? (type expr) (quote STRING)) expr) ((eq? (type expr) (quote ARRAY)) expr) ((eq? (type expr) (quote INTEGER)) expr) ((eq? (type expr) (quote REAL)) expr) ((if (pair? expr) (eq? (car expr) (quote quote))) expr) ((eq? (type expr) (quote SYMBOL)) (rewrite-get expr names free)) ((eq? (car expr) (quote define)) (rewrite-definition expr names free)) ((eq? (car expr) (quote scope)) (rewrite-scope expr names free)) ((eq? (car expr) (quote environment)) expr) (else (cons (rewrite (car expr) names free) (rewrite (cdr expr) names free))))))
> def args: : (<object 12467> ((compile # f @) (define env (if (valid? @) (car @) #)) (set (quote code) (rewrite (get (quote code) f) (cons (make-assoc (get (quote parameters) f) (get (quote parameters) f)) ) env) f) f))
> def args: : (<object 12467> ((compile-env # @) (define env (if (valid? @) (car @) #)) (define vars (car (cdr env))) (define vals (car (cdr (cdr env)))) (while (valid? vars) (if (closure? (car vals)) (begin (display "compiling ") (display (car vars)) (display "...
> ") (compile (car vals) env))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12467> ((replace # f vars @) (define i) (define env (if (valid? @) (car @) #)) (define (helper var val expr) (cond ((null? expr) ) ((eq? (type expr) (quote CONS)) (if (eq? (car expr) var) (set-car! expr val) (helper var val (car expr))) (helper var val (cdr expr))))) (inspect vars) (for-each2 i vars (helper i (env i) (get (quote code) f))) (quote done)))
> def args: : (<object 12467> ((macro # f $) (define names (list (make-assoc (get (quote parameters) f) $))) (define body (rewrite (get (quote code) f) names (get (quote context) f))) (eval body #)))
> def args: : (<object 12467> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 12467> ((assoc x y) (cond ((null? y) #f) ((equal? x (car (car y))) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 12467> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((eq? (type a) (quote STRING)) (string-equal? a b)) ((eq? (type a) (quote ARRAY)) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 12467> ((defined? id env) (not (eq? (type (catch (get id env))) (quote error)))))
> def args: : (<object 12467> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 12467> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 12467> (__pretty-indent "    "))
> def args: : (<object 12467> ((pretty expr) (prettyIndent expr )))
> def args: : (<object 12467> ((prettyIndent expr indent) (define (ppTestBlock expr indent) (print indent "(" (car expr) " " (cadr expr) "
> ") (ppCodeList (cddr expr) (string+ indent __pretty-indent)) (print indent __pretty-indent ")
> ")) (define (ppBlock expr indent) (print indent "(" (car expr) "
> ") (ppCodeList (cdr expr) (string+ indent __pretty-indent)) (print indent __pretty-indent ")
> ")) (define (ppFunction expr indent) (define p) (print indent "(define (" (dot expr name)) (for-each2 p (dot expr parameters) (print " " p)) (print ")
> ") (ppCodeList (cdr (dot expr code)) (string+ indent __pretty-indent)) (print indent __pretty-indent ")
> ")) (define (ppFunctionDefinition expr indent) (define p) (println indent "(define " (cadr expr)) (ppCodeList (cddr expr) (string+ indent __pretty-indent)) (print indent __pretty-indent ")
> ")) (define (ppCodeList expr indent) (while (valid? expr) (if (prettyIndent (car expr) indent) (println)) (set (quote expr) (cdr expr)))) (define (ppCond expr indent) (define c) (print indent "(cond
> ") (for-each2 c (cdr expr) (print indent __pretty-indent "(" (car c) "
> ") (ppCodeList (cdr c) (string+ indent "        ")) (print indent __pretty-indent __pretty-indent ")
> ")) (print indent __pretty-indent ")
> ")) (cond ((not (pair? expr)) (print indent expr) #t) ((closure? expr) (ppFunction expr indent) #f) ((eq? (car expr) (quote begin)) (ppBlock expr indent) #f) ((eq? (car expr) (quote cond)) (ppCond expr indent) #f) ((eq? (car expr) (quote if)) (ppTestBlock expr indent) #f) ((eq? (car expr) (quote while)) (ppTestBlock expr indent) #f) ((eq? (car expr) (quote let)) (ppTestBlock expr indent) #f) ((and (eq? (car expr) (quote define)) (pair? (cadr expr))) (ppFunctionDefinition expr indent) #f) (else (print indent expr) #t))))
> def args: : (<object 12467> ((compile-pretty #) (include "compile.lib") (compile pretty #) (compile prettyIndent #)))
> def args: : (<object 12467> ((fib n) (if (< n 2) n (+ (fib (- n 1)) (fib (- n 2))))))
> def args: : (<object 12467> (x 25))
> def args: : (<object 12467> (result))
> def args: : (<object 12467> (s (time)))
> def args: : (<object 12467> (result (fib x)))
> def args: : (<object 147> (f (time)))
> (fib def args: : (<object 1833690> (env (if (null? @) # (car @))))
> 25def args: : (<object 1833797> (env (if (null? @) # (car @))))
> ) is def args: : (<object 1833904> (env (if (null? @) # (car @))))
> 75025def args: : (<object 1834011> (env (if (null? @) # (car @))))
> , def args: : (<object 1834118> (env (if (null? @) # (car @))))
> 2.807945def args: : (<object 1834225> (env (if (null? @) # (car @))))
>  seconds.def args: : (<object 1834332> (env (if (null? @) # (car @))))
> 
> def args: : (<object 1834530> (env (if (null? @) # (car @))))
> compiling fib...def args: : (<object 1834751> (env (if (null? @) # (car @))))
> 
> def args: : (<object 1834949> (env (if (null? @) # (car @))))
> def args: : (<object 1835063> (env (if (valid? @) (car @) #)))
> def args: : (<object 1835284> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1835284> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1835284> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1835284> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1835284> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1835284> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1835284> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1835534> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1835788> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1836042> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1836296> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1836569> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1836811> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1836811> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1836811> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1836811> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1836811> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1836811> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1836811> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1837061> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1837246> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1837431> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1837616> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1837806> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1837963> (value))
> def args: : (<object 1837963> (target (assoc id (car names))))
> def args: : (<object 1838147> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1838332> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1838583> (value))
> def args: : (<object 1838723> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1838583> (value (get id free)))
> def args: : (<object 1839071> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1839221> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1839634> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1839784> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1840213> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1840213> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1840213> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1840213> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1840213> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1840213> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1840213> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1840463> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1840717> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1840971> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1841225> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1841498> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1841740> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1841740> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1841740> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1841740> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1841740> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1841740> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1841740> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1841990> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1842244> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1842498> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1842752> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1843025> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1843267> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1843267> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1843267> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1843267> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1843267> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1843267> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1843267> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1843517> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1843702> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1843887> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1844072> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1844262> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1844419> (value))
> def args: : (<object 1844419> (target (assoc id (car names))))
> def args: : (<object 1844603> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1844788> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1845039> (value))
> def args: : (<object 1845179> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1845039> (value (get id free)))
> def args: : (<object 1845527> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1845677> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1846090> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1846240> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1846669> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1846669> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1846669> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1846669> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1846669> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1846669> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1846669> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1846919> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1847173> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1847427> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1847681> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1847954> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1848196> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1848196> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1848196> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1848196> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1848196> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1848196> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1848196> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1848446> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1848700> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1848954> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1849208> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1849481> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1849723> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1849723> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1849723> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1849723> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1849723> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1849723> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1849723> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1849973> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1850158> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1850343> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1850528> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1850718> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1850875> (value))
> def args: : (<object 1850875> (target (assoc id (car names))))
> def args: : (<object 1851059> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1851244> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1851495> (value))
> def args: : (<object 1851635> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1851495> (value (get id free)))
> def args: : (<object 1851983> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1852133> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1852546> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1852696> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1853125> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1853125> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1853125> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1853125> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1853125> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1853125> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1853125> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1853375> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1853629> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1853883> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1854137> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1854410> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1854652> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1854652> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1854652> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1854652> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1854652> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1854652> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1854652> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1854902> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1855087> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1855272> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1855457> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1855647> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1855804> (value))
> def args: : (<object 1855804> (target (assoc id (car names))))
> def args: : (<object 1855988> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1856173> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1856374> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1856374> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1856374> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1856374> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1856374> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1856374> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1856374> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1856624> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1856878> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1857132> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1857386> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1857659> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1857901> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1857901> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1857901> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1857901> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1857901> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1857901> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1857901> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1858151> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1858336> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1858521> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1858679> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1858679> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1858679> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1858679> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1858679> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1858679> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1858679> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1858905> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1858905> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1858905> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1858905> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1858905> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1858905> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1858905> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1859155> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1859409> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1859663> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1859917> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1860190> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1860432> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1860432> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1860432> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1860432> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1860432> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1860432> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1860432> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1860682> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1860867> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1861052> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1861237> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1861427> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1861584> (value))
> def args: : (<object 1861584> (target (assoc id (car names))))
> def args: : (<object 1861768> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1861953> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1862154> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1862154> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1862154> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1862154> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1862154> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1862154> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1862154> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1862404> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1862658> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1862912> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1863166> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1863439> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1863681> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1863681> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1863681> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1863681> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1863681> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1863681> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1863681> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1863931> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1864185> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1864439> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1864693> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1864966> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1865208> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1865208> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1865208> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1865208> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1865208> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1865208> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1865208> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1865458> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1865643> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1865828> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1866013> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1866203> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1866360> (value))
> def args: : (<object 1866360> (target (assoc id (car names))))
> def args: : (<object 1866544> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1866729> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1866980> (value))
> def args: : (<object 1867120> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1866980> (value (get id free)))
> def args: : (<object 1867468> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1867618> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1868031> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1868181> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1868610> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1868610> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1868610> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1868610> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1868610> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1868610> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1868610> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1868860> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1869114> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1869368> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1869622> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1869895> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1870137> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1870137> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1870137> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1870137> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1870137> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1870137> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1870137> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1870387> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1870641> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1870895> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1871149> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1871422> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1871664> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1871664> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1871664> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1871664> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1871664> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1871664> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1871664> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1871914> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1872099> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1872284> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1872469> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1872659> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1872816> (value))
> def args: : (<object 1872816> (target (assoc id (car names))))
> def args: : (<object 1873000> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1873185> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1873436> (value))
> def args: : (<object 1873576> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1873436> (value (get id free)))
> def args: : (<object 1873924> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1874074> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1874503> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1874503> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1874503> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1874503> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1874503> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1874503> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1874503> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1874753> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1875007> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1875261> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1875515> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1875788> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1876030> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1876030> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1876030> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1876030> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1876030> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1876030> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1876030> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1876280> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1876534> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1876788> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1877042> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1877315> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1877557> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1877557> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1877557> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1877557> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1877557> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1877557> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1877557> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1877807> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1877992> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1878177> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1878362> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1878552> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1878709> (value))
> def args: : (<object 1878709> (target (assoc id (car names))))
> def args: : (<object 1878893> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1879078> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1879329> (value))
> def args: : (<object 1879469> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1879329> (value (get id free)))
> def args: : (<object 1879817> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1879967> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1880380> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1880530> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1880959> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1880959> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1880959> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1880959> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1880959> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1880959> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1880959> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1881209> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1881463> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1881717> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1881971> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1882244> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1882486> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1882486> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1882486> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1882486> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1882486> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1882486> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1882486> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1882736> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1882921> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1883106> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1883291> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1883481> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1883638> (value))
> def args: : (<object 1883638> (target (assoc id (car names))))
> def args: : (<object 1883822> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1884007> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1884208> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1884208> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1884208> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1884208> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1884208> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1884208> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1884208> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1884458> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1884712> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1884966> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1885220> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1885493> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1885735> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1885735> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1885735> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1885735> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1885735> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1885735> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1885735> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1885985> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1886170> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1886355> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1886513> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1886513> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1886513> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1886513> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1886513> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1886513> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1886513> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1886739> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1886739> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1886739> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1886739> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1886739> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1886739> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1886739> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1886962> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1886962> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1886962> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1886962> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1886962> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1886962> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1886962> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1887212> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1887466> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1887720> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1887974> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1888247> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1888489> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1888489> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1888489> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1888489> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1888489> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1888489> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1888489> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1888739> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1888993> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1889247> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1889501> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1889774> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1890016> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1890016> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1890016> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1890016> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1890016> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1890016> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1890016> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1890266> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1890451> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1890636> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1890821> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1891011> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1891168> (value))
> def args: : (<object 1891168> (target (assoc id (car names))))
> def args: : (<object 1891352> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1891537> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1891788> (value))
> def args: : (<object 1891928> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1891788> (value (get id free)))
> def args: : (<object 1892276> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1892426> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1892855> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1892855> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1892855> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1892855> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1892855> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1892855> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1892855> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1893105> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1893359> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1893613> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1893867> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1894140> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1894382> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1894382> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1894382> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1894382> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1894382> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1894382> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1894382> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1894632> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1894886> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1895140> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1895394> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1895667> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1895909> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1895909> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1895909> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1895909> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1895909> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1895909> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1895909> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1896159> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1896344> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1896529> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1896714> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1896904> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1897061> (value))
> def args: : (<object 1897061> (target (assoc id (car names))))
> def args: : (<object 1897245> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1897430> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1897681> (value))
> def args: : (<object 1897821> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1897681> (value (get id free)))
> def args: : (<object 1898169> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1898319> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1898732> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1898882> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1899311> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1899311> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1899311> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1899311> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1899311> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1899311> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1899311> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1899561> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1899815> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1900069> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1900323> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1900596> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1900838> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1900838> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1900838> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1900838> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1900838> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1900838> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1900838> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1901088> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1901273> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1901458> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1901643> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1901833> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1901990> (value))
> def args: : (<object 1901990> (target (assoc id (car names))))
> def args: : (<object 1902174> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1902359> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1902560> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1902560> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1902560> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1902560> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1902560> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1902560> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1902560> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1902810> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1903064> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1903318> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1903572> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1903845> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1904087> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1904087> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1904087> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1904087> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1904087> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1904087> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1904087> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1904337> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1904522> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1904707> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> def args: : (<object 1904865> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1904865> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1904865> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1904865> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1904865> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1904865> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1904865> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1905091> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1905091> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1905091> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1905091> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1905091> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1905091> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1905091> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1905314> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1905314> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1905314> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1905314> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1905314> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1905314> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1905314> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1905540> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1905540> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1905540> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1905540> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1905540> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1905540> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1905540> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> def args: : (<object 1905769> ((rewrite-definition expr names free) (if (symbol? (car (cdr expr))) (rewrite-variable-definition (car (cdr expr)) expr names free) (rewrite-function-definition (car (cdr expr)) expr names free))))
> def args: : (<object 1905769> ((rewrite-function-definition sig expr names free) (define id (car sig)) (define newid (rewrite-identifier id names)) (define next (cons (make-assoc (cdr sig) (cdr sig)) names)) (cons (rewrite (quote define) names free) (cons (cons newid (rewrite (cdr sig) next free)) (rewrite (cddr expr) next free)))))
> def args: : (<object 1905769> ((rewrite-scope expr names free) (cons (rewrite (quote scope) names free) (rewrite (cdr expr) (cons (make-assoc  ) names) free))))
> def args: : (<object 1905769> ((rewrite-identifier id names) (cond ((gensym? id) id) ((neq? (assoc id (car names)) #f) (cadr (assoc id (car names)))) (else (rewrite-add-identifier id (gensym id) names)))))
> def args: : (<object 1905769> ((rewrite-add-identifier old new names) (set-car! names (cons (list old new) (car names))) new))
> def args: : (<object 1905769> ((rewrite-variable-definition id expr names free) (define newid (rewrite-identifier id names)) (cons (rewrite (quote define) names free) (cons newid (rewrite (cddr expr) names free)))))
> def args: : (<object 1905769> ((rewrite-get id names free) (define value) (cond ((gensym? id) id) ((null? names) (if (not (defined? id free)) id (begin (define value (get id free)) (if (closure? value) value (if (builtin? value) value id))))) (else (define target (assoc id (car names))) (if (neq? target #f) (car (cdr target)) (rewrite-get id (cdr names) free))))))
> fib compiled.def args: : (<object 1906113> (env (if (null? @) # (car @))))
> 
> def args: : (<object 1906311> (env (if (null? @) # (car @))))
> def args: : (<object 147> (s (time)))
> def args: : (<object 147> (result (fib x)))
> def args: : (<object 158> (f (time)))
> (fib def args: : (<object 1639726> (env (if (null? @) # (car @))))
> 25def args: : (<object 1639833> (env (if (null? @) # (car @))))
> ) is def args: : (<object 1639940> (env (if (null? @) # (car @))))
> 75025def args: : (<object 1640047> (env (if (null? @) # (car @))))
> , def args: : (<object 1640154> (env (if (null? @) # (car @))))
> 1.278585def args: : (<object 1640261> (env (if (null? @) # (car @))))
>  seconds.def args: : (<object 1640368> (env (if (null? @) # (car @))))
> 
> def args: : (<object 1640566> (env (if (null? @) # (car @))))
------------------------------------------
fib.s
------------------------------------------
24,33c24,174
< starting fib.s
< including fact.s
< starting fact.s
< including fib.s
< fact: fib(5) is 5
< fact: fact(5) is 120
< fact.s included - SHOULD ONLY SEE THIS ONCE
< fib: fib(25) is 75025
< 3 seconds
< fib.s included - SHOULD ONLY SEE THIS ONCE
---
> def args: : (<object 4796> (else #t))
> def args: : (<object 4796> (__builtin __context))
> def args: : (<object 4796> (__main-lib this))
> def args: : (<object 4796> (nil? null?))
> def args: : (<object 4796> ((valid? x) (not (null? x))))
> def args: : (<object 4796> ((head x) (car x)))
> def args: : (<object 4796> ((tail x) (cdr x)))
> def args: : (<object 4796> ((join x y) (cons x y)))
> def args: : (<object 4796> (^ expt))
> def args: : (<object 4796> (** expt))
> def args: : (<object 4796> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4796> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4796> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4796> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4796> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4796> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4796> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4796> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4796> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4796> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4796> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4796> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4796> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4796> (__type type))
> def args: : (<object 4796> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4796> ((class x) (get (quote __label) x)))
> def args: : (<object 4796> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4796> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4796> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4796> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4796> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4796> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4796> (function? closure?))
> def args: : (<object 4796> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4796> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4796> ((dec x) (- x 1)))
> def args: : (<object 4796> ((inc x) (+ x 1)))
> def args: : (<object 4796> (__display display))
> def args: : (<object 4796> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4796> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4796> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4796> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4796> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4796> ((negative? n) (< n 0)))
> def args: : (<object 4796> ((positive? n) (> n 0)))
> def args: : (<object 4796> ((newline) (println)))
> def args: : (<object 4796> (remainder %))
> def args: : (<object 4796> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4796> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4796> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4796> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4796> (integer int))
> def args: : (<object 4796> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4796> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4796> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4796> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4796> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4796> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4796> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4796> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4796> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4796> ((true? x) x))
> def args: : (<object 4796> ((false? x) (not x)))
> def args: : (<object 4796> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4796> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4796> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4796> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4796> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4796> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4796> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4796> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4796> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4796> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4796> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4796> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4796> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4796> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4796> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4796> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4796> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4796> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4796> ((stream-car s) (car s)))
> def args: : (<object 4796> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4796> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4796> ((stream-null? s) (null? s)))
> def args: : (<object 4796> ((code $s) $s))
> def args: : (<object 4796> ((member? x items) (valid? (member x items))))
> def args: : (<object 4796> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4796> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4796> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4796> (__string+ string+))
> def args: : (<object 4796> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4796> (__string string))
> def args: : (<object 4796> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4796> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4796> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4796> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4796> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4796> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4796> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4796> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4796> ((localNames env) (cadr env)))
> def args: : (<object 4796> ((localValues env) (caddr env)))
> def args: : (<object 4796> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4796> ((dot obj $name) (get $name obj)))
> def args: : (<object 4796> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4796> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> starting fib.sdef args: : (<object 12872> (env (if (null? @) # (car @))))
> 
> def args: : (<object 13070> (env (if (null? @) # (car @))))
> def args: : (<object 12463> ((fib n) (if (< n 2) n (+ (fib (- n 1)) (fib (- n 2))))))
> including fact.sdef args: : (<object 13311> (env (if (null? @) # (car @))))
> 
> def args: : (<object 13509> (env (if (null? @) # (car @))))
> starting fact.sdef args: : (<object 13965> (env (if (null? @) # (car @))))
> 
> def args: : (<object 14163> (env (if (null? @) # (car @))))
> including fib.sdef args: : (<object 14384> (env (if (null? @) # (car @))))
> 
> def args: : (<object 14582> (env (if (null? @) # (car @))))
> def args: : (<object 12463> ((fact n) (if (< n 2) 1 (* n (fact (- n 1))))))
> fact: fib(5) is def args: : (<object 15707> (env (if (null? @) # (car @))))
> 5def args: : (<object 15814> (env (if (null? @) # (car @))))
> 
> def args: : (<object 16012> (env (if (null? @) # (car @))))
> fact: fact(5) is def args: : (<object 16532> (env (if (null? @) # (car @))))
> 120def args: : (<object 16639> (env (if (null? @) # (car @))))
> 
> def args: : (<object 16837> (env (if (null? @) # (car @))))
> fact.s included - SHOULD ONLY SEE THIS ONCEdef args: : (<object 17067> (env (if (null? @) # (car @))))
> 
> def args: : (<object 17265> (env (if (null? @) # (car @))))
> def args: : (<object 12463> (x 0))
> def args: : (<object 12463> (result ))
> def args: : (<object 12463> (t (time)))
> def args: : (<object 17398> (env (if (null? @) # (car @))))
> def args: : (<object 1820987> (env (if (null? @) # (car @))))
> fib: fib(def args: : (<object 1821166> (env (if (null? @) # (car @))))
> 25def args: : (<object 1821273> (env (if (null? @) # (car @))))
> ) is def args: : (<object 1821380> (env (if (null? @) # (car @))))
> 75025def args: : (<object 1821487> (env (if (null? @) # (car @))))
> 
> def args: : (<object 1821685> (env (if (null? @) # (car @))))
> 2.661130def args: : (<object 1821913> (env (if (null? @) # (car @))))
>  secondsdef args: : (<object 1822020> (env (if (null? @) # (car @))))
> 
> def args: : (<object 1822218> (env (if (null? @) # (car @))))
> fib.s included - SHOULD ONLY SEE THIS ONCEdef args: : (<object 1822448> (env (if (null? @) # (car @))))
> 
> def args: : (<object 1822646> (env (if (null? @) # (car @))))
------------------------------------------
foreach.s
------------------------------------------
15a16,126
> def args: : (<object 4800> (else #t))
> def args: : (<object 4800> (__builtin __context))
> def args: : (<object 4800> (__main-lib this))
> def args: : (<object 4800> (nil? null?))
> def args: : (<object 4800> ((valid? x) (not (null? x))))
> def args: : (<object 4800> ((head x) (car x)))
> def args: : (<object 4800> ((tail x) (cdr x)))
> def args: : (<object 4800> ((join x y) (cons x y)))
> def args: : (<object 4800> (^ expt))
> def args: : (<object 4800> (** expt))
> def args: : (<object 4800> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4800> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4800> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4800> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4800> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4800> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4800> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4800> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4800> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4800> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4800> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4800> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4800> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4800> (__type type))
> def args: : (<object 4800> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4800> ((class x) (get (quote __label) x)))
> def args: : (<object 4800> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4800> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4800> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4800> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4800> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4800> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4800> (function? closure?))
> def args: : (<object 4800> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4800> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4800> ((dec x) (- x 1)))
> def args: : (<object 4800> ((inc x) (+ x 1)))
> def args: : (<object 4800> (__display display))
> def args: : (<object 4800> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4800> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4800> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4800> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4800> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4800> ((negative? n) (< n 0)))
> def args: : (<object 4800> ((positive? n) (> n 0)))
> def args: : (<object 4800> ((newline) (println)))
> def args: : (<object 4800> (remainder %))
> def args: : (<object 4800> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4800> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4800> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4800> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4800> (integer int))
> def args: : (<object 4800> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4800> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4800> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4800> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4800> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4800> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4800> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4800> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4800> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4800> ((true? x) x))
> def args: : (<object 4800> ((false? x) (not x)))
> def args: : (<object 4800> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4800> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4800> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4800> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4800> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4800> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4800> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4800> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4800> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4800> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4800> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4800> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4800> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4800> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4800> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4800> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4800> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4800> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4800> ((stream-car s) (car s)))
> def args: : (<object 4800> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4800> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4800> ((stream-null? s) (null? s)))
> def args: : (<object 4800> ((code $s) $s))
> def args: : (<object 4800> ((member? x items) (valid? (member x items))))
> def args: : (<object 4800> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4800> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4800> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4800> (__string+ string+))
> def args: : (<object 4800> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4800> (__string string))
> def args: : (<object 4800> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4800> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4800> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4800> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4800> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4800> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4800> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4800> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4800> ((localNames env) (cadr env)))
> def args: : (<object 4800> ((localValues env) (caddr env)))
> def args: : (<object 4800> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4800> ((dot obj $name) (get $name obj)))
> def args: : (<object 4800> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4800> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12467> ((foreach # $v items $body) (while (valid? items) (set $v (car items) #) (eval $body #) (set (quote items) (cdr items)))))
> def args: : (<object 12467> (i))
> def args: : (<object 12467> (a (array 1 2 3)))
------------------------------------------
for.s
------------------------------------------
34,43c34,146
< the value of i is 1
< the value of i is 3
< the value of i is 5
< the value of i is 7
< the value of i is 9
< the value of i is 1
< the value of i is 3
< the value of i is 5
< the value of i is 7
< the value of i is 9
---
> def args: : (<object 4796> (else #t))
> def args: : (<object 4796> (__builtin __context))
> def args: : (<object 4796> (__main-lib this))
> def args: : (<object 4796> (nil? null?))
> def args: : (<object 4796> ((valid? x) (not (null? x))))
> def args: : (<object 4796> ((head x) (car x)))
> def args: : (<object 4796> ((tail x) (cdr x)))
> def args: : (<object 4796> ((join x y) (cons x y)))
> def args: : (<object 4796> (^ expt))
> def args: : (<object 4796> (** expt))
> def args: : (<object 4796> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4796> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4796> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4796> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4796> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4796> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4796> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4796> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4796> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4796> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4796> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4796> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4796> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4796> (__type type))
> def args: : (<object 4796> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4796> ((class x) (get (quote __label) x)))
> def args: : (<object 4796> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4796> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4796> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4796> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4796> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4796> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4796> (function? closure?))
> def args: : (<object 4796> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4796> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4796> ((dec x) (- x 1)))
> def args: : (<object 4796> ((inc x) (+ x 1)))
> def args: : (<object 4796> (__display display))
> def args: : (<object 4796> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4796> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4796> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4796> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4796> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4796> ((negative? n) (< n 0)))
> def args: : (<object 4796> ((positive? n) (> n 0)))
> def args: : (<object 4796> ((newline) (println)))
> def args: : (<object 4796> (remainder %))
> def args: : (<object 4796> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4796> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4796> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4796> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4796> (integer int))
> def args: : (<object 4796> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4796> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4796> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4796> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4796> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4796> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4796> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4796> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4796> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4796> ((true? x) x))
> def args: : (<object 4796> ((false? x) (not x)))
> def args: : (<object 4796> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4796> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4796> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4796> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4796> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4796> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4796> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4796> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4796> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4796> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4796> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4796> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4796> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4796> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4796> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4796> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4796> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4796> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4796> ((stream-car s) (car s)))
> def args: : (<object 4796> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4796> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4796> ((stream-null? s) (null? s)))
> def args: : (<object 4796> ((code $s) $s))
> def args: : (<object 4796> ((member? x items) (valid? (member x items))))
> def args: : (<object 4796> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4796> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4796> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4796> (__string+ string+))
> def args: : (<object 4796> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4796> (__string string))
> def args: : (<object 4796> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4796> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4796> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4796> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4796> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4796> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4796> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4796> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4796> ((localNames env) (cadr env)))
> def args: : (<object 4796> ((localValues env) (caddr env)))
> def args: : (<object 4796> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4796> ((dot obj $name) (get $name obj)))
> def args: : (<object 4796> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4796> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12463> (i 0))
> def args: : (<object 12463> ((for # init $test $increment $) (while (eval $test #) (evalList $ #) (eval $increment #))))
> def args: : (<object 12463> ((for2 # init $test $increment $) (define (iter env) (if (eval $test env) (begin (evalList $ env) (eval $increment env) (iter env)))) (iter #)))
> EXCEPTION: undefinedVariable
> file for.s,line 23: variable assign is undefined
------------------------------------------
f.s
------------------------------------------
20,22c20,215
< g(10) is 3628800
< f(10) is 3628800
< g(10) is 3628800
---
> def args: : (<object 4794> (else #t))
> def args: : (<object 4794> (__builtin __context))
> def args: : (<object 4794> (__main-lib this))
> def args: : (<object 4794> (nil? null?))
> def args: : (<object 4794> ((valid? x) (not (null? x))))
> def args: : (<object 4794> ((head x) (car x)))
> def args: : (<object 4794> ((tail x) (cdr x)))
> def args: : (<object 4794> ((join x y) (cons x y)))
> def args: : (<object 4794> (^ expt))
> def args: : (<object 4794> (** expt))
> def args: : (<object 4794> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4794> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4794> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4794> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4794> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4794> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4794> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4794> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4794> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4794> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4794> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4794> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4794> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4794> (__type type))
> def args: : (<object 4794> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4794> ((class x) (get (quote __label) x)))
> def args: : (<object 4794> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4794> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4794> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4794> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4794> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4794> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4794> (function? closure?))
> def args: : (<object 4794> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4794> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4794> ((dec x) (- x 1)))
> def args: : (<object 4794> ((inc x) (+ x 1)))
> def args: : (<object 4794> (__display display))
> def args: : (<object 4794> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4794> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4794> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4794> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4794> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4794> ((negative? n) (< n 0)))
> def args: : (<object 4794> ((positive? n) (> n 0)))
> def args: : (<object 4794> ((newline) (println)))
> def args: : (<object 4794> (remainder %))
> def args: : (<object 4794> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4794> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4794> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4794> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4794> (integer int))
> def args: : (<object 4794> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4794> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4794> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4794> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4794> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4794> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4794> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4794> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4794> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4794> ((true? x) x))
> def args: : (<object 4794> ((false? x) (not x)))
> def args: : (<object 4794> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4794> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4794> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4794> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4794> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4794> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4794> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4794> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4794> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4794> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4794> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4794> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4794> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4794> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4794> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4794> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4794> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4794> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4794> ((stream-car s) (car s)))
> def args: : (<object 4794> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4794> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4794> ((stream-null? s) (null? s)))
> def args: : (<object 4794> ((code $s) $s))
> def args: : (<object 4794> ((member? x items) (valid? (member x items))))
> def args: : (<object 4794> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4794> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4794> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4794> (__string+ string+))
> def args: : (<object 4794> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4794> (__string string))
> def args: : (<object 4794> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4794> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4794> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4794> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4794> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4794> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4794> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4794> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4794> ((localNames env) (cadr env)))
> def args: : (<object 4794> ((localValues env) (caddr env)))
> def args: : (<object 4794> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4794> ((dot obj $name) (get $name obj)))
> def args: : (<object 4794> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4794> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12461> ((g n) (define total 1) (while (> n 1) (set! total (* total n)) (set! n (- n 1))) total))
> def args: : (<object 12461> (x 10))
> def args: : (<object 12805> (total 1))
> def args: : (<object 12855> (env (if (null? @) # (car @))))
> def args: : (<object 12925> (env (if (null? @) # (car @))))
> def args: : (<object 12998> (env (if (null? @) # (car @))))
> def args: : (<object 13068> (env (if (null? @) # (car @))))
> def args: : (<object 13141> (env (if (null? @) # (car @))))
> def args: : (<object 13211> (env (if (null? @) # (car @))))
> def args: : (<object 13284> (env (if (null? @) # (car @))))
> def args: : (<object 13354> (env (if (null? @) # (car @))))
> def args: : (<object 13427> (env (if (null? @) # (car @))))
> def args: : (<object 13497> (env (if (null? @) # (car @))))
> def args: : (<object 13570> (env (if (null? @) # (car @))))
> def args: : (<object 13640> (env (if (null? @) # (car @))))
> def args: : (<object 13713> (env (if (null? @) # (car @))))
> def args: : (<object 13783> (env (if (null? @) # (car @))))
> def args: : (<object 13856> (env (if (null? @) # (car @))))
> def args: : (<object 13926> (env (if (null? @) # (car @))))
> def args: : (<object 13999> (env (if (null? @) # (car @))))
> def args: : (<object 14069> (env (if (null? @) # (car @))))
> g(def args: : (<object 14226> (env (if (null? @) # (car @))))
> 10def args: : (<object 14333> (env (if (null? @) # (car @))))
> ) is def args: : (<object 14440> (env (if (null? @) # (car @))))
> 3628800def args: : (<object 14547> (env (if (null? @) # (car @))))
> 
> def args: : (<object 14654> (env (if (null? @) # (car @))))
> def args: : (<object 12461> ((f n) (define result) (if (< n 2) (set (quote result) 1) (begin (define rest (f (- n 1))) (set! result (* n rest)))) result))
> def args: : (<object 12461> (x 10))
> def args: : (<object 14793> (result))
> def args: : (<object 14793> (rest (f (- n 1))))
> def args: : (<object 14856> (result))
> def args: : (<object 14856> (rest (f (- n 1))))
> def args: : (<object 14919> (result))
> def args: : (<object 14919> (rest (f (- n 1))))
> def args: : (<object 14982> (result))
> def args: : (<object 14982> (rest (f (- n 1))))
> def args: : (<object 15045> (result))
> def args: : (<object 15045> (rest (f (- n 1))))
> def args: : (<object 15108> (result))
> def args: : (<object 15108> (rest (f (- n 1))))
> def args: : (<object 15171> (result))
> def args: : (<object 15171> (rest (f (- n 1))))
> def args: : (<object 15234> (result))
> def args: : (<object 15234> (rest (f (- n 1))))
> def args: : (<object 15297> (result))
> def args: : (<object 15297> (rest (f (- n 1))))
> def args: : (<object 15360> (result))
> def args: : (<object 15443> (env (if (null? @) # (car @))))
> def args: : (<object 15533> (env (if (null? @) # (car @))))
> def args: : (<object 15623> (env (if (null? @) # (car @))))
> def args: : (<object 15713> (env (if (null? @) # (car @))))
> def args: : (<object 15803> (env (if (null? @) # (car @))))
> def args: : (<object 15893> (env (if (null? @) # (car @))))
> def args: : (<object 15983> (env (if (null? @) # (car @))))
> def args: : (<object 16073> (env (if (null? @) # (car @))))
> def args: : (<object 16163> (env (if (null? @) # (car @))))
> f(def args: : (<object 16317> (env (if (null? @) # (car @))))
> 10def args: : (<object 16424> (env (if (null? @) # (car @))))
> ) is def args: : (<object 16531> (env (if (null? @) # (car @))))
> 3628800def args: : (<object 16638> (env (if (null? @) # (car @))))
> 
> def args: : (<object 16745> (env (if (null? @) # (car @))))
> def args: : (<object 16865> (total 1))
> def args: : (<object 16915> (env (if (null? @) # (car @))))
> def args: : (<object 16985> (env (if (null? @) # (car @))))
> def args: : (<object 17058> (env (if (null? @) # (car @))))
> def args: : (<object 17128> (env (if (null? @) # (car @))))
> def args: : (<object 17201> (env (if (null? @) # (car @))))
> def args: : (<object 17271> (env (if (null? @) # (car @))))
> def args: : (<object 17344> (env (if (null? @) # (car @))))
> def args: : (<object 17414> (env (if (null? @) # (car @))))
> def args: : (<object 17487> (env (if (null? @) # (car @))))
> def args: : (<object 17557> (env (if (null? @) # (car @))))
> def args: : (<object 17630> (env (if (null? @) # (car @))))
> def args: : (<object 17700> (env (if (null? @) # (car @))))
> def args: : (<object 17773> (env (if (null? @) # (car @))))
> def args: : (<object 17843> (env (if (null? @) # (car @))))
> def args: : (<object 17916> (env (if (null? @) # (car @))))
> def args: : (<object 17986> (env (if (null? @) # (car @))))
> def args: : (<object 18059> (env (if (null? @) # (car @))))
> def args: : (<object 18129> (env (if (null? @) # (car @))))
> g(def args: : (<object 18286> (env (if (null? @) # (car @))))
> 10def args: : (<object 18393> (env (if (null? @) # (car @))))
> ) is def args: : (<object 18500> (env (if (null? @) # (car @))))
> 3628800def args: : (<object 18607> (env (if (null? @) # (car @))))
> 
> def args: : (<object 18714> (env (if (null? @) # (car @))))
------------------------------------------
function.s
------------------------------------------
38c38,155
< first load and go...
---
> def args: : (<object 4801> (else #t))
> def args: : (<object 4801> (__builtin __context))
> def args: : (<object 4801> (__main-lib this))
> def args: : (<object 4801> (nil? null?))
> def args: : (<object 4801> ((valid? x) (not (null? x))))
> def args: : (<object 4801> ((head x) (car x)))
> def args: : (<object 4801> ((tail x) (cdr x)))
> def args: : (<object 4801> ((join x y) (cons x y)))
> def args: : (<object 4801> (^ expt))
> def args: : (<object 4801> (** expt))
> def args: : (<object 4801> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4801> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4801> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4801> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4801> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4801> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4801> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4801> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4801> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4801> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4801> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4801> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4801> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4801> (__type type))
> def args: : (<object 4801> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4801> ((class x) (get (quote __label) x)))
> def args: : (<object 4801> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4801> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4801> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4801> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4801> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4801> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4801> (function? closure?))
> def args: : (<object 4801> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4801> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4801> ((dec x) (- x 1)))
> def args: : (<object 4801> ((inc x) (+ x 1)))
> def args: : (<object 4801> (__display display))
> def args: : (<object 4801> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4801> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4801> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4801> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4801> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4801> ((negative? n) (< n 0)))
> def args: : (<object 4801> ((positive? n) (> n 0)))
> def args: : (<object 4801> ((newline) (println)))
> def args: : (<object 4801> (remainder %))
> def args: : (<object 4801> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4801> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4801> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4801> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4801> (integer int))
> def args: : (<object 4801> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4801> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4801> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4801> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4801> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4801> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4801> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4801> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4801> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4801> ((true? x) x))
> def args: : (<object 4801> ((false? x) (not x)))
> def args: : (<object 4801> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4801> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4801> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4801> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4801> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4801> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4801> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4801> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4801> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4801> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4801> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4801> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4801> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4801> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4801> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4801> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4801> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4801> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4801> ((stream-car s) (car s)))
> def args: : (<object 4801> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4801> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4801> ((stream-null? s) (null? s)))
> def args: : (<object 4801> ((code $s) $s))
> def args: : (<object 4801> ((member? x items) (valid? (member x items))))
> def args: : (<object 4801> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4801> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4801> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4801> (__string+ string+))
> def args: : (<object 4801> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4801> (__string string))
> def args: : (<object 4801> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4801> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4801> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4801> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4801> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4801> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4801> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4801> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4801> ((localNames env) (cadr env)))
> def args: : (<object 4801> ((localValues env) (caddr env)))
> def args: : (<object 4801> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4801> ((dot obj $name) (get $name obj)))
> def args: : (<object 4801> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4801> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12468> ((define-function name params body env) (define donor (lambda  1)) (set! name name donor) (set! parameters params donor) (set! code body donor) (addSymbol name donor env)))
> def args: : (<object 12468> ((loadAndgo # $name params values $body) (define f (define-function $name params $body #)) (apply f values)))
> first load and go...def args: : (<object 13068> (env (if (null? @) # (car @))))
> 
> def args: : (<object 13266> (env (if (null? @) # (car @))))
> def args: : (<object 13383> (f (define-function $name params $body #)))
> def args: : (<object 13418> (donor (lambda  1)))
> def args: : (<object 13477> (env (if (null? @) # (car @))))
> def args: : (<object 13545> (env (if (null? @) # (car @))))
> def args: : (<object 13613> (env (if (null? @) # (car @))))
44c161,168
< second load and go...
---
> second load and go...def args: : (<object 14097> (env (if (null? @) # (car @))))
> 
> def args: : (<object 14295> (env (if (null? @) # (car @))))
> def args: : (<object 14412> (f (define-function $name params $body #)))
> def args: : (<object 14447> (donor (lambda  1)))
> def args: : (<object 14506> (env (if (null? @) # (car @))))
> def args: : (<object 14574> (env (if (null? @) # (car @))))
> def args: : (<object 14642> (env (if (null? @) # (car @))))
49c173,179
< calling define-function directly...
---
> calling define-function directly...def args: : (<object 15067> (env (if (null? @) # (car @))))
> 
> def args: : (<object 15265> (env (if (null? @) # (car @))))
> def args: : (<object 15391> (donor (lambda  1)))
> def args: : (<object 15450> (env (if (null? @) # (car @))))
> def args: : (<object 15518> (env (if (null? @) # (car @))))
> def args: : (<object 15586> (env (if (null? @) # (car @))))
------------------------------------------
gc.s
------------------------------------------
13a14,123
> def args: : (<object 4795> (else #t))
> def args: : (<object 4795> (__builtin __context))
> def args: : (<object 4795> (__main-lib this))
> def args: : (<object 4795> (nil? null?))
> def args: : (<object 4795> ((valid? x) (not (null? x))))
> def args: : (<object 4795> ((head x) (car x)))
> def args: : (<object 4795> ((tail x) (cdr x)))
> def args: : (<object 4795> ((join x y) (cons x y)))
> def args: : (<object 4795> (^ expt))
> def args: : (<object 4795> (** expt))
> def args: : (<object 4795> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4795> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4795> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4795> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4795> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4795> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4795> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4795> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4795> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4795> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4795> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4795> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4795> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4795> (__type type))
> def args: : (<object 4795> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4795> ((class x) (get (quote __label) x)))
> def args: : (<object 4795> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4795> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4795> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4795> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4795> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4795> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4795> (function? closure?))
> def args: : (<object 4795> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4795> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4795> ((dec x) (- x 1)))
> def args: : (<object 4795> ((inc x) (+ x 1)))
> def args: : (<object 4795> (__display display))
> def args: : (<object 4795> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4795> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4795> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4795> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4795> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4795> ((negative? n) (< n 0)))
> def args: : (<object 4795> ((positive? n) (> n 0)))
> def args: : (<object 4795> ((newline) (println)))
> def args: : (<object 4795> (remainder %))
> def args: : (<object 4795> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4795> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4795> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4795> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4795> (integer int))
> def args: : (<object 4795> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4795> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4795> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4795> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4795> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4795> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4795> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4795> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4795> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4795> ((true? x) x))
> def args: : (<object 4795> ((false? x) (not x)))
> def args: : (<object 4795> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4795> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4795> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4795> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4795> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4795> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4795> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4795> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4795> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4795> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4795> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4795> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4795> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4795> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4795> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4795> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4795> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4795> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4795> ((stream-car s) (car s)))
> def args: : (<object 4795> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4795> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4795> ((stream-null? s) (null? s)))
> def args: : (<object 4795> ((code $s) $s))
> def args: : (<object 4795> ((member? x items) (valid? (member x items))))
> def args: : (<object 4795> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4795> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4795> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4795> (__string+ string+))
> def args: : (<object 4795> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4795> (__string string))
> def args: : (<object 4795> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4795> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4795> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4795> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4795> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4795> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4795> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4795> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4795> ((localNames env) (cadr env)))
> def args: : (<object 4795> ((localValues env) (caddr env)))
> def args: : (<object 4795> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4795> ((dot obj $name) (get $name obj)))
> def args: : (<object 4795> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4795> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12462> ((f x) (define y (* x x)) (inspect f) (gc) (inspect x) (inspect y)))
> def args: : (<object 12579> (y (* x x)))
15d124
< gc:1, 2087805 cells available
------------------------------------------
g.s
------------------------------------------
16c16,150
< g(10) is 3628800
---
> def args: : (<object 4794> (else #t))
> def args: : (<object 4794> (__builtin __context))
> def args: : (<object 4794> (__main-lib this))
> def args: : (<object 4794> (nil? null?))
> def args: : (<object 4794> ((valid? x) (not (null? x))))
> def args: : (<object 4794> ((head x) (car x)))
> def args: : (<object 4794> ((tail x) (cdr x)))
> def args: : (<object 4794> ((join x y) (cons x y)))
> def args: : (<object 4794> (^ expt))
> def args: : (<object 4794> (** expt))
> def args: : (<object 4794> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4794> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4794> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4794> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4794> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4794> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4794> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4794> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4794> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4794> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4794> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4794> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4794> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4794> (__type type))
> def args: : (<object 4794> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4794> ((class x) (get (quote __label) x)))
> def args: : (<object 4794> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4794> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4794> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4794> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4794> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4794> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4794> (function? closure?))
> def args: : (<object 4794> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4794> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4794> ((dec x) (- x 1)))
> def args: : (<object 4794> ((inc x) (+ x 1)))
> def args: : (<object 4794> (__display display))
> def args: : (<object 4794> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4794> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4794> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4794> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4794> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4794> ((negative? n) (< n 0)))
> def args: : (<object 4794> ((positive? n) (> n 0)))
> def args: : (<object 4794> ((newline) (println)))
> def args: : (<object 4794> (remainder %))
> def args: : (<object 4794> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4794> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4794> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4794> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4794> (integer int))
> def args: : (<object 4794> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4794> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4794> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4794> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4794> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4794> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4794> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4794> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4794> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4794> ((true? x) x))
> def args: : (<object 4794> ((false? x) (not x)))
> def args: : (<object 4794> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4794> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4794> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4794> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4794> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4794> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4794> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4794> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4794> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4794> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4794> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4794> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4794> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4794> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4794> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4794> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4794> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4794> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4794> ((stream-car s) (car s)))
> def args: : (<object 4794> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4794> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4794> ((stream-null? s) (null? s)))
> def args: : (<object 4794> ((code $s) $s))
> def args: : (<object 4794> ((member? x items) (valid? (member x items))))
> def args: : (<object 4794> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4794> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4794> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4794> (__string+ string+))
> def args: : (<object 4794> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4794> (__string string))
> def args: : (<object 4794> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4794> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4794> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4794> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4794> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4794> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4794> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4794> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4794> ((localNames env) (cadr env)))
> def args: : (<object 4794> ((localValues env) (caddr env)))
> def args: : (<object 4794> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4794> ((dot obj $name) (get $name obj)))
> def args: : (<object 4794> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4794> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12461> ((g n) (define total 1) (while (> n 1) (set! total (* total n)) (set! n (- n 1))) total))
> def args: : (<object 12461> (x 10))
> def args: : (<object 12625> (total 1))
> def args: : (<object 12675> (env (if (null? @) # (car @))))
> def args: : (<object 12745> (env (if (null? @) # (car @))))
> def args: : (<object 12818> (env (if (null? @) # (car @))))
> def args: : (<object 12888> (env (if (null? @) # (car @))))
> def args: : (<object 12961> (env (if (null? @) # (car @))))
> def args: : (<object 13031> (env (if (null? @) # (car @))))
> def args: : (<object 13104> (env (if (null? @) # (car @))))
> def args: : (<object 13174> (env (if (null? @) # (car @))))
> def args: : (<object 13247> (env (if (null? @) # (car @))))
> def args: : (<object 13317> (env (if (null? @) # (car @))))
> def args: : (<object 13390> (env (if (null? @) # (car @))))
> def args: : (<object 13460> (env (if (null? @) # (car @))))
> def args: : (<object 13533> (env (if (null? @) # (car @))))
> def args: : (<object 13603> (env (if (null? @) # (car @))))
> def args: : (<object 13676> (env (if (null? @) # (car @))))
> def args: : (<object 13746> (env (if (null? @) # (car @))))
> def args: : (<object 13819> (env (if (null? @) # (car @))))
> def args: : (<object 13889> (env (if (null? @) # (car @))))
> g(def args: : (<object 14046> (env (if (null? @) # (car @))))
> 10def args: : (<object 14153> (env (if (null? @) # (car @))))
> ) is def args: : (<object 14260> (env (if (null? @) # (car @))))
> 3628800def args: : (<object 14367> (env (if (null? @) # (car @))))
> 
> def args: : (<object 14474> (env (if (null? @) # (car @))))
------------------------------------------
heapsort.s
------------------------------------------
1c1,2
< include("basics");
---
> (define (heap items op)
>     (define size (length items))
3,23c4,26
< function heap(items,op)
<     {
<     var size = length(items);
< 
<     function leftChild(x) { 2 * x + 1; }
<     function rightChild(x) { 2 * x + 2; }
<     function deleteMin()
<         {
<         var temp = items[0];
<         items[0] = items[size - 1];
<         items[size - 1] = temp;
<         size = size - 1;
<         heapify(0);
<         temp;
<         }
<     function heapify(root)
<         {
<         var extreme;
<         var newRoot;
< 
<         if (leaf?(root)) { return :ok; }
---
>     (define (leftChild x) (+ (* 2 x) 1))
>     (define (rightChild x) (+ (* 2 x) 2))
>     (define (deleteExtreme)
>         (define temp (getElement items 0))
>         (setElement items 0 (getElement items (- size 1)))
>         (setElement items (- size 1) temp)
>         (set! size (- size 1))
>         (heapify 0)
>         temp
>         )
> 
>     (define (heapify root)
>         (define extreme nil)
>         (define newRoot nil)
> 
>         (if (leaf? root)
>             (begin
>                 (inspect root)
>                 (println "it's a leaf")
>                 (println "heapify level is " __level)
>                 (return 'ok)
>                 (inspect root))
>             )
25,92c28
<         extreme = findExtremalChild(root);
< 
<         if (extreme == items[root]) { return :ok; }
< 
<         if (extreme == items[leftChild(root)])
<             {
<             newRoot = leftChild(root);
<             }
<         else
<             {
<             newRoot = rightChild(root);
<             }
<         items[newRoot] = items[root];
<         items[root] = extreme;
<         heapify(newRoot);
<         }
<     function findExtremalChild(root)
<         {
<         var extreme;
< 
<         extreme = extremal(op,items[root],items[leftChild(root)]);
< 
<         if (rightChild(root) >= size)
<             {
<             extreme;
<             }
<         else
<             {
<             extremal(op,extreme,items[rightChild(root)]);
<             }
<         }
<     function build-heap()
<         {
<         var i;
< 
<         for (i = size - 1, i >= 0, i = i - 1)
<             {
<             heapify(i);
<             }
<         }
< 
<     function leaf?(x)
<         {
<         leftChild(x) >= size;
<         }
< 
<     build-heap();
<     this;
<     }
< 
< function heap-sort(items,op)
<     {
<     var i;
<     var h;
< 
<     h = heap(items,op);
< 
<     while (h . size > 0)
<         {
<         print(h . deleteMin());
<         if (h . size > 0,print(" "));
<         }
<     }
< 
< function extremal(op,a,b)
<     {
<     if (a op b,a,b);
<     }
---
>         (set! extreme (findExtremalChild root))
94c30
< var a = array(3,6,3,9,4,10,5,29,4,6,0,20,25,16,88,0,31);
---
>         (if (= extreme (getElement items root)) (return 'ok))
96,97c32,96
< heap-sort(a,>);
< println("\n");
---
>         (if (= extreme (getElement items (leftChild root)))
>             (set! newRoot (leftChild root))
>             (set! newRoot (rightChild root))
>             )
> 
>         (setElement items newRoot (getElement items root))
>         (setElement items root extreme)
> 
>         (heapify newRoot)
>         )
> 
>     (define (findExtremalChild root)
>         (define extreme nil)
>         (set! extreme 
>             (extremal op
>                 (getElement items root)
>                 (getElement items (leftChild root))))
> 
>         (if (>= (rightChild root) size)
>             extreme
>             (extremal op extreme (getElement items (rightChild root)))
>             )
>         )
> 
>     (define (build-heap)
>         (for (define i (- size 1)) (inspect (>= i 0)) (inspect (-- i))
>             (println "heapifying index " i)
>             (println "buildheap level is " __level)
>             (heapify i)
>             (inspect r)
>             (println "index " i " has been heapified")
>             )
>         (inspect i)
>         (println "root is now " (getElement items 0))
>         )
> 
>     (define (leaf? x) (>= (leftChild x) size))
> 
>     (println "about to build-heap...")
>     (build-heap)
>     (println "done with build-heap")
>     this
>     )
> 
> (define (heap-sort items op)
>     (define h nil)
> 
>     (set! h (heap items op))
> 
>     ;(while (> (h 'size) 0)
>     ;    (print ((h 'deleteExtreme)))
>     ;    (if (> (get 'size h) 0) (print " "))
>     ;    )
>     ;(println "\n")
>     )
> 
> (define (extremal op a b)
>     (if (op a b) a b)
>     )
> 
> (define a (array 3 6 3 9 4 10 5 29 4 6 0 20 25 16 88 0 31))
> 
> (println "before heapsorting: " a)
> (heap-sort a >)
> (println "after heapsorting:  " a)
99,100c98
< inspect(a);
< inspect(extremal . parameters);
---
> (inspect (get* extremal 'parameters))
102c100,253
< 88 31 29 25 20 16 10 9 6 6 5 4 4 3 3 0 0
---
> def args: : (<object 4801> (else #t))
> def args: : (<object 4801> (__builtin __context))
> def args: : (<object 4801> (__main-lib this))
> def args: : (<object 4801> (nil? null?))
> def args: : (<object 4801> ((valid? x) (not (null? x))))
> def args: : (<object 4801> ((head x) (car x)))
> def args: : (<object 4801> ((tail x) (cdr x)))
> def args: : (<object 4801> ((join x y) (cons x y)))
> def args: : (<object 4801> (^ expt))
> def args: : (<object 4801> (** expt))
> def args: : (<object 4801> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4801> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4801> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4801> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4801> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4801> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4801> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4801> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4801> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4801> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4801> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4801> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4801> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4801> (__type type))
> def args: : (<object 4801> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4801> ((class x) (get (quote __label) x)))
> def args: : (<object 4801> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4801> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4801> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4801> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4801> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4801> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4801> (function? closure?))
> def args: : (<object 4801> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4801> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4801> ((dec x) (- x 1)))
> def args: : (<object 4801> ((inc x) (+ x 1)))
> def args: : (<object 4801> (__display display))
> def args: : (<object 4801> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4801> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4801> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4801> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4801> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4801> ((negative? n) (< n 0)))
> def args: : (<object 4801> ((positive? n) (> n 0)))
> def args: : (<object 4801> ((newline) (println)))
> def args: : (<object 4801> (remainder %))
> def args: : (<object 4801> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4801> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4801> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4801> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4801> (integer int))
> def args: : (<object 4801> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4801> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4801> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4801> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4801> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4801> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4801> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4801> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4801> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4801> ((true? x) x))
> def args: : (<object 4801> ((false? x) (not x)))
> def args: : (<object 4801> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4801> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4801> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4801> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4801> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4801> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4801> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4801> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4801> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4801> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4801> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4801> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4801> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4801> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4801> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4801> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4801> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4801> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4801> ((stream-car s) (car s)))
> def args: : (<object 4801> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4801> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4801> ((stream-null? s) (null? s)))
> def args: : (<object 4801> ((code $s) $s))
> def args: : (<object 4801> ((member? x items) (valid? (member x items))))
> def args: : (<object 4801> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4801> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4801> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4801> (__string+ string+))
> def args: : (<object 4801> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4801> (__string string))
> def args: : (<object 4801> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4801> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4801> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4801> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4801> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4801> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4801> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4801> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4801> ((localNames env) (cadr env)))
> def args: : (<object 4801> ((localValues env) (caddr env)))
> def args: : (<object 4801> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4801> ((dot obj $name) (get $name obj)))
> def args: : (<object 4801> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4801> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12468> ((heap items op) (define size (length items)) (define (leftChild x) (+ (* 2 x) 1)) (define (rightChild x) (+ (* 2 x) 2)) (define (deleteExtreme) (define temp (getElement items 0)) (setElement items 0 (getElement items (- size 1))) (setElement items (- size 1) temp) (set! size (- size 1)) (heapify 0) temp) (define (heapify root) (define extreme ) (define newRoot ) (if (leaf? root) (begin (inspect root) (println "it's a leaf") (println "heapify level is " __level) (return (quote ok)) (inspect root))) (set! extreme (findExtremalChild root)) (if (= extreme (getElement items root)) (return (quote ok))) (if (= extreme (getElement items (leftChild root))) (set! newRoot (leftChild root)) (set! newRoot (rightChild root))) (setElement items newRoot (getElement items root)) (setElement items root extreme) (heapify newRoot)) (define (findExtremalChild root) (define extreme ) (set! extreme (extremal op (getElement items root) (getElement items (leftChild root)))) (if (>= (rightChild root) size) extreme (extremal op extreme (getElement items (rightChild root))))) (define (build-heap) (for (define i (- size 1)) (inspect (>= i 0)) (inspect (-- i)) (println "heapifying index " i) (println "buildheap level is " __level) (heapify i) (inspect r) (println "index " i " has been heapified")) (inspect i) (println "root is now " (getElement items 0))) (define (leaf? x) (>= (leftChild x) size)) (println "about to build-heap...") (build-heap) (println "done with build-heap") this))
> def args: : (<object 12468> ((heap-sort items op) (define h ) (set! h (heap items op))))
> def args: : (<object 12468> ((extremal op a b) (if (op a b) a b)))
> def args: : (<object 12468> (a (array 3 6 3 9 4 10 5 29 4 6 0 20 25 16 88 0 31)))
> before heapsorting: def args: : (<object 13725> (env (if (null? @) # (car @))))
> [3,6,3,9,4,10,5,29,4,6,0,20,25,16,88,0,31]def args: : (<object 13832> (env (if (null? @) # (car @))))
> 
> def args: : (<object 14030> (env (if (null? @) # (car @))))
> def args: : (<object 14142> (h ))
> def args: : (<object 14186> (size (length items)))
> def args: : (<object 14186> ((leftChild x) (+ (* 2 x) 1)))
> def args: : (<object 14186> ((rightChild x) (+ (* 2 x) 2)))
> def args: : (<object 14186> ((deleteExtreme) (define temp (getElement items 0)) (setElement items 0 (getElement items (- size 1))) (setElement items (- size 1) temp) (set! size (- size 1)) (heapify 0) temp))
> def args: : (<object 14186> ((heapify root) (define extreme ) (define newRoot ) (if (leaf? root) (begin (inspect root) (println "it's a leaf") (println "heapify level is " __level) (return (quote ok)) (inspect root))) (set! extreme (findExtremalChild root)) (if (= extreme (getElement items root)) (return (quote ok))) (if (= extreme (getElement items (leftChild root))) (set! newRoot (leftChild root)) (set! newRoot (rightChild root))) (setElement items newRoot (getElement items root)) (setElement items root extreme) (heapify newRoot)))
> def args: : (<object 14186> ((findExtremalChild root) (define extreme ) (set! extreme (extremal op (getElement items root) (getElement items (leftChild root)))) (if (>= (rightChild root) size) extreme (extremal op extreme (getElement items (rightChild root))))))
> def args: : (<object 14186> ((build-heap) (for (define i (- size 1)) (inspect (>= i 0)) (inspect (-- i)) (println "heapifying index " i) (println "buildheap level is " __level) (heapify i) (inspect r) (println "index " i " has been heapified")) (inspect i) (println "root is now " (getElement items 0))))
> def args: : (<object 14186> ((leaf? x) (>= (leftChild x) size)))
> about to build-heap...def args: : (<object 14499> (env (if (null? @) # (car @))))
> 
> def args: : (<object 14697> (env (if (null? @) # (car @))))
> def args: : (<object 14807> (i (- size 1)))
> def args: : (<object 14855> (forresult ))
> (>= i 0) is #t
> heapifying index def args: : (<object 15109> (env (if (null? @) # (car @))))
> 16def args: : (<object 15216> (env (if (null? @) # (car @))))
> 
> def args: : (<object 15414> (env (if (null? @) # (car @))))
> buildheap level is def args: : (<object 15694> (env (if (null? @) # (car @))))
> 3def args: : (<object 15801> (env (if (null? @) # (car @))))
> 
> def args: : (<object 15999> (env (if (null? @) # (car @))))
> def args: : (<object 16167> (extreme ))
> def args: : (<object 16167> (newRoot ))
> root is 16
> it's a leafdef args: : (<object 16429> (env (if (null? @) # (car @))))
> 
> def args: : (<object 16627> (env (if (null? @) # (car @))))
> heapify level is def args: : (<object 16850> (env (if (null? @) # (car @))))
> 4def args: : (<object 16957> (env (if (null? @) # (car @))))
> 
> def args: : (<object 17155> (env (if (null? @) # (car @))))
> r is <object 17395>
>              __label  : throw
>                 code  : undefinedVariable
>                value  : "file heapsort.s,line 61: variable r is undefined"
>                trace  : 
104,105c255,256
< a is [0,0,3,3,4,4,5,6,6,9,10,16,20,25,29,31,88]
< extremal . parameters is (op,a,b)
---
> EXCEPTION: undefinedVariable
> file heapsort.s,line 61: variable r is undefined
------------------------------------------
hide.s
------------------------------------------
37,41c37,146
< EVALUATION ERROR: :restrictedAssignment
< hide.s,line 7: you are only allowed to assign to simple variables
< 4
< 13
< 13
---
> def args: : (<object 4797> (else #t))
> def args: : (<object 4797> (__builtin __context))
> def args: : (<object 4797> (__main-lib this))
> def args: : (<object 4797> (nil? null?))
> def args: : (<object 4797> ((valid? x) (not (null? x))))
> def args: : (<object 4797> ((head x) (car x)))
> def args: : (<object 4797> ((tail x) (cdr x)))
> def args: : (<object 4797> ((join x y) (cons x y)))
> def args: : (<object 4797> (^ expt))
> def args: : (<object 4797> (** expt))
> def args: : (<object 4797> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4797> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4797> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4797> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4797> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4797> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4797> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4797> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4797> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4797> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4797> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4797> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4797> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4797> (__type type))
> def args: : (<object 4797> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4797> ((class x) (get (quote __label) x)))
> def args: : (<object 4797> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4797> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4797> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4797> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4797> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4797> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4797> (function? closure?))
> def args: : (<object 4797> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4797> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4797> ((dec x) (- x 1)))
> def args: : (<object 4797> ((inc x) (+ x 1)))
> def args: : (<object 4797> (__display display))
> def args: : (<object 4797> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4797> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4797> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4797> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4797> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4797> ((negative? n) (< n 0)))
> def args: : (<object 4797> ((positive? n) (> n 0)))
> def args: : (<object 4797> ((newline) (println)))
> def args: : (<object 4797> (remainder %))
> def args: : (<object 4797> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4797> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4797> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4797> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4797> (integer int))
> def args: : (<object 4797> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4797> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4797> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4797> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4797> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4797> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4797> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4797> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4797> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4797> ((true? x) x))
> def args: : (<object 4797> ((false? x) (not x)))
> def args: : (<object 4797> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4797> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4797> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4797> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4797> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4797> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4797> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4797> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4797> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4797> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4797> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4797> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4797> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4797> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4797> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4797> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4797> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4797> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4797> ((stream-car s) (car s)))
> def args: : (<object 4797> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4797> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4797> ((stream-null? s) (null? s)))
> def args: : (<object 4797> ((code $s) $s))
> def args: : (<object 4797> ((member? x items) (valid? (member x items))))
> def args: : (<object 4797> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4797> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4797> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4797> (__string+ string+))
> def args: : (<object 4797> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4797> (__string string))
> def args: : (<object 4797> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4797> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4797> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4797> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4797> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4797> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4797> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4797> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4797> ((localNames env) (cadr env)))
> def args: : (<object 4797> ((localValues env) (caddr env)))
> def args: : (<object 4797> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4797> ((dot obj $name) (get $name obj)))
> def args: : (<object 4797> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4797> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> EXCEPTION: nonFunction
> file hide.s,line 1: attempted to call STRING as a function
------------------------------------------
hook2.s
------------------------------------------
16,18c16,125
< about to greet...
< intercepted! initializer is hello, world!
< hello, world!
---
> def args: : (<object 4798> (else #t))
> def args: : (<object 4798> (__builtin __context))
> def args: : (<object 4798> (__main-lib this))
> def args: : (<object 4798> (nil? null?))
> def args: : (<object 4798> ((valid? x) (not (null? x))))
> def args: : (<object 4798> ((head x) (car x)))
> def args: : (<object 4798> ((tail x) (cdr x)))
> def args: : (<object 4798> ((join x y) (cons x y)))
> def args: : (<object 4798> (^ expt))
> def args: : (<object 4798> (** expt))
> def args: : (<object 4798> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4798> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4798> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4798> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4798> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4798> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4798> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4798> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4798> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4798> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4798> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4798> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4798> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4798> (__type type))
> def args: : (<object 4798> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4798> ((class x) (get (quote __label) x)))
> def args: : (<object 4798> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4798> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4798> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4798> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4798> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4798> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4798> (function? closure?))
> def args: : (<object 4798> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4798> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4798> ((dec x) (- x 1)))
> def args: : (<object 4798> ((inc x) (+ x 1)))
> def args: : (<object 4798> (__display display))
> def args: : (<object 4798> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4798> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4798> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4798> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4798> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4798> ((negative? n) (< n 0)))
> def args: : (<object 4798> ((positive? n) (> n 0)))
> def args: : (<object 4798> ((newline) (println)))
> def args: : (<object 4798> (remainder %))
> def args: : (<object 4798> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4798> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4798> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4798> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4798> (integer int))
> def args: : (<object 4798> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4798> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4798> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4798> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4798> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4798> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4798> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4798> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4798> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4798> ((true? x) x))
> def args: : (<object 4798> ((false? x) (not x)))
> def args: : (<object 4798> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4798> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4798> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4798> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4798> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4798> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4798> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4798> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4798> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4798> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4798> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4798> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4798> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4798> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4798> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4798> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4798> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4798> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4798> ((stream-car s) (car s)))
> def args: : (<object 4798> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4798> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4798> ((stream-null? s) (null? s)))
> def args: : (<object 4798> ((code $s) $s))
> def args: : (<object 4798> ((member? x items) (valid? (member x items))))
> def args: : (<object 4798> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4798> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4798> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4798> (__string+ string+))
> def args: : (<object 4798> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4798> (__string string))
> def args: : (<object 4798> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4798> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4798> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4798> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4798> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4798> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4798> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4798> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4798> ((localNames env) (cadr env)))
> def args: : (<object 4798> ((localValues env) (caddr env)))
> def args: : (<object 4798> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4798> ((dot obj $name) (get $name obj)))
> def args: : (<object 4798> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4798> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> EXCEPTION: undefinedVariable
> file hook2.s,line 1: variable function is undefined
------------------------------------------
hook.s
------------------------------------------
15,17c15,124
< Intercepted!
< about to greet...
< hello, world!
---
> def args: : (<object 4797> (else #t))
> def args: : (<object 4797> (__builtin __context))
> def args: : (<object 4797> (__main-lib this))
> def args: : (<object 4797> (nil? null?))
> def args: : (<object 4797> ((valid? x) (not (null? x))))
> def args: : (<object 4797> ((head x) (car x)))
> def args: : (<object 4797> ((tail x) (cdr x)))
> def args: : (<object 4797> ((join x y) (cons x y)))
> def args: : (<object 4797> (^ expt))
> def args: : (<object 4797> (** expt))
> def args: : (<object 4797> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4797> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4797> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4797> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4797> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4797> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4797> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4797> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4797> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4797> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4797> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4797> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4797> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4797> (__type type))
> def args: : (<object 4797> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4797> ((class x) (get (quote __label) x)))
> def args: : (<object 4797> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4797> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4797> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4797> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4797> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4797> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4797> (function? closure?))
> def args: : (<object 4797> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4797> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4797> ((dec x) (- x 1)))
> def args: : (<object 4797> ((inc x) (+ x 1)))
> def args: : (<object 4797> (__display display))
> def args: : (<object 4797> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4797> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4797> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4797> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4797> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4797> ((negative? n) (< n 0)))
> def args: : (<object 4797> ((positive? n) (> n 0)))
> def args: : (<object 4797> ((newline) (println)))
> def args: : (<object 4797> (remainder %))
> def args: : (<object 4797> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4797> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4797> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4797> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4797> (integer int))
> def args: : (<object 4797> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4797> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4797> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4797> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4797> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4797> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4797> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4797> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4797> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4797> ((true? x) x))
> def args: : (<object 4797> ((false? x) (not x)))
> def args: : (<object 4797> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4797> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4797> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4797> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4797> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4797> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4797> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4797> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4797> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4797> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4797> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4797> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4797> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4797> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4797> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4797> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4797> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4797> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4797> ((stream-car s) (car s)))
> def args: : (<object 4797> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4797> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4797> ((stream-null? s) (null? s)))
> def args: : (<object 4797> ((code $s) $s))
> def args: : (<object 4797> ((member? x items) (valid? (member x items))))
> def args: : (<object 4797> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4797> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4797> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4797> (__string+ string+))
> def args: : (<object 4797> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4797> (__string string))
> def args: : (<object 4797> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4797> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4797> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4797> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4797> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4797> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4797> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4797> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4797> ((localNames env) (cadr env)))
> def args: : (<object 4797> ((localValues env) (caddr env)))
> def args: : (<object 4797> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4797> ((dot obj $name) (get $name obj)))
> def args: : (<object 4797> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4797> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> EXCEPTION: undefinedVariable
> file hook.s,line 1: variable function is undefined
------------------------------------------
if2.s
------------------------------------------
27c27,136
< three *is* less than 4!
---
> def args: : (<object 4796> (else #t))
> def args: : (<object 4796> (__builtin __context))
> def args: : (<object 4796> (__main-lib this))
> def args: : (<object 4796> (nil? null?))
> def args: : (<object 4796> ((valid? x) (not (null? x))))
> def args: : (<object 4796> ((head x) (car x)))
> def args: : (<object 4796> ((tail x) (cdr x)))
> def args: : (<object 4796> ((join x y) (cons x y)))
> def args: : (<object 4796> (^ expt))
> def args: : (<object 4796> (** expt))
> def args: : (<object 4796> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4796> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4796> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4796> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4796> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4796> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4796> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4796> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4796> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4796> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4796> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4796> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4796> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4796> (__type type))
> def args: : (<object 4796> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4796> ((class x) (get (quote __label) x)))
> def args: : (<object 4796> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4796> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4796> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4796> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4796> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4796> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4796> (function? closure?))
> def args: : (<object 4796> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4796> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4796> ((dec x) (- x 1)))
> def args: : (<object 4796> ((inc x) (+ x 1)))
> def args: : (<object 4796> (__display display))
> def args: : (<object 4796> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4796> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4796> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4796> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4796> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4796> ((negative? n) (< n 0)))
> def args: : (<object 4796> ((positive? n) (> n 0)))
> def args: : (<object 4796> ((newline) (println)))
> def args: : (<object 4796> (remainder %))
> def args: : (<object 4796> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4796> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4796> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4796> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4796> (integer int))
> def args: : (<object 4796> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4796> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4796> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4796> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4796> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4796> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4796> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4796> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4796> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4796> ((true? x) x))
> def args: : (<object 4796> ((false? x) (not x)))
> def args: : (<object 4796> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4796> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4796> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4796> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4796> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4796> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4796> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4796> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4796> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4796> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4796> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4796> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4796> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4796> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4796> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4796> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4796> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4796> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4796> ((stream-car s) (car s)))
> def args: : (<object 4796> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4796> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4796> ((stream-null? s) (null? s)))
> def args: : (<object 4796> ((code $s) $s))
> def args: : (<object 4796> ((member? x items) (valid? (member x items))))
> def args: : (<object 4796> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4796> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4796> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4796> (__string+ string+))
> def args: : (<object 4796> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4796> (__string string))
> def args: : (<object 4796> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4796> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4796> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4796> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4796> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4796> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4796> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4796> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4796> ((localNames env) (cadr env)))
> def args: : (<object 4796> ((localValues env) (caddr env)))
> def args: : (<object 4796> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4796> ((dot obj $name) (get $name obj)))
> def args: : (<object 4796> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4796> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> EXCEPTION: undefinedVariable
> file if2.s,line 1: variable var is undefined
------------------------------------------
if3.s
------------------------------------------
47,63c47,156
< EVALUATION ERROR: :argumentCountError
< if3.s,line 8: too many arguments to if
< the test is true
< naughts!
< the test is false
< the test is true
< onesies!
< the test is false
< the test is false
< the test is true
< binary!
< the test is false
< the test is false
< the test is false
< the test is true
< trinary!
< call if with too many arguments
---
> def args: : (<object 4796> (else #t))
> def args: : (<object 4796> (__builtin __context))
> def args: : (<object 4796> (__main-lib this))
> def args: : (<object 4796> (nil? null?))
> def args: : (<object 4796> ((valid? x) (not (null? x))))
> def args: : (<object 4796> ((head x) (car x)))
> def args: : (<object 4796> ((tail x) (cdr x)))
> def args: : (<object 4796> ((join x y) (cons x y)))
> def args: : (<object 4796> (^ expt))
> def args: : (<object 4796> (** expt))
> def args: : (<object 4796> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4796> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4796> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4796> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4796> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4796> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4796> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4796> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4796> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4796> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4796> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4796> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4796> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4796> (__type type))
> def args: : (<object 4796> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4796> ((class x) (get (quote __label) x)))
> def args: : (<object 4796> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4796> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4796> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4796> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4796> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4796> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4796> (function? closure?))
> def args: : (<object 4796> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4796> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4796> ((dec x) (- x 1)))
> def args: : (<object 4796> ((inc x) (+ x 1)))
> def args: : (<object 4796> (__display display))
> def args: : (<object 4796> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4796> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4796> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4796> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4796> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4796> ((negative? n) (< n 0)))
> def args: : (<object 4796> ((positive? n) (> n 0)))
> def args: : (<object 4796> ((newline) (println)))
> def args: : (<object 4796> (remainder %))
> def args: : (<object 4796> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4796> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4796> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4796> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4796> (integer int))
> def args: : (<object 4796> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4796> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4796> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4796> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4796> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4796> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4796> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4796> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4796> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4796> ((true? x) x))
> def args: : (<object 4796> ((false? x) (not x)))
> def args: : (<object 4796> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4796> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4796> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4796> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4796> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4796> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4796> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4796> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4796> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4796> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4796> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4796> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4796> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4796> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4796> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4796> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4796> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4796> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4796> ((stream-car s) (car s)))
> def args: : (<object 4796> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4796> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4796> ((stream-null? s) (null? s)))
> def args: : (<object 4796> ((code $s) $s))
> def args: : (<object 4796> ((member? x items) (valid? (member x items))))
> def args: : (<object 4796> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4796> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4796> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4796> (__string+ string+))
> def args: : (<object 4796> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4796> (__string string))
> def args: : (<object 4796> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4796> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4796> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4796> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4796> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4796> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4796> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4796> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4796> ((localNames env) (cadr env)))
> def args: : (<object 4796> ((localValues env) (caddr env)))
> def args: : (<object 4796> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4796> ((dot obj $name) (get $name obj)))
> def args: : (<object 4796> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4796> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> EXCEPTION: undefinedVariable
> file if3.s,line 1: variable var is undefined
------------------------------------------
if4.s
------------------------------------------
26,45c26,135
< function (test,$tBranch,$fBranch)
<     {
<     var oldIf = context . context . if;
<     print("the test is ",test,"
< ");
<     oldIf (test)
<         {
<         while (:false)
<             {
<             println("huh");
<             }
<         force($tBranch);
<         }
<     else
<         {
<         force($fBranch);
<         }
<     }
< the test is true
< three *is* less than 4!
---
> def args: : (<object 4796> (else #t))
> def args: : (<object 4796> (__builtin __context))
> def args: : (<object 4796> (__main-lib this))
> def args: : (<object 4796> (nil? null?))
> def args: : (<object 4796> ((valid? x) (not (null? x))))
> def args: : (<object 4796> ((head x) (car x)))
> def args: : (<object 4796> ((tail x) (cdr x)))
> def args: : (<object 4796> ((join x y) (cons x y)))
> def args: : (<object 4796> (^ expt))
> def args: : (<object 4796> (** expt))
> def args: : (<object 4796> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4796> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4796> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4796> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4796> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4796> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4796> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4796> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4796> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4796> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4796> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4796> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4796> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4796> (__type type))
> def args: : (<object 4796> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4796> ((class x) (get (quote __label) x)))
> def args: : (<object 4796> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4796> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4796> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4796> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4796> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4796> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4796> (function? closure?))
> def args: : (<object 4796> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4796> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4796> ((dec x) (- x 1)))
> def args: : (<object 4796> ((inc x) (+ x 1)))
> def args: : (<object 4796> (__display display))
> def args: : (<object 4796> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4796> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4796> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4796> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4796> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4796> ((negative? n) (< n 0)))
> def args: : (<object 4796> ((positive? n) (> n 0)))
> def args: : (<object 4796> ((newline) (println)))
> def args: : (<object 4796> (remainder %))
> def args: : (<object 4796> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4796> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4796> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4796> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4796> (integer int))
> def args: : (<object 4796> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4796> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4796> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4796> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4796> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4796> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4796> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4796> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4796> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4796> ((true? x) x))
> def args: : (<object 4796> ((false? x) (not x)))
> def args: : (<object 4796> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4796> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4796> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4796> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4796> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4796> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4796> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4796> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4796> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4796> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4796> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4796> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4796> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4796> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4796> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4796> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4796> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4796> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4796> ((stream-car s) (car s)))
> def args: : (<object 4796> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4796> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4796> ((stream-null? s) (null? s)))
> def args: : (<object 4796> ((code $s) $s))
> def args: : (<object 4796> ((member? x items) (valid? (member x items))))
> def args: : (<object 4796> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4796> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4796> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4796> (__string+ string+))
> def args: : (<object 4796> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4796> (__string string))
> def args: : (<object 4796> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4796> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4796> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4796> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4796> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4796> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4796> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4796> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4796> ((localNames env) (cadr env)))
> def args: : (<object 4796> ((localValues env) (caddr env)))
> def args: : (<object 4796> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4796> ((dot obj $name) (get $name obj)))
> def args: : (<object 4796> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4796> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> EXCEPTION: undefinedVariable
> file if4.s,line 1: variable var is undefined
------------------------------------------
if5.s
------------------------------------------
24c24,133
< 3 is less than 4!
---
> def args: : (<object 4796> (else #t))
> def args: : (<object 4796> (__builtin __context))
> def args: : (<object 4796> (__main-lib this))
> def args: : (<object 4796> (nil? null?))
> def args: : (<object 4796> ((valid? x) (not (null? x))))
> def args: : (<object 4796> ((head x) (car x)))
> def args: : (<object 4796> ((tail x) (cdr x)))
> def args: : (<object 4796> ((join x y) (cons x y)))
> def args: : (<object 4796> (^ expt))
> def args: : (<object 4796> (** expt))
> def args: : (<object 4796> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4796> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4796> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4796> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4796> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4796> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4796> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4796> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4796> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4796> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4796> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4796> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4796> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4796> (__type type))
> def args: : (<object 4796> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4796> ((class x) (get (quote __label) x)))
> def args: : (<object 4796> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4796> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4796> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4796> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4796> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4796> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4796> (function? closure?))
> def args: : (<object 4796> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4796> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4796> ((dec x) (- x 1)))
> def args: : (<object 4796> ((inc x) (+ x 1)))
> def args: : (<object 4796> (__display display))
> def args: : (<object 4796> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4796> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4796> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4796> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4796> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4796> ((negative? n) (< n 0)))
> def args: : (<object 4796> ((positive? n) (> n 0)))
> def args: : (<object 4796> ((newline) (println)))
> def args: : (<object 4796> (remainder %))
> def args: : (<object 4796> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4796> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4796> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4796> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4796> (integer int))
> def args: : (<object 4796> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4796> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4796> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4796> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4796> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4796> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4796> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4796> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4796> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4796> ((true? x) x))
> def args: : (<object 4796> ((false? x) (not x)))
> def args: : (<object 4796> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4796> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4796> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4796> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4796> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4796> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4796> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4796> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4796> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4796> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4796> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4796> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4796> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4796> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4796> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4796> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4796> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4796> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4796> ((stream-car s) (car s)))
> def args: : (<object 4796> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4796> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4796> ((stream-null? s) (null? s)))
> def args: : (<object 4796> ((code $s) $s))
> def args: : (<object 4796> ((member? x items) (valid? (member x items))))
> def args: : (<object 4796> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4796> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4796> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4796> (__string+ string+))
> def args: : (<object 4796> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4796> (__string string))
> def args: : (<object 4796> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4796> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4796> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4796> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4796> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4796> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4796> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4796> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4796> ((localNames env) (cadr env)))
> def args: : (<object 4796> ((localValues env) (caddr env)))
> def args: : (<object 4796> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4796> ((dot obj $name) (get $name obj)))
> def args: : (<object 4796> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4796> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> EXCEPTION: undefinedVariable
> file if5.s,line 1: variable var is undefined
------------------------------------------
if.s
------------------------------------------
33,35c33,142
< enter 0, 1, or 2: 
< you entered 3
< can't follow directions, can you?
---
> def args: : (<object 4795> (else #t))
> def args: : (<object 4795> (__builtin __context))
> def args: : (<object 4795> (__main-lib this))
> def args: : (<object 4795> (nil? null?))
> def args: : (<object 4795> ((valid? x) (not (null? x))))
> def args: : (<object 4795> ((head x) (car x)))
> def args: : (<object 4795> ((tail x) (cdr x)))
> def args: : (<object 4795> ((join x y) (cons x y)))
> def args: : (<object 4795> (^ expt))
> def args: : (<object 4795> (** expt))
> def args: : (<object 4795> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4795> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4795> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4795> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4795> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4795> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4795> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4795> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4795> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4795> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4795> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4795> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4795> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4795> (__type type))
> def args: : (<object 4795> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4795> ((class x) (get (quote __label) x)))
> def args: : (<object 4795> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4795> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4795> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4795> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4795> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4795> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4795> (function? closure?))
> def args: : (<object 4795> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4795> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4795> ((dec x) (- x 1)))
> def args: : (<object 4795> ((inc x) (+ x 1)))
> def args: : (<object 4795> (__display display))
> def args: : (<object 4795> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4795> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4795> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4795> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4795> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4795> ((negative? n) (< n 0)))
> def args: : (<object 4795> ((positive? n) (> n 0)))
> def args: : (<object 4795> ((newline) (println)))
> def args: : (<object 4795> (remainder %))
> def args: : (<object 4795> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4795> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4795> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4795> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4795> (integer int))
> def args: : (<object 4795> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4795> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4795> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4795> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4795> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4795> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4795> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4795> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4795> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4795> ((true? x) x))
> def args: : (<object 4795> ((false? x) (not x)))
> def args: : (<object 4795> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4795> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4795> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4795> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4795> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4795> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4795> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4795> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4795> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4795> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4795> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4795> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4795> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4795> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4795> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4795> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4795> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4795> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4795> ((stream-car s) (car s)))
> def args: : (<object 4795> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4795> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4795> ((stream-null? s) (null? s)))
> def args: : (<object 4795> ((code $s) $s))
> def args: : (<object 4795> ((member? x items) (valid? (member x items))))
> def args: : (<object 4795> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4795> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4795> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4795> (__string+ string+))
> def args: : (<object 4795> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4795> (__string string))
> def args: : (<object 4795> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4795> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4795> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4795> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4795> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4795> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4795> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4795> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4795> ((localNames env) (cadr env)))
> def args: : (<object 4795> ((localValues env) (caddr env)))
> def args: : (<object 4795> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4795> ((dot obj $name) (get $name obj)))
> def args: : (<object 4795> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4795> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> EXCEPTION: undefinedVariable
> file if.s,line 1: variable //overload is undefined
------------------------------------------
lhs.s
------------------------------------------
30,33c30,139
< z is 3 (should be 3)
< xobj's a is z (should be z)
< z now is 5 (should be 5)
< xobj's a now is q (should be q)
---
> def args: : (<object 4796> (else #t))
> def args: : (<object 4796> (__builtin __context))
> def args: : (<object 4796> (__main-lib this))
> def args: : (<object 4796> (nil? null?))
> def args: : (<object 4796> ((valid? x) (not (null? x))))
> def args: : (<object 4796> ((head x) (car x)))
> def args: : (<object 4796> ((tail x) (cdr x)))
> def args: : (<object 4796> ((join x y) (cons x y)))
> def args: : (<object 4796> (^ expt))
> def args: : (<object 4796> (** expt))
> def args: : (<object 4796> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4796> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4796> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4796> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4796> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4796> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4796> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4796> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4796> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4796> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4796> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4796> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4796> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4796> (__type type))
> def args: : (<object 4796> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4796> ((class x) (get (quote __label) x)))
> def args: : (<object 4796> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4796> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4796> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4796> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4796> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4796> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4796> (function? closure?))
> def args: : (<object 4796> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4796> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4796> ((dec x) (- x 1)))
> def args: : (<object 4796> ((inc x) (+ x 1)))
> def args: : (<object 4796> (__display display))
> def args: : (<object 4796> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4796> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4796> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4796> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4796> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4796> ((negative? n) (< n 0)))
> def args: : (<object 4796> ((positive? n) (> n 0)))
> def args: : (<object 4796> ((newline) (println)))
> def args: : (<object 4796> (remainder %))
> def args: : (<object 4796> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4796> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4796> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4796> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4796> (integer int))
> def args: : (<object 4796> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4796> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4796> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4796> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4796> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4796> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4796> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4796> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4796> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4796> ((true? x) x))
> def args: : (<object 4796> ((false? x) (not x)))
> def args: : (<object 4796> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4796> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4796> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4796> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4796> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4796> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4796> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4796> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4796> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4796> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4796> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4796> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4796> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4796> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4796> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4796> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4796> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4796> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4796> ((stream-car s) (car s)))
> def args: : (<object 4796> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4796> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4796> ((stream-null? s) (null? s)))
> def args: : (<object 4796> ((code $s) $s))
> def args: : (<object 4796> ((member? x items) (valid? (member x items))))
> def args: : (<object 4796> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4796> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4796> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4796> (__string+ string+))
> def args: : (<object 4796> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4796> (__string string))
> def args: : (<object 4796> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4796> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4796> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4796> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4796> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4796> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4796> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4796> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4796> ((localNames env) (cadr env)))
> def args: : (<object 4796> ((localValues env) (caddr env)))
> def args: : (<object 4796> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4796> ((dot obj $name) (get $name obj)))
> def args: : (<object 4796> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4796> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> EXCEPTION: undefinedVariable
> file lhs.s,line 1: variable var is undefined
------------------------------------------
linecheck.s
------------------------------------------
186,188c186,295
< done
< even
< cleaning up...
---
> def args: : (<object 4802> (else #t))
> def args: : (<object 4802> (__builtin __context))
> def args: : (<object 4802> (__main-lib this))
> def args: : (<object 4802> (nil? null?))
> def args: : (<object 4802> ((valid? x) (not (null? x))))
> def args: : (<object 4802> ((head x) (car x)))
> def args: : (<object 4802> ((tail x) (cdr x)))
> def args: : (<object 4802> ((join x y) (cons x y)))
> def args: : (<object 4802> (^ expt))
> def args: : (<object 4802> (** expt))
> def args: : (<object 4802> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4802> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4802> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4802> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4802> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4802> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4802> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4802> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4802> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4802> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4802> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4802> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4802> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4802> (__type type))
> def args: : (<object 4802> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4802> ((class x) (get (quote __label) x)))
> def args: : (<object 4802> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4802> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4802> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4802> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4802> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4802> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4802> (function? closure?))
> def args: : (<object 4802> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4802> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4802> ((dec x) (- x 1)))
> def args: : (<object 4802> ((inc x) (+ x 1)))
> def args: : (<object 4802> (__display display))
> def args: : (<object 4802> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4802> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4802> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4802> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4802> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4802> ((negative? n) (< n 0)))
> def args: : (<object 4802> ((positive? n) (> n 0)))
> def args: : (<object 4802> ((newline) (println)))
> def args: : (<object 4802> (remainder %))
> def args: : (<object 4802> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4802> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4802> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4802> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4802> (integer int))
> def args: : (<object 4802> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4802> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4802> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4802> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4802> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4802> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4802> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4802> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4802> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4802> ((true? x) x))
> def args: : (<object 4802> ((false? x) (not x)))
> def args: : (<object 4802> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4802> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4802> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4802> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4802> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4802> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4802> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4802> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4802> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4802> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4802> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4802> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4802> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4802> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4802> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4802> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4802> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4802> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4802> ((stream-car s) (car s)))
> def args: : (<object 4802> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4802> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4802> ((stream-null? s) (null? s)))
> def args: : (<object 4802> ((code $s) $s))
> def args: : (<object 4802> ((member? x items) (valid? (member x items))))
> def args: : (<object 4802> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4802> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4802> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4802> (__string+ string+))
> def args: : (<object 4802> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4802> (__string string))
> def args: : (<object 4802> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4802> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4802> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4802> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4802> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4802> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4802> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4802> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4802> ((localNames env) (cadr env)))
> def args: : (<object 4802> ((localValues env) (caddr env)))
> def args: : (<object 4802> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4802> ((dot obj $name) (get $name obj)))
> def args: : (<object 4802> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4802> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> EXCEPTION: lexicalException
> file linecheck.s,line 64: misformed number (1])
------------------------------------------
list.s
------------------------------------------
98,113c98,207
< [ ]
< [ 4 ]
< [ 3 ]
< [ 3 4 ]
< [ 2 ]
< [ 2 4 ]
< [ 2 3 ]
< [ 2 3 4 ]
< [ 1 ]
< [ 1 4 ]
< [ 1 3 ]
< [ 1 3 4 ]
< [ 1 2 ]
< [ 1 2 4 ]
< [ 1 2 3 ]
< [ 1 2 3 4 ]
---
> def args: : (<object 4797> (else #t))
> def args: : (<object 4797> (__builtin __context))
> def args: : (<object 4797> (__main-lib this))
> def args: : (<object 4797> (nil? null?))
> def args: : (<object 4797> ((valid? x) (not (null? x))))
> def args: : (<object 4797> ((head x) (car x)))
> def args: : (<object 4797> ((tail x) (cdr x)))
> def args: : (<object 4797> ((join x y) (cons x y)))
> def args: : (<object 4797> (^ expt))
> def args: : (<object 4797> (** expt))
> def args: : (<object 4797> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4797> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4797> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4797> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4797> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4797> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4797> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4797> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4797> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4797> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4797> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4797> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4797> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4797> (__type type))
> def args: : (<object 4797> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4797> ((class x) (get (quote __label) x)))
> def args: : (<object 4797> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4797> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4797> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4797> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4797> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4797> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4797> (function? closure?))
> def args: : (<object 4797> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4797> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4797> ((dec x) (- x 1)))
> def args: : (<object 4797> ((inc x) (+ x 1)))
> def args: : (<object 4797> (__display display))
> def args: : (<object 4797> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4797> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4797> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4797> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4797> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4797> ((negative? n) (< n 0)))
> def args: : (<object 4797> ((positive? n) (> n 0)))
> def args: : (<object 4797> ((newline) (println)))
> def args: : (<object 4797> (remainder %))
> def args: : (<object 4797> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4797> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4797> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4797> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4797> (integer int))
> def args: : (<object 4797> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4797> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4797> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4797> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4797> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4797> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4797> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4797> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4797> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4797> ((true? x) x))
> def args: : (<object 4797> ((false? x) (not x)))
> def args: : (<object 4797> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4797> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4797> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4797> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4797> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4797> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4797> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4797> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4797> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4797> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4797> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4797> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4797> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4797> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4797> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4797> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4797> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4797> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4797> ((stream-car s) (car s)))
> def args: : (<object 4797> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4797> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4797> ((stream-null? s) (null? s)))
> def args: : (<object 4797> ((code $s) $s))
> def args: : (<object 4797> ((member? x items) (valid? (member x items))))
> def args: : (<object 4797> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4797> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4797> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4797> (__string+ string+))
> def args: : (<object 4797> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4797> (__string string))
> def args: : (<object 4797> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4797> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4797> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4797> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4797> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4797> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4797> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4797> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4797> ((localNames env) (cadr env)))
> def args: : (<object 4797> ((localValues env) (caddr env)))
> def args: : (<object 4797> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4797> ((dot obj $name) (get $name obj)))
> def args: : (<object 4797> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4797> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> EXCEPTION: syntaxException
> file list.s,line 97: expecting CLOSE_PARENTHESIS, found END_OF_INPUT instead
------------------------------------------
ln2.s
------------------------------------------
30,32c30,139
< (sdisplay ln2 20)
< 1.000000 0.500000 0.833333 0.583333 0.783333 0.616667 0.759524 0.634524 0.745635 0.645635 0.736544 0.653211 0.730134 0.658705 0.725372 0.662872 0.721695 0.666140 0.718771 0.668771 ...
< 
---
> def args: : (<object 4796> (else #t))
> def args: : (<object 4796> (__builtin __context))
> def args: : (<object 4796> (__main-lib this))
> def args: : (<object 4796> (nil? null?))
> def args: : (<object 4796> ((valid? x) (not (null? x))))
> def args: : (<object 4796> ((head x) (car x)))
> def args: : (<object 4796> ((tail x) (cdr x)))
> def args: : (<object 4796> ((join x y) (cons x y)))
> def args: : (<object 4796> (^ expt))
> def args: : (<object 4796> (** expt))
> def args: : (<object 4796> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4796> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4796> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4796> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4796> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4796> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4796> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4796> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4796> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4796> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4796> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4796> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4796> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4796> (__type type))
> def args: : (<object 4796> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4796> ((class x) (get (quote __label) x)))
> def args: : (<object 4796> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4796> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4796> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4796> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4796> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4796> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4796> (function? closure?))
> def args: : (<object 4796> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4796> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4796> ((dec x) (- x 1)))
> def args: : (<object 4796> ((inc x) (+ x 1)))
> def args: : (<object 4796> (__display display))
> def args: : (<object 4796> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4796> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4796> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4796> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4796> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4796> ((negative? n) (< n 0)))
> def args: : (<object 4796> ((positive? n) (> n 0)))
> def args: : (<object 4796> ((newline) (println)))
> def args: : (<object 4796> (remainder %))
> def args: : (<object 4796> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4796> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4796> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4796> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4796> (integer int))
> def args: : (<object 4796> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4796> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4796> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4796> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4796> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4796> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4796> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4796> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4796> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4796> ((true? x) x))
> def args: : (<object 4796> ((false? x) (not x)))
> def args: : (<object 4796> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4796> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4796> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4796> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4796> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4796> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4796> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4796> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4796> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4796> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4796> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4796> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4796> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4796> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4796> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4796> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4796> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4796> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4796> ((stream-car s) (car s)))
> def args: : (<object 4796> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4796> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4796> ((stream-null? s) (null? s)))
> def args: : (<object 4796> ((code $s) $s))
> def args: : (<object 4796> ((member? x items) (valid? (member x items))))
> def args: : (<object 4796> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4796> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4796> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4796> (__string+ string+))
> def args: : (<object 4796> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4796> (__string string))
> def args: : (<object 4796> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4796> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4796> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4796> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4796> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4796> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4796> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4796> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4796> ((localNames env) (cadr env)))
> def args: : (<object 4796> ((localValues env) (caddr env)))
> def args: : (<object 4796> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4796> ((dot obj $name) (get $name obj)))
> def args: : (<object 4796> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4796> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> EXCEPTION: generalException
> file ln2.s,line 1: file stream.scm could not be opened for reading
------------------------------------------
logic.s
------------------------------------------
1,62c1,42
< function AND(in1, in2, out, agenda)
<     {
<     var delay = 4; //milliseconds
<     function recalculate()
<         {
<         if (in1 . get() == 1 && in2 . get() == 1)
<             {
<             agenda . schedule(out . set(1), delay);
<             }
<         else
<             {
<             agenda . schedule(out . set(0), delay);
<             }
<         }
< 
<     in1 . register(this);
<     in2 . register(this);
<     recalculate();
<     this;
<     }
< 
< 
< function OR(in1, in2, out, agenda)
<     {
<     var delay = 3; //milliseconds
<     function recalculate()
<         {
<         if (in1 . get() == 1 || in2 . get() == 1)
<             {
<             agenda . schedule(out . set(1), delay);
<             }
<         else
<             {
<             agenda . schedule(out . set(0), delay);
<             }
<         }
< 
<     in1 . register(this);
<     in2 . register(this);
<     this;
<     }
< 
< 
< function NOT(in, out, agenda)
<     {
<     var delay = 1; //milliseconds
<     function recalculate()
<         {
<         if (in . get() == 0)
<             {
<             agenda . schedule(out . set(1), delay);
<             }
<         else
<             {
<             //println("output is 0");
<             agenda . schedule(out . set(0), delay);
<             }
<         }
< 
<     in . register(this);
<     this;
<     }
---
> (define (AND in1 in2 out agenda)
>     (define delay 4)  ;milliseconds
>     (define (recalculate)
>         (if (and (== ((in1 'get)) 1) (== ((in2 'get)) 1))
>             ((agenda 'schedule) ((out 'set) 1) delay)
>             ((agenda 'schedule) ((out 'set) 0) delay)
>             )
>         )
> 
>     ((in1 'register) this)
>     ((in2 'register) this)
>     (recalculate)
>     this
>     )
> 
> 
> (define (OR in1 in2 out agenda)
>     (define delay 3) ;milliseconds
>     (define (recalculate)
>         (if (or (== ((in1 'get)) 1) (== ((in2 'get)) 1))
>             ((agenda 'schedule) ((out 'set) 1) delay)
>             ((agenda 'schedule) ((out 'set) 0) delay)
>             )
>         )
> 
>     ((in1 'register) this)
>     ((in2 'register) this)
>     this
>     )
> 
> (define (NOT in out agenda)
>     (define delay 1)  ;milliseconds
>     (define (recalculate)
>         (if (== ((in 'get)) 0)
>             ((agenda 'schedule) ((out 'set) 1) delay)
>             ((agenda 'schedule) ((out 'set) 0) delay)
>             )
>         )
> 
>     ((in 'register) this)
>     this
>     )
63a44,154
> def args: : (<object 4798> (else #t))
> def args: : (<object 4798> (__builtin __context))
> def args: : (<object 4798> (__main-lib this))
> def args: : (<object 4798> (nil? null?))
> def args: : (<object 4798> ((valid? x) (not (null? x))))
> def args: : (<object 4798> ((head x) (car x)))
> def args: : (<object 4798> ((tail x) (cdr x)))
> def args: : (<object 4798> ((join x y) (cons x y)))
> def args: : (<object 4798> (^ expt))
> def args: : (<object 4798> (** expt))
> def args: : (<object 4798> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4798> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4798> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4798> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4798> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4798> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4798> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4798> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4798> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4798> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4798> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4798> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4798> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4798> (__type type))
> def args: : (<object 4798> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4798> ((class x) (get (quote __label) x)))
> def args: : (<object 4798> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4798> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4798> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4798> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4798> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4798> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4798> (function? closure?))
> def args: : (<object 4798> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4798> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4798> ((dec x) (- x 1)))
> def args: : (<object 4798> ((inc x) (+ x 1)))
> def args: : (<object 4798> (__display display))
> def args: : (<object 4798> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4798> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4798> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4798> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4798> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4798> ((negative? n) (< n 0)))
> def args: : (<object 4798> ((positive? n) (> n 0)))
> def args: : (<object 4798> ((newline) (println)))
> def args: : (<object 4798> (remainder %))
> def args: : (<object 4798> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4798> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4798> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4798> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4798> (integer int))
> def args: : (<object 4798> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4798> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4798> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4798> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4798> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4798> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4798> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4798> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4798> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4798> ((true? x) x))
> def args: : (<object 4798> ((false? x) (not x)))
> def args: : (<object 4798> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4798> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4798> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4798> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4798> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4798> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4798> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4798> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4798> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4798> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4798> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4798> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4798> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4798> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4798> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4798> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4798> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4798> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4798> ((stream-car s) (car s)))
> def args: : (<object 4798> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4798> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4798> ((stream-null? s) (null? s)))
> def args: : (<object 4798> ((code $s) $s))
> def args: : (<object 4798> ((member? x items) (valid? (member x items))))
> def args: : (<object 4798> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4798> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4798> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4798> (__string+ string+))
> def args: : (<object 4798> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4798> (__string string))
> def args: : (<object 4798> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4798> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4798> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4798> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4798> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4798> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4798> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4798> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4798> ((localNames env) (cadr env)))
> def args: : (<object 4798> ((localValues env) (caddr env)))
> def args: : (<object 4798> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4798> ((dot obj $name) (get $name obj)))
> def args: : (<object 4798> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4798> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12465> ((AND in1 in2 out agenda) (define delay 4) (define (recalculate) (if (and (== ((in1 (quote get))) 1) (== ((in2 (quote get))) 1)) ((agenda (quote schedule)) ((out (quote set)) 1) delay) ((agenda (quote schedule)) ((out (quote set)) 0) delay))) ((in1 (quote register)) this) ((in2 (quote register)) this) (recalculate) this))
> def args: : (<object 12465> ((OR in1 in2 out agenda) (define delay 3) (define (recalculate) (if (or (== ((in1 (quote get))) 1) (== ((in2 (quote get))) 1)) ((agenda (quote schedule)) ((out (quote set)) 1) delay) ((agenda (quote schedule)) ((out (quote set)) 0) delay))) ((in1 (quote register)) this) ((in2 (quote register)) this) this))
> def args: : (<object 12465> ((NOT in out agenda) (define delay 1) (define (recalculate) (if (== ((in (quote get))) 0) ((agenda (quote schedule)) ((out (quote set)) 1) delay) ((agenda (quote schedule)) ((out (quote set)) 0) delay))) ((in (quote register)) this) this))
------------------------------------------
map.s
------------------------------------------
45,56c45,154
< mapping [ 1 2 3 4 ] 
< mapping [ 2 3 4 ] 
< mapping [ 3 4 ] 
< mapping [ 4 ] 
< mapping [ ] 
< returning null
< joining 16 with null
< joining 9 with (16)
< joining 4 with (9,16)
< joining 1 with (4,9,16)
< [ 1 2 3 4 ] 
< [ 1 4 9 16 ] 
---
> def args: : (<object 4796> (else #t))
> def args: : (<object 4796> (__builtin __context))
> def args: : (<object 4796> (__main-lib this))
> def args: : (<object 4796> (nil? null?))
> def args: : (<object 4796> ((valid? x) (not (null? x))))
> def args: : (<object 4796> ((head x) (car x)))
> def args: : (<object 4796> ((tail x) (cdr x)))
> def args: : (<object 4796> ((join x y) (cons x y)))
> def args: : (<object 4796> (^ expt))
> def args: : (<object 4796> (** expt))
> def args: : (<object 4796> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4796> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4796> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4796> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4796> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4796> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4796> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4796> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4796> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4796> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4796> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4796> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4796> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4796> (__type type))
> def args: : (<object 4796> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4796> ((class x) (get (quote __label) x)))
> def args: : (<object 4796> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4796> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4796> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4796> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4796> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4796> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4796> (function? closure?))
> def args: : (<object 4796> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4796> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4796> ((dec x) (- x 1)))
> def args: : (<object 4796> ((inc x) (+ x 1)))
> def args: : (<object 4796> (__display display))
> def args: : (<object 4796> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4796> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4796> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4796> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4796> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4796> ((negative? n) (< n 0)))
> def args: : (<object 4796> ((positive? n) (> n 0)))
> def args: : (<object 4796> ((newline) (println)))
> def args: : (<object 4796> (remainder %))
> def args: : (<object 4796> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4796> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4796> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4796> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4796> (integer int))
> def args: : (<object 4796> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4796> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4796> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4796> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4796> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4796> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4796> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4796> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4796> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4796> ((true? x) x))
> def args: : (<object 4796> ((false? x) (not x)))
> def args: : (<object 4796> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4796> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4796> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4796> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4796> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4796> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4796> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4796> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4796> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4796> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4796> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4796> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4796> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4796> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4796> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4796> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4796> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4796> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4796> ((stream-car s) (car s)))
> def args: : (<object 4796> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4796> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4796> ((stream-null? s) (null? s)))
> def args: : (<object 4796> ((code $s) $s))
> def args: : (<object 4796> ((member? x items) (valid? (member x items))))
> def args: : (<object 4796> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4796> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4796> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4796> (__string+ string+))
> def args: : (<object 4796> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4796> (__string string))
> def args: : (<object 4796> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4796> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4796> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4796> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4796> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4796> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4796> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4796> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4796> ((localNames env) (cadr env)))
> def args: : (<object 4796> ((localValues env) (caddr env)))
> def args: : (<object 4796> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4796> ((dot obj $name) (get $name obj)))
> def args: : (<object 4796> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4796> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> EXCEPTION: undefinedVariable
> file map.s,line 1: variable var is undefined
------------------------------------------
matrixproblem.s
------------------------------------------
27,28c27,136
< length(mat) is 10
< length(mat) is 20
---
> def args: : (<object 4806> (else #t))
> def args: : (<object 4806> (__builtin __context))
> def args: : (<object 4806> (__main-lib this))
> def args: : (<object 4806> (nil? null?))
> def args: : (<object 4806> ((valid? x) (not (null? x))))
> def args: : (<object 4806> ((head x) (car x)))
> def args: : (<object 4806> ((tail x) (cdr x)))
> def args: : (<object 4806> ((join x y) (cons x y)))
> def args: : (<object 4806> (^ expt))
> def args: : (<object 4806> (** expt))
> def args: : (<object 4806> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4806> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4806> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4806> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4806> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4806> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4806> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4806> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4806> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4806> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4806> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4806> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4806> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4806> (__type type))
> def args: : (<object 4806> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4806> ((class x) (get (quote __label) x)))
> def args: : (<object 4806> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4806> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4806> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4806> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4806> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4806> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4806> (function? closure?))
> def args: : (<object 4806> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4806> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4806> ((dec x) (- x 1)))
> def args: : (<object 4806> ((inc x) (+ x 1)))
> def args: : (<object 4806> (__display display))
> def args: : (<object 4806> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4806> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4806> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4806> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4806> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4806> ((negative? n) (< n 0)))
> def args: : (<object 4806> ((positive? n) (> n 0)))
> def args: : (<object 4806> ((newline) (println)))
> def args: : (<object 4806> (remainder %))
> def args: : (<object 4806> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4806> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4806> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4806> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4806> (integer int))
> def args: : (<object 4806> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4806> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4806> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4806> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4806> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4806> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4806> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4806> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4806> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4806> ((true? x) x))
> def args: : (<object 4806> ((false? x) (not x)))
> def args: : (<object 4806> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4806> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4806> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4806> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4806> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4806> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4806> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4806> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4806> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4806> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4806> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4806> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4806> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4806> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4806> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4806> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4806> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4806> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4806> ((stream-car s) (car s)))
> def args: : (<object 4806> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4806> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4806> ((stream-null? s) (null? s)))
> def args: : (<object 4806> ((code $s) $s))
> def args: : (<object 4806> ((member? x items) (valid? (member x items))))
> def args: : (<object 4806> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4806> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4806> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4806> (__string+ string+))
> def args: : (<object 4806> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4806> (__string string))
> def args: : (<object 4806> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4806> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4806> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4806> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4806> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4806> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4806> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4806> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4806> ((localNames env) (cadr env)))
> def args: : (<object 4806> ((localValues env) (caddr env)))
> def args: : (<object 4806> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4806> ((dot obj $name) (get $name obj)))
> def args: : (<object 4806> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4806> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> EXCEPTION: nonFunction
> file matrixproblem.s,line 1: attempted to call STRING as a function
------------------------------------------
object3.s
------------------------------------------
41,68c41,168
< (class this) is environment
< (class alpha) is closure
< (class a) is alpha
< (class c) is beta
< (class (. c __context)) is alpha
< (object? this) is #t
< (closure? this) is #f
< (environment? this) is #t
< (locals b) is (__label __context __level __constructor this parent x)
< (local? parent b) is #t
< (local? Parent b) is #f
< a . x is 4
< (. a x) is 4
< <object 10983>
<              __label  : closure
<            __context  : <object 9029>
<                 name  : alpha
<           parameters  : (x)
<                 code  : (begin (define parent nil) this)
< (. (. a __constructor) name) is alpha
< (. b x) is 5
< (. (. b __constructor) name) is alpha
< (is? a (quote alpha)) is #t
< (is? b (quote alpha)) is #t
< (is? b (quote beta)) is #f
< (is? c (quote beta)) is #t
< (is? c (quote alpha)) is #t
< (is? c (quote gamma)) is #f
---
> def args: : (<object 4800> (else #t))
> def args: : (<object 4800> (__builtin __context))
> def args: : (<object 4800> (__main-lib this))
> def args: : (<object 4800> (nil? null?))
> def args: : (<object 4800> ((valid? x) (not (null? x))))
> def args: : (<object 4800> ((head x) (car x)))
> def args: : (<object 4800> ((tail x) (cdr x)))
> def args: : (<object 4800> ((join x y) (cons x y)))
> def args: : (<object 4800> (^ expt))
> def args: : (<object 4800> (** expt))
> def args: : (<object 4800> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4800> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4800> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4800> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4800> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4800> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4800> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4800> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4800> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4800> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4800> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4800> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4800> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4800> (__type type))
> def args: : (<object 4800> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4800> ((class x) (get (quote __label) x)))
> def args: : (<object 4800> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4800> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4800> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4800> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4800> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4800> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4800> (function? closure?))
> def args: : (<object 4800> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4800> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4800> ((dec x) (- x 1)))
> def args: : (<object 4800> ((inc x) (+ x 1)))
> def args: : (<object 4800> (__display display))
> def args: : (<object 4800> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4800> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4800> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4800> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4800> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4800> ((negative? n) (< n 0)))
> def args: : (<object 4800> ((positive? n) (> n 0)))
> def args: : (<object 4800> ((newline) (println)))
> def args: : (<object 4800> (remainder %))
> def args: : (<object 4800> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4800> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4800> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4800> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4800> (integer int))
> def args: : (<object 4800> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4800> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4800> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4800> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4800> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4800> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4800> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4800> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4800> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4800> ((true? x) x))
> def args: : (<object 4800> ((false? x) (not x)))
> def args: : (<object 4800> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4800> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4800> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4800> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4800> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4800> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4800> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4800> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4800> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4800> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4800> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4800> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4800> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4800> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4800> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4800> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4800> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4800> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4800> ((stream-car s) (car s)))
> def args: : (<object 4800> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4800> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4800> ((stream-null? s) (null? s)))
> def args: : (<object 4800> ((code $s) $s))
> def args: : (<object 4800> ((member? x items) (valid? (member x items))))
> def args: : (<object 4800> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4800> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4800> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4800> (__string+ string+))
> def args: : (<object 4800> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4800> (__string string))
> def args: : (<object 4800> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4800> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4800> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4800> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4800> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4800> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4800> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4800> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4800> ((localNames env) (cadr env)))
> def args: : (<object 4800> ((localValues env) (caddr env)))
> def args: : (<object 4800> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4800> ((dot obj $name) (get $name obj)))
> def args: : (<object 4800> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4800> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12467> ((prior #) (define f (get (quote __constructor) #)) (if (local? (quote __prior) f) (get (quote __prior) f) (throw (quote reflectionException) "prior field has not been set"))))
> def args: : (<object 12467> ((redefine # $params $) (if (not (pair? $params)) (throw (quote reflectionException) (string+ (fileName $params) ",line " (string (lineNumber $params)) ": can only redefine functions"))) (define p (car $params)) (define (zow) (define pf 1) this) (if (defined? p #) (define pf (get p #)) (define pf (lambda (@) #f))) (define f (eval (cons (quote define) (cons $params $)) #)) (addSymbol (quote __prior) pf f) f))
> def args: : (<object 12467> ((clone # item) (define (cloneObject item) (list (quote object) (cloneList (cadr item)) (cloneList (caddr item)))) (define (cloneObjectWithContext item env) (define c (cloneObject item)) (set (quote __context) env c) c) (define (cloneList items) (cond ((null? items) ) ((pair? items) (cons (car items) (cloneList (cdr items)))) (else items))) (cond ((closure? item) (cloneObjectWithContext item #)) ((thunk? item) (cloneObjectWithContext item #)) ((object? item) (cloneObject item)) ((pair? item) (cloneList item)) (else item))))
> def args: : (<object 12467> ((compile-reflection #) (include "compile.lib") (println "compiling prior...") (compile prior #) (println "compiling redefine...") (compile redefine #) (println "compiling clone...") (compile clone #) (println "reflection.lib compiled.")))
> def args: : (<object 12467> ((resetClosures static obj) (define (update current rest) (if (closure? current) (begin (set (quote __context) static current))) (if (valid? rest) (update (car rest) (cdr rest)))) (define values (localValues obj)) (if (!= values ) (update (car values) (cdr values))) obj))
> def args: : (<object 12467> ((inherit child parents reification static) (if (null? parents) (set (quote __context) static child) (set (quote __context) (inherit (resetClosures reification (car parents)) (cdr parents) reification static) child)) (if (valid? (child (quote __constructor))) (set (quote __label) (child (quote __constructor) (quote name)) child)) child))
> def args: : (<object 12467> ((new child) (define (chain x) (if (null? x)  (cons x (chain (x (quote parent)))))) (inherit child (chain (child (quote parent))) child (child (quote __context)))))
> def args: : (<object 12467> ((mixin object @) (inherit object @ object (object (quote __context)))))
> def args: : (<object 12467> ((super child) (child (quote __context))))
> def args: : (<object 12467> ((extend # parent) (define top (if (local? (quote inherit-top) parent) (parent (quote inherit-top)) parent)) (addSymbol (quote inherit-top) top #) (set (quote __context) (# (quote __context)) top) (set (quote __context) parent #) #))
> def args: : (<object 12467> ((setEnclosingScope a b) (set* a (quote __context) b)))
> def args: : (<object 12467> ((getEnclosingScope a) (a (quote __context))))
> def args: : (<object 12467> ((alpha x) (define parent ) this))
> def args: : (<object 12467> ((beta y) (define parent (alpha (+ y y))) this))
> def args: : (<object 12467> (a (new (alpha 4))))
> def args: : (<object 14745> (parent ))
> def args: : (<object 14788> ((chain x) (if (null? x)  (cons x (chain (x (quote parent)))))))
> def args: : (<object 12467> (b (new ((. a __constructor) 5))))
> EXCEPTION: undefinedVariable
> file object3.s,line 13: variable . is undefined
------------------------------------------
object.s
------------------------------------------
31c31,147
< the shared environment was made!
---
> def args: : (<object 4799> (else #t))
> def args: : (<object 4799> (__builtin __context))
> def args: : (<object 4799> (__main-lib this))
> def args: : (<object 4799> (nil? null?))
> def args: : (<object 4799> ((valid? x) (not (null? x))))
> def args: : (<object 4799> ((head x) (car x)))
> def args: : (<object 4799> ((tail x) (cdr x)))
> def args: : (<object 4799> ((join x y) (cons x y)))
> def args: : (<object 4799> (^ expt))
> def args: : (<object 4799> (** expt))
> def args: : (<object 4799> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4799> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4799> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4799> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4799> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4799> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4799> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4799> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4799> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4799> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4799> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4799> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4799> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4799> (__type type))
> def args: : (<object 4799> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4799> ((class x) (get (quote __label) x)))
> def args: : (<object 4799> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4799> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4799> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4799> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4799> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4799> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4799> (function? closure?))
> def args: : (<object 4799> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4799> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4799> ((dec x) (- x 1)))
> def args: : (<object 4799> ((inc x) (+ x 1)))
> def args: : (<object 4799> (__display display))
> def args: : (<object 4799> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4799> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4799> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4799> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4799> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4799> ((negative? n) (< n 0)))
> def args: : (<object 4799> ((positive? n) (> n 0)))
> def args: : (<object 4799> ((newline) (println)))
> def args: : (<object 4799> (remainder %))
> def args: : (<object 4799> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4799> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4799> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4799> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4799> (integer int))
> def args: : (<object 4799> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4799> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4799> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4799> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4799> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4799> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4799> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4799> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4799> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4799> ((true? x) x))
> def args: : (<object 4799> ((false? x) (not x)))
> def args: : (<object 4799> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4799> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4799> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4799> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4799> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4799> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4799> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4799> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4799> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4799> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4799> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4799> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4799> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4799> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4799> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4799> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4799> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4799> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4799> ((stream-car s) (car s)))
> def args: : (<object 4799> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4799> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4799> ((stream-null? s) (null? s)))
> def args: : (<object 4799> ((code $s) $s))
> def args: : (<object 4799> ((member? x items) (valid? (member x items))))
> def args: : (<object 4799> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4799> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4799> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4799> (__string+ string+))
> def args: : (<object 4799> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4799> (__string string))
> def args: : (<object 4799> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4799> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4799> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4799> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4799> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4799> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4799> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4799> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4799> ((localNames env) (cadr env)))
> def args: : (<object 4799> ((localValues env) (caddr env)))
> def args: : (<object 4799> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4799> ((dot obj $name) (get $name obj)))
> def args: : (<object 4799> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4799> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12466> (x (scope (define a 2) (define b "hello") (println "the shared environment was made!") (lambda  (define c 5) (println "an object was made!
> ") this))))
> def args: : (<object 12954> (a 2))
> def args: : (<object 12954> (b "hello"))
> the shared environment was made!def args: : (<object 13090> (env (if (null? @) # (car @))))
> 
> def args: : (<object 13288> (env (if (null? @) # (car @))))
> def args: : (<object 12466> (y (x)))
> def args: : (<object 13433> (c 5))
32a149
> def args: : (<object 13578> (env (if (null? @) # (car @))))
33a151,153
> def args: : (<object 13776> (env (if (null? @) # (car @))))
> def args: : (<object 12466> (z (x)))
> def args: : (<object 13901> (c 5))
34a155
> def args: : (<object 14046> (env (if (null? @) # (car @))))
36c157,158
< z is <object 9629>
---
> def args: : (<object 14244> (env (if (null? @) # (car @))))
> z is <object 13901>
38c160
<            __context  : <object 9516>
---
>            __context  : <object 12954>
41c163
<                 this  : <object 9629>
---
>                 this  : <object 13901>
44,49c166,167
< y:(a,b,c) is 2,hello,5
< z:(a,b,c) is 2,hello,5
< changing a and c for y
< y:(a,b,c) is 3,hello,4
< only a should have changed for z
< z:(a,b,c) is 3,hello,5
---
> EXCEPTION: undefinedVariable
> file object.s,line 19: variable . is undefined
------------------------------------------
obj.s
------------------------------------------
25,30c25,155
< b is an object!
< b . a is 3, (should be 3)
< b . symbol("a") is a, (should be a)
< b . (symbol("a")) is 3, (should be 3)
< b . 'a is 3 (should be 3)
< b . a is 4 (should be 4)
---
> def args: : (<object 4796> (else #t))
> def args: : (<object 4796> (__builtin __context))
> def args: : (<object 4796> (__main-lib this))
> def args: : (<object 4796> (nil? null?))
> def args: : (<object 4796> ((valid? x) (not (null? x))))
> def args: : (<object 4796> ((head x) (car x)))
> def args: : (<object 4796> ((tail x) (cdr x)))
> def args: : (<object 4796> ((join x y) (cons x y)))
> def args: : (<object 4796> (^ expt))
> def args: : (<object 4796> (** expt))
> def args: : (<object 4796> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4796> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4796> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4796> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4796> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4796> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4796> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4796> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4796> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4796> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4796> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4796> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4796> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4796> (__type type))
> def args: : (<object 4796> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4796> ((class x) (get (quote __label) x)))
> def args: : (<object 4796> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4796> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4796> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4796> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4796> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4796> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4796> (function? closure?))
> def args: : (<object 4796> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4796> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4796> ((dec x) (- x 1)))
> def args: : (<object 4796> ((inc x) (+ x 1)))
> def args: : (<object 4796> (__display display))
> def args: : (<object 4796> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4796> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4796> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4796> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4796> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4796> ((negative? n) (< n 0)))
> def args: : (<object 4796> ((positive? n) (> n 0)))
> def args: : (<object 4796> ((newline) (println)))
> def args: : (<object 4796> (remainder %))
> def args: : (<object 4796> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4796> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4796> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4796> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4796> (integer int))
> def args: : (<object 4796> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4796> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4796> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4796> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4796> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4796> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4796> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4796> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4796> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4796> ((true? x) x))
> def args: : (<object 4796> ((false? x) (not x)))
> def args: : (<object 4796> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4796> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4796> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4796> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4796> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4796> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4796> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4796> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4796> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4796> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4796> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4796> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4796> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4796> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4796> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4796> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4796> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4796> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4796> ((stream-car s) (car s)))
> def args: : (<object 4796> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4796> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4796> ((stream-null? s) (null? s)))
> def args: : (<object 4796> ((code $s) $s))
> def args: : (<object 4796> ((member? x items) (valid? (member x items))))
> def args: : (<object 4796> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4796> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4796> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4796> (__string+ string+))
> def args: : (<object 4796> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4796> (__string string))
> def args: : (<object 4796> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4796> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4796> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4796> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4796> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4796> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4796> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4796> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4796> ((localNames env) (cadr env)))
> def args: : (<object 4796> ((localValues env) (caddr env)))
> def args: : (<object 4796> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4796> ((dot obj $name) (get $name obj)))
> def args: : (<object 4796> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4796> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12463> ((prior #) (define f (get (quote __constructor) #)) (if (local? (quote __prior) f) (get (quote __prior) f) (throw (quote reflectionException) "prior field has not been set"))))
> def args: : (<object 12463> ((redefine # $params $) (if (not (pair? $params)) (throw (quote reflectionException) (string+ (fileName $params) ",line " (string (lineNumber $params)) ": can only redefine functions"))) (define p (car $params)) (define (zow) (define pf 1) this) (if (defined? p #) (define pf (get p #)) (define pf (lambda (@) #f))) (define f (eval (cons (quote define) (cons $params $)) #)) (addSymbol (quote __prior) pf f) f))
> def args: : (<object 12463> ((clone # item) (define (cloneObject item) (list (quote object) (cloneList (cadr item)) (cloneList (caddr item)))) (define (cloneObjectWithContext item env) (define c (cloneObject item)) (set (quote __context) env c) c) (define (cloneList items) (cond ((null? items) ) ((pair? items) (cons (car items) (cloneList (cdr items)))) (else items))) (cond ((closure? item) (cloneObjectWithContext item #)) ((thunk? item) (cloneObjectWithContext item #)) ((object? item) (cloneObject item)) ((pair? item) (cloneList item)) (else item))))
> def args: : (<object 12463> ((compile-reflection #) (include "compile.lib") (println "compiling prior...") (compile prior #) (println "compiling redefine...") (compile redefine #) (println "compiling clone...") (compile clone #) (println "reflection.lib compiled.")))
> def args: : (<object 12463> ((resetClosures static obj) (define (update current rest) (if (closure? current) (begin (set (quote __context) static current))) (if (valid? rest) (update (car rest) (cdr rest)))) (define values (localValues obj)) (if (!= values ) (update (car values) (cdr values))) obj))
> def args: : (<object 12463> ((inherit child parents reification static) (if (null? parents) (set (quote __context) static child) (set (quote __context) (inherit (resetClosures reification (car parents)) (cdr parents) reification static) child)) (if (valid? (child (quote __constructor))) (set (quote __label) (child (quote __constructor) (quote name)) child)) child))
> def args: : (<object 12463> ((new child) (define (chain x) (if (null? x)  (cons x (chain (x (quote parent)))))) (inherit child (chain (child (quote parent))) child (child (quote __context)))))
> def args: : (<object 12463> ((mixin object @) (inherit object @ object (object (quote __context)))))
> def args: : (<object 12463> ((super child) (child (quote __context))))
> def args: : (<object 12463> ((extend # parent) (define top (if (local? (quote inherit-top) parent) (parent (quote inherit-top)) parent)) (addSymbol (quote inherit-top) top #) (set (quote __context) (# (quote __context)) top) (set (quote __context) parent #) #))
> def args: : (<object 12463> ((setEnclosingScope a b) (set* a (quote __context) b)))
> def args: : (<object 12463> ((getEnclosingScope a) (a (quote __context))))
> def args: : (<object 12463> ((x) (define parent ) (define a 3) this))
> def args: : (<object 12463> (b (new (x))))
> def args: : (<object 14586> (parent ))
> def args: : (<object 14586> (a 3))
> def args: : (<object 14636> ((chain x) (if (null? x)  (cons x (chain (x (quote parent)))))))
> def args: : (<object 14914> ((iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))))
> b is an object!def args: : (<object 15280> (env (if (null? @) # (car @))))
> 
> def args: : (<object 15478> (env (if (null? @) # (car @))))
> EXCEPTION: undefinedVariable
> file obj.s,line 17: variable . is undefined
------------------------------------------
overlay.s
------------------------------------------
0a1,149
> function stack()
>     {
>     var store = :null;
>     function pop()
>         {
>         var p = head(store);
>         store = tail(store);
>         p;
>         }
>     function push(item)
>         {
>         store = item join store;
>         item;
>         }
>     function empty?()
>         {
>         return store == :null;
>         }
>     this;
>     }
> 
> function stack()
>     {
>     function pop()
>         {
>         if (empty?(),throw(:stackException,"popped an empty stack"));
>         pop . prior();
>         }
>     extends(stack . prior());
>     this;
>     }
> 
> var s = stack();
> 
> pp(stack);
> inspect(s . push(5));
> inspect(s . pop());
> inspect(s . pop());
> ------------------------------------------
> def args: : (<object 4800> (else #t))
> def args: : (<object 4800> (__builtin __context))
> def args: : (<object 4800> (__main-lib this))
> def args: : (<object 4800> (nil? null?))
> def args: : (<object 4800> ((valid? x) (not (null? x))))
> def args: : (<object 4800> ((head x) (car x)))
> def args: : (<object 4800> ((tail x) (cdr x)))
> def args: : (<object 4800> ((join x y) (cons x y)))
> def args: : (<object 4800> (^ expt))
> def args: : (<object 4800> (** expt))
> def args: : (<object 4800> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4800> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4800> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4800> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4800> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4800> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4800> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4800> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4800> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4800> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4800> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4800> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4800> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4800> (__type type))
> def args: : (<object 4800> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4800> ((class x) (get (quote __label) x)))
> def args: : (<object 4800> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4800> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4800> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4800> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4800> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4800> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4800> (function? closure?))
> def args: : (<object 4800> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4800> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4800> ((dec x) (- x 1)))
> def args: : (<object 4800> ((inc x) (+ x 1)))
> def args: : (<object 4800> (__display display))
> def args: : (<object 4800> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4800> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4800> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4800> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4800> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4800> ((negative? n) (< n 0)))
> def args: : (<object 4800> ((positive? n) (> n 0)))
> def args: : (<object 4800> ((newline) (println)))
> def args: : (<object 4800> (remainder %))
> def args: : (<object 4800> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4800> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4800> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4800> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4800> (integer int))
> def args: : (<object 4800> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4800> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4800> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4800> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4800> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4800> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4800> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4800> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4800> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4800> ((true? x) x))
> def args: : (<object 4800> ((false? x) (not x)))
> def args: : (<object 4800> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4800> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4800> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4800> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4800> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4800> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4800> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4800> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4800> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4800> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4800> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4800> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4800> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4800> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4800> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4800> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4800> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4800> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4800> ((stream-car s) (car s)))
> def args: : (<object 4800> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4800> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4800> ((stream-null? s) (null? s)))
> def args: : (<object 4800> ((code $s) $s))
> def args: : (<object 4800> ((member? x items) (valid? (member x items))))
> def args: : (<object 4800> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4800> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4800> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4800> (__string+ string+))
> def args: : (<object 4800> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4800> (__string string))
> def args: : (<object 4800> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4800> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4800> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4800> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4800> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4800> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4800> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4800> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4800> ((localNames env) (cadr env)))
> def args: : (<object 4800> ((localValues env) (caddr env)))
> def args: : (<object 4800> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4800> ((dot obj $name) (get $name obj)))
> def args: : (<object 4800> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4800> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> EXCEPTION: undefinedVariable
> file overlay.s,line 1: variable function is undefined
------------------------------------------
overload.s
------------------------------------------
15,19c15,124
< local + is <function +(x,y)>
< non-local + is <function +(x,y)>
< non-non-local + is <function +(a,b)>
< shadowed + is <function +(a,b)>
< x is 7
---
> def args: : (<object 4801> (else #t))
> def args: : (<object 4801> (__builtin __context))
> def args: : (<object 4801> (__main-lib this))
> def args: : (<object 4801> (nil? null?))
> def args: : (<object 4801> ((valid? x) (not (null? x))))
> def args: : (<object 4801> ((head x) (car x)))
> def args: : (<object 4801> ((tail x) (cdr x)))
> def args: : (<object 4801> ((join x y) (cons x y)))
> def args: : (<object 4801> (^ expt))
> def args: : (<object 4801> (** expt))
> def args: : (<object 4801> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4801> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4801> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4801> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4801> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4801> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4801> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4801> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4801> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4801> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4801> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4801> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4801> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4801> (__type type))
> def args: : (<object 4801> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4801> ((class x) (get (quote __label) x)))
> def args: : (<object 4801> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4801> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4801> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4801> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4801> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4801> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4801> (function? closure?))
> def args: : (<object 4801> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4801> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4801> ((dec x) (- x 1)))
> def args: : (<object 4801> ((inc x) (+ x 1)))
> def args: : (<object 4801> (__display display))
> def args: : (<object 4801> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4801> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4801> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4801> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4801> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4801> ((negative? n) (< n 0)))
> def args: : (<object 4801> ((positive? n) (> n 0)))
> def args: : (<object 4801> ((newline) (println)))
> def args: : (<object 4801> (remainder %))
> def args: : (<object 4801> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4801> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4801> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4801> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4801> (integer int))
> def args: : (<object 4801> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4801> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4801> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4801> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4801> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4801> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4801> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4801> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4801> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4801> ((true? x) x))
> def args: : (<object 4801> ((false? x) (not x)))
> def args: : (<object 4801> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4801> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4801> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4801> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4801> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4801> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4801> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4801> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4801> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4801> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4801> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4801> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4801> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4801> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4801> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4801> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4801> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4801> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4801> ((stream-car s) (car s)))
> def args: : (<object 4801> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4801> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4801> ((stream-null? s) (null? s)))
> def args: : (<object 4801> ((code $s) $s))
> def args: : (<object 4801> ((member? x items) (valid? (member x items))))
> def args: : (<object 4801> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4801> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4801> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4801> (__string+ string+))
> def args: : (<object 4801> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4801> (__string string))
> def args: : (<object 4801> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4801> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4801> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4801> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4801> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4801> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4801> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4801> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4801> ((localNames env) (cadr env)))
> def args: : (<object 4801> ((localValues env) (caddr env)))
> def args: : (<object 4801> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4801> ((dot obj $name) (get $name obj)))
> def args: : (<object 4801> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4801> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> EXCEPTION: nonFunction
> file overload.s,line 1: attempted to call STRING as a function
------------------------------------------
p1.s
------------------------------------------
16,18c16,125
< in overridden +
< 3
< hello, world
---
> def args: : (<object 4795> (else #t))
> def args: : (<object 4795> (__builtin __context))
> def args: : (<object 4795> (__main-lib this))
> def args: : (<object 4795> (nil? null?))
> def args: : (<object 4795> ((valid? x) (not (null? x))))
> def args: : (<object 4795> ((head x) (car x)))
> def args: : (<object 4795> ((tail x) (cdr x)))
> def args: : (<object 4795> ((join x y) (cons x y)))
> def args: : (<object 4795> (^ expt))
> def args: : (<object 4795> (** expt))
> def args: : (<object 4795> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4795> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4795> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4795> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4795> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4795> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4795> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4795> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4795> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4795> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4795> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4795> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4795> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4795> (__type type))
> def args: : (<object 4795> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4795> ((class x) (get (quote __label) x)))
> def args: : (<object 4795> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4795> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4795> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4795> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4795> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4795> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4795> (function? closure?))
> def args: : (<object 4795> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4795> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4795> ((dec x) (- x 1)))
> def args: : (<object 4795> ((inc x) (+ x 1)))
> def args: : (<object 4795> (__display display))
> def args: : (<object 4795> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4795> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4795> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4795> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4795> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4795> ((negative? n) (< n 0)))
> def args: : (<object 4795> ((positive? n) (> n 0)))
> def args: : (<object 4795> ((newline) (println)))
> def args: : (<object 4795> (remainder %))
> def args: : (<object 4795> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4795> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4795> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4795> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4795> (integer int))
> def args: : (<object 4795> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4795> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4795> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4795> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4795> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4795> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4795> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4795> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4795> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4795> ((true? x) x))
> def args: : (<object 4795> ((false? x) (not x)))
> def args: : (<object 4795> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4795> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4795> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4795> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4795> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4795> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4795> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4795> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4795> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4795> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4795> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4795> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4795> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4795> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4795> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4795> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4795> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4795> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4795> ((stream-car s) (car s)))
> def args: : (<object 4795> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4795> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4795> ((stream-null? s) (null? s)))
> def args: : (<object 4795> ((code $s) $s))
> def args: : (<object 4795> ((member? x items) (valid? (member x items))))
> def args: : (<object 4795> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4795> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4795> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4795> (__string+ string+))
> def args: : (<object 4795> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4795> (__string string))
> def args: : (<object 4795> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4795> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4795> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4795> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4795> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4795> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4795> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4795> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4795> ((localNames env) (cadr env)))
> def args: : (<object 4795> ((localValues env) (caddr env)))
> def args: : (<object 4795> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4795> ((dot obj $name) (get $name obj)))
> def args: : (<object 4795> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4795> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> EXCEPTION: undefinedVariable
> file p1.s,line 1: variable var is undefined
------------------------------------------
pp.s
------------------------------------------
54,99c54,163
< function f(a,b,c)
<     {
<     var x;
<     if (true)
<         {
<         var x = 3;
<         var y = 4;
<         print(x);
<         print(y);
<         while (x > y)
<             {
<             x = x - 1;
<             y = y + 1;
<             }
<         }
<     else if (false)
<         {
<         :ok;
<         }
<     else if (true)
<         {
<         :ok;
<         }
<     else
<         {
<         print("huh?");
<         }
<     return :oops;
<     }
< function mv(m,v)
<     {
<     function q()
<         {
<         x;
<         }
<     function h()
<         {
<         3 * 3;
<         }
<     map(function (r) { r dot-product v; },m);
<     }
< ["pp.s"]
< <THUNK 7272>:
<     context: <OBJECT 984>
<     code: hello + goodbye
< 
---
> def args: : (<object 4795> (else #t))
> def args: : (<object 4795> (__builtin __context))
> def args: : (<object 4795> (__main-lib this))
> def args: : (<object 4795> (nil? null?))
> def args: : (<object 4795> ((valid? x) (not (null? x))))
> def args: : (<object 4795> ((head x) (car x)))
> def args: : (<object 4795> ((tail x) (cdr x)))
> def args: : (<object 4795> ((join x y) (cons x y)))
> def args: : (<object 4795> (^ expt))
> def args: : (<object 4795> (** expt))
> def args: : (<object 4795> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4795> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4795> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4795> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4795> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4795> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4795> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4795> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4795> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4795> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4795> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4795> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4795> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4795> (__type type))
> def args: : (<object 4795> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4795> ((class x) (get (quote __label) x)))
> def args: : (<object 4795> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4795> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4795> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4795> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4795> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4795> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4795> (function? closure?))
> def args: : (<object 4795> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4795> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4795> ((dec x) (- x 1)))
> def args: : (<object 4795> ((inc x) (+ x 1)))
> def args: : (<object 4795> (__display display))
> def args: : (<object 4795> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4795> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4795> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4795> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4795> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4795> ((negative? n) (< n 0)))
> def args: : (<object 4795> ((positive? n) (> n 0)))
> def args: : (<object 4795> ((newline) (println)))
> def args: : (<object 4795> (remainder %))
> def args: : (<object 4795> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4795> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4795> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4795> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4795> (integer int))
> def args: : (<object 4795> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4795> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4795> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4795> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4795> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4795> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4795> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4795> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4795> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4795> ((true? x) x))
> def args: : (<object 4795> ((false? x) (not x)))
> def args: : (<object 4795> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4795> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4795> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4795> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4795> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4795> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4795> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4795> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4795> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4795> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4795> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4795> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4795> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4795> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4795> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4795> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4795> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4795> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4795> ((stream-car s) (car s)))
> def args: : (<object 4795> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4795> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4795> ((stream-null? s) (null? s)))
> def args: : (<object 4795> ((code $s) $s))
> def args: : (<object 4795> ((member? x items) (valid? (member x items))))
> def args: : (<object 4795> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4795> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4795> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4795> (__string+ string+))
> def args: : (<object 4795> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4795> (__string string))
> def args: : (<object 4795> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4795> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4795> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4795> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4795> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4795> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4795> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4795> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4795> ((localNames env) (cadr env)))
> def args: : (<object 4795> ((localValues env) (caddr env)))
> def args: : (<object 4795> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4795> ((dot obj $name) (get $name obj)))
> def args: : (<object 4795> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4795> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> EXCEPTION: syntaxException
> file pp.s,line 53: expecting CLOSE_PARENTHESIS, found END_OF_INPUT instead
------------------------------------------
pq.s
------------------------------------------
32,52c32,141
< enqueueing: 3
<     first item is 3
<     first rank is 6
< enqueueing: 2
<     first item is 2
<     first rank is 4
< enqueueing: 0
<     first item is 0
<     first rank is 0
< enqueueing: 1
<     first item is 0
<     first rank is 0
< enqueueing: 4
<     first item is 0
<     first rank is 0
< 
< dequeueing: 0
< dequeueing: 1
< dequeueing: 2
< dequeueing: 3
< dequeueing: 4
---
> def args: : (<object 4795> (else #t))
> def args: : (<object 4795> (__builtin __context))
> def args: : (<object 4795> (__main-lib this))
> def args: : (<object 4795> (nil? null?))
> def args: : (<object 4795> ((valid? x) (not (null? x))))
> def args: : (<object 4795> ((head x) (car x)))
> def args: : (<object 4795> ((tail x) (cdr x)))
> def args: : (<object 4795> ((join x y) (cons x y)))
> def args: : (<object 4795> (^ expt))
> def args: : (<object 4795> (** expt))
> def args: : (<object 4795> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4795> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4795> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4795> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4795> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4795> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4795> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4795> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4795> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4795> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4795> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4795> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4795> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4795> (__type type))
> def args: : (<object 4795> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4795> ((class x) (get (quote __label) x)))
> def args: : (<object 4795> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4795> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4795> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4795> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4795> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4795> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4795> (function? closure?))
> def args: : (<object 4795> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4795> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4795> ((dec x) (- x 1)))
> def args: : (<object 4795> ((inc x) (+ x 1)))
> def args: : (<object 4795> (__display display))
> def args: : (<object 4795> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4795> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4795> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4795> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4795> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4795> ((negative? n) (< n 0)))
> def args: : (<object 4795> ((positive? n) (> n 0)))
> def args: : (<object 4795> ((newline) (println)))
> def args: : (<object 4795> (remainder %))
> def args: : (<object 4795> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4795> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4795> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4795> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4795> (integer int))
> def args: : (<object 4795> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4795> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4795> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4795> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4795> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4795> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4795> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4795> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4795> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4795> ((true? x) x))
> def args: : (<object 4795> ((false? x) (not x)))
> def args: : (<object 4795> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4795> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4795> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4795> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4795> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4795> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4795> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4795> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4795> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4795> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4795> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4795> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4795> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4795> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4795> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4795> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4795> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4795> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4795> ((stream-car s) (car s)))
> def args: : (<object 4795> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4795> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4795> ((stream-null? s) (null? s)))
> def args: : (<object 4795> ((code $s) $s))
> def args: : (<object 4795> ((member? x items) (valid? (member x items))))
> def args: : (<object 4795> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4795> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4795> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4795> (__string+ string+))
> def args: : (<object 4795> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4795> (__string string))
> def args: : (<object 4795> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4795> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4795> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4795> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4795> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4795> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4795> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4795> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4795> ((localNames env) (cadr env)))
> def args: : (<object 4795> ((localValues env) (caddr env)))
> def args: : (<object 4795> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4795> ((dot obj $name) (get $name obj)))
> def args: : (<object 4795> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4795> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> EXCEPTION: nonFunction
> file pq.s,line 1: attempted to call STRING as a function
------------------------------------------
priorityQueue.s
------------------------------------------
1,7c1,5
< function priorityQueue()
<     {
<     var items;
<     function bundle(data,rank,next) { return this; }
<     function dequeue()
<         {
<         var item;
---
> (define (priorityQueue)
>     (define items)
>     (define (bundle data rank next) this)
>     (define (dequeue)
>         (define item)
9,17c7,14
<         item = items . next . data;
<         items . next = items . next . next;
<         return item;
<         }
<     function enqueue(item,rank)
<         {
<         var prefix = items;
<         var suffix = items . next;
<         var package = bundle(item,rank,:null);
---
>         (set 'item (items 'next 'data))
>         (set* items 'next (items 'next 'next))
>         item
>         )
>     (define (enqueue item rank)
>         (define prefix items)
>         (define suffix (items 'next))
>         (define package (bundle item rank nil))
19,23c16,19
<         while (suffix != :null && rank >= suffix . rank)
<             {
<             prefix = suffix;
<             suffix = suffix . next;
<             }
---
>         (while (and (valid? suffix) (>= rank (suffix 'rank)))
>             (set 'prefix suffix)
>             (set 'suffix (suffix 'next))
>             )
25,30c21,26
<         prefix . next = package;
<         package . next = suffix;
<         }
<     function peekItem() { return items . next . data; }
<     function peekRank() { return items . next . rank; }
<     function empty()    { return items . next == :null; }
---
>         (set* prefix 'next package)
>         (set* package 'next suffix)
>         )
>     (define (peekItem) (items 'next 'data))
>     (define (peekRank) (items 'next 'rank))
>     (define (empty)    (null? (items 'next)))
32,34c28,30
<     items = bundle(:null,:null,:null); //dummy head node
<     this;
<     }
---
>     (set 'items (bundle nil nil nil))  ;dummy head node
>     this
>     )
35a32,140
> def args: : (<object 4806> (else #t))
> def args: : (<object 4806> (__builtin __context))
> def args: : (<object 4806> (__main-lib this))
> def args: : (<object 4806> (nil? null?))
> def args: : (<object 4806> ((valid? x) (not (null? x))))
> def args: : (<object 4806> ((head x) (car x)))
> def args: : (<object 4806> ((tail x) (cdr x)))
> def args: : (<object 4806> ((join x y) (cons x y)))
> def args: : (<object 4806> (^ expt))
> def args: : (<object 4806> (** expt))
> def args: : (<object 4806> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4806> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4806> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4806> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4806> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4806> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4806> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4806> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4806> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4806> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4806> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4806> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4806> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4806> (__type type))
> def args: : (<object 4806> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4806> ((class x) (get (quote __label) x)))
> def args: : (<object 4806> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4806> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4806> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4806> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4806> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4806> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4806> (function? closure?))
> def args: : (<object 4806> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4806> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4806> ((dec x) (- x 1)))
> def args: : (<object 4806> ((inc x) (+ x 1)))
> def args: : (<object 4806> (__display display))
> def args: : (<object 4806> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4806> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4806> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4806> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4806> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4806> ((negative? n) (< n 0)))
> def args: : (<object 4806> ((positive? n) (> n 0)))
> def args: : (<object 4806> ((newline) (println)))
> def args: : (<object 4806> (remainder %))
> def args: : (<object 4806> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4806> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4806> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4806> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4806> (integer int))
> def args: : (<object 4806> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4806> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4806> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4806> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4806> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4806> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4806> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4806> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4806> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4806> ((true? x) x))
> def args: : (<object 4806> ((false? x) (not x)))
> def args: : (<object 4806> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4806> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4806> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4806> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4806> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4806> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4806> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4806> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4806> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4806> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4806> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4806> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4806> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4806> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4806> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4806> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4806> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4806> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4806> ((stream-car s) (car s)))
> def args: : (<object 4806> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4806> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4806> ((stream-null? s) (null? s)))
> def args: : (<object 4806> ((code $s) $s))
> def args: : (<object 4806> ((member? x items) (valid? (member x items))))
> def args: : (<object 4806> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4806> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4806> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4806> (__string+ string+))
> def args: : (<object 4806> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4806> (__string string))
> def args: : (<object 4806> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4806> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4806> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4806> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4806> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4806> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4806> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4806> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4806> ((localNames env) (cadr env)))
> def args: : (<object 4806> ((localValues env) (caddr env)))
> def args: : (<object 4806> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4806> ((dot obj $name) (get $name obj)))
> def args: : (<object 4806> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4806> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12473> ((priorityQueue) (define items) (define (bundle data rank next) this) (define (dequeue) (define item) (set (quote item) (items (quote next) (quote data))) (set* items (quote next) (items (quote next) (quote next))) item) (define (enqueue item rank) (define prefix items) (define suffix (items (quote next))) (define package (bundle item rank )) (while (and (valid? suffix) (>= rank (suffix (quote rank)))) (set (quote prefix) suffix) (set (quote suffix) (suffix (quote next)))) (set* prefix (quote next) package) (set* package (quote next) suffix)) (define (peekItem) (items (quote next) (quote data))) (define (peekRank) (items (quote next) (quote rank))) (define (empty) (null? (items (quote next)))) (set (quote items) (bundle   )) this))
------------------------------------------
prior.s
------------------------------------------
19,20c19,128
< well, hello there!
< hi,all!
---
> def args: : (<object 4798> (else #t))
> def args: : (<object 4798> (__builtin __context))
> def args: : (<object 4798> (__main-lib this))
> def args: : (<object 4798> (nil? null?))
> def args: : (<object 4798> ((valid? x) (not (null? x))))
> def args: : (<object 4798> ((head x) (car x)))
> def args: : (<object 4798> ((tail x) (cdr x)))
> def args: : (<object 4798> ((join x y) (cons x y)))
> def args: : (<object 4798> (^ expt))
> def args: : (<object 4798> (** expt))
> def args: : (<object 4798> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4798> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4798> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4798> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4798> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4798> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4798> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4798> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4798> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4798> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4798> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4798> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4798> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4798> (__type type))
> def args: : (<object 4798> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4798> ((class x) (get (quote __label) x)))
> def args: : (<object 4798> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4798> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4798> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4798> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4798> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4798> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4798> (function? closure?))
> def args: : (<object 4798> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4798> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4798> ((dec x) (- x 1)))
> def args: : (<object 4798> ((inc x) (+ x 1)))
> def args: : (<object 4798> (__display display))
> def args: : (<object 4798> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4798> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4798> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4798> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4798> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4798> ((negative? n) (< n 0)))
> def args: : (<object 4798> ((positive? n) (> n 0)))
> def args: : (<object 4798> ((newline) (println)))
> def args: : (<object 4798> (remainder %))
> def args: : (<object 4798> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4798> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4798> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4798> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4798> (integer int))
> def args: : (<object 4798> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4798> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4798> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4798> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4798> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4798> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4798> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4798> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4798> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4798> ((true? x) x))
> def args: : (<object 4798> ((false? x) (not x)))
> def args: : (<object 4798> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4798> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4798> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4798> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4798> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4798> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4798> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4798> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4798> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4798> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4798> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4798> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4798> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4798> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4798> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4798> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4798> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4798> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4798> ((stream-car s) (car s)))
> def args: : (<object 4798> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4798> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4798> ((stream-null? s) (null? s)))
> def args: : (<object 4798> ((code $s) $s))
> def args: : (<object 4798> ((member? x items) (valid? (member x items))))
> def args: : (<object 4798> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4798> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4798> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4798> (__string+ string+))
> def args: : (<object 4798> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4798> (__string string))
> def args: : (<object 4798> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4798> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4798> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4798> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4798> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4798> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4798> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4798> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4798> ((localNames env) (cadr env)))
> def args: : (<object 4798> ((localValues env) (caddr env)))
> def args: : (<object 4798> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4798> ((dot obj $name) (get $name obj)))
> def args: : (<object 4798> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4798> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> EXCEPTION: undefinedVariable
> file prior.s,line 1: variable function is undefined
------------------------------------------
procedure.s
------------------------------------------
0a1,154
> (pp define)
> 
> (define old-define define)
> 
> (define (define # $)
>     (
>     (old-define $)
> (define (define-function name params body env)
>     (define donor (lambda () 1))
>     (set! name name donor)
>     (set! parameters params donor)
>     (set! code body donor)
>     (addSymbol name donor env)
>     )
> 
> (define (loadAndgo # $name params values $body)
>     (define f (define-function $name params $body #))
>     (apply f values)
>     )
> 
> (println "first load and go...");
> (loadAndgo countdown '(a) '(4)
>     (begin
>         (inspect a)
>         (if (> a 0) (countdown (- a 1)))
>         )
>     )
> 
> (println "second load and go...")
> (loadAndgo countdown '(b) '(3)
>     (begin
>         (inspect b)
>         (if (> b 0) (countdown (- b 1)))
>         )
>     )
> 
> (println "calling define-function directly...")
> ((define-function 'countdown '(a)
>     '(begin
>         (inspect a)
>         (if (> a 0) (countdown (- a 1)))
>         )
>     this) 4)
> ------------------------------------------
> def args: : (<object 4802> (else #t))
> def args: : (<object 4802> (__builtin __context))
> def args: : (<object 4802> (__main-lib this))
> def args: : (<object 4802> (nil? null?))
> def args: : (<object 4802> ((valid? x) (not (null? x))))
> def args: : (<object 4802> ((head x) (car x)))
> def args: : (<object 4802> ((tail x) (cdr x)))
> def args: : (<object 4802> ((join x y) (cons x y)))
> def args: : (<object 4802> (^ expt))
> def args: : (<object 4802> (** expt))
> def args: : (<object 4802> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4802> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4802> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4802> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4802> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4802> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4802> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4802> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4802> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4802> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4802> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4802> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4802> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4802> (__type type))
> def args: : (<object 4802> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4802> ((class x) (get (quote __label) x)))
> def args: : (<object 4802> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4802> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4802> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4802> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4802> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4802> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4802> (function? closure?))
> def args: : (<object 4802> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4802> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4802> ((dec x) (- x 1)))
> def args: : (<object 4802> ((inc x) (+ x 1)))
> def args: : (<object 4802> (__display display))
> def args: : (<object 4802> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4802> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4802> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4802> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4802> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4802> ((negative? n) (< n 0)))
> def args: : (<object 4802> ((positive? n) (> n 0)))
> def args: : (<object 4802> ((newline) (println)))
> def args: : (<object 4802> (remainder %))
> def args: : (<object 4802> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4802> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4802> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4802> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4802> (integer int))
> def args: : (<object 4802> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4802> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4802> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4802> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4802> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4802> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4802> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4802> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4802> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4802> ((true? x) x))
> def args: : (<object 4802> ((false? x) (not x)))
> def args: : (<object 4802> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4802> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4802> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4802> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4802> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4802> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4802> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4802> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4802> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4802> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4802> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4802> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4802> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4802> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4802> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4802> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4802> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4802> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4802> ((stream-car s) (car s)))
> def args: : (<object 4802> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4802> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4802> ((stream-null? s) (null? s)))
> def args: : (<object 4802> ((code $s) $s))
> def args: : (<object 4802> ((member? x items) (valid? (member x items))))
> def args: : (<object 4802> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4802> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4802> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4802> (__string+ string+))
> def args: : (<object 4802> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4802> (__string string))
> def args: : (<object 4802> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4802> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4802> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4802> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4802> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4802> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4802> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4802> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4802> ((localNames env) (cadr env)))
> def args: : (<object 4802> ((localValues env) (caddr env)))
> def args: : (<object 4802> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4802> ((dot obj $name) (get $name obj)))
> def args: : (<object 4802> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4802> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> EXCEPTION: syntaxException
> file procedure.s,line 44: expecting CLOSE_PARENTHESIS, found END_OF_INPUT instead
------------------------------------------
rb.s
------------------------------------------
1,365c1,330
< include("debug");
< 
< var root = :null;
< 
< function node(value,left,right)
<     {
<     var parent;
<     var color;
< 
<     function display()
<         {
<         println("value:  ", value);
<         println("left:   ", left);
<         println("right:  ", right);
<         println("parent: ", parent);
<         println("color:  ", color);
<         }
< 
<     this;
<     }
< 
< function printTree(t)
<     {
<     function iter(r, indent)
<         {
<         if (r == :null)
<             {
<             println("null");
<             }
<         else
<             {
<             println(r . value, "(", r . color, ")");
<             print(indent, "left:  ");
<             iter(r . left,indent + "    ");
<             print(indent, "right: ");
<             iter(r . right,indent + "    ");
<             }
<         }
< 
<     iter(t, "   ");
<     }
< 
< function insert(t, v, op)
<     {
<     if (t == :null)
<         {
<         root = node(v,:null,:null);
<         root . parent = root;
<         insertionFixup(root);
<         }
<     else
<         {
<         var lessThan = v op t . value;
< 
<         if (lessThan && t . left != :null)
<             {
<             insert(t . left, v, op);
<             }
<         else if (lessThan)
<             {
<             t . left = node(v,:null,:null);
<             t . left . parent = t;
<             insertionFixup(t . left);
<             }
<         else if (t . right != :null)
<             {
<             insert(t . right, v, op);
<             }
<         else
<             {
<             t . right = node(v, :null, :null);
<             t . right . parent = t;
<             insertionFixup(t . right);
<             }
<         }
<     }
< 
< function prune(x)
<     {
<     assert(leaf?(x) == :true);
<     if (leftChild?(x))
<         {
<         parent(x) . left = :null;
<         }
<     else if (rightChild?(x))
<         {
<         parent(x) . right = :null;
<         }
<     else
<         {
<         root = :null;
<         }
<     }
< 
< function swapToLeaf(x)
<     {
<     if (leaf?(x) == :false)
<         {
<         var y;
<         var temp;
< 
<         if (x . right != :null)
<             {
<             y = findMin(x . right);
<             }
<         else
<             {
<             y = findMax(x . left);
<             }
< 
<         temp = x . value;
<         x . value = y . value;
<         y . value = temp;
< 
<         swapToLeaf(y);
<         }
<     else
<         {
<         x;
<         }
<     }
< function findMin(x)
<     {
<     while (x . left != :null)
<         {
<         x = x . left;
<         }
<     return x;
<     }
< function findMax(x)
<     {
<     while (x . right != :null)
<         {
<         x = x . right;
<         }
<     return x;
<     }
< function delete(x)
<     {
<     x = swapToLeaf(x);
<     deletionFixup(x);
<     //println("pruning ", x . value);
<     prune(x);
<     }
< 
< function deletionFixup(x)
<     {
<     while (root?(x) == :false && x . color == :black)
<         {
<         if (red?(sibling(x)))
<             {
<             parent(x) . color = :red;
<             sibling(x) . color = :black;
<             rotate(sibling(x),parent(x));
<             // should have black sibling now
<             assert(sibling(x) . color == :black);
<             }
<         else if (red?(nephew(x)))
<             {
<             sibling(x) . color = parent(x) . color;
<             parent(x) . color = :black;
<             nephew(x) . color = :black;
<             rotate(sibling(x),parent(x));
<             x = root;
<             // subtree is bh balanced
<             // with proper bh contribution
<             }
<         else if (red?(niece(x)))
<             {
<             // nephew must be black
<             niece(x) = :black;
<             sibling(x) = :red;
<             rotate(neice(x),sibling(x));
<             // should have red nephew now
<             assert(nephew(x) . color == :red);
<             }
<         else
<             {
<             // sibling, niece, and nephew must be black
<             sibling(x) . color = :red;
<             x = parent(x);
<             // subtree is bh balanced
<             // but has deficit in bh contribution
<             }
<         }
< 
<     x . color = :black;
<     }
< 
< function insertionFixup(x)
<     {
<     x . color = :red;
< 
<     while (root?(x) == :false && x . parent . color == :red)
<         {
<         if (red?(uncle(x)))
<             {
<             parent(x) . color = :black;
<             uncle(x) . color = :black;
<             grandparent(x) . color = :red;
<             x = grandparent(x);
<             }
<         else
<             {
<             // uncle must be black
< 
<             if (linear?(x, parent(x), grandparent(x)) == :false)
<                 {
<                 var oldParent = parent(x);
<                 rotate(x,parent(x));
<                 x = oldParent;
<                 }
< 
<             parent(x) . color = :black;
<             assert(x . parent . color == :black);
<             grandparent(x) . color = :red;
<             rotate(parent(x),grandparent(x));
<             }
<         }
< 
<     root . color = :black;
<     }
< 
< function root?(x) { x == x . parent; }
< function leftChild?(x) { return parent(x) . left == x; }
< function rightChild?(x) { return parent(x) . right == x; }
< function leaf?(x) { x . left == :null && x . right == :null; }
< function red?(x) { return x != :null && x . color == :red; }
< function black?(x) { return x == :null || x . color == :black; }
< 
< function sibling(x)
<     {
<     if (leftChild?(x))
<         {
<         x . parent . right;
<         }
<     else if (rightChild?(x))
<         {
<         x . parent . left;
<         }
<     else
<         {
<         :null;
<         }
<     }
< function niece(x)       //precondition: sibling exists
<     {
<     if (leftChild?(x))
<         {
<         sibling(x) . left;
<         }
<     else
<         {
<         sibling(x) . right;
<         }
<     }
< function nephew(x)      //precondition: sibling exists
<     {
<     if (leftChild?(x))
<         {
<         sibling(x) . right;
<         }
<     else
<         {
<         sibling(x) . left;
<         }
<     }
< function parent(x) { x . parent; }
< function grandparent(x) { parent(x) . parent; }
< function uncle(x)
<     {
<     if (leftChild?(parent(x)))
<         {
<         return grandparent(x) . right;
<         }
<     else if (rightChild?(parent(x)))
<         {
<         return grandparent(x) . left;
<         }
<     else
<         {
<         return :null;
<         }
<     }
< function linear?(x,y,z)
<     {
<     return
<         ((leftChild?(x)  && leftChild?(y)) ||
<          (rightChild?(x) && rightChild?(y)));
<     }
< 
< 
< function rotate(x,p)
<     {
<     if (p . left == x) 
<         {
<         //rotate right
<         rotator(x,p,:right,:left);
<         }
<     else if (p . right == x)
<         {
<         //rotate left
<         rotator(x,p,:left,:right);
<         }
<     else
<         {
<         throw("rotate error");
<         }
<     }
< function rotator(x,p,direction,oppositeDirection)
<     {
<     var gp = parent(p);
<     var beta = x . (direction);
< 
<     p . (oppositeDirection) = beta;
<     if (beta != :null) { beta . parent = p; }
< 
<     x . (direction) = p;
<     p . parent = x;
< 
<     if (p == gp)
<         {
<         root = x;
<         x . parent = x;
<         }
<     else {
<         if (gp . (direction) == p) { gp . (direction) = x; }
<         else { gp . (oppositeDirection) = x; }
<         x . parent = gp;
<         }
<     }
< 
< function findNode(t, v, op)
<     {
<     if (t == :null || v == t . value)
<         {
<         t;
<         }
<     else if (v op t . value)
<         {
<         findNode(t . left, v, op);
<         }
<     else
<         {
<         findNode(t . right, v, op);
<         }
<     }
< 
< function main()
<     {
<     var i;
<     var num = :null;
<     var x;
<     var input = array(1, 2, 9, 3, 6, 4, 7, 8, 5);
< 
<     i = 0;
<     while (i < length(input))
<         {
<         num = input . i;
<         println("inserting!");
<         insert(root, num, <);
<         print(num," inserted.\n");
<         printTree(root);
<         i = i + 1;
<         }
---
> (define root nil)
> (define (assert # $x)
>     (if (not (eval $x #))
>         (throw 'assertionError $x)
>         )
>     )
> 
> (define (node value left right)
>     (define parent nil)
>     (define color nil)
> 
>     (define (display)
>         (println "value:  "  value)
>         (println "left:   "  left)
>         (println "right:  "  right)
>         (println "parent: "  parent)
>         (println "color:  "  color)
>         )
> 
>     this
>     )
> 
> (define (printTree t)
>     (define (iter r indent)
>         (if (null? r)
>             (println "null")
>             (begin
>                 (println (. r value)  "("  (. r color)  ")")
>                 (print indent "left:  ")
>                 (iter (. r left) (string+ indent "    "))
>                 (print indent  "right: ")
>                 (iter (. r right) (string+ indent "    "))
>                 )
>             )
>         )
> 
>     (iter t "   ")
>     )
> 
> (define (insert t v op)
>     (if (null? t)
>         (begin
>             (assign root (node v nil nil))
>             (assign (. root parent) root)
>             (insertionFixup root)
>             )
>         (begin
>             (define lessThan (op v (. t value)))
> 
>             (cond
>                 ((and lessThan (valid? (. t left)))
>                     (insert (. t left)  v  op)
>                     )
>                 (lessThan
>                     (assign (. t left) (node v nil nil))
>                     (assign (. (. t left) parent) t)
>                     (insertionFixup (. t left))
>                     )
>                 ((valid? (. t right))
>                     (insert (. t right)  v  op)
>                     )
>                 (else
>                     (assign (. t right) (node v nil nil))
>                     (assign (. (. t right) parent) t)
>                     (insertionFixup (. t right))
>                     )
>                 )
>             )
>         )
>     )
> (define (prune x)
>     (assert (leaf? x))
>     (cond
>         ((leftChild? x)
>             (assign (. (parent x) left) nil)
>             )
>         ((rightChild? x)
>             (assign (. (parent x) right) nil)
>             )
>         (else
>             (assign root nil)
>             )
>         )
>     )
> 
> (define (swapToLeaf x)
>     (if (not (leaf? x))
>         (begin
>             (define y nil)
>             (define temp nil)
> 
>             (if (valid? (. x right))
>                 (assign y (findMin (. x right)))
>                 (assign y (findMax (. x left)))
>                 )
> 
>             (assign temp (. x value))
>             (assign (. x value) (. y value))
>             (assign (. y value) temp)
> 
>             (swapToLeaf y)
>             )
>         x
>         )
>     )
> 
> (define (findMin x)
>     (while (valid? (. x left))
>         (assign x (. x left))
>         )
>     x
>     )
> 
> (define (findMax x)
>     (while (valid? (. x right))
>         (assign x (. x right))
>         )
>     x
>     )
> 
> (define (delete x)
>     (assign x (swapToLeaf x))
>     (deletionFixup x)
>     ; (println "pruning "  (. x value))
>     (prune x)
>     )
> 
> (define (deletionFixup x)
>     (while (and (false? (root? x)) (eq? (. x color) 'black))
>         (cond
>             ((red? (sibling x))
>                 (assign (. (parent x) color) 'red)
>                 (assign (. (sibling x) color) 'black)
>                 (rotate (sibling x) (parent x))
>                 ; should have black sibling now
>                 (assert (eq? (. (sibling x) color) 'black))
>                 )
>             ((red? (nephew x))
>                 (assign (. (sibling x) color) (. (parent x) color))
>                 (assign (. (parent x) color) 'black)
>                 (assign (. (nephew x) color) 'black)
>                 (rotate (sibling x) (parent x))
>                 (assign x root)
>                 ; subtree is bh balanced
>                 ; with proper bh contribution
>                 )
>             ((red? (niece x))
>                 ; nephew must be black
>                 (assign (. (niece x) color) 'black)
>                 (assign (. (sibling x) color) 'red)
>                 (rotate (niece x) (sibling x))
>                 ; should have red nephew now
>                 (assert (eq? (. (nephew x) color) 'red))
>                 )
>             (else
>                 ; sibling  niece  and nephew must be black
>                 (assign (. (sibling x) color) 'red)
>                 (assign x (parent x))
>                 ; subtree is bh balanced
>                 ; but has deficit in bh contribution
>                 )
>             )
> 
>         (assign (. x color) 'black)
>         )
>     )
> 
> (define (insertionFixup x)
>     (assign (. x color) 'red)
> 
>     (while (and (not (root? x)) (eq? (. (. x parent) color) 'red))
>         (if (red? (uncle x))
>             (begin
>                 (assign (. (parent x) color) 'black)
>                 (assign (. (uncle x) color) 'black)
>                 (assign (. (grandparent x) color) 'red)
>                 (assign x (grandparent x))
>                 )
>             (begin
>                 ; uncle must be black
> 
>                 (if (not (linear? x (parent x) (grandparent x)))
>                     (begin
>                         (define oldParent (parent x))
>                         (rotate x (parent x))
>                         (assign x oldParent)
>                         )
>                     )
> 
>                 (assign (. (parent x) color) 'black)
>                 ;(inspect (. (parent x) color))
>                 (assert (eq? (. (. x parent) color) 'black))
>                 (assign (. (grandparent x) color) 'red)
>                 (rotate (parent x) (grandparent x))
>                 )
>             )
>         )
>     (assign (. root color) 'black)
>     )
> 
> (define (root? x) (eq? x (. x parent)))
> (define (leftChild? x) (eq? (. (parent x) left) x))
> (define (rightChild? x) (eq? (. (parent x) right) x))
> (define (leaf? x) (and (null? (. x left))(null? (. x right))))
> (define (red? x) (and (valid? x) (eq? (. x color) 'red)))
> (define (black? x) (or  (null? x) (eq? (. x color) 'black)))
> 
> (define (sibling x)
>     (cond
>         ((leftChild? x)
>             (. (. x parent) right)
>             )
>         ((rightChild? x)
>             (. (. x parent) left)
>             )
>         (else
>             nil
>             )
>         )
>     )
> 
> (define (niece x)       ; precondition: sibling exists
>     (if (leftChild? x)
>         (. (sibling x) left)
>         (. (sibling x) right)
>         )
>     )
> 
> (define (nephew x)      ; precondition: sibling exists
>     ;(inspect (sibling x))
>     (if (leftChild? x)
>         (. (sibling x) right)
>         (. (sibling x) left)
>         )
>     )
> 
> (define (parent x) (. x parent))
> (define (grandparent x) (parent (parent x)))
> (define (uncle x)
>     (cond
>         ((leftChild? (parent x))
>             (. (grandparent x) right))
>         ((rightChild? (parent x))
>             (. (grandparent x) left))
>         (else
>             nil)
>         )
>     )
> 
> (define (linear? x y z)
>     (or
>         (and (leftChild? x) (leftChild? y))
>         (and (rightChild? x) (rightChild? y))
>         )
>     )
> 
> (define (rotate x p)
>     (cond
>         ((eq? (. p left) x) 
>             ; rotate right
>             (println "rotating right")
>             (rotator x p 'right 'left)
>             )
>         ((eq? (. p right) x)
>             ; rotate left
>             (println "rotating left")
>             (rotator x p 'left 'right)
>             )
>         (else
>             (throw 'redBlackException "rotate error")
>             )
>         )
>     )
> 
> (define (id x) x)
> 
> (define (rotator x p direction oppositeDirection)
>     (define gp (parent p))
>     (define beta (. x (id direction)))
> 
>     (assign (. p (id oppositeDirection)) beta)
>     (if (valid? beta) (assign (. beta parent) p))
> 
>     (assign (. x (id direction)) p)
>     (assign (. p parent) x)
> 
>     (if (eq? p gp)
>         (begin
>             (assign root x)
>             (assign (. x parent) x)
>             )
>         (begin
>             (if (eq? (. gp (id direction)) p)
>                 (assign (. gp (id direction)) x)
>                 (assign (. gp (id oppositeDirection)) x)
>                 )
>             (assign (. x parent) gp)
>             )
>         )
>     )
> 
> (define (findNode t v op)
>     (cond
>         ((or (null? t) (eq? v (. t value)))
>             t
>             )
>         ((op v (. t value))
>             (findNode (. t left) v op)
>             )
>         (else
>             (findNode (. t right) v op)
>             )
>         )
>     )
> 
> (define (main)
>     (define i nil)
>     (define num nil)
>     (define x nil)
>     (define input (array 1  2  9  3  6  4  7  8  5))
> 
>     (assign i 0)
>     (while (< i (length input))
>         (assign num (getElement input i))
>         (println "inserting!")
>         (insert root num <)
>         (println num " inserted.")
>         (printTree root)
>         (assign i (+ i 1))
>         )
367,384c332,348
<     println("insertion phase complete, tree is...");
<     printTree(root);
<     println("deletion phase begins...");
< 
<     i = 0;
<     while (i < length(input))
<         {
<         num = input . i;
<         x = findNode(root,num,<);
<         delete(x);
<         print(num," deleted.\n");
<         printTree(root);
<         i = i + 1;
<         }
< 
<     println("deletion phase complete, tree is...");
<     print("good-bye!\n");
<     }
---
>     (println "insertion phase complete  tree is...")
>     (printTree root)
>     (println "deletion phase begins...")
> 
>     (assign i 0)
>     (while (< i (length input))
>         (assign num (getElement input i))
>         (assign x (findNode root num <))
>         (delete x)
>         (println num " deleted.")
>         (printTree root)
>         (assign i (+ i 1))
>         )
> 
>     (println "deletion phase complete  tree is...")
>     (println "good-bye!")
>     )
386,387c350,351
< print("hello\n");
< main();
---
> (println "hello");
> (main)
389,619c353,499
< hello
< inserting!
< 1 inserted.
< 1(black)
<    left:  null
<    right: null
< inserting!
< 2 inserted.
< 1(black)
<    left:  null
<    right: 2(red)
<        left:  null
<        right: null
< inserting!
< 9 inserted.
< 2(black)
<    left:  1(red)
<        left:  null
<        right: null
<    right: 9(red)
<        left:  null
<        right: null
< inserting!
< 3 inserted.
< 2(black)
<    left:  1(black)
<        left:  null
<        right: null
<    right: 9(black)
<        left:  3(red)
<            left:  null
<            right: null
<        right: null
< inserting!
< 6 inserted.
< 2(black)
<    left:  1(black)
<        left:  null
<        right: null
<    right: 6(black)
<        left:  3(red)
<            left:  null
<            right: null
<        right: 9(red)
<            left:  null
<            right: null
< inserting!
< 4 inserted.
< 2(black)
<    left:  1(black)
<        left:  null
<        right: null
<    right: 6(red)
<        left:  3(black)
<            left:  null
<            right: 4(red)
<                left:  null
<                right: null
<        right: 9(black)
<            left:  null
<            right: null
< inserting!
< 7 inserted.
< 2(black)
<    left:  1(black)
<        left:  null
<        right: null
<    right: 6(red)
<        left:  3(black)
<            left:  null
<            right: 4(red)
<                left:  null
<                right: null
<        right: 9(black)
<            left:  7(red)
<                left:  null
<                right: null
<            right: null
< inserting!
< 8 inserted.
< 2(black)
<    left:  1(black)
<        left:  null
<        right: null
<    right: 6(red)
<        left:  3(black)
<            left:  null
<            right: 4(red)
<                left:  null
<                right: null
<        right: 8(black)
<            left:  7(red)
<                left:  null
<                right: null
<            right: 9(red)
<                left:  null
<                right: null
< inserting!
< 5 inserted.
< 2(black)
<    left:  1(black)
<        left:  null
<        right: null
<    right: 6(red)
<        left:  4(black)
<            left:  3(red)
<                left:  null
<                right: null
<            right: 5(red)
<                left:  null
<                right: null
<        right: 8(black)
<            left:  7(red)
<                left:  null
<                right: null
<            right: 9(red)
<                left:  null
<                right: null
< insertion phase complete, tree is...
< 2(black)
<    left:  1(black)
<        left:  null
<        right: null
<    right: 6(red)
<        left:  4(black)
<            left:  3(red)
<                left:  null
<                right: null
<            right: 5(red)
<                left:  null
<                right: null
<        right: 8(black)
<            left:  7(red)
<                left:  null
<                right: null
<            right: 9(red)
<                left:  null
<                right: null
< deletion phase begins...
< 1 deleted.
< 6(black)
<    left:  4(red)
<        left:  2(black)
<            left:  null
<            right: 3(red)
<                left:  null
<                right: null
<        right: 5(black)
<            left:  null
<            right: null
<    right: 8(black)
<        left:  7(red)
<            left:  null
<            right: null
<        right: 9(red)
<            left:  null
<            right: null
< 2 deleted.
< 6(black)
<    left:  4(red)
<        left:  3(black)
<            left:  null
<            right: null
<        right: 5(black)
<            left:  null
<            right: null
<    right: 8(black)
<        left:  7(red)
<            left:  null
<            right: null
<        right: 9(red)
<            left:  null
<            right: null
< 9 deleted.
< 6(black)
<    left:  4(red)
<        left:  3(black)
<            left:  null
<            right: null
<        right: 5(black)
<            left:  null
<            right: null
<    right: 8(black)
<        left:  7(red)
<            left:  null
<            right: null
<        right: null
< 3 deleted.
< 6(black)
<    left:  4(black)
<        left:  null
<        right: 5(red)
<            left:  null
<            right: null
<    right: 8(black)
<        left:  7(red)
<            left:  null
<            right: null
<        right: null
< 6 deleted.
< 7(black)
<    left:  4(black)
<        left:  null
<        right: 5(red)
<            left:  null
<            right: null
<    right: 8(black)
<        left:  null
<        right: null
< 4 deleted.
< 7(black)
<    left:  5(black)
<        left:  null
<        right: null
<    right: 8(black)
<        left:  null
<        right: null
< 7 deleted.
< 8(black)
<    left:  5(red)
<        left:  null
<        right: null
<    right: null
< 8 deleted.
< 5(black)
<    left:  null
<    right: null
< 5 deleted.
< null
< deletion phase complete, tree is...
< good-bye!
---
> def args: : (<object 4795> (else #t))
> def args: : (<object 4795> (__builtin __context))
> def args: : (<object 4795> (__main-lib this))
> def args: : (<object 4795> (nil? null?))
> def args: : (<object 4795> ((valid? x) (not (null? x))))
> def args: : (<object 4795> ((head x) (car x)))
> def args: : (<object 4795> ((tail x) (cdr x)))
> def args: : (<object 4795> ((join x y) (cons x y)))
> def args: : (<object 4795> (^ expt))
> def args: : (<object 4795> (** expt))
> def args: : (<object 4795> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4795> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4795> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4795> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4795> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4795> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4795> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4795> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4795> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4795> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4795> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4795> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4795> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4795> (__type type))
> def args: : (<object 4795> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4795> ((class x) (get (quote __label) x)))
> def args: : (<object 4795> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4795> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4795> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4795> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4795> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4795> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4795> (function? closure?))
> def args: : (<object 4795> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4795> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4795> ((dec x) (- x 1)))
> def args: : (<object 4795> ((inc x) (+ x 1)))
> def args: : (<object 4795> (__display display))
> def args: : (<object 4795> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4795> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4795> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4795> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4795> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4795> ((negative? n) (< n 0)))
> def args: : (<object 4795> ((positive? n) (> n 0)))
> def args: : (<object 4795> ((newline) (println)))
> def args: : (<object 4795> (remainder %))
> def args: : (<object 4795> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4795> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4795> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4795> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4795> (integer int))
> def args: : (<object 4795> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4795> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4795> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4795> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4795> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4795> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4795> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4795> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4795> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4795> ((true? x) x))
> def args: : (<object 4795> ((false? x) (not x)))
> def args: : (<object 4795> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4795> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4795> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4795> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4795> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4795> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4795> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4795> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4795> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4795> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4795> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4795> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4795> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4795> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4795> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4795> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4795> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4795> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4795> ((stream-car s) (car s)))
> def args: : (<object 4795> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4795> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4795> ((stream-null? s) (null? s)))
> def args: : (<object 4795> ((code $s) $s))
> def args: : (<object 4795> ((member? x items) (valid? (member x items))))
> def args: : (<object 4795> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4795> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4795> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4795> (__string+ string+))
> def args: : (<object 4795> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4795> (__string string))
> def args: : (<object 4795> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4795> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4795> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4795> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4795> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4795> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4795> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4795> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4795> ((localNames env) (cadr env)))
> def args: : (<object 4795> ((localValues env) (caddr env)))
> def args: : (<object 4795> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4795> ((dot obj $name) (get $name obj)))
> def args: : (<object 4795> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4795> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 12462> (root ))
> def args: : (<object 12462> ((assert # $x) (if (not (eval $x #)) (throw (quote assertionError) $x))))
> def args: : (<object 12462> ((node value left right) (define parent ) (define color ) (define (display) (println "value:  " value) (println "left:   " left) (println "right:  " right) (println "parent: " parent) (println "color:  " color)) this))
> def args: : (<object 12462> ((printTree t) (define (iter r indent) (if (null? r) (println "null") (begin (println (. r value) "(" (. r color) ")") (print indent "left:  ") (iter (. r left) (string+ indent "    ")) (print indent "right: ") (iter (. r right) (string+ indent "    "))))) (iter t "   ")))
> def args: : (<object 12462> ((insert t v op) (if (null? t) (begin (assign root (node v  )) (assign (. root parent) root) (insertionFixup root)) (begin (define lessThan (op v (. t value))) (cond ((and lessThan (valid? (. t left))) (insert (. t left) v op)) (lessThan (assign (. t left) (node v  )) (assign (. (. t left) parent) t) (insertionFixup (. t left))) ((valid? (. t right)) (insert (. t right) v op)) (else (assign (. t right) (node v  )) (assign (. (. t right) parent) t) (insertionFixup (. t right))))))))
> def args: : (<object 12462> ((prune x) (assert (leaf? x)) (cond ((leftChild? x) (assign (. (parent x) left) )) ((rightChild? x) (assign (. (parent x) right) )) (else (assign root )))))
> def args: : (<object 12462> ((swapToLeaf x) (if (not (leaf? x)) (begin (define y ) (define temp ) (if (valid? (. x right)) (assign y (findMin (. x right))) (assign y (findMax (. x left)))) (assign temp (. x value)) (assign (. x value) (. y value)) (assign (. y value) temp) (swapToLeaf y)) x)))
> def args: : (<object 12462> ((findMin x) (while (valid? (. x left)) (assign x (. x left))) x))
> def args: : (<object 12462> ((findMax x) (while (valid? (. x right)) (assign x (. x right))) x))
> def args: : (<object 12462> ((delete x) (assign x (swapToLeaf x)) (deletionFixup x) (prune x)))
> def args: : (<object 12462> ((deletionFixup x) (while (and (false? (root? x)) (eq? (. x color) (quote black))) (cond ((red? (sibling x)) (assign (. (parent x) color) (quote red)) (assign (. (sibling x) color) (quote black)) (rotate (sibling x) (parent x)) (assert (eq? (. (sibling x) color) (quote black)))) ((red? (nephew x)) (assign (. (sibling x) color) (. (parent x) color)) (assign (. (parent x) color) (quote black)) (assign (. (nephew x) color) (quote black)) (rotate (sibling x) (parent x)) (assign x root)) ((red? (niece x)) (assign (. (niece x) color) (quote black)) (assign (. (sibling x) color) (quote red)) (rotate (niece x) (sibling x)) (assert (eq? (. (nephew x) color) (quote red)))) (else (assign (. (sibling x) color) (quote red)) (assign x (parent x)))) (assign (. x color) (quote black)))))
> def args: : (<object 12462> ((insertionFixup x) (assign (. x color) (quote red)) (while (and (not (root? x)) (eq? (. (. x parent) color) (quote red))) (if (red? (uncle x)) (begin (assign (. (parent x) color) (quote black)) (assign (. (uncle x) color) (quote black)) (assign (. (grandparent x) color) (quote red)) (assign x (grandparent x))) (begin (if (not (linear? x (parent x) (grandparent x))) (begin (define oldParent (parent x)) (rotate x (parent x)) (assign x oldParent))) (assign (. (parent x) color) (quote black)) (assert (eq? (. (. x parent) color) (quote black))) (assign (. (grandparent x) color) (quote red)) (rotate (parent x) (grandparent x))))) (assign (. root color) (quote black))))
> def args: : (<object 12462> ((root? x) (eq? x (. x parent))))
> def args: : (<object 12462> ((leftChild? x) (eq? (. (parent x) left) x)))
> def args: : (<object 12462> ((rightChild? x) (eq? (. (parent x) right) x)))
> def args: : (<object 12462> ((leaf? x) (and (null? (. x left)) (null? (. x right)))))
> def args: : (<object 12462> ((red? x) (and (valid? x) (eq? (. x color) (quote red)))))
> def args: : (<object 12462> ((black? x) (or (null? x) (eq? (. x color) (quote black)))))
> def args: : (<object 12462> ((sibling x) (cond ((leftChild? x) (. (. x parent) right)) ((rightChild? x) (. (. x parent) left)) (else ))))
> def args: : (<object 12462> ((niece x) (if (leftChild? x) (. (sibling x) left) (. (sibling x) right))))
> def args: : (<object 12462> ((nephew x) (if (leftChild? x) (. (sibling x) right) (. (sibling x) left))))
> def args: : (<object 12462> ((parent x) (. x parent)))
> def args: : (<object 12462> ((grandparent x) (parent (parent x))))
> def args: : (<object 12462> ((uncle x) (cond ((leftChild? (parent x)) (. (grandparent x) right)) ((rightChild? (parent x)) (. (grandparent x) left)) (else ))))
> def args: : (<object 12462> ((linear? x y z) (or (and (leftChild? x) (leftChild? y)) (and (rightChild? x) (rightChild? y)))))
> def args: : (<object 12462> ((rotate x p) (cond ((eq? (. p left) x) (println "rotating right") (rotator x p (quote right) (quote left))) ((eq? (. p right) x) (println "rotating left") (rotator x p (quote left) (quote right))) (else (throw (quote redBlackException) "rotate error")))))
> def args: : (<object 12462> ((id x) x))
> def args: : (<object 12462> ((rotator x p direction oppositeDirection) (define gp (parent p)) (define beta (. x (id direction))) (assign (. p (id oppositeDirection)) beta) (if (valid? beta) (assign (. beta parent) p)) (assign (. x (id direction)) p) (assign (. p parent) x) (if (eq? p gp) (begin (assign root x) (assign (. x parent) x)) (begin (if (eq? (. gp (id direction)) p) (assign (. gp (id direction)) x) (assign (. gp (id oppositeDirection)) x)) (assign (. x parent) gp)))))
> def args: : (<object 12462> ((findNode t v op) (cond ((or (null? t) (eq? v (. t value))) t) ((op v (. t value)) (findNode (. t left) v op)) (else (findNode (. t right) v op)))))
> def args: : (<object 12462> ((main) (define i ) (define num ) (define x ) (define input (array 1 2 9 3 6 4 7 8 5)) (assign i 0) (while (< i (length input)) (assign num (getElement input i)) (println "inserting!") (insert root num <) (println num " inserted.") (printTree root) (assign i (+ i 1))) (println "insertion phase complete  tree is...") (printTree root) (println "deletion phase begins...") (assign i 0) (while (< i (length input)) (assign num (getElement input i)) (assign x (findNode root num <)) (delete x) (println num " deleted.") (printTree root) (assign i (+ i 1))) (println "deletion phase complete  tree is...") (println "good-bye!")))
> hellodef args: : (<object 16752> (env (if (null? @) # (car @))))
> 
> def args: : (<object 16950> (env (if (null? @) # (car @))))
> def args: : (<object 17069> (i ))
> def args: : (<object 17069> (num ))
> def args: : (<object 17069> (x ))
> def args: : (<object 17069> (input (array 1 2 9 3 6 4 7 8 5)))
> EXCEPTION: undefinedVariable
> file rb.s,line 322: variable assign is undefined
------------------------------------------
recur.s
------------------------------------------
32c32,141
< 5050
---
> def args: : (<object 4798> (else #t))
> def args: : (<object 4798> (__builtin __context))
> def args: : (<object 4798> (__main-lib this))
> def args: : (<object 4798> (nil? null?))
> def args: : (<object 4798> ((valid? x) (not (null? x))))
> def args: : (<object 4798> ((head x) (car x)))
> def args: : (<object 4798> ((tail x) (cdr x)))
> def args: : (<object 4798> ((join x y) (cons x y)))
> def args: : (<object 4798> (^ expt))
> def args: : (<object 4798> (** expt))
> def args: : (<object 4798> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4798> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4798> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4798> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4798> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4798> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4798> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4798> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4798> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4798> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4798> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4798> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4798> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4798> (__type type))
> def args: : (<object 4798> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4798> ((class x) (get (quote __label) x)))
> def args: : (<object 4798> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4798> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4798> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4798> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4798> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4798> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4798> (function? closure?))
> def args: : (<object 4798> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4798> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4798> ((dec x) (- x 1)))
> def args: : (<object 4798> ((inc x) (+ x 1)))
> def args: : (<object 4798> (__display display))
> def args: : (<object 4798> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4798> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4798> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4798> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4798> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4798> ((negative? n) (< n 0)))
> def args: : (<object 4798> ((positive? n) (> n 0)))
> def args: : (<object 4798> ((newline) (println)))
> def args: : (<object 4798> (remainder %))
> def args: : (<object 4798> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4798> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4798> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4798> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4798> (integer int))
> def args: : (<object 4798> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4798> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4798> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4798> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4798> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4798> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4798> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4798> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4798> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4798> ((true? x) x))
> def args: : (<object 4798> ((false? x) (not x)))
> def args: : (<object 4798> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4798> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4798> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4798> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4798> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4798> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4798> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4798> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4798> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4798> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4798> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4798> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4798> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4798> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4798> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4798> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4798> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4798> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4798> ((stream-car s) (car s)))
> def args: : (<object 4798> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4798> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4798> ((stream-null? s) (null? s)))
> def args: : (<object 4798> ((code $s) $s))
> def args: : (<object 4798> ((member? x items) (valid? (member x items))))
> def args: : (<object 4798> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4798> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4798> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4798> (__string+ string+))
> def args: : (<object 4798> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4798> (__string string))
> def args: : (<object 4798> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4798> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4798> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4798> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4798> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4798> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4798> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4798> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4798> ((localNames env) (cadr env)))
> def args: : (<object 4798> ((localValues env) (caddr env)))
> def args: : (<object 4798> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4798> ((dot obj $name) (get $name obj)))
> def args: : (<object 4798> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4798> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> EXCEPTION: undefinedVariable
> file recur.s,line 1: variable function is undefined
------------------------------------------
recursion.s
------------------------------------------
23,423c23,132
< 399
< 398
< 397
< 396
< 395
< 394
< 393
< 392
< 391
< 390
< 389
< 388
< 387
< 386
< 385
< 384
< 383
< 382
< 381
< 380
< 379
< 378
< 377
< 376
< 375
< 374
< 373
< 372
< 371
< 370
< 369
< 368
< 367
< 366
< 365
< 364
< 363
< 362
< 361
< 360
< 359
< 358
< 357
< 356
< 355
< 354
< 353
< 352
< 351
< 350
< 349
< 348
< 347
< 346
< 345
< 344
< 343
< 342
< 341
< 340
< 339
< 338
< 337
< 336
< 335
< 334
< 333
< 332
< 331
< 330
< 329
< 328
< 327
< 326
< 325
< 324
< 323
< 322
< 321
< 320
< 319
< 318
< 317
< 316
< 315
< 314
< 313
< 312
< 311
< 310
< 309
< 308
< 307
< 306
< 305
< 304
< 303
< 302
< 301
< 300
< 299
< 298
< 297
< 296
< 295
< 294
< 293
< 292
< 291
< 290
< 289
< 288
< 287
< 286
< 285
< 284
< 283
< 282
< 281
< 280
< 279
< 278
< 277
< 276
< 275
< 274
< 273
< 272
< 271
< 270
< 269
< 268
< 267
< 266
< 265
< 264
< 263
< 262
< 261
< 260
< 259
< 258
< 257
< 256
< 255
< 254
< 253
< 252
< 251
< 250
< 249
< 248
< 247
< 246
< 245
< 244
< 243
< 242
< 241
< 240
< 239
< 238
< 237
< 236
< 235
< 234
< 233
< 232
< 231
< 230
< 229
< 228
< 227
< 226
< 225
< 224
< 223
< 222
< 221
< 220
< 219
< 218
< 217
< 216
< 215
< 214
< 213
< 212
< 211
< 210
< 209
< 208
< 207
< 206
< 205
< 204
< 203
< 202
< 201
< 200
< 199
< 198
< 197
< 196
< 195
< 194
< 193
< 192
< 191
< 190
< 189
< 188
< 187
< 186
< 185
< 184
< 183
< 182
< 181
< 180
< 179
< 178
< 177
< 176
< 175
< 174
< 173
< 172
< 171
< 170
< 169
< 168
< 167
< 166
< 165
< 164
< 163
< 162
< 161
< 160
< 159
< 158
< 157
< 156
< 155
< 154
< 153
< 152
< 151
< 150
< 149
< 148
< 147
< 146
< 145
< 144
< 143
< 142
< 141
< 140
< 139
< 138
< 137
< 136
< 135
< 134
< 133
< 132
< 131
< 130
< 129
< 128
< 127
< 126
< 125
< 124
< 123
< 122
< 121
< 120
< 119
< 118
< 117
< 116
< 115
< 114
< 113
< 112
< 111
< 110
< 109
< 108
< 107
< 106
< 105
< 104
< 103
< 102
< 101
< 100
< 99
< 98
< 97
< 96
< 95
< 94
< 93
< 92
< 91
< 90
< 89
< 88
< 87
< 86
< 85
< 84
< 83
< 82
< 81
< 80
< 79
< 78
< 77
< 76
< 75
< 74
< 73
< 72
< 71
< 70
< 69
< 68
< 67
< 66
< 65
< 64
< 63
< 62
< 61
< 60
< 59
< 58
< 57
< 56
< 55
< 54
< 53
< 52
< 51
< 50
< 49
< 48
< 47
< 46
< 45
< 44
< 43
< 42
< 41
< 40
< 39
< 38
< 37
< 36
< 35
< 34
< 33
< 32
< 31
< 30
< 29
< 28
< 27
< 26
< 25
< 24
< 23
< 22
< 21
< 20
< 19
< 18
< 17
< 16
< 15
< 14
< 13
< 12
< 11
< 10
< 9
< 8
< 7
< 6
< 5
< 4
< 3
< 2
< 1
< 0
< bottom
---
> def args: : (<object 4802> (else #t))
> def args: : (<object 4802> (__builtin __context))
> def args: : (<object 4802> (__main-lib this))
> def args: : (<object 4802> (nil? null?))
> def args: : (<object 4802> ((valid? x) (not (null? x))))
> def args: : (<object 4802> ((head x) (car x)))
> def args: : (<object 4802> ((tail x) (cdr x)))
> def args: : (<object 4802> ((join x y) (cons x y)))
> def args: : (<object 4802> (^ expt))
> def args: : (<object 4802> (** expt))
> def args: : (<object 4802> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4802> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4802> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4802> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4802> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4802> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4802> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4802> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4802> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4802> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4802> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4802> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4802> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4802> (__type type))
> def args: : (<object 4802> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4802> ((class x) (get (quote __label) x)))
> def args: : (<object 4802> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4802> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4802> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4802> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4802> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4802> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4802> (function? closure?))
> def args: : (<object 4802> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4802> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4802> ((dec x) (- x 1)))
> def args: : (<object 4802> ((inc x) (+ x 1)))
> def args: : (<object 4802> (__display display))
> def args: : (<object 4802> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4802> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4802> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4802> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4802> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4802> ((negative? n) (< n 0)))
> def args: : (<object 4802> ((positive? n) (> n 0)))
> def args: : (<object 4802> ((newline) (println)))
> def args: : (<object 4802> (remainder %))
> def args: : (<object 4802> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4802> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4802> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4802> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4802> (integer int))
> def args: : (<object 4802> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4802> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4802> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4802> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4802> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4802> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4802> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4802> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4802> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4802> ((true? x) x))
> def args: : (<object 4802> ((false? x) (not x)))
> def args: : (<object 4802> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4802> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4802> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4802> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4802> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4802> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4802> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4802> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4802> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4802> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4802> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4802> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4802> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4802> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4802> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4802> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4802> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4802> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4802> ((stream-car s) (car s)))
> def args: : (<object 4802> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4802> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4802> ((stream-null? s) (null? s)))
> def args: : (<object 4802> ((code $s) $s))
> def args: : (<object 4802> ((member? x items) (valid? (member x items))))
> def args: : (<object 4802> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4802> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4802> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4802> (__string+ string+))
> def args: : (<object 4802> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4802> (__string string))
> def args: : (<object 4802> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4802> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4802> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4802> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4802> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4802> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4802> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4802> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4802> ((localNames env) (cadr env)))
> def args: : (<object 4802> ((localValues env) (caddr env)))
> def args: : (<object 4802> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4802> ((dot obj $name) (get $name obj)))
> def args: : (<object 4802> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4802> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> EXCEPTION: undefinedVariable
> file recursion.s,line 1: variable var is undefined
------------------------------------------
reflect.s
------------------------------------------
38,49c38,147
< x: a is 2, b is 3, c is 5
< n is constructed via m's constructor
< x: a is 2, b is 3, c is 8
< 
< m . constructor . name is x
< n . constructor . name is x
< 
< changing m . a to 10
< changing n . b to 10
< 
< x: a is 10, b is 3, c is 5
< x: a is 2, b is 10, c is 8
---
> def args: : (<object 4800> (else #t))
> def args: : (<object 4800> (__builtin __context))
> def args: : (<object 4800> (__main-lib this))
> def args: : (<object 4800> (nil? null?))
> def args: : (<object 4800> ((valid? x) (not (null? x))))
> def args: : (<object 4800> ((head x) (car x)))
> def args: : (<object 4800> ((tail x) (cdr x)))
> def args: : (<object 4800> ((join x y) (cons x y)))
> def args: : (<object 4800> (^ expt))
> def args: : (<object 4800> (** expt))
> def args: : (<object 4800> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4800> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4800> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4800> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4800> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4800> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4800> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4800> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4800> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4800> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4800> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4800> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4800> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4800> (__type type))
> def args: : (<object 4800> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4800> ((class x) (get (quote __label) x)))
> def args: : (<object 4800> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4800> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4800> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4800> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4800> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4800> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4800> (function? closure?))
> def args: : (<object 4800> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4800> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4800> ((dec x) (- x 1)))
> def args: : (<object 4800> ((inc x) (+ x 1)))
> def args: : (<object 4800> (__display display))
> def args: : (<object 4800> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4800> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4800> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4800> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4800> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4800> ((negative? n) (< n 0)))
> def args: : (<object 4800> ((positive? n) (> n 0)))
> def args: : (<object 4800> ((newline) (println)))
> def args: : (<object 4800> (remainder %))
> def args: : (<object 4800> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4800> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4800> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4800> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4800> (integer int))
> def args: : (<object 4800> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4800> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4800> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4800> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4800> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4800> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4800> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4800> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4800> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4800> ((true? x) x))
> def args: : (<object 4800> ((false? x) (not x)))
> def args: : (<object 4800> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4800> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4800> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4800> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4800> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4800> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4800> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4800> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4800> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4800> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4800> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4800> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4800> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4800> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4800> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4800> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4800> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4800> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4800> ((stream-car s) (car s)))
> def args: : (<object 4800> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4800> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4800> ((stream-null? s) (null? s)))
> def args: : (<object 4800> ((code $s) $s))
> def args: : (<object 4800> ((member? x items) (valid? (member x items))))
> def args: : (<object 4800> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4800> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4800> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4800> (__string+ string+))
> def args: : (<object 4800> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4800> (__string string))
> def args: : (<object 4800> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4800> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4800> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4800> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4800> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4800> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4800> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4800> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4800> ((localNames env) (cadr env)))
> def args: : (<object 4800> ((localValues env) (caddr env)))
> def args: : (<object 4800> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4800> ((dot obj $name) (get $name obj)))
> def args: : (<object 4800> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4800> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> EXCEPTION: nonFunction
> file reflect.s,line 1: attempted to call STRING as a function
------------------------------------------
reify.s
------------------------------------------
29,31c29,138
< calling superclass:a
< superclass:a: calling virtual function b
< subclass:b
---
> def args: : (<object 4798> (else #t))
> def args: : (<object 4798> (__builtin __context))
> def args: : (<object 4798> (__main-lib this))
> def args: : (<object 4798> (nil? null?))
> def args: : (<object 4798> ((valid? x) (not (null? x))))
> def args: : (<object 4798> ((head x) (car x)))
> def args: : (<object 4798> ((tail x) (cdr x)))
> def args: : (<object 4798> ((join x y) (cons x y)))
> def args: : (<object 4798> (^ expt))
> def args: : (<object 4798> (** expt))
> def args: : (<object 4798> ((backquote # $items) (define (helper items) (inspect items) (inspect (get (quote __context) this)) (cond ((null? items) ) ((eq? (car items) (quote ,)) (cons (eval (cadr items) #) (helper (cddr items)))) (else (cons (car items) (helper (cdr items)))))) (helper $items)))
> def args: : (<object 4798> ((set! # $x y @) (define env (if (null? @) # (car @))) (set $x y env)))
> def args: : (<object 4798> ((set* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cddr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (set (car fields) (cadr fields) obj)))
> def args: : (<object 4798> ((get* @) (define obj (car @)) (define fields (cdr @)) (while (valid? (cdr fields)) (set (quote obj) (obj (car fields))) (set (quote fields) (cdr fields))) (get (car fields) obj)))
> def args: : (<object 4798> ((for # init $fortest $increment $) (define forresult ) (while (eval $fortest #) (set (quote forresult) (evalList $ #)) (eval $increment #)) forresult))
> def args: : (<object 4798> ((for-each2 # $indexVar items $) (define result #f) (while (!= items ) (set $indexVar (car items) #) (set (quote result) (evalList $ #)) (set (quote items) (cdr items))) result))
> def args: : (<object 4798> ((for-each f x) (define (iter items) (cond ((null? items) ) (else (f (car items)) (iter (cdr items))))) (iter x)))
> def args: : (<object 4798> ((+= # $v value) (set $v (+ (eval $v #) value) #)))
> def args: : (<object 4798> ((-= # $v value) (set $v (- (eval $v #) value) #)))
> def args: : (<object 4798> ((*= # $v value) (set $v (* (eval $v #) value) #)))
> def args: : (<object 4798> ((/= # $v value) (set $v (/ (eval $v #) value) #)))
> def args: : (<object 4798> ((++ # $v) (set $v (+ (eval $v #) 1) #)))
> def args: : (<object 4798> ((-- # $v) (set $v (- (eval $v #) 1) #)))
> def args: : (<object 4798> (__type type))
> def args: : (<object 4798> ((type x) (if (and (eq? (__type x) (quote CONS)) (eq? (car x) (quote __object))) (get (quote __label) x) (__type x))))
> def args: : (<object 4798> ((class x) (get (quote __label) x)))
> def args: : (<object 4798> ((is? x y) (cond ((null? x) #f) ((not (environment? x)) (eq? (type x) y)) ((and (environment? x) (or (eq? y (quote environment)) (eq? y (quote object)))) #t) ((and (valid? (get (quote __constructor) x)) (eq? (get* x (quote __constructor) (quote name)) y)) #t) (else (and (local? (quote parent) x) (is? (get (quote parent) x) y))))))
> def args: : (<object 4798> ((object? x) (and (pair? x) (eq? (car x) (quote __object)))))
> def args: : (<object 4798> ((closure? x) (and (object? x) (eq? (class x) (quote closure)))))
> def args: : (<object 4798> ((builtin? x) (and (object? x) (eq? (class x) (quote builtIn)))))
> def args: : (<object 4798> ((error? x) (and (object? x) (eq? (class x) (quote error)))))
> def args: : (<object 4798> ((environment? x) (and (object? x) (eq? (class x) (quote environment)))))
> def args: : (<object 4798> (function? closure?))
> def args: : (<object 4798> ((and # $) (define (iter items) (cond ((null? items) #t) ((eval (car items) #) (iter (cdr items))) (else #f))) (iter $)))
> def args: : (<object 4798> ((or # $) (define (iter items) (cond ((null? items) #f) ((eval (car items) #) #t) (else (iter (cdr items))))) (iter $)))
> def args: : (<object 4798> ((dec x) (- x 1)))
> def args: : (<object 4798> ((inc x) (+ x 1)))
> def args: : (<object 4798> (__display display))
> def args: : (<object 4798> ((print @) (while (valid? @) (display (car @)) (set! @ (cdr @))) (quote print-done)))
> def args: : (<object 4798> ((println @) (apply print @) (print "
> ")))
> def args: : (<object 4798> ((let # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) #) e)) (evalList $ e)))
> def args: : (<object 4798> ((let* # $inits $) (define v ) (define e (scope this)) (set (quote __context) # e) (for-each2 v $inits (addSymbol (car v) (eval (car (cdr v)) e) e)) (evalList $ e)))
> def args: : (<object 4798> ((evalList listOfitems env) (while (valid? (cdr listOfitems)) (eval (car listOfitems) env) (set (quote listOfitems) (cdr listOfitems))) (eval (car listOfitems) env)))
> def args: : (<object 4798> ((negative? n) (< n 0)))
> def args: : (<object 4798> ((positive? n) (> n 0)))
> def args: : (<object 4798> ((newline) (println)))
> def args: : (<object 4798> (remainder %))
> def args: : (<object 4798> ((append a b) (cond ((null? a) b) (else (cons (car a) (append (cdr a) b))))))
> def args: : (<object 4798> ((last-pair x) (cond ((null? x) ) ((null? (cdr x)) x) (else (last-pair (cdr x))))))
> def args: : (<object 4798> ((reverse x) (define (iter store rest) (cond ((null? rest) store) (else (iter (cons (car rest) store) (cdr rest))))) (iter  x)))
> def args: : (<object 4798> ((map op @) (define (map1 items) (cond ((null? items) ) (else (cons (op (car items)) (map1 (cdr items)))))) (define (iter items) (cond ((null? (car items)) ) (else (cons (apply op (map car items)) (iter (map cdr items)))))) (cond ((= (length @) 1) (map1 (car @))) (else (iter @)))))
> def args: : (<object 4798> (integer int))
> def args: : (<object 4798> ((abs x) (if (< x 0) (- x) x)))
> def args: : (<object 4798> ((even? n) (= (% n 2) 0)))
> def args: : (<object 4798> ((odd? n) (= (% n 2) 1)))
> def args: : (<object 4798> ((integer? x) (eq? (type x) (quote INTEGER))))
> def args: : (<object 4798> ((real? x) (eq? (type x) (quote REAL))))
> def args: : (<object 4798> ((number? x) (or (integer? x) (real? x))))
> def args: : (<object 4798> ((string? x) (eq? (type x) (quote STRING))))
> def args: : (<object 4798> ((symbol? x) (eq? (type x) (quote SYMBOL))))
> def args: : (<object 4798> ((array? x) (eq? (type x) (quote ARRAY))))
> def args: : (<object 4798> ((true? x) x))
> def args: : (<object 4798> ((false? x) (not x)))
> def args: : (<object 4798> ((literal? x) (or (null? x) (eq? x #t) (eq? x #f) (string? x) (array? x) (integer? x) (real? x) (and (pair? x) (eq? (car x) (quote quote))))))
> def args: : (<object 4798> ((atom? x) (not (or (pair? x) (string? x) (array? x)))))
> def args: : (<object 4798> ((car-cdr items @) (while (valid? @) (cond ((= (car @) 0) (set (quote items) (car items))) (else (set (quote items) (cdr items)))) (set (quote @) (cdr @))) items))
> def args: : (<object 4798> ((caar x) (car-cdr x 0 0)))
> def args: : (<object 4798> ((cadr x) (car-cdr x 1 0)))
> def args: : (<object 4798> ((caddr x) (car-cdr x 1 1 0)))
> def args: : (<object 4798> ((cadddr x) (car-cdr x 1 1 1 0)))
> def args: : (<object 4798> ((caddddr x) (car-cdr x 1 1 1 1 0)))
> def args: : (<object 4798> ((cadddddr x) (car-cdr x 1 1 1 1 1 0)))
> def args: : (<object 4798> ((cddr x) (cdr (cdr x))))
> def args: : (<object 4798> ((cddr x) (car-cdr x 1 1)))
> def args: : (<object 4798> ((cdddr x) (car-cdr x 1 1 1)))
> def args: : (<object 4798> ((cddddr x) (car-cdr x 1 1 1 1)))
> def args: : (<object 4798> ((cdddddr x) (car-cdr x 1 1 1 1 1)))
> def args: : (<object 4798> ((equal? a b) (cond ((null? a) (null? b)) ((pair? a) (and (pair? b) (equal? (car a) (car b)) (equal? (cdr a) (cdr b)))) ((string? a) (string-equal? a b)) ((array? a) (array-equal? a b)) (else (eq? a b)))))
> def args: : (<object 4798> ((array-equal? a b) (cond ((null? a) (null? b)) ((null? b) #f) (else (and (equal? (car a) (car b)) (array-equal? (cdr a) (cdr b)))))))
> def args: : (<object 4798> ((string-compare a b) (cond ((and (null? a) (null? b)) 0) ((null? a) (- 0 (ascii (getElement b 0)))) ((null? b) (ascii (getElement a 0))) (else (if (== (ascii (getElement a 0)) (ascii (getElement b 0))) (string-compare (cdr a) (cdr b)) (- (ascii (getElement a 0)) (ascii (getElement b 0))))))))
> def args: : (<object 4798> ((sqrt x) (expt x 0.500000)))
> def args: : (<object 4798> ((stream-car s) (car s)))
> def args: : (<object 4798> ((stream-cdr s) (define scdr (cdr s)) (define scddr (cdr scdr)) (cond ((null? (car scddr)) (car scdr)) (else (set-car! scdr (apply eval scdr)) (set-car! scddr ) (car scdr)))))
> def args: : (<object 4798> ((cons-stream # a $b) (list a $b #)))
> def args: : (<object 4798> ((stream-null? s) (null? s)))
> def args: : (<object 4798> ((code $s) $s))
> def args: : (<object 4798> ((member? x items) (valid? (member x items))))
> def args: : (<object 4798> ((member x items) (cond ((null? items) ) ((eq? x (car items)) items) (else (member x (cdr items))))))
> def args: : (<object 4798> ((nequal? a b) (not (equal? a b))))
> def args: : (<object 4798> ((getElement items @) (define __getElement (get (quote getElement) (get (quote __context) __context))) (while (valid? @) (set (quote items) (__getElement items (car @))) (set (quote @) (cdr @))) items))
> def args: : (<object 4798> (__string+ string+))
> def args: : (<object 4798> ((string+ str @) (while (valid? @) (set (quote str) (__string+ str (string (car @)))) (set (quote @) (cdr @))) str))
> def args: : (<object 4798> (__string string))
> def args: : (<object 4798> ((string x) (cond ((pair? x) (list-to-string x)) (else (__string x)))))
> def args: : (<object 4798> ((list-to-string x) (define (iter z) (cond ((null? (cdr z)) (string+ (string (car z)) ")")) ((pair? (cdr z)) (string+ (string (car z)) " " (iter (cdr z)))) (else (string+ (string (car z)) " . " (string (cdr z)) ")")))) (cond ((thunk? x) (string+ "<thunk " (address x) ">")) ((closure? x) (string+ "<closure " (address x) ">")) ((error? x) (string+ "<error " (address x) ">")) ((environment? x) (string+ "<environment " (address x) ">")) ((object? x) (string+ "<object " (address x) ">")) (else (string+ "(" (iter x))))))
> def args: : (<object 4798> ((thunk code environment) (define memo #f) this))
> def args: : (<object 4798> ((thunk? item) (is? item (quote thunk))))
> def args: : (<object 4798> ((force item) (eval (get (quote code) item) (get (quote environment) item))))
> def args: : (<object 4798> ((assoc x y) (cond ((null? y) #f) ((equal? x (caar y)) (car y)) (else (assoc x (cdr y))))))
> def args: : (<object 4798> ((make-assoc xs ys) (cond ((null? xs) ) (else (cons (list (car xs) (car ys)) (make-assoc (cdr xs) (cdr ys)))))))
> def args: : (<object 4798> ((local? id env) (member? id (localNames env))))
> def args: : (<object 4798> ((localNames env) (cadr env)))
> def args: : (<object 4798> ((localValues env) (caddr env)))
> def args: : (<object 4798> ((defined? id env) (not (error? (catch (eval id env))))))
> def args: : (<object 4798> ((dot obj $name) (get $name obj)))
> def args: : (<object 4798> ((builtinFunctions) (define vars (cadr __builtin)) (define vals (caddr __builtin)) (println "-----Builtin Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (builtin? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> def args: : (<object 4798> ((mainLibraryFunctions) (define vars (cadr __main-lib)) (define vals (caddr __main-lib)) (println "-----Main Library Functions-----") (while (valid? vars) (if (neq? (car (string (car vars))) "_") (if (closure? (car vals)) (println "    " (car vals)))) (set! vars (cdr vars)) (set! vals (cdr vals)))))
> EXCEPTION: undefinedVariable
> file reify.s,line 1: variable function is undefined
------------------------------------------
