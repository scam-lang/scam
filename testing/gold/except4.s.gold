(define (f x)
    (define result nil)
    (println "beginning f(" x ").")
    (set! result (catch (g (* 2 x))))
    (if (error? result)
        (if (== (get 'code result) 'undefinedVariable)
            (set! result x)
            (begin
                (println "rethrowing the error");
                (throw result)
                )
            )
        )
    (println "done with f(" x ").")
    result
    )
(define (g y)
    (define result nil)
    (println "beginning g(" y ").")
    ;(throw 'undefinedVariable "take that!")
    (throw 'myError "take that!")
    (set! result (* mnenom y))
    (println "done with g(" y ").")
    result
    )
(println (f 4))
------------------------------------------
beginning f(4).
beginning g(8).
rethrowing the error
EXCEPTION: myError
take that!
