(println "starting fib.s")

(define (fib n)
    (if (< n 2)
        n
        (+ (fib (- n 1)) (fib (- n 2)))
        )
    )

(println "including fact.s")
(include "fact.s")

(define x 0)
(define result nil)
(define t (time))

(set! x 25)
(set! result (fib x))
(println "fib: fib(" x ") is " result)
(println (- (time) t) " seconds")

(println "fib.s included - SHOULD ONLY SEE THIS ONCE");
------------------------------------------
starting fib.s
including fact.s
starting fact.s
including fib.s
fact: fib(5) is 5
fact: fact(5) is 120
fact.s included - SHOULD ONLY SEE THIS ONCE
gc:1, 9642 cells
gc:2, 9596 cells
gc:3, 9580 cells
gc:4, 9597 cells
gc:5, 9578 cells
gc:6, 9595 cells
fib: fib(25) is 75025
3 seconds
fib.s included - SHOULD ONLY SEE THIS ONCE
